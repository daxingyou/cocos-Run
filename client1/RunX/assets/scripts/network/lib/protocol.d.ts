import * as $protobuf from "protobufjs";
/** Namespace comm. */
export namespace comm {

    /** Properties of a Request. */
    interface IRequest {

        /** Request Seq */
        Seq?: (number|Long|null);

        /** Request CMD */
        CMD?: (number|null);

        /** Request Msg */
        Msg?: (Uint8Array|null);
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: comm.IRequest);

        /** Request Seq. */
        public Seq: (number|Long);

        /** Request CMD. */
        public CMD: number;

        /** Request Msg. */
        public Msg: Uint8Array;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: comm.IRequest): comm.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link comm.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: comm.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link comm.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: comm.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): comm.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): comm.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): comm.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: comm.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response Seq */
        Seq?: (number|Long|null);

        /** Response CMD */
        CMD?: (number|null);

        /** Response Msg */
        Msg?: (Uint8Array|null);

        /** Response Errcode */
        Errcode?: (number|null);

        /** Response Desc */
        Desc?: (string|null);

        /** Response Compressed */
        Compressed?: (boolean|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: comm.IResponse);

        /** Response Seq. */
        public Seq: (number|Long);

        /** Response CMD. */
        public CMD: number;

        /** Response Msg. */
        public Msg: Uint8Array;

        /** Response Errcode. */
        public Errcode: number;

        /** Response Desc. */
        public Desc: string;

        /** Response Compressed. */
        public Compressed: boolean;

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: comm.IResponse): comm.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link comm.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: comm.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link comm.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: comm.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): comm.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): comm.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): comm.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: comm.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace data. */
export namespace data {

    /** Properties of an AccountData. */
    interface IAccountData {

        /** AccountData UserID */
        UserID?: (string|null);

        /** AccountData RegisterTime */
        RegisterTime?: (number|Long|null);

        /** AccountData LastLoginTime */
        LastLoginTime?: (number|Long|null);

        /** AccountData UserRoleID */
        UserRoleID?: (number|null);

        /** AccountData Platform */
        Platform?: (string|null);

        /** AccountData Name */
        Name?: (string|null);

        /** AccountData HeadID */
        HeadID?: (number|null);

        /** AccountData HeadFrameID */
        HeadFrameID?: (number|null);

        /** AccountData ChangeNameCounter */
        ChangeNameCounter?: (number|null);

        /** AccountData Exp */
        Exp?: (number|null);

        /** AccountData RealNameStatus */
        RealNameStatus?: (number|null);

        /** AccountData IsTeenager */
        IsTeenager?: (boolean|null);

        /** AccountData LastOfflineTime */
        LastOfflineTime?: (number|Long|null);

        /** AccountData OnlineDuration */
        OnlineDuration?: (number|null);
    }

    /** Represents an AccountData. */
    class AccountData implements IAccountData {

        /**
         * Constructs a new AccountData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IAccountData);

        /** AccountData UserID. */
        public UserID: string;

        /** AccountData RegisterTime. */
        public RegisterTime: (number|Long);

        /** AccountData LastLoginTime. */
        public LastLoginTime: (number|Long);

        /** AccountData UserRoleID. */
        public UserRoleID: number;

        /** AccountData Platform. */
        public Platform: string;

        /** AccountData Name. */
        public Name: string;

        /** AccountData HeadID. */
        public HeadID: number;

        /** AccountData HeadFrameID. */
        public HeadFrameID: number;

        /** AccountData ChangeNameCounter. */
        public ChangeNameCounter: number;

        /** AccountData Exp. */
        public Exp: number;

        /** AccountData RealNameStatus. */
        public RealNameStatus: number;

        /** AccountData IsTeenager. */
        public IsTeenager: boolean;

        /** AccountData LastOfflineTime. */
        public LastOfflineTime: (number|Long);

        /** AccountData OnlineDuration. */
        public OnlineDuration: number;

        /**
         * Creates a new AccountData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AccountData instance
         */
        public static create(properties?: data.IAccountData): data.AccountData;

        /**
         * Encodes the specified AccountData message. Does not implicitly {@link data.AccountData.verify|verify} messages.
         * @param message AccountData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IAccountData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AccountData message, length delimited. Does not implicitly {@link data.AccountData.verify|verify} messages.
         * @param message AccountData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IAccountData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AccountData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AccountData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.AccountData;

        /**
         * Decodes an AccountData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AccountData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.AccountData;

        /**
         * Verifies an AccountData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AccountData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AccountData
         */
        public static fromObject(object: { [k: string]: any }): data.AccountData;

        /**
         * Creates a plain object from an AccountData message. Also converts values to other types if specified.
         * @param message AccountData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.AccountData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AccountData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySpiritData. */
    interface IActivitySpiritData {

        /** ActivitySpiritData ReceiveSpiritMap */
        ReceiveSpiritMap?: ({ [k: string]: boolean }|null);

        /** ActivitySpiritData LastRefreshSpTime */
        LastRefreshSpTime?: (number|Long|null);
    }

    /** Represents an ActivitySpiritData. */
    class ActivitySpiritData implements IActivitySpiritData {

        /**
         * Constructs a new ActivitySpiritData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivitySpiritData);

        /** ActivitySpiritData ReceiveSpiritMap. */
        public ReceiveSpiritMap: { [k: string]: boolean };

        /** ActivitySpiritData LastRefreshSpTime. */
        public LastRefreshSpTime: (number|Long);

        /**
         * Creates a new ActivitySpiritData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySpiritData instance
         */
        public static create(properties?: data.IActivitySpiritData): data.ActivitySpiritData;

        /**
         * Encodes the specified ActivitySpiritData message. Does not implicitly {@link data.ActivitySpiritData.verify|verify} messages.
         * @param message ActivitySpiritData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivitySpiritData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySpiritData message, length delimited. Does not implicitly {@link data.ActivitySpiritData.verify|verify} messages.
         * @param message ActivitySpiritData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivitySpiritData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySpiritData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySpiritData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivitySpiritData;

        /**
         * Decodes an ActivitySpiritData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySpiritData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivitySpiritData;

        /**
         * Verifies an ActivitySpiritData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySpiritData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySpiritData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivitySpiritData;

        /**
         * Creates a plain object from an ActivitySpiritData message. Also converts values to other types if specified.
         * @param message ActivitySpiritData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivitySpiritData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySpiritData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLevelData. */
    interface IActivityLevelData {

        /** ActivityLevelData RechargeAmount */
        RechargeAmount?: (number|null);

        /** ActivityLevelData ReceiveOrdinaryRewardMap */
        ReceiveOrdinaryRewardMap?: ({ [k: string]: boolean }|null);

        /** ActivityLevelData ReceiveSpecialRewardMap */
        ReceiveSpecialRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityLevelData. */
    class ActivityLevelData implements IActivityLevelData {

        /**
         * Constructs a new ActivityLevelData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityLevelData);

        /** ActivityLevelData RechargeAmount. */
        public RechargeAmount: number;

        /** ActivityLevelData ReceiveOrdinaryRewardMap. */
        public ReceiveOrdinaryRewardMap: { [k: string]: boolean };

        /** ActivityLevelData ReceiveSpecialRewardMap. */
        public ReceiveSpecialRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityLevelData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLevelData instance
         */
        public static create(properties?: data.IActivityLevelData): data.ActivityLevelData;

        /**
         * Encodes the specified ActivityLevelData message. Does not implicitly {@link data.ActivityLevelData.verify|verify} messages.
         * @param message ActivityLevelData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityLevelData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLevelData message, length delimited. Does not implicitly {@link data.ActivityLevelData.verify|verify} messages.
         * @param message ActivityLevelData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityLevelData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLevelData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLevelData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityLevelData;

        /**
         * Decodes an ActivityLevelData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLevelData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityLevelData;

        /**
         * Verifies an ActivityLevelData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLevelData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLevelData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityLevelData;

        /**
         * Creates a plain object from an ActivityLevelData message. Also converts values to other types if specified.
         * @param message ActivityLevelData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityLevelData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLevelData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInData. */
    interface IActivitySignInData {

        /** ActivitySignInData SignInID */
        SignInID?: (number|null);

        /** ActivitySignInData FirePinIndex */
        FirePinIndex?: (number|null);

        /** ActivitySignInData FirePinLucky */
        FirePinLucky?: (number|null);

        /** ActivitySignInData IsReceive */
        IsReceive?: (boolean|null);

        /** ActivitySignInData FlopCardMap */
        FlopCardMap?: ({ [k: string]: (number|Long) }|null);

        /** ActivitySignInData ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivitySignInData. */
    class ActivitySignInData implements IActivitySignInData {

        /**
         * Constructs a new ActivitySignInData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivitySignInData);

        /** ActivitySignInData SignInID. */
        public SignInID: number;

        /** ActivitySignInData FirePinIndex. */
        public FirePinIndex: number;

        /** ActivitySignInData FirePinLucky. */
        public FirePinLucky: number;

        /** ActivitySignInData IsReceive. */
        public IsReceive: boolean;

        /** ActivitySignInData FlopCardMap. */
        public FlopCardMap: { [k: string]: (number|Long) };

        /** ActivitySignInData ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivitySignInData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInData instance
         */
        public static create(properties?: data.IActivitySignInData): data.ActivitySignInData;

        /**
         * Encodes the specified ActivitySignInData message. Does not implicitly {@link data.ActivitySignInData.verify|verify} messages.
         * @param message ActivitySignInData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivitySignInData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInData message, length delimited. Does not implicitly {@link data.ActivitySignInData.verify|verify} messages.
         * @param message ActivitySignInData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivitySignInData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivitySignInData;

        /**
         * Decodes an ActivitySignInData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivitySignInData;

        /**
         * Verifies an ActivitySignInData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivitySignInData;

        /**
         * Creates a plain object from an ActivitySignInData message. Also converts values to other types if specified.
         * @param message ActivitySignInData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivitySignInData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySevenDayActivity. */
    interface IActivitySevenDayActivity {

        /** ActivitySevenDayActivity ReceiveAnimateRewardMap */
        ReceiveAnimateRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivitySevenDayActivity. */
    class ActivitySevenDayActivity implements IActivitySevenDayActivity {

        /**
         * Constructs a new ActivitySevenDayActivity.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivitySevenDayActivity);

        /** ActivitySevenDayActivity ReceiveAnimateRewardMap. */
        public ReceiveAnimateRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivitySevenDayActivity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySevenDayActivity instance
         */
        public static create(properties?: data.IActivitySevenDayActivity): data.ActivitySevenDayActivity;

        /**
         * Encodes the specified ActivitySevenDayActivity message. Does not implicitly {@link data.ActivitySevenDayActivity.verify|verify} messages.
         * @param message ActivitySevenDayActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivitySevenDayActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySevenDayActivity message, length delimited. Does not implicitly {@link data.ActivitySevenDayActivity.verify|verify} messages.
         * @param message ActivitySevenDayActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivitySevenDayActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySevenDayActivity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySevenDayActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivitySevenDayActivity;

        /**
         * Decodes an ActivitySevenDayActivity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySevenDayActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivitySevenDayActivity;

        /**
         * Verifies an ActivitySevenDayActivity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySevenDayActivity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySevenDayActivity
         */
        public static fromObject(object: { [k: string]: any }): data.ActivitySevenDayActivity;

        /**
         * Creates a plain object from an ActivitySevenDayActivity message. Also converts values to other types if specified.
         * @param message ActivitySevenDayActivity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivitySevenDayActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySevenDayActivity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySevenDayData. */
    interface IActivitySevenDayData {

        /** ActivitySevenDayData ActivitySevenDayActivityMap */
        ActivitySevenDayActivityMap?: ({ [k: string]: data.IActivitySevenDayActivity }|null);
    }

    /** Represents an ActivitySevenDayData. */
    class ActivitySevenDayData implements IActivitySevenDayData {

        /**
         * Constructs a new ActivitySevenDayData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivitySevenDayData);

        /** ActivitySevenDayData ActivitySevenDayActivityMap. */
        public ActivitySevenDayActivityMap: { [k: string]: data.IActivitySevenDayActivity };

        /**
         * Creates a new ActivitySevenDayData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySevenDayData instance
         */
        public static create(properties?: data.IActivitySevenDayData): data.ActivitySevenDayData;

        /**
         * Encodes the specified ActivitySevenDayData message. Does not implicitly {@link data.ActivitySevenDayData.verify|verify} messages.
         * @param message ActivitySevenDayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivitySevenDayData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySevenDayData message, length delimited. Does not implicitly {@link data.ActivitySevenDayData.verify|verify} messages.
         * @param message ActivitySevenDayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivitySevenDayData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySevenDayData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySevenDayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivitySevenDayData;

        /**
         * Decodes an ActivitySevenDayData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySevenDayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivitySevenDayData;

        /**
         * Verifies an ActivitySevenDayData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySevenDayData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySevenDayData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivitySevenDayData;

        /**
         * Creates a plain object from an ActivitySevenDayData message. Also converts values to other types if specified.
         * @param message ActivitySevenDayData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivitySevenDayData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySevenDayData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOpenServiceLoginActivity. */
    interface IActivityOpenServiceLoginActivity {

        /** ActivityOpenServiceLoginActivity ReceiveLoginRewardMap */
        ReceiveLoginRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityOpenServiceLoginActivity. */
    class ActivityOpenServiceLoginActivity implements IActivityOpenServiceLoginActivity {

        /**
         * Constructs a new ActivityOpenServiceLoginActivity.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityOpenServiceLoginActivity);

        /** ActivityOpenServiceLoginActivity ReceiveLoginRewardMap. */
        public ReceiveLoginRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityOpenServiceLoginActivity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOpenServiceLoginActivity instance
         */
        public static create(properties?: data.IActivityOpenServiceLoginActivity): data.ActivityOpenServiceLoginActivity;

        /**
         * Encodes the specified ActivityOpenServiceLoginActivity message. Does not implicitly {@link data.ActivityOpenServiceLoginActivity.verify|verify} messages.
         * @param message ActivityOpenServiceLoginActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityOpenServiceLoginActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOpenServiceLoginActivity message, length delimited. Does not implicitly {@link data.ActivityOpenServiceLoginActivity.verify|verify} messages.
         * @param message ActivityOpenServiceLoginActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityOpenServiceLoginActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOpenServiceLoginActivity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOpenServiceLoginActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityOpenServiceLoginActivity;

        /**
         * Decodes an ActivityOpenServiceLoginActivity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOpenServiceLoginActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityOpenServiceLoginActivity;

        /**
         * Verifies an ActivityOpenServiceLoginActivity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOpenServiceLoginActivity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOpenServiceLoginActivity
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityOpenServiceLoginActivity;

        /**
         * Creates a plain object from an ActivityOpenServiceLoginActivity message. Also converts values to other types if specified.
         * @param message ActivityOpenServiceLoginActivity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityOpenServiceLoginActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOpenServiceLoginActivity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOpenServiceLoginData. */
    interface IActivityOpenServiceLoginData {

        /** ActivityOpenServiceLoginData ActivityOpenServiceLoginActivityMap */
        ActivityOpenServiceLoginActivityMap?: ({ [k: string]: data.IActivityOpenServiceLoginActivity }|null);
    }

    /** Represents an ActivityOpenServiceLoginData. */
    class ActivityOpenServiceLoginData implements IActivityOpenServiceLoginData {

        /**
         * Constructs a new ActivityOpenServiceLoginData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityOpenServiceLoginData);

        /** ActivityOpenServiceLoginData ActivityOpenServiceLoginActivityMap. */
        public ActivityOpenServiceLoginActivityMap: { [k: string]: data.IActivityOpenServiceLoginActivity };

        /**
         * Creates a new ActivityOpenServiceLoginData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOpenServiceLoginData instance
         */
        public static create(properties?: data.IActivityOpenServiceLoginData): data.ActivityOpenServiceLoginData;

        /**
         * Encodes the specified ActivityOpenServiceLoginData message. Does not implicitly {@link data.ActivityOpenServiceLoginData.verify|verify} messages.
         * @param message ActivityOpenServiceLoginData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityOpenServiceLoginData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOpenServiceLoginData message, length delimited. Does not implicitly {@link data.ActivityOpenServiceLoginData.verify|verify} messages.
         * @param message ActivityOpenServiceLoginData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityOpenServiceLoginData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOpenServiceLoginData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOpenServiceLoginData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityOpenServiceLoginData;

        /**
         * Decodes an ActivityOpenServiceLoginData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOpenServiceLoginData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityOpenServiceLoginData;

        /**
         * Verifies an ActivityOpenServiceLoginData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOpenServiceLoginData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOpenServiceLoginData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityOpenServiceLoginData;

        /**
         * Creates a plain object from an ActivityOpenServiceLoginData message. Also converts values to other types if specified.
         * @param message ActivityOpenServiceLoginData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityOpenServiceLoginData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOpenServiceLoginData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityBattlePassData. */
    interface IActivityBattlePassData {

        /** ActivityBattlePassData IsSpecial */
        IsSpecial?: (boolean|null);

        /** ActivityBattlePassData BuyCount */
        BuyCount?: (number|null);

        /** ActivityBattlePassData ReceiveNormalReward */
        ReceiveNormalReward?: ({ [k: string]: boolean }|null);

        /** ActivityBattlePassData ReceiveSpecialReward */
        ReceiveSpecialReward?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityBattlePassData. */
    class ActivityBattlePassData implements IActivityBattlePassData {

        /**
         * Constructs a new ActivityBattlePassData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityBattlePassData);

        /** ActivityBattlePassData IsSpecial. */
        public IsSpecial: boolean;

        /** ActivityBattlePassData BuyCount. */
        public BuyCount: number;

        /** ActivityBattlePassData ReceiveNormalReward. */
        public ReceiveNormalReward: { [k: string]: boolean };

        /** ActivityBattlePassData ReceiveSpecialReward. */
        public ReceiveSpecialReward: { [k: string]: boolean };

        /**
         * Creates a new ActivityBattlePassData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityBattlePassData instance
         */
        public static create(properties?: data.IActivityBattlePassData): data.ActivityBattlePassData;

        /**
         * Encodes the specified ActivityBattlePassData message. Does not implicitly {@link data.ActivityBattlePassData.verify|verify} messages.
         * @param message ActivityBattlePassData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityBattlePassData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityBattlePassData message, length delimited. Does not implicitly {@link data.ActivityBattlePassData.verify|verify} messages.
         * @param message ActivityBattlePassData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityBattlePassData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityBattlePassData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityBattlePassData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityBattlePassData;

        /**
         * Decodes an ActivityBattlePassData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityBattlePassData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityBattlePassData;

        /**
         * Verifies an ActivityBattlePassData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityBattlePassData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityBattlePassData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityBattlePassData;

        /**
         * Creates a plain object from an ActivityBattlePassData message. Also converts values to other types if specified.
         * @param message ActivityBattlePassData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityBattlePassData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityBattlePassData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyLotteryData. */
    interface IActivityDailyLotteryData {

        /** ActivityDailyLotteryData UseLotteryCount */
        UseLotteryCount?: (number|null);

        /** ActivityDailyLotteryData CanLotteryCount */
        CanLotteryCount?: (number|null);

        /** ActivityDailyLotteryData DayRechargeCount */
        DayRechargeCount?: (number|null);

        /** ActivityDailyLotteryData Period */
        Period?: (number|null);

        /** ActivityDailyLotteryData ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityDailyLotteryData. */
    class ActivityDailyLotteryData implements IActivityDailyLotteryData {

        /**
         * Constructs a new ActivityDailyLotteryData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityDailyLotteryData);

        /** ActivityDailyLotteryData UseLotteryCount. */
        public UseLotteryCount: number;

        /** ActivityDailyLotteryData CanLotteryCount. */
        public CanLotteryCount: number;

        /** ActivityDailyLotteryData DayRechargeCount. */
        public DayRechargeCount: number;

        /** ActivityDailyLotteryData Period. */
        public Period: number;

        /** ActivityDailyLotteryData ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityDailyLotteryData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyLotteryData instance
         */
        public static create(properties?: data.IActivityDailyLotteryData): data.ActivityDailyLotteryData;

        /**
         * Encodes the specified ActivityDailyLotteryData message. Does not implicitly {@link data.ActivityDailyLotteryData.verify|verify} messages.
         * @param message ActivityDailyLotteryData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityDailyLotteryData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyLotteryData message, length delimited. Does not implicitly {@link data.ActivityDailyLotteryData.verify|verify} messages.
         * @param message ActivityDailyLotteryData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityDailyLotteryData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyLotteryData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyLotteryData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityDailyLotteryData;

        /**
         * Decodes an ActivityDailyLotteryData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyLotteryData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityDailyLotteryData;

        /**
         * Verifies an ActivityDailyLotteryData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyLotteryData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyLotteryData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityDailyLotteryData;

        /**
         * Creates a plain object from an ActivityDailyLotteryData message. Also converts values to other types if specified.
         * @param message ActivityDailyLotteryData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityDailyLotteryData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyLotteryData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyRechargePeriod. */
    interface IActivityDailyRechargePeriod {

        /** ActivityDailyRechargePeriod GapDay */
        GapDay?: (number|null);

        /** ActivityDailyRechargePeriod DayRechargeCount */
        DayRechargeCount?: (number|null);

        /** ActivityDailyRechargePeriod DayReceiveRewardMap */
        DayReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityDailyRechargePeriod. */
    class ActivityDailyRechargePeriod implements IActivityDailyRechargePeriod {

        /**
         * Constructs a new ActivityDailyRechargePeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityDailyRechargePeriod);

        /** ActivityDailyRechargePeriod GapDay. */
        public GapDay: number;

        /** ActivityDailyRechargePeriod DayRechargeCount. */
        public DayRechargeCount: number;

        /** ActivityDailyRechargePeriod DayReceiveRewardMap. */
        public DayReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityDailyRechargePeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyRechargePeriod instance
         */
        public static create(properties?: data.IActivityDailyRechargePeriod): data.ActivityDailyRechargePeriod;

        /**
         * Encodes the specified ActivityDailyRechargePeriod message. Does not implicitly {@link data.ActivityDailyRechargePeriod.verify|verify} messages.
         * @param message ActivityDailyRechargePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityDailyRechargePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyRechargePeriod message, length delimited. Does not implicitly {@link data.ActivityDailyRechargePeriod.verify|verify} messages.
         * @param message ActivityDailyRechargePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityDailyRechargePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyRechargePeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyRechargePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityDailyRechargePeriod;

        /**
         * Decodes an ActivityDailyRechargePeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyRechargePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityDailyRechargePeriod;

        /**
         * Verifies an ActivityDailyRechargePeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyRechargePeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyRechargePeriod
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityDailyRechargePeriod;

        /**
         * Creates a plain object from an ActivityDailyRechargePeriod message. Also converts values to other types if specified.
         * @param message ActivityDailyRechargePeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityDailyRechargePeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyRechargePeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyRechargeData. */
    interface IActivityDailyRechargeData {

        /** ActivityDailyRechargeData ActivityDailyRechargePeriodMap */
        ActivityDailyRechargePeriodMap?: ({ [k: string]: data.IActivityDailyRechargePeriod }|null);
    }

    /** Represents an ActivityDailyRechargeData. */
    class ActivityDailyRechargeData implements IActivityDailyRechargeData {

        /**
         * Constructs a new ActivityDailyRechargeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityDailyRechargeData);

        /** ActivityDailyRechargeData ActivityDailyRechargePeriodMap. */
        public ActivityDailyRechargePeriodMap: { [k: string]: data.IActivityDailyRechargePeriod };

        /**
         * Creates a new ActivityDailyRechargeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyRechargeData instance
         */
        public static create(properties?: data.IActivityDailyRechargeData): data.ActivityDailyRechargeData;

        /**
         * Encodes the specified ActivityDailyRechargeData message. Does not implicitly {@link data.ActivityDailyRechargeData.verify|verify} messages.
         * @param message ActivityDailyRechargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityDailyRechargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyRechargeData message, length delimited. Does not implicitly {@link data.ActivityDailyRechargeData.verify|verify} messages.
         * @param message ActivityDailyRechargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityDailyRechargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyRechargeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyRechargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityDailyRechargeData;

        /**
         * Decodes an ActivityDailyRechargeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyRechargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityDailyRechargeData;

        /**
         * Verifies an ActivityDailyRechargeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyRechargeData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyRechargeData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityDailyRechargeData;

        /**
         * Creates a plain object from an ActivityDailyRechargeData message. Also converts values to other types if specified.
         * @param message ActivityDailyRechargeData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityDailyRechargeData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyRechargeData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityAmountRechargePeriod. */
    interface IActivityAmountRechargePeriod {

        /** ActivityAmountRechargePeriod RechargeCount */
        RechargeCount?: (number|null);

        /** ActivityAmountRechargePeriod ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityAmountRechargePeriod. */
    class ActivityAmountRechargePeriod implements IActivityAmountRechargePeriod {

        /**
         * Constructs a new ActivityAmountRechargePeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityAmountRechargePeriod);

        /** ActivityAmountRechargePeriod RechargeCount. */
        public RechargeCount: number;

        /** ActivityAmountRechargePeriod ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityAmountRechargePeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityAmountRechargePeriod instance
         */
        public static create(properties?: data.IActivityAmountRechargePeriod): data.ActivityAmountRechargePeriod;

        /**
         * Encodes the specified ActivityAmountRechargePeriod message. Does not implicitly {@link data.ActivityAmountRechargePeriod.verify|verify} messages.
         * @param message ActivityAmountRechargePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityAmountRechargePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityAmountRechargePeriod message, length delimited. Does not implicitly {@link data.ActivityAmountRechargePeriod.verify|verify} messages.
         * @param message ActivityAmountRechargePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityAmountRechargePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityAmountRechargePeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityAmountRechargePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityAmountRechargePeriod;

        /**
         * Decodes an ActivityAmountRechargePeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityAmountRechargePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityAmountRechargePeriod;

        /**
         * Verifies an ActivityAmountRechargePeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityAmountRechargePeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityAmountRechargePeriod
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityAmountRechargePeriod;

        /**
         * Creates a plain object from an ActivityAmountRechargePeriod message. Also converts values to other types if specified.
         * @param message ActivityAmountRechargePeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityAmountRechargePeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityAmountRechargePeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityAmountRechargeData. */
    interface IActivityAmountRechargeData {

        /** ActivityAmountRechargeData ActivityAmountRechargePeriodMap */
        ActivityAmountRechargePeriodMap?: ({ [k: string]: data.IActivityAmountRechargePeriod }|null);
    }

    /** Represents an ActivityAmountRechargeData. */
    class ActivityAmountRechargeData implements IActivityAmountRechargeData {

        /**
         * Constructs a new ActivityAmountRechargeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityAmountRechargeData);

        /** ActivityAmountRechargeData ActivityAmountRechargePeriodMap. */
        public ActivityAmountRechargePeriodMap: { [k: string]: data.IActivityAmountRechargePeriod };

        /**
         * Creates a new ActivityAmountRechargeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityAmountRechargeData instance
         */
        public static create(properties?: data.IActivityAmountRechargeData): data.ActivityAmountRechargeData;

        /**
         * Encodes the specified ActivityAmountRechargeData message. Does not implicitly {@link data.ActivityAmountRechargeData.verify|verify} messages.
         * @param message ActivityAmountRechargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityAmountRechargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityAmountRechargeData message, length delimited. Does not implicitly {@link data.ActivityAmountRechargeData.verify|verify} messages.
         * @param message ActivityAmountRechargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityAmountRechargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityAmountRechargeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityAmountRechargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityAmountRechargeData;

        /**
         * Decodes an ActivityAmountRechargeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityAmountRechargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityAmountRechargeData;

        /**
         * Verifies an ActivityAmountRechargeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityAmountRechargeData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityAmountRechargeData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityAmountRechargeData;

        /**
         * Creates a plain object from an ActivityAmountRechargeData message. Also converts values to other types if specified.
         * @param message ActivityAmountRechargeData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityAmountRechargeData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityAmountRechargeData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekFunction. */
    interface IActivityDoubleWeekFunction {

        /** ActivityDoubleWeekFunction ReceiveOrderMap */
        ReceiveOrderMap?: ({ [k: string]: boolean }|null);

        /** ActivityDoubleWeekFunction BuyGiftMap */
        BuyGiftMap?: ({ [k: string]: number }|null);

        /** ActivityDoubleWeekFunction IsSpecial */
        IsSpecial?: (boolean|null);

        /** ActivityDoubleWeekFunction ReceiveNormalReward */
        ReceiveNormalReward?: ({ [k: string]: boolean }|null);

        /** ActivityDoubleWeekFunction ReceiveSpecialReward */
        ReceiveSpecialReward?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityDoubleWeekFunction. */
    class ActivityDoubleWeekFunction implements IActivityDoubleWeekFunction {

        /**
         * Constructs a new ActivityDoubleWeekFunction.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityDoubleWeekFunction);

        /** ActivityDoubleWeekFunction ReceiveOrderMap. */
        public ReceiveOrderMap: { [k: string]: boolean };

        /** ActivityDoubleWeekFunction BuyGiftMap. */
        public BuyGiftMap: { [k: string]: number };

        /** ActivityDoubleWeekFunction IsSpecial. */
        public IsSpecial: boolean;

        /** ActivityDoubleWeekFunction ReceiveNormalReward. */
        public ReceiveNormalReward: { [k: string]: boolean };

        /** ActivityDoubleWeekFunction ReceiveSpecialReward. */
        public ReceiveSpecialReward: { [k: string]: boolean };

        /**
         * Creates a new ActivityDoubleWeekFunction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekFunction instance
         */
        public static create(properties?: data.IActivityDoubleWeekFunction): data.ActivityDoubleWeekFunction;

        /**
         * Encodes the specified ActivityDoubleWeekFunction message. Does not implicitly {@link data.ActivityDoubleWeekFunction.verify|verify} messages.
         * @param message ActivityDoubleWeekFunction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityDoubleWeekFunction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekFunction message, length delimited. Does not implicitly {@link data.ActivityDoubleWeekFunction.verify|verify} messages.
         * @param message ActivityDoubleWeekFunction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityDoubleWeekFunction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekFunction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekFunction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityDoubleWeekFunction;

        /**
         * Decodes an ActivityDoubleWeekFunction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekFunction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityDoubleWeekFunction;

        /**
         * Verifies an ActivityDoubleWeekFunction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekFunction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekFunction
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityDoubleWeekFunction;

        /**
         * Creates a plain object from an ActivityDoubleWeekFunction message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekFunction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityDoubleWeekFunction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekFunction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekData. */
    interface IActivityDoubleWeekData {

        /** ActivityDoubleWeekData ActivityDoubleWeekFunctionMap */
        ActivityDoubleWeekFunctionMap?: ({ [k: string]: data.IActivityDoubleWeekFunction }|null);
    }

    /** Represents an ActivityDoubleWeekData. */
    class ActivityDoubleWeekData implements IActivityDoubleWeekData {

        /**
         * Constructs a new ActivityDoubleWeekData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityDoubleWeekData);

        /** ActivityDoubleWeekData ActivityDoubleWeekFunctionMap. */
        public ActivityDoubleWeekFunctionMap: { [k: string]: data.IActivityDoubleWeekFunction };

        /**
         * Creates a new ActivityDoubleWeekData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekData instance
         */
        public static create(properties?: data.IActivityDoubleWeekData): data.ActivityDoubleWeekData;

        /**
         * Encodes the specified ActivityDoubleWeekData message. Does not implicitly {@link data.ActivityDoubleWeekData.verify|verify} messages.
         * @param message ActivityDoubleWeekData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityDoubleWeekData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekData message, length delimited. Does not implicitly {@link data.ActivityDoubleWeekData.verify|verify} messages.
         * @param message ActivityDoubleWeekData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityDoubleWeekData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityDoubleWeekData;

        /**
         * Decodes an ActivityDoubleWeekData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityDoubleWeekData;

        /**
         * Verifies an ActivityDoubleWeekData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityDoubleWeekData;

        /**
         * Creates a plain object from an ActivityDoubleWeekData message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityDoubleWeekData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityMonthCardFasten. */
    interface IActivityMonthCardFasten {

        /** ActivityMonthCardFasten ExpiredTime */
        ExpiredTime?: (number|Long|null);

        /** ActivityMonthCardFasten LastReceiveGetRewardTime */
        LastReceiveGetRewardTime?: (number|Long|null);
    }

    /** Represents an ActivityMonthCardFasten. */
    class ActivityMonthCardFasten implements IActivityMonthCardFasten {

        /**
         * Constructs a new ActivityMonthCardFasten.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityMonthCardFasten);

        /** ActivityMonthCardFasten ExpiredTime. */
        public ExpiredTime: (number|Long);

        /** ActivityMonthCardFasten LastReceiveGetRewardTime. */
        public LastReceiveGetRewardTime: (number|Long);

        /**
         * Creates a new ActivityMonthCardFasten instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityMonthCardFasten instance
         */
        public static create(properties?: data.IActivityMonthCardFasten): data.ActivityMonthCardFasten;

        /**
         * Encodes the specified ActivityMonthCardFasten message. Does not implicitly {@link data.ActivityMonthCardFasten.verify|verify} messages.
         * @param message ActivityMonthCardFasten message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityMonthCardFasten, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityMonthCardFasten message, length delimited. Does not implicitly {@link data.ActivityMonthCardFasten.verify|verify} messages.
         * @param message ActivityMonthCardFasten message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityMonthCardFasten, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityMonthCardFasten message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityMonthCardFasten
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityMonthCardFasten;

        /**
         * Decodes an ActivityMonthCardFasten message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityMonthCardFasten
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityMonthCardFasten;

        /**
         * Verifies an ActivityMonthCardFasten message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityMonthCardFasten message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityMonthCardFasten
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityMonthCardFasten;

        /**
         * Creates a plain object from an ActivityMonthCardFasten message. Also converts values to other types if specified.
         * @param message ActivityMonthCardFasten
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityMonthCardFasten, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityMonthCardFasten to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityMonthCardData. */
    interface IActivityMonthCardData {

        /** ActivityMonthCardData ActivityMonthCardFastenMap */
        ActivityMonthCardFastenMap?: ({ [k: string]: data.IActivityMonthCardFasten }|null);

        /** ActivityMonthCardData HistoryBuyMonthCardMap */
        HistoryBuyMonthCardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityMonthCardData. */
    class ActivityMonthCardData implements IActivityMonthCardData {

        /**
         * Constructs a new ActivityMonthCardData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityMonthCardData);

        /** ActivityMonthCardData ActivityMonthCardFastenMap. */
        public ActivityMonthCardFastenMap: { [k: string]: data.IActivityMonthCardFasten };

        /** ActivityMonthCardData HistoryBuyMonthCardMap. */
        public HistoryBuyMonthCardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityMonthCardData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityMonthCardData instance
         */
        public static create(properties?: data.IActivityMonthCardData): data.ActivityMonthCardData;

        /**
         * Encodes the specified ActivityMonthCardData message. Does not implicitly {@link data.ActivityMonthCardData.verify|verify} messages.
         * @param message ActivityMonthCardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityMonthCardData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityMonthCardData message, length delimited. Does not implicitly {@link data.ActivityMonthCardData.verify|verify} messages.
         * @param message ActivityMonthCardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityMonthCardData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityMonthCardData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityMonthCardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityMonthCardData;

        /**
         * Decodes an ActivityMonthCardData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityMonthCardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityMonthCardData;

        /**
         * Verifies an ActivityMonthCardData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityMonthCardData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityMonthCardData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityMonthCardData;

        /**
         * Creates a plain object from an ActivityMonthCardData message. Also converts values to other types if specified.
         * @param message ActivityMonthCardData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityMonthCardData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityMonthCardData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOnlineReward. */
    interface IActivityOnlineReward {

        /** ActivityOnlineReward OnlineTotalTime */
        OnlineTotalTime?: (number|null);

        /** ActivityOnlineReward StarTime */
        StarTime?: (number|Long|null);

        /** ActivityOnlineReward ReceiveIDMap */
        ReceiveIDMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityOnlineReward. */
    class ActivityOnlineReward implements IActivityOnlineReward {

        /**
         * Constructs a new ActivityOnlineReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityOnlineReward);

        /** ActivityOnlineReward OnlineTotalTime. */
        public OnlineTotalTime: number;

        /** ActivityOnlineReward StarTime. */
        public StarTime: (number|Long);

        /** ActivityOnlineReward ReceiveIDMap. */
        public ReceiveIDMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityOnlineReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOnlineReward instance
         */
        public static create(properties?: data.IActivityOnlineReward): data.ActivityOnlineReward;

        /**
         * Encodes the specified ActivityOnlineReward message. Does not implicitly {@link data.ActivityOnlineReward.verify|verify} messages.
         * @param message ActivityOnlineReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityOnlineReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOnlineReward message, length delimited. Does not implicitly {@link data.ActivityOnlineReward.verify|verify} messages.
         * @param message ActivityOnlineReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityOnlineReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOnlineReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOnlineReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityOnlineReward;

        /**
         * Decodes an ActivityOnlineReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOnlineReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityOnlineReward;

        /**
         * Verifies an ActivityOnlineReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOnlineReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOnlineReward
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityOnlineReward;

        /**
         * Creates a plain object from an ActivityOnlineReward message. Also converts values to other types if specified.
         * @param message ActivityOnlineReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityOnlineReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOnlineReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFirstChargeData. */
    interface IActivityFirstChargeData {

        /** ActivityFirstChargeData RewardRecord */
        RewardRecord?: (number[]|null);
    }

    /** Represents an ActivityFirstChargeData. */
    class ActivityFirstChargeData implements IActivityFirstChargeData {

        /**
         * Constructs a new ActivityFirstChargeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityFirstChargeData);

        /** ActivityFirstChargeData RewardRecord. */
        public RewardRecord: number[];

        /**
         * Creates a new ActivityFirstChargeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFirstChargeData instance
         */
        public static create(properties?: data.IActivityFirstChargeData): data.ActivityFirstChargeData;

        /**
         * Encodes the specified ActivityFirstChargeData message. Does not implicitly {@link data.ActivityFirstChargeData.verify|verify} messages.
         * @param message ActivityFirstChargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityFirstChargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFirstChargeData message, length delimited. Does not implicitly {@link data.ActivityFirstChargeData.verify|verify} messages.
         * @param message ActivityFirstChargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityFirstChargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFirstChargeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFirstChargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityFirstChargeData;

        /**
         * Decodes an ActivityFirstChargeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFirstChargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityFirstChargeData;

        /**
         * Verifies an ActivityFirstChargeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFirstChargeData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFirstChargeData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityFirstChargeData;

        /**
         * Creates a plain object from an ActivityFirstChargeData message. Also converts values to other types if specified.
         * @param message ActivityFirstChargeData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityFirstChargeData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFirstChargeData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityHeroGrowUpUnit. */
    interface IActivityHeroGrowUpUnit {

        /** ActivityHeroGrowUpUnit ReceiveOrderMap */
        ReceiveOrderMap?: ({ [k: string]: boolean }|null);

        /** ActivityHeroGrowUpUnit BuyGiftMap */
        BuyGiftMap?: ({ [k: string]: number }|null);
    }

    /** Represents an ActivityHeroGrowUpUnit. */
    class ActivityHeroGrowUpUnit implements IActivityHeroGrowUpUnit {

        /**
         * Constructs a new ActivityHeroGrowUpUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityHeroGrowUpUnit);

        /** ActivityHeroGrowUpUnit ReceiveOrderMap. */
        public ReceiveOrderMap: { [k: string]: boolean };

        /** ActivityHeroGrowUpUnit BuyGiftMap. */
        public BuyGiftMap: { [k: string]: number };

        /**
         * Creates a new ActivityHeroGrowUpUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityHeroGrowUpUnit instance
         */
        public static create(properties?: data.IActivityHeroGrowUpUnit): data.ActivityHeroGrowUpUnit;

        /**
         * Encodes the specified ActivityHeroGrowUpUnit message. Does not implicitly {@link data.ActivityHeroGrowUpUnit.verify|verify} messages.
         * @param message ActivityHeroGrowUpUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityHeroGrowUpUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityHeroGrowUpUnit message, length delimited. Does not implicitly {@link data.ActivityHeroGrowUpUnit.verify|verify} messages.
         * @param message ActivityHeroGrowUpUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityHeroGrowUpUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityHeroGrowUpUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityHeroGrowUpUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityHeroGrowUpUnit;

        /**
         * Decodes an ActivityHeroGrowUpUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityHeroGrowUpUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityHeroGrowUpUnit;

        /**
         * Verifies an ActivityHeroGrowUpUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityHeroGrowUpUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityHeroGrowUpUnit
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityHeroGrowUpUnit;

        /**
         * Creates a plain object from an ActivityHeroGrowUpUnit message. Also converts values to other types if specified.
         * @param message ActivityHeroGrowUpUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityHeroGrowUpUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityHeroGrowUpUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityHeroGrowUpData. */
    interface IActivityHeroGrowUpData {

        /** ActivityHeroGrowUpData ActivityHeroGrowUpUnitMap */
        ActivityHeroGrowUpUnitMap?: ({ [k: string]: data.IActivityHeroGrowUpUnit }|null);
    }

    /** Represents an ActivityHeroGrowUpData. */
    class ActivityHeroGrowUpData implements IActivityHeroGrowUpData {

        /**
         * Constructs a new ActivityHeroGrowUpData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityHeroGrowUpData);

        /** ActivityHeroGrowUpData ActivityHeroGrowUpUnitMap. */
        public ActivityHeroGrowUpUnitMap: { [k: string]: data.IActivityHeroGrowUpUnit };

        /**
         * Creates a new ActivityHeroGrowUpData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityHeroGrowUpData instance
         */
        public static create(properties?: data.IActivityHeroGrowUpData): data.ActivityHeroGrowUpData;

        /**
         * Encodes the specified ActivityHeroGrowUpData message. Does not implicitly {@link data.ActivityHeroGrowUpData.verify|verify} messages.
         * @param message ActivityHeroGrowUpData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityHeroGrowUpData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityHeroGrowUpData message, length delimited. Does not implicitly {@link data.ActivityHeroGrowUpData.verify|verify} messages.
         * @param message ActivityHeroGrowUpData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityHeroGrowUpData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityHeroGrowUpData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityHeroGrowUpData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityHeroGrowUpData;

        /**
         * Decodes an ActivityHeroGrowUpData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityHeroGrowUpData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityHeroGrowUpData;

        /**
         * Verifies an ActivityHeroGrowUpData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityHeroGrowUpData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityHeroGrowUpData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityHeroGrowUpData;

        /**
         * Creates a plain object from an ActivityHeroGrowUpData message. Also converts values to other types if specified.
         * @param message ActivityHeroGrowUpData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityHeroGrowUpData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityHeroGrowUpData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityEternalRechargePeriod. */
    interface IActivityEternalRechargePeriod {

        /** ActivityEternalRechargePeriod RechargeCount */
        RechargeCount?: (number|null);

        /** ActivityEternalRechargePeriod ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityEternalRechargePeriod. */
    class ActivityEternalRechargePeriod implements IActivityEternalRechargePeriod {

        /**
         * Constructs a new ActivityEternalRechargePeriod.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityEternalRechargePeriod);

        /** ActivityEternalRechargePeriod RechargeCount. */
        public RechargeCount: number;

        /** ActivityEternalRechargePeriod ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityEternalRechargePeriod instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityEternalRechargePeriod instance
         */
        public static create(properties?: data.IActivityEternalRechargePeriod): data.ActivityEternalRechargePeriod;

        /**
         * Encodes the specified ActivityEternalRechargePeriod message. Does not implicitly {@link data.ActivityEternalRechargePeriod.verify|verify} messages.
         * @param message ActivityEternalRechargePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityEternalRechargePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityEternalRechargePeriod message, length delimited. Does not implicitly {@link data.ActivityEternalRechargePeriod.verify|verify} messages.
         * @param message ActivityEternalRechargePeriod message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityEternalRechargePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityEternalRechargePeriod message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityEternalRechargePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityEternalRechargePeriod;

        /**
         * Decodes an ActivityEternalRechargePeriod message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityEternalRechargePeriod
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityEternalRechargePeriod;

        /**
         * Verifies an ActivityEternalRechargePeriod message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityEternalRechargePeriod message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityEternalRechargePeriod
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityEternalRechargePeriod;

        /**
         * Creates a plain object from an ActivityEternalRechargePeriod message. Also converts values to other types if specified.
         * @param message ActivityEternalRechargePeriod
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityEternalRechargePeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityEternalRechargePeriod to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityEternalRechargeData. */
    interface IActivityEternalRechargeData {

        /** ActivityEternalRechargeData ActivityEternalRechargePeriodMap */
        ActivityEternalRechargePeriodMap?: ({ [k: string]: data.IActivityEternalRechargePeriod }|null);
    }

    /** Represents an ActivityEternalRechargeData. */
    class ActivityEternalRechargeData implements IActivityEternalRechargeData {

        /**
         * Constructs a new ActivityEternalRechargeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityEternalRechargeData);

        /** ActivityEternalRechargeData ActivityEternalRechargePeriodMap. */
        public ActivityEternalRechargePeriodMap: { [k: string]: data.IActivityEternalRechargePeriod };

        /**
         * Creates a new ActivityEternalRechargeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityEternalRechargeData instance
         */
        public static create(properties?: data.IActivityEternalRechargeData): data.ActivityEternalRechargeData;

        /**
         * Encodes the specified ActivityEternalRechargeData message. Does not implicitly {@link data.ActivityEternalRechargeData.verify|verify} messages.
         * @param message ActivityEternalRechargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityEternalRechargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityEternalRechargeData message, length delimited. Does not implicitly {@link data.ActivityEternalRechargeData.verify|verify} messages.
         * @param message ActivityEternalRechargeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityEternalRechargeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityEternalRechargeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityEternalRechargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityEternalRechargeData;

        /**
         * Decodes an ActivityEternalRechargeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityEternalRechargeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityEternalRechargeData;

        /**
         * Verifies an ActivityEternalRechargeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityEternalRechargeData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityEternalRechargeData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityEternalRechargeData;

        /**
         * Creates a plain object from an ActivityEternalRechargeData message. Also converts values to other types if specified.
         * @param message ActivityEternalRechargeData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityEternalRechargeData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityEternalRechargeData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFeastGiftData. */
    interface IActivityFeastGiftData {

        /** ActivityFeastGiftData ReceiveSurpriseReward */
        ReceiveSurpriseReward?: (boolean|null);

        /** ActivityFeastGiftData BuyGiftMap */
        BuyGiftMap?: ({ [k: string]: number }|null);
    }

    /** Represents an ActivityFeastGiftData. */
    class ActivityFeastGiftData implements IActivityFeastGiftData {

        /**
         * Constructs a new ActivityFeastGiftData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityFeastGiftData);

        /** ActivityFeastGiftData ReceiveSurpriseReward. */
        public ReceiveSurpriseReward: boolean;

        /** ActivityFeastGiftData BuyGiftMap. */
        public BuyGiftMap: { [k: string]: number };

        /**
         * Creates a new ActivityFeastGiftData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFeastGiftData instance
         */
        public static create(properties?: data.IActivityFeastGiftData): data.ActivityFeastGiftData;

        /**
         * Encodes the specified ActivityFeastGiftData message. Does not implicitly {@link data.ActivityFeastGiftData.verify|verify} messages.
         * @param message ActivityFeastGiftData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityFeastGiftData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFeastGiftData message, length delimited. Does not implicitly {@link data.ActivityFeastGiftData.verify|verify} messages.
         * @param message ActivityFeastGiftData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityFeastGiftData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFeastGiftData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFeastGiftData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityFeastGiftData;

        /**
         * Decodes an ActivityFeastGiftData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFeastGiftData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityFeastGiftData;

        /**
         * Verifies an ActivityFeastGiftData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFeastGiftData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFeastGiftData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityFeastGiftData;

        /**
         * Creates a plain object from an ActivityFeastGiftData message. Also converts values to other types if specified.
         * @param message ActivityFeastGiftData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityFeastGiftData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFeastGiftData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLuxuryGiftData. */
    interface IActivityLuxuryGiftData {

        /** ActivityLuxuryGiftData BuyGift */
        BuyGift?: (boolean|null);

        /** ActivityLuxuryGiftData ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an ActivityLuxuryGiftData. */
    class ActivityLuxuryGiftData implements IActivityLuxuryGiftData {

        /**
         * Constructs a new ActivityLuxuryGiftData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityLuxuryGiftData);

        /** ActivityLuxuryGiftData BuyGift. */
        public BuyGift: boolean;

        /** ActivityLuxuryGiftData ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new ActivityLuxuryGiftData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLuxuryGiftData instance
         */
        public static create(properties?: data.IActivityLuxuryGiftData): data.ActivityLuxuryGiftData;

        /**
         * Encodes the specified ActivityLuxuryGiftData message. Does not implicitly {@link data.ActivityLuxuryGiftData.verify|verify} messages.
         * @param message ActivityLuxuryGiftData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityLuxuryGiftData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLuxuryGiftData message, length delimited. Does not implicitly {@link data.ActivityLuxuryGiftData.verify|verify} messages.
         * @param message ActivityLuxuryGiftData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityLuxuryGiftData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLuxuryGiftData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLuxuryGiftData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityLuxuryGiftData;

        /**
         * Decodes an ActivityLuxuryGiftData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLuxuryGiftData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityLuxuryGiftData;

        /**
         * Verifies an ActivityLuxuryGiftData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLuxuryGiftData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLuxuryGiftData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityLuxuryGiftData;

        /**
         * Creates a plain object from an ActivityLuxuryGiftData message. Also converts values to other types if specified.
         * @param message ActivityLuxuryGiftData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityLuxuryGiftData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLuxuryGiftData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityData. */
    interface IActivityData {

        /** ActivityData ActivitySpiritData */
        ActivitySpiritData?: (data.IActivitySpiritData|null);

        /** ActivityData ActivityLevelData */
        ActivityLevelData?: (data.IActivityLevelData|null);

        /** ActivityData ActivitySignInData */
        ActivitySignInData?: (data.IActivitySignInData|null);

        /** ActivityData ActivitySevenDayData */
        ActivitySevenDayData?: (data.IActivitySevenDayData|null);

        /** ActivityData ActivityOpenServiceLoginData */
        ActivityOpenServiceLoginData?: (data.IActivityOpenServiceLoginData|null);

        /** ActivityData ActivityBattlePassData */
        ActivityBattlePassData?: (data.IActivityBattlePassData|null);

        /** ActivityData ActivityDailyLotteryData */
        ActivityDailyLotteryData?: (data.IActivityDailyLotteryData|null);

        /** ActivityData ActivityDailyRechargeData */
        ActivityDailyRechargeData?: (data.IActivityDailyRechargeData|null);

        /** ActivityData ActivityAmountRechargeData */
        ActivityAmountRechargeData?: (data.IActivityAmountRechargeData|null);

        /** ActivityData ActivityDoubleWeekData */
        ActivityDoubleWeekData?: (data.IActivityDoubleWeekData|null);

        /** ActivityData ActivityMonthCardData */
        ActivityMonthCardData?: (data.IActivityMonthCardData|null);

        /** ActivityData ActivityOnlineReward */
        ActivityOnlineReward?: (data.IActivityOnlineReward|null);

        /** ActivityData ActivityFirstChargeData */
        ActivityFirstChargeData?: (data.IActivityFirstChargeData|null);

        /** ActivityData ActivityHeroGrowUpData */
        ActivityHeroGrowUpData?: (data.IActivityHeroGrowUpData|null);

        /** ActivityData ActivityEternalRechargeData */
        ActivityEternalRechargeData?: (data.IActivityEternalRechargeData|null);

        /** ActivityData ActivityFeastGiftData */
        ActivityFeastGiftData?: (data.IActivityFeastGiftData|null);

        /** ActivityData ActivityLuxuryGiftData */
        ActivityLuxuryGiftData?: (data.IActivityLuxuryGiftData|null);
    }

    /** Represents an ActivityData. */
    class ActivityData implements IActivityData {

        /**
         * Constructs a new ActivityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityData);

        /** ActivityData ActivitySpiritData. */
        public ActivitySpiritData?: (data.IActivitySpiritData|null);

        /** ActivityData ActivityLevelData. */
        public ActivityLevelData?: (data.IActivityLevelData|null);

        /** ActivityData ActivitySignInData. */
        public ActivitySignInData?: (data.IActivitySignInData|null);

        /** ActivityData ActivitySevenDayData. */
        public ActivitySevenDayData?: (data.IActivitySevenDayData|null);

        /** ActivityData ActivityOpenServiceLoginData. */
        public ActivityOpenServiceLoginData?: (data.IActivityOpenServiceLoginData|null);

        /** ActivityData ActivityBattlePassData. */
        public ActivityBattlePassData?: (data.IActivityBattlePassData|null);

        /** ActivityData ActivityDailyLotteryData. */
        public ActivityDailyLotteryData?: (data.IActivityDailyLotteryData|null);

        /** ActivityData ActivityDailyRechargeData. */
        public ActivityDailyRechargeData?: (data.IActivityDailyRechargeData|null);

        /** ActivityData ActivityAmountRechargeData. */
        public ActivityAmountRechargeData?: (data.IActivityAmountRechargeData|null);

        /** ActivityData ActivityDoubleWeekData. */
        public ActivityDoubleWeekData?: (data.IActivityDoubleWeekData|null);

        /** ActivityData ActivityMonthCardData. */
        public ActivityMonthCardData?: (data.IActivityMonthCardData|null);

        /** ActivityData ActivityOnlineReward. */
        public ActivityOnlineReward?: (data.IActivityOnlineReward|null);

        /** ActivityData ActivityFirstChargeData. */
        public ActivityFirstChargeData?: (data.IActivityFirstChargeData|null);

        /** ActivityData ActivityHeroGrowUpData. */
        public ActivityHeroGrowUpData?: (data.IActivityHeroGrowUpData|null);

        /** ActivityData ActivityEternalRechargeData. */
        public ActivityEternalRechargeData?: (data.IActivityEternalRechargeData|null);

        /** ActivityData ActivityFeastGiftData. */
        public ActivityFeastGiftData?: (data.IActivityFeastGiftData|null);

        /** ActivityData ActivityLuxuryGiftData. */
        public ActivityLuxuryGiftData?: (data.IActivityLuxuryGiftData|null);

        /**
         * Creates a new ActivityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityData instance
         */
        public static create(properties?: data.IActivityData): data.ActivityData;

        /**
         * Encodes the specified ActivityData message. Does not implicitly {@link data.ActivityData.verify|verify} messages.
         * @param message ActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityData message, length delimited. Does not implicitly {@link data.ActivityData.verify|verify} messages.
         * @param message ActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityData;

        /**
         * Decodes an ActivityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityData;

        /**
         * Verifies an ActivityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityData;

        /**
         * Creates a plain object from an ActivityData message. Also converts values to other types if specified.
         * @param message ActivityData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ItemInfo. */
    interface IItemInfo {

        /** ItemInfo ID */
        ID?: (number|null);

        /** ItemInfo Count */
        Count?: (number|Long|null);
    }

    /** Represents an ItemInfo. */
    class ItemInfo implements IItemInfo {

        /**
         * Constructs a new ItemInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IItemInfo);

        /** ItemInfo ID. */
        public ID: number;

        /** ItemInfo Count. */
        public Count: (number|Long);

        /**
         * Creates a new ItemInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ItemInfo instance
         */
        public static create(properties?: data.IItemInfo): data.ItemInfo;

        /**
         * Encodes the specified ItemInfo message. Does not implicitly {@link data.ItemInfo.verify|verify} messages.
         * @param message ItemInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IItemInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ItemInfo message, length delimited. Does not implicitly {@link data.ItemInfo.verify|verify} messages.
         * @param message ItemInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IItemInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ItemInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ItemInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ItemInfo;

        /**
         * Decodes an ItemInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ItemInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ItemInfo;

        /**
         * Verifies an ItemInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ItemInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ItemInfo
         */
        public static fromObject(object: { [k: string]: any }): data.ItemInfo;

        /**
         * Creates a plain object from an ItemInfo message. Also converts values to other types if specified.
         * @param message ItemInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ItemInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ItemInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GiftInfo. */
    interface IGiftInfo {

        /** GiftInfo SkillID */
        SkillID?: (number|null);
    }

    /** Represents a GiftInfo. */
    class GiftInfo implements IGiftInfo {

        /**
         * Constructs a new GiftInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IGiftInfo);

        /** GiftInfo SkillID. */
        public SkillID: number;

        /**
         * Creates a new GiftInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GiftInfo instance
         */
        public static create(properties?: data.IGiftInfo): data.GiftInfo;

        /**
         * Encodes the specified GiftInfo message. Does not implicitly {@link data.GiftInfo.verify|verify} messages.
         * @param message GiftInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IGiftInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GiftInfo message, length delimited. Does not implicitly {@link data.GiftInfo.verify|verify} messages.
         * @param message GiftInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IGiftInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GiftInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GiftInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.GiftInfo;

        /**
         * Decodes a GiftInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GiftInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.GiftInfo;

        /**
         * Verifies a GiftInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GiftInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GiftInfo
         */
        public static fromObject(object: { [k: string]: any }): data.GiftInfo;

        /**
         * Creates a plain object from a GiftInfo message. Also converts values to other types if specified.
         * @param message GiftInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.GiftInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GiftInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroAttrUnit. */
    interface IHeroAttrUnit {

        /** HeroAttrUnit AttrID */
        AttrID?: (number|null);

        /** HeroAttrUnit AttrValue */
        AttrValue?: (number|Long|null);
    }

    /** Represents a HeroAttrUnit. */
    class HeroAttrUnit implements IHeroAttrUnit {

        /**
         * Constructs a new HeroAttrUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IHeroAttrUnit);

        /** HeroAttrUnit AttrID. */
        public AttrID: number;

        /** HeroAttrUnit AttrValue. */
        public AttrValue: (number|Long);

        /**
         * Creates a new HeroAttrUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroAttrUnit instance
         */
        public static create(properties?: data.IHeroAttrUnit): data.HeroAttrUnit;

        /**
         * Encodes the specified HeroAttrUnit message. Does not implicitly {@link data.HeroAttrUnit.verify|verify} messages.
         * @param message HeroAttrUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IHeroAttrUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroAttrUnit message, length delimited. Does not implicitly {@link data.HeroAttrUnit.verify|verify} messages.
         * @param message HeroAttrUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IHeroAttrUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroAttrUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroAttrUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.HeroAttrUnit;

        /**
         * Decodes a HeroAttrUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroAttrUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.HeroAttrUnit;

        /**
         * Verifies a HeroAttrUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroAttrUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroAttrUnit
         */
        public static fromObject(object: { [k: string]: any }): data.HeroAttrUnit;

        /**
         * Creates a plain object from a HeroAttrUnit message. Also converts values to other types if specified.
         * @param message HeroAttrUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.HeroAttrUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroAttrUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroUnit. */
    interface IHeroUnit {

        /** HeroUnit Star */
        Star?: (number|null);

        /** HeroUnit Equips */
        Equips?: ({ [k: string]: data.IBagUnit }|null);

        /** HeroUnit Gifts */
        Gifts?: ({ [k: string]: data.IGiftInfo }|null);

        /** HeroUnit Attrs */
        Attrs?: ({ [k: string]: (number|Long) }|null);
    }

    /** Represents a HeroUnit. */
    class HeroUnit implements IHeroUnit {

        /**
         * Constructs a new HeroUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IHeroUnit);

        /** HeroUnit Star. */
        public Star: number;

        /** HeroUnit Equips. */
        public Equips: { [k: string]: data.IBagUnit };

        /** HeroUnit Gifts. */
        public Gifts: { [k: string]: data.IGiftInfo };

        /** HeroUnit Attrs. */
        public Attrs: { [k: string]: (number|Long) };

        /**
         * Creates a new HeroUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroUnit instance
         */
        public static create(properties?: data.IHeroUnit): data.HeroUnit;

        /**
         * Encodes the specified HeroUnit message. Does not implicitly {@link data.HeroUnit.verify|verify} messages.
         * @param message HeroUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IHeroUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroUnit message, length delimited. Does not implicitly {@link data.HeroUnit.verify|verify} messages.
         * @param message HeroUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IHeroUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.HeroUnit;

        /**
         * Decodes a HeroUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.HeroUnit;

        /**
         * Verifies a HeroUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroUnit
         */
        public static fromObject(object: { [k: string]: any }): data.HeroUnit;

        /**
         * Creates a plain object from a HeroUnit message. Also converts values to other types if specified.
         * @param message HeroUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.HeroUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EquipUnit. */
    interface IEquipUnit {

        /** EquipUnit Exp */
        Exp?: (number|null);

        /** EquipUnit Star */
        Star?: (number|null);

        /** EquipUnit CastSoulPoolMap */
        CastSoulPoolMap?: ({ [k: string]: number }|null);

        /** EquipUnit CastSoulChooseMap */
        CastSoulChooseMap?: ({ [k: string]: number }|null);

        /** EquipUnit UseSelfCount */
        UseSelfCount?: (number|null);
    }

    /** Represents an EquipUnit. */
    class EquipUnit implements IEquipUnit {

        /**
         * Constructs a new EquipUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEquipUnit);

        /** EquipUnit Exp. */
        public Exp: number;

        /** EquipUnit Star. */
        public Star: number;

        /** EquipUnit CastSoulPoolMap. */
        public CastSoulPoolMap: { [k: string]: number };

        /** EquipUnit CastSoulChooseMap. */
        public CastSoulChooseMap: { [k: string]: number };

        /** EquipUnit UseSelfCount. */
        public UseSelfCount: number;

        /**
         * Creates a new EquipUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EquipUnit instance
         */
        public static create(properties?: data.IEquipUnit): data.EquipUnit;

        /**
         * Encodes the specified EquipUnit message. Does not implicitly {@link data.EquipUnit.verify|verify} messages.
         * @param message EquipUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEquipUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EquipUnit message, length delimited. Does not implicitly {@link data.EquipUnit.verify|verify} messages.
         * @param message EquipUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEquipUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EquipUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EquipUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EquipUnit;

        /**
         * Decodes an EquipUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EquipUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EquipUnit;

        /**
         * Verifies an EquipUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EquipUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EquipUnit
         */
        public static fromObject(object: { [k: string]: any }): data.EquipUnit;

        /**
         * Creates a plain object from an EquipUnit message. Also converts values to other types if specified.
         * @param message EquipUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EquipUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EquipUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BagUnit. */
    interface IBagUnit {

        /** BagUnit Seq */
        Seq?: (number|Long|null);

        /** BagUnit ID */
        ID?: (number|null);

        /** BagUnit Count */
        Count?: (number|Long|null);

        /** BagUnit UpdateTime */
        UpdateTime?: (number|Long|null);

        /** BagUnit Combinable */
        Combinable?: (boolean|null);

        /** BagUnit HeroUnit */
        HeroUnit?: (data.IHeroUnit|null);

        /** BagUnit EquipUnit */
        EquipUnit?: (data.IEquipUnit|null);
    }

    /** Represents a BagUnit. */
    class BagUnit implements IBagUnit {

        /**
         * Constructs a new BagUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IBagUnit);

        /** BagUnit Seq. */
        public Seq: (number|Long);

        /** BagUnit ID. */
        public ID: number;

        /** BagUnit Count. */
        public Count: (number|Long);

        /** BagUnit UpdateTime. */
        public UpdateTime: (number|Long);

        /** BagUnit Combinable. */
        public Combinable: boolean;

        /** BagUnit HeroUnit. */
        public HeroUnit?: (data.IHeroUnit|null);

        /** BagUnit EquipUnit. */
        public EquipUnit?: (data.IEquipUnit|null);

        /**
         * Creates a new BagUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BagUnit instance
         */
        public static create(properties?: data.IBagUnit): data.BagUnit;

        /**
         * Encodes the specified BagUnit message. Does not implicitly {@link data.BagUnit.verify|verify} messages.
         * @param message BagUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IBagUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BagUnit message, length delimited. Does not implicitly {@link data.BagUnit.verify|verify} messages.
         * @param message BagUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IBagUnit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BagUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BagUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.BagUnit;

        /**
         * Decodes a BagUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BagUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.BagUnit;

        /**
         * Verifies a BagUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BagUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BagUnit
         */
        public static fromObject(object: { [k: string]: any }): data.BagUnit;

        /**
         * Creates a plain object from a BagUnit message. Also converts values to other types if specified.
         * @param message BagUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.BagUnit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BagUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BagItem. */
    interface IBagItem {

        /** BagItem Array */
        Array?: (data.IBagUnit[]|null);
    }

    /** Represents a BagItem. */
    class BagItem implements IBagItem {

        /**
         * Constructs a new BagItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IBagItem);

        /** BagItem Array. */
        public Array: data.IBagUnit[];

        /**
         * Creates a new BagItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BagItem instance
         */
        public static create(properties?: data.IBagItem): data.BagItem;

        /**
         * Encodes the specified BagItem message. Does not implicitly {@link data.BagItem.verify|verify} messages.
         * @param message BagItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IBagItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BagItem message, length delimited. Does not implicitly {@link data.BagItem.verify|verify} messages.
         * @param message BagItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IBagItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BagItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BagItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.BagItem;

        /**
         * Decodes a BagItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BagItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.BagItem;

        /**
         * Verifies a BagItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BagItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BagItem
         */
        public static fromObject(object: { [k: string]: any }): data.BagItem;

        /**
         * Creates a plain object from a BagItem message. Also converts values to other types if specified.
         * @param message BagItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.BagItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BagItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BagData. */
    interface IBagData {

        /** BagData Items */
        Items?: ({ [k: string]: data.IBagItem }|null);

        /** BagData SeqCounter */
        SeqCounter?: (number|Long|null);
    }

    /** Represents a BagData. */
    class BagData implements IBagData {

        /**
         * Constructs a new BagData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IBagData);

        /** BagData Items. */
        public Items: { [k: string]: data.IBagItem };

        /** BagData SeqCounter. */
        public SeqCounter: (number|Long);

        /**
         * Creates a new BagData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BagData instance
         */
        public static create(properties?: data.IBagData): data.BagData;

        /**
         * Encodes the specified BagData message. Does not implicitly {@link data.BagData.verify|verify} messages.
         * @param message BagData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IBagData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BagData message, length delimited. Does not implicitly {@link data.BagData.verify|verify} messages.
         * @param message BagData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IBagData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BagData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BagData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.BagData;

        /**
         * Decodes a BagData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BagData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.BagData;

        /**
         * Verifies a BagData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BagData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BagData
         */
        public static fromObject(object: { [k: string]: any }): data.BagData;

        /**
         * Creates a plain object from a BagData message. Also converts values to other types if specified.
         * @param message BagData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.BagData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BagData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RoleType enum. */
    enum RoleType {
        Invalid = 0,
        RTHero = 1,
        RTMonster = 2,
        RTRobot = 3
    }

    /** Properties of a TreasureInfo. */
    interface ITreasureInfo {

        /** TreasureInfo Unit */
        Unit?: (data.IBagUnit|null);

        /** TreasureInfo FinishCount */
        FinishCount?: (number|null);
    }

    /** Represents a TreasureInfo. */
    class TreasureInfo implements ITreasureInfo {

        /**
         * Constructs a new TreasureInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITreasureInfo);

        /** TreasureInfo Unit. */
        public Unit?: (data.IBagUnit|null);

        /** TreasureInfo FinishCount. */
        public FinishCount: number;

        /**
         * Creates a new TreasureInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureInfo instance
         */
        public static create(properties?: data.ITreasureInfo): data.TreasureInfo;

        /**
         * Encodes the specified TreasureInfo message. Does not implicitly {@link data.TreasureInfo.verify|verify} messages.
         * @param message TreasureInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITreasureInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreasureInfo message, length delimited. Does not implicitly {@link data.TreasureInfo.verify|verify} messages.
         * @param message TreasureInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITreasureInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreasureInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TreasureInfo;

        /**
         * Decodes a TreasureInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TreasureInfo;

        /**
         * Verifies a TreasureInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreasureInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreasureInfo
         */
        public static fromObject(object: { [k: string]: any }): data.TreasureInfo;

        /**
         * Creates a plain object from a TreasureInfo message. Also converts values to other types if specified.
         * @param message TreasureInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TreasureInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreasureInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerBaseInfo. */
    interface IPlayerBaseInfo {

        /** PlayerBaseInfo UserID */
        UserID?: (string|null);

        /** PlayerBaseInfo Name */
        Name?: (string|null);

        /** PlayerBaseInfo Level */
        Level?: (number|null);

        /** PlayerBaseInfo HeadID */
        HeadID?: (number|null);

        /** PlayerBaseInfo HeadBoxID */
        HeadBoxID?: (number|null);
    }

    /** Represents a PlayerBaseInfo. */
    class PlayerBaseInfo implements IPlayerBaseInfo {

        /**
         * Constructs a new PlayerBaseInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPlayerBaseInfo);

        /** PlayerBaseInfo UserID. */
        public UserID: string;

        /** PlayerBaseInfo Name. */
        public Name: string;

        /** PlayerBaseInfo Level. */
        public Level: number;

        /** PlayerBaseInfo HeadID. */
        public HeadID: number;

        /** PlayerBaseInfo HeadBoxID. */
        public HeadBoxID: number;

        /**
         * Creates a new PlayerBaseInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerBaseInfo instance
         */
        public static create(properties?: data.IPlayerBaseInfo): data.PlayerBaseInfo;

        /**
         * Encodes the specified PlayerBaseInfo message. Does not implicitly {@link data.PlayerBaseInfo.verify|verify} messages.
         * @param message PlayerBaseInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPlayerBaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerBaseInfo message, length delimited. Does not implicitly {@link data.PlayerBaseInfo.verify|verify} messages.
         * @param message PlayerBaseInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPlayerBaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerBaseInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerBaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PlayerBaseInfo;

        /**
         * Decodes a PlayerBaseInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerBaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PlayerBaseInfo;

        /**
         * Verifies a PlayerBaseInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerBaseInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerBaseInfo
         */
        public static fromObject(object: { [k: string]: any }): data.PlayerBaseInfo;

        /**
         * Creates a plain object from a PlayerBaseInfo message. Also converts values to other types if specified.
         * @param message PlayerBaseInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PlayerBaseInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerBaseInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerRoleData. */
    interface IPlayerRoleData {

        /** PlayerRoleData Type */
        Type?: (data.RoleType|null);

        /** PlayerRoleData ID */
        ID?: (number|null);

        /** PlayerRoleData Pos */
        Pos?: (number|null);

        /** PlayerRoleData Star */
        Star?: (number|null);

        /** PlayerRoleData Level */
        Level?: (number|null);

        /** PlayerRoleData Equips */
        Equips?: ({ [k: string]: data.IBagUnit }|null);

        /** PlayerRoleData Gifts */
        Gifts?: ({ [k: string]: data.IGiftInfo }|null);

        /** PlayerRoleData Practice */
        Practice?: (data.ILeadData|null);

        /** PlayerRoleData Treasures */
        Treasures?: (data.ITreasureInfo[]|null);
    }

    /** Represents a PlayerRoleData. */
    class PlayerRoleData implements IPlayerRoleData {

        /**
         * Constructs a new PlayerRoleData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPlayerRoleData);

        /** PlayerRoleData Type. */
        public Type: data.RoleType;

        /** PlayerRoleData ID. */
        public ID: number;

        /** PlayerRoleData Pos. */
        public Pos: number;

        /** PlayerRoleData Star. */
        public Star: number;

        /** PlayerRoleData Level. */
        public Level: number;

        /** PlayerRoleData Equips. */
        public Equips: { [k: string]: data.IBagUnit };

        /** PlayerRoleData Gifts. */
        public Gifts: { [k: string]: data.IGiftInfo };

        /** PlayerRoleData Practice. */
        public Practice?: (data.ILeadData|null);

        /** PlayerRoleData Treasures. */
        public Treasures: data.ITreasureInfo[];

        /**
         * Creates a new PlayerRoleData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerRoleData instance
         */
        public static create(properties?: data.IPlayerRoleData): data.PlayerRoleData;

        /**
         * Encodes the specified PlayerRoleData message. Does not implicitly {@link data.PlayerRoleData.verify|verify} messages.
         * @param message PlayerRoleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPlayerRoleData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerRoleData message, length delimited. Does not implicitly {@link data.PlayerRoleData.verify|verify} messages.
         * @param message PlayerRoleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPlayerRoleData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerRoleData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerRoleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PlayerRoleData;

        /**
         * Decodes a PlayerRoleData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerRoleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PlayerRoleData;

        /**
         * Verifies a PlayerRoleData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerRoleData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerRoleData
         */
        public static fromObject(object: { [k: string]: any }): data.PlayerRoleData;

        /**
         * Creates a plain object from a PlayerRoleData message. Also converts values to other types if specified.
         * @param message PlayerRoleData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PlayerRoleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerRoleData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerData. */
    interface IPlayerData {

        /** PlayerData BaseInfo */
        BaseInfo?: (data.IPlayerBaseInfo|null);

        /** PlayerData Talents */
        Talents?: (number[]|null);

        /** PlayerData Treasures */
        Treasures?: (number[]|null);

        /** PlayerData ExtraBuffSkills */
        ExtraBuffSkills?: (number[]|null);

        /** PlayerData Roles */
        Roles?: (data.IPlayerRoleData[]|null);

        /** PlayerData LeadSkills */
        LeadSkills?: ({ [k: string]: number }|null);
    }

    /** Represents a PlayerData. */
    class PlayerData implements IPlayerData {

        /**
         * Constructs a new PlayerData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPlayerData);

        /** PlayerData BaseInfo. */
        public BaseInfo?: (data.IPlayerBaseInfo|null);

        /** PlayerData Talents. */
        public Talents: number[];

        /** PlayerData Treasures. */
        public Treasures: number[];

        /** PlayerData ExtraBuffSkills. */
        public ExtraBuffSkills: number[];

        /** PlayerData Roles. */
        public Roles: data.IPlayerRoleData[];

        /** PlayerData LeadSkills. */
        public LeadSkills: { [k: string]: number };

        /**
         * Creates a new PlayerData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerData instance
         */
        public static create(properties?: data.IPlayerData): data.PlayerData;

        /**
         * Encodes the specified PlayerData message. Does not implicitly {@link data.PlayerData.verify|verify} messages.
         * @param message PlayerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPlayerData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerData message, length delimited. Does not implicitly {@link data.PlayerData.verify|verify} messages.
         * @param message PlayerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPlayerData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PlayerData;

        /**
         * Decodes a PlayerData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PlayerData;

        /**
         * Verifies a PlayerData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerData
         */
        public static fromObject(object: { [k: string]: any }): data.PlayerData;

        /**
         * Creates a plain object from a PlayerData message. Also converts values to other types if specified.
         * @param message PlayerData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PlayerData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerRoleExtraData. */
    interface IPlayerRoleExtraData {

        /** PlayerRoleExtraData ID */
        ID?: (number|null);

        /** PlayerRoleExtraData HPPercent */
        HPPercent?: (number|null);

        /** PlayerRoleExtraData Energy */
        Energy?: (number|null);

        /** PlayerRoleExtraData RoundMaxCount */
        RoundMaxCount?: (number|null);

        /** PlayerRoleExtraData TrialProperty */
        TrialProperty?: ({ [k: string]: number }|null);
    }

    /** Represents a PlayerRoleExtraData. */
    class PlayerRoleExtraData implements IPlayerRoleExtraData {

        /**
         * Constructs a new PlayerRoleExtraData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPlayerRoleExtraData);

        /** PlayerRoleExtraData ID. */
        public ID: number;

        /** PlayerRoleExtraData HPPercent. */
        public HPPercent: number;

        /** PlayerRoleExtraData Energy. */
        public Energy: number;

        /** PlayerRoleExtraData RoundMaxCount. */
        public RoundMaxCount: number;

        /** PlayerRoleExtraData TrialProperty. */
        public TrialProperty: { [k: string]: number };

        /**
         * Creates a new PlayerRoleExtraData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerRoleExtraData instance
         */
        public static create(properties?: data.IPlayerRoleExtraData): data.PlayerRoleExtraData;

        /**
         * Encodes the specified PlayerRoleExtraData message. Does not implicitly {@link data.PlayerRoleExtraData.verify|verify} messages.
         * @param message PlayerRoleExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPlayerRoleExtraData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerRoleExtraData message, length delimited. Does not implicitly {@link data.PlayerRoleExtraData.verify|verify} messages.
         * @param message PlayerRoleExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPlayerRoleExtraData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerRoleExtraData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerRoleExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PlayerRoleExtraData;

        /**
         * Decodes a PlayerRoleExtraData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerRoleExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PlayerRoleExtraData;

        /**
         * Verifies a PlayerRoleExtraData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerRoleExtraData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerRoleExtraData
         */
        public static fromObject(object: { [k: string]: any }): data.PlayerRoleExtraData;

        /**
         * Creates a plain object from a PlayerRoleExtraData message. Also converts values to other types if specified.
         * @param message PlayerRoleExtraData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PlayerRoleExtraData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerRoleExtraData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureSoul. */
    interface IMeasureSoul {

        /** MeasureSoul SoulID */
        SoulID?: (number|null);

        /** MeasureSoul Value */
        Value?: (number|null);
    }

    /** Represents a MeasureSoul. */
    class MeasureSoul implements IMeasureSoul {

        /**
         * Constructs a new MeasureSoul.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureSoul);

        /** MeasureSoul SoulID. */
        public SoulID: number;

        /** MeasureSoul Value. */
        public Value: number;

        /**
         * Creates a new MeasureSoul instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureSoul instance
         */
        public static create(properties?: data.IMeasureSoul): data.MeasureSoul;

        /**
         * Encodes the specified MeasureSoul message. Does not implicitly {@link data.MeasureSoul.verify|verify} messages.
         * @param message MeasureSoul message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureSoul, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureSoul message, length delimited. Does not implicitly {@link data.MeasureSoul.verify|verify} messages.
         * @param message MeasureSoul message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureSoul, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureSoul message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureSoul
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureSoul;

        /**
         * Decodes a MeasureSoul message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureSoul
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureSoul;

        /**
         * Verifies a MeasureSoul message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureSoul message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureSoul
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureSoul;

        /**
         * Creates a plain object from a MeasureSoul message. Also converts values to other types if specified.
         * @param message MeasureSoul
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureSoul, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureSoul to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureEquip. */
    interface IMeasureEquip {

        /** MeasureEquip EquipID */
        EquipID?: (number|null);

        /** MeasureEquip Star */
        Star?: (number|null);

        /** MeasureEquip Exp */
        Exp?: (number|null);

        /** MeasureEquip CastSoul */
        CastSoul?: (data.IMeasureSoul[]|null);
    }

    /** Represents a MeasureEquip. */
    class MeasureEquip implements IMeasureEquip {

        /**
         * Constructs a new MeasureEquip.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureEquip);

        /** MeasureEquip EquipID. */
        public EquipID: number;

        /** MeasureEquip Star. */
        public Star: number;

        /** MeasureEquip Exp. */
        public Exp: number;

        /** MeasureEquip CastSoul. */
        public CastSoul: data.IMeasureSoul[];

        /**
         * Creates a new MeasureEquip instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureEquip instance
         */
        public static create(properties?: data.IMeasureEquip): data.MeasureEquip;

        /**
         * Encodes the specified MeasureEquip message. Does not implicitly {@link data.MeasureEquip.verify|verify} messages.
         * @param message MeasureEquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureEquip, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureEquip message, length delimited. Does not implicitly {@link data.MeasureEquip.verify|verify} messages.
         * @param message MeasureEquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureEquip, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureEquip message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureEquip;

        /**
         * Decodes a MeasureEquip message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureEquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureEquip;

        /**
         * Verifies a MeasureEquip message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureEquip message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureEquip
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureEquip;

        /**
         * Creates a plain object from a MeasureEquip message. Also converts values to other types if specified.
         * @param message MeasureEquip
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureEquip, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureEquip to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureGift. */
    interface IMeasureGift {

        /** MeasureGift GiftID */
        GiftID?: (number|null);

        /** MeasureGift SkillID */
        SkillID?: (number|null);
    }

    /** Represents a MeasureGift. */
    class MeasureGift implements IMeasureGift {

        /**
         * Constructs a new MeasureGift.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureGift);

        /** MeasureGift GiftID. */
        public GiftID: number;

        /** MeasureGift SkillID. */
        public SkillID: number;

        /**
         * Creates a new MeasureGift instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureGift instance
         */
        public static create(properties?: data.IMeasureGift): data.MeasureGift;

        /**
         * Encodes the specified MeasureGift message. Does not implicitly {@link data.MeasureGift.verify|verify} messages.
         * @param message MeasureGift message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureGift, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureGift message, length delimited. Does not implicitly {@link data.MeasureGift.verify|verify} messages.
         * @param message MeasureGift message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureGift, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureGift message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureGift
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureGift;

        /**
         * Decodes a MeasureGift message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureGift
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureGift;

        /**
         * Verifies a MeasureGift message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureGift message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureGift
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureGift;

        /**
         * Creates a plain object from a MeasureGift message. Also converts values to other types if specified.
         * @param message MeasureGift
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureGift, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureGift to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureRole. */
    interface IMeasureRole {

        /** MeasureRole ID */
        ID?: (number|null);

        /** MeasureRole Pos */
        Pos?: (number|null);

        /** MeasureRole Star */
        Star?: (number|null);

        /** MeasureRole Level */
        Level?: (number|null);

        /** MeasureRole Gifts */
        Gifts?: (data.IMeasureGift[]|null);

        /** MeasureRole Equips */
        Equips?: (data.IMeasureEquip[]|null);
    }

    /** Represents a MeasureRole. */
    class MeasureRole implements IMeasureRole {

        /**
         * Constructs a new MeasureRole.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureRole);

        /** MeasureRole ID. */
        public ID: number;

        /** MeasureRole Pos. */
        public Pos: number;

        /** MeasureRole Star. */
        public Star: number;

        /** MeasureRole Level. */
        public Level: number;

        /** MeasureRole Gifts. */
        public Gifts: data.IMeasureGift[];

        /** MeasureRole Equips. */
        public Equips: data.IMeasureEquip[];

        /**
         * Creates a new MeasureRole instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureRole instance
         */
        public static create(properties?: data.IMeasureRole): data.MeasureRole;

        /**
         * Encodes the specified MeasureRole message. Does not implicitly {@link data.MeasureRole.verify|verify} messages.
         * @param message MeasureRole message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureRole message, length delimited. Does not implicitly {@link data.MeasureRole.verify|verify} messages.
         * @param message MeasureRole message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureRole message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureRole;

        /**
         * Decodes a MeasureRole message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureRole
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureRole;

        /**
         * Verifies a MeasureRole message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureRole message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureRole
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureRole;

        /**
         * Creates a plain object from a MeasureRole message. Also converts values to other types if specified.
         * @param message MeasureRole
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureRole, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureRole to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureTeam. */
    interface IMeasureTeam {

        /** MeasureTeam Roles */
        Roles?: (data.IMeasureRole[]|null);
    }

    /** Represents a MeasureTeam. */
    class MeasureTeam implements IMeasureTeam {

        /**
         * Constructs a new MeasureTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureTeam);

        /** MeasureTeam Roles. */
        public Roles: data.IMeasureRole[];

        /**
         * Creates a new MeasureTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureTeam instance
         */
        public static create(properties?: data.IMeasureTeam): data.MeasureTeam;

        /**
         * Encodes the specified MeasureTeam message. Does not implicitly {@link data.MeasureTeam.verify|verify} messages.
         * @param message MeasureTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureTeam message, length delimited. Does not implicitly {@link data.MeasureTeam.verify|verify} messages.
         * @param message MeasureTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureTeam;

        /**
         * Decodes a MeasureTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureTeam;

        /**
         * Verifies a MeasureTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureTeam
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureTeam;

        /**
         * Creates a plain object from a MeasureTeam message. Also converts values to other types if specified.
         * @param message MeasureTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureBattleCfg. */
    interface IMeasureBattleCfg {

        /** MeasureBattleCfg Ref */
        Ref?: (number|null);

        /** MeasureBattleCfg Team */
        Team?: (data.IMeasureTeam[]|null);
    }

    /** Represents a MeasureBattleCfg. */
    class MeasureBattleCfg implements IMeasureBattleCfg {

        /**
         * Constructs a new MeasureBattleCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureBattleCfg);

        /** MeasureBattleCfg Ref. */
        public Ref: number;

        /** MeasureBattleCfg Team. */
        public Team: data.IMeasureTeam[];

        /**
         * Creates a new MeasureBattleCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureBattleCfg instance
         */
        public static create(properties?: data.IMeasureBattleCfg): data.MeasureBattleCfg;

        /**
         * Encodes the specified MeasureBattleCfg message. Does not implicitly {@link data.MeasureBattleCfg.verify|verify} messages.
         * @param message MeasureBattleCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureBattleCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureBattleCfg message, length delimited. Does not implicitly {@link data.MeasureBattleCfg.verify|verify} messages.
         * @param message MeasureBattleCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureBattleCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureBattleCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureBattleCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureBattleCfg;

        /**
         * Decodes a MeasureBattleCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureBattleCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureBattleCfg;

        /**
         * Verifies a MeasureBattleCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureBattleCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureBattleCfg
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureBattleCfg;

        /**
         * Creates a plain object from a MeasureBattleCfg message. Also converts values to other types if specified.
         * @param message MeasureBattleCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureBattleCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureBattleCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureRoleProp. */
    interface IMeasureRoleProp {

        /** MeasureRoleProp PropID */
        PropID?: (number|null);

        /** MeasureRoleProp Value */
        Value?: (number|null);
    }

    /** Represents a MeasureRoleProp. */
    class MeasureRoleProp implements IMeasureRoleProp {

        /**
         * Constructs a new MeasureRoleProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureRoleProp);

        /** MeasureRoleProp PropID. */
        public PropID: number;

        /** MeasureRoleProp Value. */
        public Value: number;

        /**
         * Creates a new MeasureRoleProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureRoleProp instance
         */
        public static create(properties?: data.IMeasureRoleProp): data.MeasureRoleProp;

        /**
         * Encodes the specified MeasureRoleProp message. Does not implicitly {@link data.MeasureRoleProp.verify|verify} messages.
         * @param message MeasureRoleProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureRoleProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureRoleProp message, length delimited. Does not implicitly {@link data.MeasureRoleProp.verify|verify} messages.
         * @param message MeasureRoleProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureRoleProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureRoleProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureRoleProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureRoleProp;

        /**
         * Decodes a MeasureRoleProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureRoleProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureRoleProp;

        /**
         * Verifies a MeasureRoleProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureRoleProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureRoleProp
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureRoleProp;

        /**
         * Creates a plain object from a MeasureRoleProp message. Also converts values to other types if specified.
         * @param message MeasureRoleProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureRoleProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureRoleProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureBuff. */
    interface IMeasureBuff {

        /** MeasureBuff BuffID */
        BuffID?: (number|null);

        /** MeasureBuff Count */
        Count?: (number|null);
    }

    /** Represents a MeasureBuff. */
    class MeasureBuff implements IMeasureBuff {

        /**
         * Constructs a new MeasureBuff.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureBuff);

        /** MeasureBuff BuffID. */
        public BuffID: number;

        /** MeasureBuff Count. */
        public Count: number;

        /**
         * Creates a new MeasureBuff instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureBuff instance
         */
        public static create(properties?: data.IMeasureBuff): data.MeasureBuff;

        /**
         * Encodes the specified MeasureBuff message. Does not implicitly {@link data.MeasureBuff.verify|verify} messages.
         * @param message MeasureBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureBuff, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureBuff message, length delimited. Does not implicitly {@link data.MeasureBuff.verify|verify} messages.
         * @param message MeasureBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureBuff, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureBuff message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureBuff;

        /**
         * Decodes a MeasureBuff message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureBuff;

        /**
         * Verifies a MeasureBuff message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureBuff message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureBuff
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureBuff;

        /**
         * Creates a plain object from a MeasureBuff message. Also converts values to other types if specified.
         * @param message MeasureBuff
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureBuff, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureBuff to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureRoleRes. */
    interface IMeasureRoleRes {

        /** MeasureRoleRes ID */
        ID?: (number|null);

        /** MeasureRoleRes Team */
        Team?: (number|null);

        /** MeasureRoleRes HP */
        HP?: (number|null);

        /** MeasureRoleRes Power */
        Power?: (number|null);

        /** MeasureRoleRes Shield */
        Shield?: (number|null);

        /** MeasureRoleRes Distance */
        Distance?: (number|null);

        /** MeasureRoleRes Speed */
        Speed?: (number|null);

        /** MeasureRoleRes Property */
        Property?: (data.IMeasureRoleProp[]|null);

        /** MeasureRoleRes Buffs */
        Buffs?: (data.IMeasureBuff[]|null);
    }

    /** Represents a MeasureRoleRes. */
    class MeasureRoleRes implements IMeasureRoleRes {

        /**
         * Constructs a new MeasureRoleRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureRoleRes);

        /** MeasureRoleRes ID. */
        public ID: number;

        /** MeasureRoleRes Team. */
        public Team: number;

        /** MeasureRoleRes HP. */
        public HP: number;

        /** MeasureRoleRes Power. */
        public Power: number;

        /** MeasureRoleRes Shield. */
        public Shield: number;

        /** MeasureRoleRes Distance. */
        public Distance: number;

        /** MeasureRoleRes Speed. */
        public Speed: number;

        /** MeasureRoleRes Property. */
        public Property: data.IMeasureRoleProp[];

        /** MeasureRoleRes Buffs. */
        public Buffs: data.IMeasureBuff[];

        /**
         * Creates a new MeasureRoleRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureRoleRes instance
         */
        public static create(properties?: data.IMeasureRoleRes): data.MeasureRoleRes;

        /**
         * Encodes the specified MeasureRoleRes message. Does not implicitly {@link data.MeasureRoleRes.verify|verify} messages.
         * @param message MeasureRoleRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureRoleRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureRoleRes message, length delimited. Does not implicitly {@link data.MeasureRoleRes.verify|verify} messages.
         * @param message MeasureRoleRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureRoleRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureRoleRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureRoleRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureRoleRes;

        /**
         * Decodes a MeasureRoleRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureRoleRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureRoleRes;

        /**
         * Verifies a MeasureRoleRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureRoleRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureRoleRes
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureRoleRes;

        /**
         * Creates a plain object from a MeasureRoleRes message. Also converts values to other types if specified.
         * @param message MeasureRoleRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureRoleRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureRoleRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureTeamRes. */
    interface IMeasureTeamRes {

        /** MeasureTeamRes Team */
        Team?: (number|null);

        /** MeasureTeamRes TeamBuffs */
        TeamBuffs?: (data.IMeasureBuff[]|null);
    }

    /** Represents a MeasureTeamRes. */
    class MeasureTeamRes implements IMeasureTeamRes {

        /**
         * Constructs a new MeasureTeamRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureTeamRes);

        /** MeasureTeamRes Team. */
        public Team: number;

        /** MeasureTeamRes TeamBuffs. */
        public TeamBuffs: data.IMeasureBuff[];

        /**
         * Creates a new MeasureTeamRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureTeamRes instance
         */
        public static create(properties?: data.IMeasureTeamRes): data.MeasureTeamRes;

        /**
         * Encodes the specified MeasureTeamRes message. Does not implicitly {@link data.MeasureTeamRes.verify|verify} messages.
         * @param message MeasureTeamRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureTeamRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureTeamRes message, length delimited. Does not implicitly {@link data.MeasureTeamRes.verify|verify} messages.
         * @param message MeasureTeamRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureTeamRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureTeamRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureTeamRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureTeamRes;

        /**
         * Decodes a MeasureTeamRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureTeamRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureTeamRes;

        /**
         * Verifies a MeasureTeamRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureTeamRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureTeamRes
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureTeamRes;

        /**
         * Creates a plain object from a MeasureTeamRes message. Also converts values to other types if specified.
         * @param message MeasureTeamRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureTeamRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureTeamRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureRoundResult. */
    interface IMeasureRoundResult {

        /** MeasureRoundResult Round */
        Round?: (number|null);

        /** MeasureRoundResult TimePoint */
        TimePoint?: (number|null);

        /** MeasureRoundResult RoleRes */
        RoleRes?: (data.IMeasureRoleRes[]|null);

        /** MeasureRoundResult TeamRes */
        TeamRes?: (data.IMeasureTeamRes[]|null);
    }

    /** Represents a MeasureRoundResult. */
    class MeasureRoundResult implements IMeasureRoundResult {

        /**
         * Constructs a new MeasureRoundResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureRoundResult);

        /** MeasureRoundResult Round. */
        public Round: number;

        /** MeasureRoundResult TimePoint. */
        public TimePoint: number;

        /** MeasureRoundResult RoleRes. */
        public RoleRes: data.IMeasureRoleRes[];

        /** MeasureRoundResult TeamRes. */
        public TeamRes: data.IMeasureTeamRes[];

        /**
         * Creates a new MeasureRoundResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureRoundResult instance
         */
        public static create(properties?: data.IMeasureRoundResult): data.MeasureRoundResult;

        /**
         * Encodes the specified MeasureRoundResult message. Does not implicitly {@link data.MeasureRoundResult.verify|verify} messages.
         * @param message MeasureRoundResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureRoundResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureRoundResult message, length delimited. Does not implicitly {@link data.MeasureRoundResult.verify|verify} messages.
         * @param message MeasureRoundResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureRoundResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureRoundResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureRoundResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureRoundResult;

        /**
         * Decodes a MeasureRoundResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureRoundResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureRoundResult;

        /**
         * Verifies a MeasureRoundResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureRoundResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureRoundResult
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureRoundResult;

        /**
         * Creates a plain object from a MeasureRoundResult message. Also converts values to other types if specified.
         * @param message MeasureRoundResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureRoundResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureRoundResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MeasureResult. */
    interface IMeasureResult {

        /** MeasureResult Ref */
        Ref?: (number|null);

        /** MeasureResult RoundRes */
        RoundRes?: (data.IMeasureRoundResult[]|null);
    }

    /** Represents a MeasureResult. */
    class MeasureResult implements IMeasureResult {

        /**
         * Constructs a new MeasureResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMeasureResult);

        /** MeasureResult Ref. */
        public Ref: number;

        /** MeasureResult RoundRes. */
        public RoundRes: data.IMeasureRoundResult[];

        /**
         * Creates a new MeasureResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MeasureResult instance
         */
        public static create(properties?: data.IMeasureResult): data.MeasureResult;

        /**
         * Encodes the specified MeasureResult message. Does not implicitly {@link data.MeasureResult.verify|verify} messages.
         * @param message MeasureResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMeasureResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MeasureResult message, length delimited. Does not implicitly {@link data.MeasureResult.verify|verify} messages.
         * @param message MeasureResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMeasureResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MeasureResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MeasureResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MeasureResult;

        /**
         * Decodes a MeasureResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MeasureResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MeasureResult;

        /**
         * Verifies a MeasureResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MeasureResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MeasureResult
         */
        public static fromObject(object: { [k: string]: any }): data.MeasureResult;

        /**
         * Creates a plain object from a MeasureResult message. Also converts values to other types if specified.
         * @param message MeasureResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MeasureResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MeasureResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionTask. */
    interface IDivineExpeditionTask {

        /** DivineExpeditionTask Seq */
        Seq?: (number|null);

        /** DivineExpeditionTask TaskID */
        TaskID?: (number|null);

        /** DivineExpeditionTask NeedHeroQualityList */
        NeedHeroQualityList?: (number[]|null);

        /** DivineExpeditionTask NeedHeroStarList */
        NeedHeroStarList?: (number[]|null);

        /** DivineExpeditionTask NeedHeroDiagramsList */
        NeedHeroDiagramsList?: (number[]|null);

        /** DivineExpeditionTask NeedHeroArmorList */
        NeedHeroArmorList?: (number[]|null);

        /** DivineExpeditionTask NeedHeroLocationList */
        NeedHeroLocationList?: (number[]|null);

        /** DivineExpeditionTask ProduceTime */
        ProduceTime?: (number|Long|null);

        /** DivineExpeditionTask IsExecute */
        IsExecute?: (boolean|null);

        /** DivineExpeditionTask ExecuteTime */
        ExecuteTime?: (number|Long|null);

        /** DivineExpeditionTask HeroIDList */
        HeroIDList?: (number[]|null);
    }

    /** Represents a DivineExpeditionTask. */
    class DivineExpeditionTask implements IDivineExpeditionTask {

        /**
         * Constructs a new DivineExpeditionTask.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IDivineExpeditionTask);

        /** DivineExpeditionTask Seq. */
        public Seq: number;

        /** DivineExpeditionTask TaskID. */
        public TaskID: number;

        /** DivineExpeditionTask NeedHeroQualityList. */
        public NeedHeroQualityList: number[];

        /** DivineExpeditionTask NeedHeroStarList. */
        public NeedHeroStarList: number[];

        /** DivineExpeditionTask NeedHeroDiagramsList. */
        public NeedHeroDiagramsList: number[];

        /** DivineExpeditionTask NeedHeroArmorList. */
        public NeedHeroArmorList: number[];

        /** DivineExpeditionTask NeedHeroLocationList. */
        public NeedHeroLocationList: number[];

        /** DivineExpeditionTask ProduceTime. */
        public ProduceTime: (number|Long);

        /** DivineExpeditionTask IsExecute. */
        public IsExecute: boolean;

        /** DivineExpeditionTask ExecuteTime. */
        public ExecuteTime: (number|Long);

        /** DivineExpeditionTask HeroIDList. */
        public HeroIDList: number[];

        /**
         * Creates a new DivineExpeditionTask instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionTask instance
         */
        public static create(properties?: data.IDivineExpeditionTask): data.DivineExpeditionTask;

        /**
         * Encodes the specified DivineExpeditionTask message. Does not implicitly {@link data.DivineExpeditionTask.verify|verify} messages.
         * @param message DivineExpeditionTask message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IDivineExpeditionTask, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionTask message, length delimited. Does not implicitly {@link data.DivineExpeditionTask.verify|verify} messages.
         * @param message DivineExpeditionTask message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IDivineExpeditionTask, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionTask message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionTask
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.DivineExpeditionTask;

        /**
         * Decodes a DivineExpeditionTask message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionTask
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.DivineExpeditionTask;

        /**
         * Verifies a DivineExpeditionTask message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionTask message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionTask
         */
        public static fromObject(object: { [k: string]: any }): data.DivineExpeditionTask;

        /**
         * Creates a plain object from a DivineExpeditionTask message. Also converts values to other types if specified.
         * @param message DivineExpeditionTask
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.DivineExpeditionTask, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionTask to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionData. */
    interface IDivineExpeditionData {

        /** DivineExpeditionData SeqCounter */
        SeqCounter?: (number|null);

        /** DivineExpeditionData Level */
        Level?: (number|null);

        /** DivineExpeditionData LevelFinishTaskCount */
        LevelFinishTaskCount?: (number|null);

        /** DivineExpeditionData DayFinishTaskCount */
        DayFinishTaskCount?: (number|null);

        /** DivineExpeditionData DivineExpeditionTaskMap */
        DivineExpeditionTaskMap?: ({ [k: string]: data.IDivineExpeditionTask }|null);
    }

    /** Represents a DivineExpeditionData. */
    class DivineExpeditionData implements IDivineExpeditionData {

        /**
         * Constructs a new DivineExpeditionData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IDivineExpeditionData);

        /** DivineExpeditionData SeqCounter. */
        public SeqCounter: number;

        /** DivineExpeditionData Level. */
        public Level: number;

        /** DivineExpeditionData LevelFinishTaskCount. */
        public LevelFinishTaskCount: number;

        /** DivineExpeditionData DayFinishTaskCount. */
        public DayFinishTaskCount: number;

        /** DivineExpeditionData DivineExpeditionTaskMap. */
        public DivineExpeditionTaskMap: { [k: string]: data.IDivineExpeditionTask };

        /**
         * Creates a new DivineExpeditionData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionData instance
         */
        public static create(properties?: data.IDivineExpeditionData): data.DivineExpeditionData;

        /**
         * Encodes the specified DivineExpeditionData message. Does not implicitly {@link data.DivineExpeditionData.verify|verify} messages.
         * @param message DivineExpeditionData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IDivineExpeditionData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionData message, length delimited. Does not implicitly {@link data.DivineExpeditionData.verify|verify} messages.
         * @param message DivineExpeditionData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IDivineExpeditionData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.DivineExpeditionData;

        /**
         * Decodes a DivineExpeditionData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.DivineExpeditionData;

        /**
         * Verifies a DivineExpeditionData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionData
         */
        public static fromObject(object: { [k: string]: any }): data.DivineExpeditionData;

        /**
         * Creates a plain object from a DivineExpeditionData message. Also converts values to other types if specified.
         * @param message DivineExpeditionData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.DivineExpeditionData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineData. */
    interface IDivineData {

        /** DivineData DivineExpeditionData */
        DivineExpeditionData?: (data.IDivineExpeditionData|null);
    }

    /** Represents a DivineData. */
    class DivineData implements IDivineData {

        /**
         * Constructs a new DivineData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IDivineData);

        /** DivineData DivineExpeditionData. */
        public DivineExpeditionData?: (data.IDivineExpeditionData|null);

        /**
         * Creates a new DivineData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineData instance
         */
        public static create(properties?: data.IDivineData): data.DivineData;

        /**
         * Encodes the specified DivineData message. Does not implicitly {@link data.DivineData.verify|verify} messages.
         * @param message DivineData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IDivineData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineData message, length delimited. Does not implicitly {@link data.DivineData.verify|verify} messages.
         * @param message DivineData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IDivineData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.DivineData;

        /**
         * Decodes a DivineData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.DivineData;

        /**
         * Verifies a DivineData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineData
         */
        public static fromObject(object: { [k: string]: any }): data.DivineData;

        /**
         * Creates a plain object from a DivineData message. Also converts values to other types if specified.
         * @param message DivineData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.DivineData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DropRecord. */
    interface IDropRecord {

        /** DropRecord Index */
        Index?: (number|null);

        /** DropRecord Drops */
        Drops?: (data.IItemInfo[]|null);
    }

    /** Represents a DropRecord. */
    class DropRecord implements IDropRecord {

        /**
         * Constructs a new DropRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IDropRecord);

        /** DropRecord Index. */
        public Index: number;

        /** DropRecord Drops. */
        public Drops: data.IItemInfo[];

        /**
         * Creates a new DropRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DropRecord instance
         */
        public static create(properties?: data.IDropRecord): data.DropRecord;

        /**
         * Encodes the specified DropRecord message. Does not implicitly {@link data.DropRecord.verify|verify} messages.
         * @param message DropRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IDropRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DropRecord message, length delimited. Does not implicitly {@link data.DropRecord.verify|verify} messages.
         * @param message DropRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IDropRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DropRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DropRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.DropRecord;

        /**
         * Decodes a DropRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DropRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.DropRecord;

        /**
         * Verifies a DropRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DropRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DropRecord
         */
        public static fromObject(object: { [k: string]: any }): data.DropRecord;

        /**
         * Creates a plain object from a DropRecord message. Also converts values to other types if specified.
         * @param message DropRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.DropRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DropRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DropData. */
    interface IDropData {

        /** DropData ProduceGroupRecords */
        ProduceGroupRecords?: ({ [k: string]: data.IDropRecord }|null);
    }

    /** Represents a DropData. */
    class DropData implements IDropData {

        /**
         * Constructs a new DropData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IDropData);

        /** DropData ProduceGroupRecords. */
        public ProduceGroupRecords: { [k: string]: data.IDropRecord };

        /**
         * Creates a new DropData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DropData instance
         */
        public static create(properties?: data.IDropData): data.DropData;

        /**
         * Encodes the specified DropData message. Does not implicitly {@link data.DropData.verify|verify} messages.
         * @param message DropData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IDropData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DropData message, length delimited. Does not implicitly {@link data.DropData.verify|verify} messages.
         * @param message DropData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IDropData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DropData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DropData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.DropData;

        /**
         * Decodes a DropData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DropData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.DropData;

        /**
         * Verifies a DropData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DropData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DropData
         */
        public static fromObject(object: { [k: string]: any }): data.DropData;

        /**
         * Creates a plain object from a DropData message. Also converts values to other types if specified.
         * @param message DropData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.DropData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DropData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardReachUser. */
    interface IEpochRewardReachUser {

        /** EpochRewardReachUser UserID */
        UserID?: (string|null);

        /** EpochRewardReachUser Time */
        Time?: (number|Long|null);
    }

    /** Represents an EpochRewardReachUser. */
    class EpochRewardReachUser implements IEpochRewardReachUser {

        /**
         * Constructs a new EpochRewardReachUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochRewardReachUser);

        /** EpochRewardReachUser UserID. */
        public UserID: string;

        /** EpochRewardReachUser Time. */
        public Time: (number|Long);

        /**
         * Creates a new EpochRewardReachUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardReachUser instance
         */
        public static create(properties?: data.IEpochRewardReachUser): data.EpochRewardReachUser;

        /**
         * Encodes the specified EpochRewardReachUser message. Does not implicitly {@link data.EpochRewardReachUser.verify|verify} messages.
         * @param message EpochRewardReachUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochRewardReachUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardReachUser message, length delimited. Does not implicitly {@link data.EpochRewardReachUser.verify|verify} messages.
         * @param message EpochRewardReachUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochRewardReachUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardReachUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardReachUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochRewardReachUser;

        /**
         * Decodes an EpochRewardReachUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardReachUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochRewardReachUser;

        /**
         * Verifies an EpochRewardReachUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardReachUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardReachUser
         */
        public static fromObject(object: { [k: string]: any }): data.EpochRewardReachUser;

        /**
         * Creates a plain object from an EpochRewardReachUser message. Also converts values to other types if specified.
         * @param message EpochRewardReachUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochRewardReachUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardReachUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardReachUserGroup. */
    interface IEpochRewardReachUserGroup {

        /** EpochRewardReachUserGroup EpochRewardReachUserList */
        EpochRewardReachUserList?: (data.IEpochRewardReachUser[]|null);
    }

    /** Represents an EpochRewardReachUserGroup. */
    class EpochRewardReachUserGroup implements IEpochRewardReachUserGroup {

        /**
         * Constructs a new EpochRewardReachUserGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochRewardReachUserGroup);

        /** EpochRewardReachUserGroup EpochRewardReachUserList. */
        public EpochRewardReachUserList: data.IEpochRewardReachUser[];

        /**
         * Creates a new EpochRewardReachUserGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardReachUserGroup instance
         */
        public static create(properties?: data.IEpochRewardReachUserGroup): data.EpochRewardReachUserGroup;

        /**
         * Encodes the specified EpochRewardReachUserGroup message. Does not implicitly {@link data.EpochRewardReachUserGroup.verify|verify} messages.
         * @param message EpochRewardReachUserGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochRewardReachUserGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardReachUserGroup message, length delimited. Does not implicitly {@link data.EpochRewardReachUserGroup.verify|verify} messages.
         * @param message EpochRewardReachUserGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochRewardReachUserGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardReachUserGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardReachUserGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochRewardReachUserGroup;

        /**
         * Decodes an EpochRewardReachUserGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardReachUserGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochRewardReachUserGroup;

        /**
         * Verifies an EpochRewardReachUserGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardReachUserGroup message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardReachUserGroup
         */
        public static fromObject(object: { [k: string]: any }): data.EpochRewardReachUserGroup;

        /**
         * Creates a plain object from an EpochRewardReachUserGroup message. Also converts values to other types if specified.
         * @param message EpochRewardReachUserGroup
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochRewardReachUserGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardReachUserGroup to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardTheme. */
    interface IEpochRewardTheme {

        /** EpochRewardTheme OrderReachUserGroupMap */
        OrderReachUserGroupMap?: ({ [k: string]: data.IEpochRewardReachUserGroup }|null);
    }

    /** Represents an EpochRewardTheme. */
    class EpochRewardTheme implements IEpochRewardTheme {

        /**
         * Constructs a new EpochRewardTheme.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochRewardTheme);

        /** EpochRewardTheme OrderReachUserGroupMap. */
        public OrderReachUserGroupMap: { [k: string]: data.IEpochRewardReachUserGroup };

        /**
         * Creates a new EpochRewardTheme instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardTheme instance
         */
        public static create(properties?: data.IEpochRewardTheme): data.EpochRewardTheme;

        /**
         * Encodes the specified EpochRewardTheme message. Does not implicitly {@link data.EpochRewardTheme.verify|verify} messages.
         * @param message EpochRewardTheme message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochRewardTheme, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardTheme message, length delimited. Does not implicitly {@link data.EpochRewardTheme.verify|verify} messages.
         * @param message EpochRewardTheme message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochRewardTheme, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardTheme message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardTheme
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochRewardTheme;

        /**
         * Decodes an EpochRewardTheme message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardTheme
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochRewardTheme;

        /**
         * Verifies an EpochRewardTheme message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardTheme message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardTheme
         */
        public static fromObject(object: { [k: string]: any }): data.EpochRewardTheme;

        /**
         * Creates a plain object from an EpochRewardTheme message. Also converts values to other types if specified.
         * @param message EpochRewardTheme
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochRewardTheme, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardTheme to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochReward. */
    interface IEpochReward {

        /** EpochReward EpochRewardTheme */
        EpochRewardTheme?: ({ [k: string]: data.IEpochRewardTheme }|null);
    }

    /** Represents an EpochReward. */
    class EpochReward implements IEpochReward {

        /**
         * Constructs a new EpochReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochReward);

        /** EpochReward EpochRewardTheme. */
        public EpochRewardTheme: { [k: string]: data.IEpochRewardTheme };

        /**
         * Creates a new EpochReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochReward instance
         */
        public static create(properties?: data.IEpochReward): data.EpochReward;

        /**
         * Encodes the specified EpochReward message. Does not implicitly {@link data.EpochReward.verify|verify} messages.
         * @param message EpochReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochReward message, length delimited. Does not implicitly {@link data.EpochReward.verify|verify} messages.
         * @param message EpochReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochReward;

        /**
         * Decodes an EpochReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochReward;

        /**
         * Verifies an EpochReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochReward
         */
        public static fromObject(object: { [k: string]: any }): data.EpochReward;

        /**
         * Creates a plain object from an EpochReward message. Also converts values to other types if specified.
         * @param message EpochReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochStrategyHero. */
    interface IEpochStrategyHero {

        /** EpochStrategyHero DegreeMap */
        DegreeMap?: ({ [k: string]: number }|null);
    }

    /** Represents an EpochStrategyHero. */
    class EpochStrategyHero implements IEpochStrategyHero {

        /**
         * Constructs a new EpochStrategyHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochStrategyHero);

        /** EpochStrategyHero DegreeMap. */
        public DegreeMap: { [k: string]: number };

        /**
         * Creates a new EpochStrategyHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochStrategyHero instance
         */
        public static create(properties?: data.IEpochStrategyHero): data.EpochStrategyHero;

        /**
         * Encodes the specified EpochStrategyHero message. Does not implicitly {@link data.EpochStrategyHero.verify|verify} messages.
         * @param message EpochStrategyHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochStrategyHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochStrategyHero message, length delimited. Does not implicitly {@link data.EpochStrategyHero.verify|verify} messages.
         * @param message EpochStrategyHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochStrategyHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochStrategyHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochStrategyHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochStrategyHero;

        /**
         * Decodes an EpochStrategyHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochStrategyHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochStrategyHero;

        /**
         * Verifies an EpochStrategyHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochStrategyHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochStrategyHero
         */
        public static fromObject(object: { [k: string]: any }): data.EpochStrategyHero;

        /**
         * Creates a plain object from an EpochStrategyHero message. Also converts values to other types if specified.
         * @param message EpochStrategyHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochStrategyHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochStrategyHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochStrategy. */
    interface IEpochStrategy {

        /** EpochStrategy DegreeMap */
        DegreeMap?: ({ [k: string]: number }|null);

        /** EpochStrategy EpochStrategyHeroMap */
        EpochStrategyHeroMap?: ({ [k: string]: data.IEpochStrategyHero }|null);
    }

    /** Represents an EpochStrategy. */
    class EpochStrategy implements IEpochStrategy {

        /**
         * Constructs a new EpochStrategy.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochStrategy);

        /** EpochStrategy DegreeMap. */
        public DegreeMap: { [k: string]: number };

        /** EpochStrategy EpochStrategyHeroMap. */
        public EpochStrategyHeroMap: { [k: string]: data.IEpochStrategyHero };

        /**
         * Creates a new EpochStrategy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochStrategy instance
         */
        public static create(properties?: data.IEpochStrategy): data.EpochStrategy;

        /**
         * Encodes the specified EpochStrategy message. Does not implicitly {@link data.EpochStrategy.verify|verify} messages.
         * @param message EpochStrategy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochStrategy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochStrategy message, length delimited. Does not implicitly {@link data.EpochStrategy.verify|verify} messages.
         * @param message EpochStrategy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochStrategy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochStrategy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochStrategy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochStrategy;

        /**
         * Decodes an EpochStrategy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochStrategy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochStrategy;

        /**
         * Verifies an EpochStrategy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochStrategy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochStrategy
         */
        public static fromObject(object: { [k: string]: any }): data.EpochStrategy;

        /**
         * Creates a plain object from an EpochStrategy message. Also converts values to other types if specified.
         * @param message EpochStrategy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochStrategy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochStrategy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardData. */
    interface IEpochRewardData {

        /** EpochRewardData ReceiveRankRewardIDMap */
        ReceiveRankRewardIDMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an EpochRewardData. */
    class EpochRewardData implements IEpochRewardData {

        /**
         * Constructs a new EpochRewardData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochRewardData);

        /** EpochRewardData ReceiveRankRewardIDMap. */
        public ReceiveRankRewardIDMap: { [k: string]: boolean };

        /**
         * Creates a new EpochRewardData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardData instance
         */
        public static create(properties?: data.IEpochRewardData): data.EpochRewardData;

        /**
         * Encodes the specified EpochRewardData message. Does not implicitly {@link data.EpochRewardData.verify|verify} messages.
         * @param message EpochRewardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochRewardData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardData message, length delimited. Does not implicitly {@link data.EpochRewardData.verify|verify} messages.
         * @param message EpochRewardData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochRewardData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochRewardData;

        /**
         * Decodes an EpochRewardData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochRewardData;

        /**
         * Verifies an EpochRewardData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardData
         */
        public static fromObject(object: { [k: string]: any }): data.EpochRewardData;

        /**
         * Creates a plain object from an EpochRewardData message. Also converts values to other types if specified.
         * @param message EpochRewardData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochRewardData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochData. */
    interface IEpochData {

        /** EpochData EpochRewardData */
        EpochRewardData?: (data.IEpochRewardData|null);
    }

    /** Represents an EpochData. */
    class EpochData implements IEpochData {

        /**
         * Constructs a new EpochData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IEpochData);

        /** EpochData EpochRewardData. */
        public EpochRewardData?: (data.IEpochRewardData|null);

        /**
         * Creates a new EpochData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochData instance
         */
        public static create(properties?: data.IEpochData): data.EpochData;

        /**
         * Encodes the specified EpochData message. Does not implicitly {@link data.EpochData.verify|verify} messages.
         * @param message EpochData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IEpochData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochData message, length delimited. Does not implicitly {@link data.EpochData.verify|verify} messages.
         * @param message EpochData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IEpochData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.EpochData;

        /**
         * Decodes an EpochData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.EpochData;

        /**
         * Verifies an EpochData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochData
         */
        public static fromObject(object: { [k: string]: any }): data.EpochData;

        /**
         * Creates a plain object from an EpochData message. Also converts values to other types if specified.
         * @param message EpochData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.EpochData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** FACTION_MEMBER_TYPE enum. */
    enum FACTION_MEMBER_TYPE {
        INVALID = 0,
        PRESIDENT = 1,
        VICE_PRESIDENT = 2,
        CIVILIAN = 3
    }

    /** FACTION_NEWS_FEED_TYPE enum. */
    enum FACTION_NEWS_FEED_TYPE {
        CREATE_FACTION = 0,
        NOMINATE_VICE_PRESIDENT = 1,
        REVERSE_NOMINATE_VICE_PRESIDENT = 2,
        ADD_MEMBER = 3,
        DEL_MEMBER = 4,
        CHANGE_NAME = 5,
        KICK_OUT_MEMBER = 6
    }

    /** Properties of a FactionMember. */
    interface IFactionMember {

        /** FactionMember UserID */
        UserID?: (string|null);

        /** FactionMember Name */
        Name?: (string|null);

        /** FactionMember HeadID */
        HeadID?: (number|null);

        /** FactionMember HeadFrameID */
        HeadFrameID?: (number|null);

        /** FactionMember Exp */
        Exp?: (number|null);

        /** FactionMember Power */
        Power?: (number|Long|null);

        /** FactionMember IsOnline */
        IsOnline?: (boolean|null);

        /** FactionMember LastOnlineTime */
        LastOnlineTime?: (number|Long|null);
    }

    /** Represents a FactionMember. */
    class FactionMember implements IFactionMember {

        /**
         * Constructs a new FactionMember.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionMember);

        /** FactionMember UserID. */
        public UserID: string;

        /** FactionMember Name. */
        public Name: string;

        /** FactionMember HeadID. */
        public HeadID: number;

        /** FactionMember HeadFrameID. */
        public HeadFrameID: number;

        /** FactionMember Exp. */
        public Exp: number;

        /** FactionMember Power. */
        public Power: (number|Long);

        /** FactionMember IsOnline. */
        public IsOnline: boolean;

        /** FactionMember LastOnlineTime. */
        public LastOnlineTime: (number|Long);

        /**
         * Creates a new FactionMember instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionMember instance
         */
        public static create(properties?: data.IFactionMember): data.FactionMember;

        /**
         * Encodes the specified FactionMember message. Does not implicitly {@link data.FactionMember.verify|verify} messages.
         * @param message FactionMember message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionMember message, length delimited. Does not implicitly {@link data.FactionMember.verify|verify} messages.
         * @param message FactionMember message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionMember message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionMember;

        /**
         * Decodes a FactionMember message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionMember;

        /**
         * Verifies a FactionMember message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionMember message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionMember
         */
        public static fromObject(object: { [k: string]: any }): data.FactionMember;

        /**
         * Creates a plain object from a FactionMember message. Also converts values to other types if specified.
         * @param message FactionMember
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionMember, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionMember to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionApplyMember. */
    interface IFactionApplyMember {

        /** FactionApplyMember UserID */
        UserID?: (string|null);

        /** FactionApplyMember Name */
        Name?: (string|null);

        /** FactionApplyMember HeadID */
        HeadID?: (number|null);

        /** FactionApplyMember HeadFrameID */
        HeadFrameID?: (number|null);

        /** FactionApplyMember Exp */
        Exp?: (number|null);

        /** FactionApplyMember Power */
        Power?: (number|Long|null);
    }

    /** Represents a FactionApplyMember. */
    class FactionApplyMember implements IFactionApplyMember {

        /**
         * Constructs a new FactionApplyMember.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionApplyMember);

        /** FactionApplyMember UserID. */
        public UserID: string;

        /** FactionApplyMember Name. */
        public Name: string;

        /** FactionApplyMember HeadID. */
        public HeadID: number;

        /** FactionApplyMember HeadFrameID. */
        public HeadFrameID: number;

        /** FactionApplyMember Exp. */
        public Exp: number;

        /** FactionApplyMember Power. */
        public Power: (number|Long);

        /**
         * Creates a new FactionApplyMember instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionApplyMember instance
         */
        public static create(properties?: data.IFactionApplyMember): data.FactionApplyMember;

        /**
         * Encodes the specified FactionApplyMember message. Does not implicitly {@link data.FactionApplyMember.verify|verify} messages.
         * @param message FactionApplyMember message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionApplyMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionApplyMember message, length delimited. Does not implicitly {@link data.FactionApplyMember.verify|verify} messages.
         * @param message FactionApplyMember message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionApplyMember, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionApplyMember message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionApplyMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionApplyMember;

        /**
         * Decodes a FactionApplyMember message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionApplyMember
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionApplyMember;

        /**
         * Verifies a FactionApplyMember message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionApplyMember message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionApplyMember
         */
        public static fromObject(object: { [k: string]: any }): data.FactionApplyMember;

        /**
         * Creates a plain object from a FactionApplyMember message. Also converts values to other types if specified.
         * @param message FactionApplyMember
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionApplyMember, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionApplyMember to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a NewsFeed. */
    interface INewsFeed {

        /** NewsFeed Time */
        Time?: (number|Long|null);

        /** NewsFeed Type */
        Type?: (number|null);

        /** NewsFeed paramList */
        paramList?: (string[]|null);
    }

    /** Represents a NewsFeed. */
    class NewsFeed implements INewsFeed {

        /**
         * Constructs a new NewsFeed.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.INewsFeed);

        /** NewsFeed Time. */
        public Time: (number|Long);

        /** NewsFeed Type. */
        public Type: number;

        /** NewsFeed paramList. */
        public paramList: string[];

        /**
         * Creates a new NewsFeed instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NewsFeed instance
         */
        public static create(properties?: data.INewsFeed): data.NewsFeed;

        /**
         * Encodes the specified NewsFeed message. Does not implicitly {@link data.NewsFeed.verify|verify} messages.
         * @param message NewsFeed message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.INewsFeed, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NewsFeed message, length delimited. Does not implicitly {@link data.NewsFeed.verify|verify} messages.
         * @param message NewsFeed message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.INewsFeed, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NewsFeed message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NewsFeed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.NewsFeed;

        /**
         * Decodes a NewsFeed message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NewsFeed
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.NewsFeed;

        /**
         * Verifies a NewsFeed message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NewsFeed message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NewsFeed
         */
        public static fromObject(object: { [k: string]: any }): data.NewsFeed;

        /**
         * Creates a plain object from a NewsFeed message. Also converts values to other types if specified.
         * @param message NewsFeed
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.NewsFeed, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NewsFeed to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionHero. */
    interface IFactionExpeditionHero {

        /** FactionExpeditionHero HeroIDList */
        HeroIDList?: (number[]|null);

        /** FactionExpeditionHero UrgeCount */
        UrgeCount?: (number|null);

        /** FactionExpeditionHero Power */
        Power?: (number|Long|null);
    }

    /** Represents a FactionExpeditionHero. */
    class FactionExpeditionHero implements IFactionExpeditionHero {

        /**
         * Constructs a new FactionExpeditionHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionExpeditionHero);

        /** FactionExpeditionHero HeroIDList. */
        public HeroIDList: number[];

        /** FactionExpeditionHero UrgeCount. */
        public UrgeCount: number;

        /** FactionExpeditionHero Power. */
        public Power: (number|Long);

        /**
         * Creates a new FactionExpeditionHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionHero instance
         */
        public static create(properties?: data.IFactionExpeditionHero): data.FactionExpeditionHero;

        /**
         * Encodes the specified FactionExpeditionHero message. Does not implicitly {@link data.FactionExpeditionHero.verify|verify} messages.
         * @param message FactionExpeditionHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionExpeditionHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionHero message, length delimited. Does not implicitly {@link data.FactionExpeditionHero.verify|verify} messages.
         * @param message FactionExpeditionHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionExpeditionHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionExpeditionHero;

        /**
         * Decodes a FactionExpeditionHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionExpeditionHero;

        /**
         * Verifies a FactionExpeditionHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionHero
         */
        public static fromObject(object: { [k: string]: any }): data.FactionExpeditionHero;

        /**
         * Creates a plain object from a FactionExpeditionHero message. Also converts values to other types if specified.
         * @param message FactionExpeditionHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionExpeditionHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionOrderInfo. */
    interface IFactionExpeditionOrderInfo {

        /** FactionExpeditionOrderInfo IsWin */
        IsWin?: (boolean|null);

        /** FactionExpeditionOrderInfo JoinUserIDMap */
        JoinUserIDMap?: ({ [k: string]: boolean }|null);

        /** FactionExpeditionOrderInfo ReceiveJoinRewardMap */
        ReceiveJoinRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a FactionExpeditionOrderInfo. */
    class FactionExpeditionOrderInfo implements IFactionExpeditionOrderInfo {

        /**
         * Constructs a new FactionExpeditionOrderInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionExpeditionOrderInfo);

        /** FactionExpeditionOrderInfo IsWin. */
        public IsWin: boolean;

        /** FactionExpeditionOrderInfo JoinUserIDMap. */
        public JoinUserIDMap: { [k: string]: boolean };

        /** FactionExpeditionOrderInfo ReceiveJoinRewardMap. */
        public ReceiveJoinRewardMap: { [k: string]: boolean };

        /**
         * Creates a new FactionExpeditionOrderInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionOrderInfo instance
         */
        public static create(properties?: data.IFactionExpeditionOrderInfo): data.FactionExpeditionOrderInfo;

        /**
         * Encodes the specified FactionExpeditionOrderInfo message. Does not implicitly {@link data.FactionExpeditionOrderInfo.verify|verify} messages.
         * @param message FactionExpeditionOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionExpeditionOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionOrderInfo message, length delimited. Does not implicitly {@link data.FactionExpeditionOrderInfo.verify|verify} messages.
         * @param message FactionExpeditionOrderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionExpeditionOrderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionOrderInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionExpeditionOrderInfo;

        /**
         * Decodes a FactionExpeditionOrderInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionOrderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionExpeditionOrderInfo;

        /**
         * Verifies a FactionExpeditionOrderInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionOrderInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionOrderInfo
         */
        public static fromObject(object: { [k: string]: any }): data.FactionExpeditionOrderInfo;

        /**
         * Creates a plain object from a FactionExpeditionOrderInfo message. Also converts values to other types if specified.
         * @param message FactionExpeditionOrderInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionExpeditionOrderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionOrderInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionOrderResult. */
    interface IFactionExpeditionOrderResult {

        /** FactionExpeditionOrderResult FactionExpeditionOrderInfoList */
        FactionExpeditionOrderInfoList?: (data.IFactionExpeditionOrderInfo[]|null);
    }

    /** Represents a FactionExpeditionOrderResult. */
    class FactionExpeditionOrderResult implements IFactionExpeditionOrderResult {

        /**
         * Constructs a new FactionExpeditionOrderResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionExpeditionOrderResult);

        /** FactionExpeditionOrderResult FactionExpeditionOrderInfoList. */
        public FactionExpeditionOrderInfoList: data.IFactionExpeditionOrderInfo[];

        /**
         * Creates a new FactionExpeditionOrderResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionOrderResult instance
         */
        public static create(properties?: data.IFactionExpeditionOrderResult): data.FactionExpeditionOrderResult;

        /**
         * Encodes the specified FactionExpeditionOrderResult message. Does not implicitly {@link data.FactionExpeditionOrderResult.verify|verify} messages.
         * @param message FactionExpeditionOrderResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionExpeditionOrderResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionOrderResult message, length delimited. Does not implicitly {@link data.FactionExpeditionOrderResult.verify|verify} messages.
         * @param message FactionExpeditionOrderResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionExpeditionOrderResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionOrderResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionOrderResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionExpeditionOrderResult;

        /**
         * Decodes a FactionExpeditionOrderResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionOrderResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionExpeditionOrderResult;

        /**
         * Verifies a FactionExpeditionOrderResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionOrderResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionOrderResult
         */
        public static fromObject(object: { [k: string]: any }): data.FactionExpeditionOrderResult;

        /**
         * Creates a plain object from a FactionExpeditionOrderResult message. Also converts values to other types if specified.
         * @param message FactionExpeditionOrderResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionExpeditionOrderResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionOrderResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionOrderWinReward. */
    interface IFactionExpeditionOrderWinReward {

        /** FactionExpeditionOrderWinReward ReceiveWinRewardMap */
        ReceiveWinRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a FactionExpeditionOrderWinReward. */
    class FactionExpeditionOrderWinReward implements IFactionExpeditionOrderWinReward {

        /**
         * Constructs a new FactionExpeditionOrderWinReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionExpeditionOrderWinReward);

        /** FactionExpeditionOrderWinReward ReceiveWinRewardMap. */
        public ReceiveWinRewardMap: { [k: string]: boolean };

        /**
         * Creates a new FactionExpeditionOrderWinReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionOrderWinReward instance
         */
        public static create(properties?: data.IFactionExpeditionOrderWinReward): data.FactionExpeditionOrderWinReward;

        /**
         * Encodes the specified FactionExpeditionOrderWinReward message. Does not implicitly {@link data.FactionExpeditionOrderWinReward.verify|verify} messages.
         * @param message FactionExpeditionOrderWinReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionExpeditionOrderWinReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionOrderWinReward message, length delimited. Does not implicitly {@link data.FactionExpeditionOrderWinReward.verify|verify} messages.
         * @param message FactionExpeditionOrderWinReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionExpeditionOrderWinReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionOrderWinReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionOrderWinReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionExpeditionOrderWinReward;

        /**
         * Decodes a FactionExpeditionOrderWinReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionOrderWinReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionExpeditionOrderWinReward;

        /**
         * Verifies a FactionExpeditionOrderWinReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionOrderWinReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionOrderWinReward
         */
        public static fromObject(object: { [k: string]: any }): data.FactionExpeditionOrderWinReward;

        /**
         * Creates a plain object from a FactionExpeditionOrderWinReward message. Also converts values to other types if specified.
         * @param message FactionExpeditionOrderWinReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionExpeditionOrderWinReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionOrderWinReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionAccount. */
    interface IFactionAccount {

        /** FactionAccount ID */
        ID?: (number|Long|null);

        /** FactionAccount Name */
        Name?: (string|null);

        /** FactionAccount Exp */
        Exp?: (number|Long|null);

        /** FactionAccount PresidentUserID */
        PresidentUserID?: (string|null);
    }

    /** Represents a FactionAccount. */
    class FactionAccount implements IFactionAccount {

        /**
         * Constructs a new FactionAccount.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionAccount);

        /** FactionAccount ID. */
        public ID: (number|Long);

        /** FactionAccount Name. */
        public Name: string;

        /** FactionAccount Exp. */
        public Exp: (number|Long);

        /** FactionAccount PresidentUserID. */
        public PresidentUserID: string;

        /**
         * Creates a new FactionAccount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionAccount instance
         */
        public static create(properties?: data.IFactionAccount): data.FactionAccount;

        /**
         * Encodes the specified FactionAccount message. Does not implicitly {@link data.FactionAccount.verify|verify} messages.
         * @param message FactionAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionAccount message, length delimited. Does not implicitly {@link data.FactionAccount.verify|verify} messages.
         * @param message FactionAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionAccount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionAccount;

        /**
         * Decodes a FactionAccount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionAccount;

        /**
         * Verifies a FactionAccount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionAccount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionAccount
         */
        public static fromObject(object: { [k: string]: any }): data.FactionAccount;

        /**
         * Creates a plain object from a FactionAccount message. Also converts values to other types if specified.
         * @param message FactionAccount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionAccount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSundry. */
    interface IFactionSundry {

        /** FactionSundry FactionMemberMap */
        FactionMemberMap?: ({ [k: string]: data.IFactionMember }|null);

        /** FactionSundry VicePresidentUserIDList */
        VicePresidentUserIDList?: (string[]|null);

        /** FactionSundry BulletinID */
        BulletinID?: (number|null);

        /** FactionSundry BulletinLock */
        BulletinLock?: (number|Long|null);

        /** FactionSundry BulletinText */
        BulletinText?: (string|null);

        /** FactionSundry NewsFeedList */
        NewsFeedList?: (data.INewsFeed[]|null);

        /** FactionSundry IsApply */
        IsApply?: (boolean|null);

        /** FactionSundry IsAutoAccept */
        IsAutoAccept?: (boolean|null);

        /** FactionSundry AutoAcceptLevel */
        AutoAcceptLevel?: (number|null);

        /** FactionSundry FactionApplyMemberList */
        FactionApplyMemberList?: (data.IFactionApplyMember[]|null);
    }

    /** Represents a FactionSundry. */
    class FactionSundry implements IFactionSundry {

        /**
         * Constructs a new FactionSundry.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionSundry);

        /** FactionSundry FactionMemberMap. */
        public FactionMemberMap: { [k: string]: data.IFactionMember };

        /** FactionSundry VicePresidentUserIDList. */
        public VicePresidentUserIDList: string[];

        /** FactionSundry BulletinID. */
        public BulletinID: number;

        /** FactionSundry BulletinLock. */
        public BulletinLock: (number|Long);

        /** FactionSundry BulletinText. */
        public BulletinText: string;

        /** FactionSundry NewsFeedList. */
        public NewsFeedList: data.INewsFeed[];

        /** FactionSundry IsApply. */
        public IsApply: boolean;

        /** FactionSundry IsAutoAccept. */
        public IsAutoAccept: boolean;

        /** FactionSundry AutoAcceptLevel. */
        public AutoAcceptLevel: number;

        /** FactionSundry FactionApplyMemberList. */
        public FactionApplyMemberList: data.IFactionApplyMember[];

        /**
         * Creates a new FactionSundry instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSundry instance
         */
        public static create(properties?: data.IFactionSundry): data.FactionSundry;

        /**
         * Encodes the specified FactionSundry message. Does not implicitly {@link data.FactionSundry.verify|verify} messages.
         * @param message FactionSundry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionSundry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSundry message, length delimited. Does not implicitly {@link data.FactionSundry.verify|verify} messages.
         * @param message FactionSundry message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionSundry, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSundry message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSundry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionSundry;

        /**
         * Decodes a FactionSundry message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSundry
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionSundry;

        /**
         * Verifies a FactionSundry message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSundry message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSundry
         */
        public static fromObject(object: { [k: string]: any }): data.FactionSundry;

        /**
         * Creates a plain object from a FactionSundry message. Also converts values to other types if specified.
         * @param message FactionSundry
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionSundry, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSundry to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpedition. */
    interface IFactionExpedition {

        /** FactionExpedition RefreshTime */
        RefreshTime?: (number|Long|null);

        /** FactionExpedition Level */
        Level?: (number|null);

        /** FactionExpedition Order */
        Order?: (number|null);

        /** FactionExpedition FactionExpeditionHeroList */
        FactionExpeditionHeroList?: ({ [k: string]: data.IFactionExpeditionHero }|null);

        /** FactionExpedition FactionCacheMemberMap */
        FactionCacheMemberMap?: ({ [k: string]: data.IFactionMember }|null);

        /** FactionExpedition FactionExpeditionOrderResultMap */
        FactionExpeditionOrderResultMap?: ({ [k: string]: data.IFactionExpeditionOrderResult }|null);

        /** FactionExpedition FactionExpeditionOrderWinRewardMap */
        FactionExpeditionOrderWinRewardMap?: ({ [k: string]: data.IFactionExpeditionOrderWinReward }|null);
    }

    /** Represents a FactionExpedition. */
    class FactionExpedition implements IFactionExpedition {

        /**
         * Constructs a new FactionExpedition.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionExpedition);

        /** FactionExpedition RefreshTime. */
        public RefreshTime: (number|Long);

        /** FactionExpedition Level. */
        public Level: number;

        /** FactionExpedition Order. */
        public Order: number;

        /** FactionExpedition FactionExpeditionHeroList. */
        public FactionExpeditionHeroList: { [k: string]: data.IFactionExpeditionHero };

        /** FactionExpedition FactionCacheMemberMap. */
        public FactionCacheMemberMap: { [k: string]: data.IFactionMember };

        /** FactionExpedition FactionExpeditionOrderResultMap. */
        public FactionExpeditionOrderResultMap: { [k: string]: data.IFactionExpeditionOrderResult };

        /** FactionExpedition FactionExpeditionOrderWinRewardMap. */
        public FactionExpeditionOrderWinRewardMap: { [k: string]: data.IFactionExpeditionOrderWinReward };

        /**
         * Creates a new FactionExpedition instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpedition instance
         */
        public static create(properties?: data.IFactionExpedition): data.FactionExpedition;

        /**
         * Encodes the specified FactionExpedition message. Does not implicitly {@link data.FactionExpedition.verify|verify} messages.
         * @param message FactionExpedition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionExpedition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpedition message, length delimited. Does not implicitly {@link data.FactionExpedition.verify|verify} messages.
         * @param message FactionExpedition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionExpedition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpedition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpedition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionExpedition;

        /**
         * Decodes a FactionExpedition message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpedition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionExpedition;

        /**
         * Verifies a FactionExpedition message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpedition message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpedition
         */
        public static fromObject(object: { [k: string]: any }): data.FactionExpedition;

        /**
         * Creates a plain object from a FactionExpedition message. Also converts values to other types if specified.
         * @param message FactionExpedition
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionExpedition, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpedition to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Faction. */
    interface IFaction {

        /** Faction Account */
        Account?: (data.IFactionAccount|null);

        /** Faction Sundry */
        Sundry?: (data.IFactionSundry|null);

        /** Faction Expedition */
        Expedition?: (data.IFactionExpedition|null);
    }

    /** Represents a Faction. */
    class Faction implements IFaction {

        /**
         * Constructs a new Faction.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFaction);

        /** Faction Account. */
        public Account?: (data.IFactionAccount|null);

        /** Faction Sundry. */
        public Sundry?: (data.IFactionSundry|null);

        /** Faction Expedition. */
        public Expedition?: (data.IFactionExpedition|null);

        /**
         * Creates a new Faction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Faction instance
         */
        public static create(properties?: data.IFaction): data.Faction;

        /**
         * Encodes the specified Faction message. Does not implicitly {@link data.Faction.verify|verify} messages.
         * @param message Faction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Faction message, length delimited. Does not implicitly {@link data.Faction.verify|verify} messages.
         * @param message Faction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFaction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Faction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Faction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.Faction;

        /**
         * Decodes a Faction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Faction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.Faction;

        /**
         * Verifies a Faction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Faction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Faction
         */
        public static fromObject(object: { [k: string]: any }): data.Faction;

        /**
         * Creates a plain object from a Faction message. Also converts values to other types if specified.
         * @param message Faction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.Faction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Faction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionData. */
    interface IFactionData {

        /** FactionData FactionID */
        FactionID?: (number|Long|null);

        /** FactionData AllowApplyTime */
        AllowApplyTime?: (number|Long|null);

        /** FactionData IsSignIn */
        IsSignIn?: (boolean|null);

        /** FactionData DonateCount */
        DonateCount?: (number|null);

        /** FactionData ExpeditionFreeUrgeCount */
        ExpeditionFreeUrgeCount?: (number|null);
    }

    /** Represents a FactionData. */
    class FactionData implements IFactionData {

        /**
         * Constructs a new FactionData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFactionData);

        /** FactionData FactionID. */
        public FactionID: (number|Long);

        /** FactionData AllowApplyTime. */
        public AllowApplyTime: (number|Long);

        /** FactionData IsSignIn. */
        public IsSignIn: boolean;

        /** FactionData DonateCount. */
        public DonateCount: number;

        /** FactionData ExpeditionFreeUrgeCount. */
        public ExpeditionFreeUrgeCount: number;

        /**
         * Creates a new FactionData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionData instance
         */
        public static create(properties?: data.IFactionData): data.FactionData;

        /**
         * Encodes the specified FactionData message. Does not implicitly {@link data.FactionData.verify|verify} messages.
         * @param message FactionData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFactionData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionData message, length delimited. Does not implicitly {@link data.FactionData.verify|verify} messages.
         * @param message FactionData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFactionData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FactionData;

        /**
         * Decodes a FactionData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FactionData;

        /**
         * Verifies a FactionData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionData
         */
        public static fromObject(object: { [k: string]: any }): data.FactionData;

        /**
         * Creates a plain object from a FactionData message. Also converts values to other types if specified.
         * @param message FactionData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FactionData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OtherData. */
    interface IOtherData {

        /** OtherData UserID */
        UserID?: (string|null);

        /** OtherData Name */
        Name?: (string|null);

        /** OtherData HeadID */
        HeadID?: (number|null);

        /** OtherData HeadFrameID */
        HeadFrameID?: (number|null);

        /** OtherData Exp */
        Exp?: (number|null);
    }

    /** Represents an OtherData. */
    class OtherData implements IOtherData {

        /**
         * Constructs a new OtherData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IOtherData);

        /** OtherData UserID. */
        public UserID: string;

        /** OtherData Name. */
        public Name: string;

        /** OtherData HeadID. */
        public HeadID: number;

        /** OtherData HeadFrameID. */
        public HeadFrameID: number;

        /** OtherData Exp. */
        public Exp: number;

        /**
         * Creates a new OtherData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OtherData instance
         */
        public static create(properties?: data.IOtherData): data.OtherData;

        /**
         * Encodes the specified OtherData message. Does not implicitly {@link data.OtherData.verify|verify} messages.
         * @param message OtherData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IOtherData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OtherData message, length delimited. Does not implicitly {@link data.OtherData.verify|verify} messages.
         * @param message OtherData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IOtherData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OtherData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OtherData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.OtherData;

        /**
         * Decodes an OtherData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OtherData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.OtherData;

        /**
         * Verifies an OtherData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OtherData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OtherData
         */
        public static fromObject(object: { [k: string]: any }): data.OtherData;

        /**
         * Creates a plain object from an OtherData message. Also converts values to other types if specified.
         * @param message OtherData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.OtherData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OtherData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FriendData. */
    interface IFriendData {

        /** FriendData BlockedList */
        BlockedList?: (data.IOtherData[]|null);
    }

    /** Represents a FriendData. */
    class FriendData implements IFriendData {

        /**
         * Constructs a new FriendData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFriendData);

        /** FriendData BlockedList. */
        public BlockedList: data.IOtherData[];

        /**
         * Creates a new FriendData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FriendData instance
         */
        public static create(properties?: data.IFriendData): data.FriendData;

        /**
         * Encodes the specified FriendData message. Does not implicitly {@link data.FriendData.verify|verify} messages.
         * @param message FriendData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFriendData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FriendData message, length delimited. Does not implicitly {@link data.FriendData.verify|verify} messages.
         * @param message FriendData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFriendData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FriendData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FriendData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FriendData;

        /**
         * Decodes a FriendData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FriendData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FriendData;

        /**
         * Verifies a FriendData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FriendData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FriendData
         */
        public static fromObject(object: { [k: string]: any }): data.FriendData;

        /**
         * Creates a plain object from a FriendData message. Also converts values to other types if specified.
         * @param message FriendData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FriendData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FriendData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GuideData. */
    interface IGuideData {

        /** GuideData FinishGuideIds */
        FinishGuideIds?: (number[]|null);
    }

    /** Represents a GuideData. */
    class GuideData implements IGuideData {

        /**
         * Constructs a new GuideData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IGuideData);

        /** GuideData FinishGuideIds. */
        public FinishGuideIds: number[];

        /**
         * Creates a new GuideData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GuideData instance
         */
        public static create(properties?: data.IGuideData): data.GuideData;

        /**
         * Encodes the specified GuideData message. Does not implicitly {@link data.GuideData.verify|verify} messages.
         * @param message GuideData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IGuideData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GuideData message, length delimited. Does not implicitly {@link data.GuideData.verify|verify} messages.
         * @param message GuideData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IGuideData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GuideData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GuideData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.GuideData;

        /**
         * Decodes a GuideData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GuideData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.GuideData;

        /**
         * Verifies a GuideData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GuideData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GuideData
         */
        public static fromObject(object: { [k: string]: any }): data.GuideData;

        /**
         * Creates a plain object from a GuideData message. Also converts values to other types if specified.
         * @param message GuideData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.GuideData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GuideData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadSkillData. */
    interface ILeadSkillData {

        /** LeadSkillData LevelMap */
        LevelMap?: ({ [k: string]: number }|null);
    }

    /** Represents a LeadSkillData. */
    class LeadSkillData implements ILeadSkillData {

        /**
         * Constructs a new LeadSkillData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ILeadSkillData);

        /** LeadSkillData LevelMap. */
        public LevelMap: { [k: string]: number };

        /**
         * Creates a new LeadSkillData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadSkillData instance
         */
        public static create(properties?: data.ILeadSkillData): data.LeadSkillData;

        /**
         * Encodes the specified LeadSkillData message. Does not implicitly {@link data.LeadSkillData.verify|verify} messages.
         * @param message LeadSkillData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ILeadSkillData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadSkillData message, length delimited. Does not implicitly {@link data.LeadSkillData.verify|verify} messages.
         * @param message LeadSkillData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ILeadSkillData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadSkillData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadSkillData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.LeadSkillData;

        /**
         * Decodes a LeadSkillData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadSkillData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.LeadSkillData;

        /**
         * Verifies a LeadSkillData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadSkillData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadSkillData
         */
        public static fromObject(object: { [k: string]: any }): data.LeadSkillData;

        /**
         * Creates a plain object from a LeadSkillData message. Also converts values to other types if specified.
         * @param message LeadSkillData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.LeadSkillData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadSkillData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadGraspLevel. */
    interface ILeadGraspLevel {

        /** LeadGraspLevel Level */
        Level?: (number|null);

        /** LeadGraspLevel Count */
        Count?: (number|null);
    }

    /** Represents a LeadGraspLevel. */
    class LeadGraspLevel implements ILeadGraspLevel {

        /**
         * Constructs a new LeadGraspLevel.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ILeadGraspLevel);

        /** LeadGraspLevel Level. */
        public Level: number;

        /** LeadGraspLevel Count. */
        public Count: number;

        /**
         * Creates a new LeadGraspLevel instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadGraspLevel instance
         */
        public static create(properties?: data.ILeadGraspLevel): data.LeadGraspLevel;

        /**
         * Encodes the specified LeadGraspLevel message. Does not implicitly {@link data.LeadGraspLevel.verify|verify} messages.
         * @param message LeadGraspLevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ILeadGraspLevel, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadGraspLevel message, length delimited. Does not implicitly {@link data.LeadGraspLevel.verify|verify} messages.
         * @param message LeadGraspLevel message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ILeadGraspLevel, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadGraspLevel message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadGraspLevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.LeadGraspLevel;

        /**
         * Decodes a LeadGraspLevel message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadGraspLevel
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.LeadGraspLevel;

        /**
         * Verifies a LeadGraspLevel message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadGraspLevel message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadGraspLevel
         */
        public static fromObject(object: { [k: string]: any }): data.LeadGraspLevel;

        /**
         * Creates a plain object from a LeadGraspLevel message. Also converts values to other types if specified.
         * @param message LeadGraspLevel
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.LeadGraspLevel, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadGraspLevel to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadGraspData. */
    interface ILeadGraspData {

        /** LeadGraspData LevelMap */
        LevelMap?: ({ [k: string]: data.ILeadGraspLevel }|null);
    }

    /** Represents a LeadGraspData. */
    class LeadGraspData implements ILeadGraspData {

        /**
         * Constructs a new LeadGraspData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ILeadGraspData);

        /** LeadGraspData LevelMap. */
        public LevelMap: { [k: string]: data.ILeadGraspLevel };

        /**
         * Creates a new LeadGraspData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadGraspData instance
         */
        public static create(properties?: data.ILeadGraspData): data.LeadGraspData;

        /**
         * Encodes the specified LeadGraspData message. Does not implicitly {@link data.LeadGraspData.verify|verify} messages.
         * @param message LeadGraspData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ILeadGraspData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadGraspData message, length delimited. Does not implicitly {@link data.LeadGraspData.verify|verify} messages.
         * @param message LeadGraspData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ILeadGraspData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadGraspData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadGraspData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.LeadGraspData;

        /**
         * Decodes a LeadGraspData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadGraspData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.LeadGraspData;

        /**
         * Verifies a LeadGraspData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadGraspData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadGraspData
         */
        public static fromObject(object: { [k: string]: any }): data.LeadGraspData;

        /**
         * Creates a plain object from a LeadGraspData message. Also converts values to other types if specified.
         * @param message LeadGraspData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.LeadGraspData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadGraspData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadData. */
    interface ILeadData {

        /** LeadData LeadSkillData */
        LeadSkillData?: (data.ILeadSkillData|null);

        /** LeadData LeadGraspData */
        LeadGraspData?: (data.ILeadGraspData|null);
    }

    /** Represents a LeadData. */
    class LeadData implements ILeadData {

        /**
         * Constructs a new LeadData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ILeadData);

        /** LeadData LeadSkillData. */
        public LeadSkillData?: (data.ILeadSkillData|null);

        /** LeadData LeadGraspData. */
        public LeadGraspData?: (data.ILeadGraspData|null);

        /**
         * Creates a new LeadData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadData instance
         */
        public static create(properties?: data.ILeadData): data.LeadData;

        /**
         * Encodes the specified LeadData message. Does not implicitly {@link data.LeadData.verify|verify} messages.
         * @param message LeadData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ILeadData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadData message, length delimited. Does not implicitly {@link data.LeadData.verify|verify} messages.
         * @param message LeadData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ILeadData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.LeadData;

        /**
         * Decodes a LeadData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.LeadData;

        /**
         * Verifies a LeadData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadData
         */
        public static fromObject(object: { [k: string]: any }): data.LeadData;

        /**
         * Creates a plain object from a LeadData message. Also converts values to other types if specified.
         * @param message LeadData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.LeadData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MailItem. */
    interface IMailItem {

        /** MailItem Seq */
        Seq?: (number|Long|null);

        /** MailItem Tag */
        Tag?: (number|null);

        /** MailItem ReceivedTime */
        ReceivedTime?: (number|Long|null);

        /** MailItem ExpireTime */
        ExpireTime?: (number|Long|null);

        /** MailItem Readed */
        Readed?: (boolean|null);

        /** MailItem TakenOut */
        TakenOut?: (boolean|null);

        /** MailItem Title */
        Title?: (string|null);

        /** MailItem Desc */
        Desc?: (string|null);

        /** MailItem Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a MailItem. */
    class MailItem implements IMailItem {

        /**
         * Constructs a new MailItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMailItem);

        /** MailItem Seq. */
        public Seq: (number|Long);

        /** MailItem Tag. */
        public Tag: number;

        /** MailItem ReceivedTime. */
        public ReceivedTime: (number|Long);

        /** MailItem ExpireTime. */
        public ExpireTime: (number|Long);

        /** MailItem Readed. */
        public Readed: boolean;

        /** MailItem TakenOut. */
        public TakenOut: boolean;

        /** MailItem Title. */
        public Title: string;

        /** MailItem Desc. */
        public Desc: string;

        /** MailItem Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new MailItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailItem instance
         */
        public static create(properties?: data.IMailItem): data.MailItem;

        /**
         * Encodes the specified MailItem message. Does not implicitly {@link data.MailItem.verify|verify} messages.
         * @param message MailItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMailItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MailItem message, length delimited. Does not implicitly {@link data.MailItem.verify|verify} messages.
         * @param message MailItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMailItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MailItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MailItem;

        /**
         * Decodes a MailItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MailItem;

        /**
         * Verifies a MailItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MailItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MailItem
         */
        public static fromObject(object: { [k: string]: any }): data.MailItem;

        /**
         * Creates a plain object from a MailItem message. Also converts values to other types if specified.
         * @param message MailItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MailItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MailItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MailData. */
    interface IMailData {

        /** MailData Items */
        Items?: ({ [k: string]: data.IMailItem }|null);

        /** MailData SeqCounter */
        SeqCounter?: (number|Long|null);

        /** MailData PrizeMailRecved */
        PrizeMailRecved?: ({ [k: string]: boolean }|null);
    }

    /** Represents a MailData. */
    class MailData implements IMailData {

        /**
         * Constructs a new MailData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IMailData);

        /** MailData Items. */
        public Items: { [k: string]: data.IMailItem };

        /** MailData SeqCounter. */
        public SeqCounter: (number|Long);

        /** MailData PrizeMailRecved. */
        public PrizeMailRecved: { [k: string]: boolean };

        /**
         * Creates a new MailData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MailData instance
         */
        public static create(properties?: data.IMailData): data.MailData;

        /**
         * Encodes the specified MailData message. Does not implicitly {@link data.MailData.verify|verify} messages.
         * @param message MailData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IMailData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MailData message, length delimited. Does not implicitly {@link data.MailData.verify|verify} messages.
         * @param message MailData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IMailData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MailData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MailData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.MailData;

        /**
         * Decodes a MailData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MailData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.MailData;

        /**
         * Verifies a MailData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MailData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MailData
         */
        public static fromObject(object: { [k: string]: any }): data.MailData;

        /**
         * Creates a plain object from a MailData message. Also converts values to other types if specified.
         * @param message MailData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.MailData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MailData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FirstOpenGameServerData. */
    interface IFirstOpenGameServerData {

        /** FirstOpenGameServerData ServerID */
        ServerID?: (number|null);

        /** FirstOpenGameServerData OpenServerTime */
        OpenServerTime?: (number|Long|null);

        /** FirstOpenGameServerData TrialMiracleDoorUnit */
        TrialMiracleDoorUnit?: (data.ITrialMiracleDoor|null);
    }

    /** Represents a FirstOpenGameServerData. */
    class FirstOpenGameServerData implements IFirstOpenGameServerData {

        /**
         * Constructs a new FirstOpenGameServerData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFirstOpenGameServerData);

        /** FirstOpenGameServerData ServerID. */
        public ServerID: number;

        /** FirstOpenGameServerData OpenServerTime. */
        public OpenServerTime: (number|Long);

        /** FirstOpenGameServerData TrialMiracleDoorUnit. */
        public TrialMiracleDoorUnit?: (data.ITrialMiracleDoor|null);

        /**
         * Creates a new FirstOpenGameServerData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FirstOpenGameServerData instance
         */
        public static create(properties?: data.IFirstOpenGameServerData): data.FirstOpenGameServerData;

        /**
         * Encodes the specified FirstOpenGameServerData message. Does not implicitly {@link data.FirstOpenGameServerData.verify|verify} messages.
         * @param message FirstOpenGameServerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFirstOpenGameServerData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FirstOpenGameServerData message, length delimited. Does not implicitly {@link data.FirstOpenGameServerData.verify|verify} messages.
         * @param message FirstOpenGameServerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFirstOpenGameServerData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FirstOpenGameServerData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FirstOpenGameServerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FirstOpenGameServerData;

        /**
         * Decodes a FirstOpenGameServerData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FirstOpenGameServerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FirstOpenGameServerData;

        /**
         * Verifies a FirstOpenGameServerData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FirstOpenGameServerData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FirstOpenGameServerData
         */
        public static fromObject(object: { [k: string]: any }): data.FirstOpenGameServerData;

        /**
         * Creates a plain object from a FirstOpenGameServerData message. Also converts values to other types if specified.
         * @param message FirstOpenGameServerData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FirstOpenGameServerData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FirstOpenGameServerData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExchangeTeam. */
    interface IExchangeTeam {

        /** ExchangeTeam ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: string }|null);
    }

    /** Represents an ExchangeTeam. */
    class ExchangeTeam implements IExchangeTeam {

        /**
         * Constructs a new ExchangeTeam.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IExchangeTeam);

        /** ExchangeTeam ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: string };

        /**
         * Creates a new ExchangeTeam instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeTeam instance
         */
        public static create(properties?: data.IExchangeTeam): data.ExchangeTeam;

        /**
         * Encodes the specified ExchangeTeam message. Does not implicitly {@link data.ExchangeTeam.verify|verify} messages.
         * @param message ExchangeTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IExchangeTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExchangeTeam message, length delimited. Does not implicitly {@link data.ExchangeTeam.verify|verify} messages.
         * @param message ExchangeTeam message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IExchangeTeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExchangeTeam message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ExchangeTeam;

        /**
         * Decodes an ExchangeTeam message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeTeam
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ExchangeTeam;

        /**
         * Verifies an ExchangeTeam message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExchangeTeam message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExchangeTeam
         */
        public static fromObject(object: { [k: string]: any }): data.ExchangeTeam;

        /**
         * Creates a plain object from an ExchangeTeam message. Also converts values to other types if specified.
         * @param message ExchangeTeam
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ExchangeTeam, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExchangeTeam to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExchangeCodeData. */
    interface IExchangeCodeData {

        /** ExchangeCodeData ExchangeTeamMap */
        ExchangeTeamMap?: ({ [k: string]: data.IExchangeTeam }|null);
    }

    /** Represents an ExchangeCodeData. */
    class ExchangeCodeData implements IExchangeCodeData {

        /**
         * Constructs a new ExchangeCodeData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IExchangeCodeData);

        /** ExchangeCodeData ExchangeTeamMap. */
        public ExchangeTeamMap: { [k: string]: data.IExchangeTeam };

        /**
         * Creates a new ExchangeCodeData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeCodeData instance
         */
        public static create(properties?: data.IExchangeCodeData): data.ExchangeCodeData;

        /**
         * Encodes the specified ExchangeCodeData message. Does not implicitly {@link data.ExchangeCodeData.verify|verify} messages.
         * @param message ExchangeCodeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IExchangeCodeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExchangeCodeData message, length delimited. Does not implicitly {@link data.ExchangeCodeData.verify|verify} messages.
         * @param message ExchangeCodeData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IExchangeCodeData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExchangeCodeData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeCodeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ExchangeCodeData;

        /**
         * Decodes an ExchangeCodeData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeCodeData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ExchangeCodeData;

        /**
         * Verifies an ExchangeCodeData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExchangeCodeData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExchangeCodeData
         */
        public static fromObject(object: { [k: string]: any }): data.ExchangeCodeData;

        /**
         * Creates a plain object from an ExchangeCodeData message. Also converts values to other types if specified.
         * @param message ExchangeCodeData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ExchangeCodeData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExchangeCodeData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityRechargeRebateData. */
    interface IActivityRechargeRebateData {

        /** ActivityRechargeRebateData RechargeMap */
        RechargeMap?: ({ [k: string]: number }|null);
    }

    /** Represents an ActivityRechargeRebateData. */
    class ActivityRechargeRebateData implements IActivityRechargeRebateData {

        /**
         * Constructs a new ActivityRechargeRebateData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IActivityRechargeRebateData);

        /** ActivityRechargeRebateData RechargeMap. */
        public RechargeMap: { [k: string]: number };

        /**
         * Creates a new ActivityRechargeRebateData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityRechargeRebateData instance
         */
        public static create(properties?: data.IActivityRechargeRebateData): data.ActivityRechargeRebateData;

        /**
         * Encodes the specified ActivityRechargeRebateData message. Does not implicitly {@link data.ActivityRechargeRebateData.verify|verify} messages.
         * @param message ActivityRechargeRebateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IActivityRechargeRebateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityRechargeRebateData message, length delimited. Does not implicitly {@link data.ActivityRechargeRebateData.verify|verify} messages.
         * @param message ActivityRechargeRebateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IActivityRechargeRebateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityRechargeRebateData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityRechargeRebateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ActivityRechargeRebateData;

        /**
         * Decodes an ActivityRechargeRebateData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityRechargeRebateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ActivityRechargeRebateData;

        /**
         * Verifies an ActivityRechargeRebateData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityRechargeRebateData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityRechargeRebateData
         */
        public static fromObject(object: { [k: string]: any }): data.ActivityRechargeRebateData;

        /**
         * Creates a plain object from an ActivityRechargeRebateData message. Also converts values to other types if specified.
         * @param message ActivityRechargeRebateData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ActivityRechargeRebateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityRechargeRebateData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Product. */
    interface IProduct {

        /** Product ProductID */
        ProductID?: (number|null);

        /** Product EndTime */
        EndTime?: (number|null);
    }

    /** Represents a Product. */
    class Product implements IProduct {

        /**
         * Constructs a new Product.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IProduct);

        /** Product ProductID. */
        public ProductID: number;

        /** Product EndTime. */
        public EndTime: number;

        /**
         * Creates a new Product instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Product instance
         */
        public static create(properties?: data.IProduct): data.Product;

        /**
         * Encodes the specified Product message. Does not implicitly {@link data.Product.verify|verify} messages.
         * @param message Product message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IProduct, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Product message, length delimited. Does not implicitly {@link data.Product.verify|verify} messages.
         * @param message Product message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IProduct, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Product message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Product
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.Product;

        /**
         * Decodes a Product message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Product
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.Product;

        /**
         * Verifies a Product message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Product message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Product
         */
        public static fromObject(object: { [k: string]: any }): data.Product;

        /**
         * Creates a plain object from a Product message. Also converts values to other types if specified.
         * @param message Product
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.Product, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Product to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LessonRecord. */
    interface ILessonRecord {

        /** LessonRecord Past */
        Past?: (boolean|null);

        /** LessonRecord Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a LessonRecord. */
    class LessonRecord implements ILessonRecord {

        /**
         * Constructs a new LessonRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ILessonRecord);

        /** LessonRecord Past. */
        public Past: boolean;

        /** LessonRecord Heroes. */
        public Heroes: number[];

        /**
         * Creates a new LessonRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LessonRecord instance
         */
        public static create(properties?: data.ILessonRecord): data.LessonRecord;

        /**
         * Encodes the specified LessonRecord message. Does not implicitly {@link data.LessonRecord.verify|verify} messages.
         * @param message LessonRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ILessonRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LessonRecord message, length delimited. Does not implicitly {@link data.LessonRecord.verify|verify} messages.
         * @param message LessonRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ILessonRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LessonRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LessonRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.LessonRecord;

        /**
         * Decodes a LessonRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LessonRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.LessonRecord;

        /**
         * Verifies a LessonRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LessonRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LessonRecord
         */
        public static fromObject(object: { [k: string]: any }): data.LessonRecord;

        /**
         * Creates a plain object from a LessonRecord message. Also converts values to other types if specified.
         * @param message LessonRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.LessonRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LessonRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamInfo. */
    interface ITeamInfo {

        /** TeamInfo Index */
        Index?: (number|null);

        /** TeamInfo Heroes */
        Heroes?: ({ [k: string]: number }|null);

        /** TeamInfo Power */
        Power?: (number|Long|null);
    }

    /** Represents a TeamInfo. */
    class TeamInfo implements ITeamInfo {

        /**
         * Constructs a new TeamInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITeamInfo);

        /** TeamInfo Index. */
        public Index: number;

        /** TeamInfo Heroes. */
        public Heroes: { [k: string]: number };

        /** TeamInfo Power. */
        public Power: (number|Long);

        /**
         * Creates a new TeamInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamInfo instance
         */
        public static create(properties?: data.ITeamInfo): data.TeamInfo;

        /**
         * Encodes the specified TeamInfo message. Does not implicitly {@link data.TeamInfo.verify|verify} messages.
         * @param message TeamInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITeamInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamInfo message, length delimited. Does not implicitly {@link data.TeamInfo.verify|verify} messages.
         * @param message TeamInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITeamInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TeamInfo;

        /**
         * Decodes a TeamInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TeamInfo;

        /**
         * Verifies a TeamInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamInfo
         */
        public static fromObject(object: { [k: string]: any }): data.TeamInfo;

        /**
         * Creates a plain object from a TeamInfo message. Also converts values to other types if specified.
         * @param message TeamInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TeamInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FightCount. */
    interface IFightCount {

        /** FightCount RefreshTime */
        RefreshTime?: (number|Long|null);

        /** FightCount FightTimes */
        FightTimes?: (number|null);
    }

    /** Represents a FightCount. */
    class FightCount implements IFightCount {

        /**
         * Constructs a new FightCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFightCount);

        /** FightCount RefreshTime. */
        public RefreshTime: (number|Long);

        /** FightCount FightTimes. */
        public FightTimes: number;

        /**
         * Creates a new FightCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightCount instance
         */
        public static create(properties?: data.IFightCount): data.FightCount;

        /**
         * Encodes the specified FightCount message. Does not implicitly {@link data.FightCount.verify|verify} messages.
         * @param message FightCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFightCount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FightCount message, length delimited. Does not implicitly {@link data.FightCount.verify|verify} messages.
         * @param message FightCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFightCount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FightCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FightCount;

        /**
         * Decodes a FightCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FightCount;

        /**
         * Verifies a FightCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FightCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FightCount
         */
        public static fromObject(object: { [k: string]: any }): data.FightCount;

        /**
         * Creates a plain object from a FightCount message. Also converts values to other types if specified.
         * @param message FightCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FightCount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FightCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVEData. */
    interface IPVEData {

        /** PVEData Teams */
        Teams?: ({ [k: string]: data.ITeamInfo }|null);

        /** PVEData LessonRecords */
        LessonRecords?: ({ [k: string]: data.ILessonRecord }|null);

        /** PVEData DreamRecords */
        DreamRecords?: ({ [k: string]: data.ILessonRecord }|null);

        /** PVEData DailyRecords */
        DailyRecords?: ({ [k: string]: data.ILessonRecord }|null);

        /** PVEData RiseRoadRecords */
        RiseRoadRecords?: ({ [k: string]: data.ILessonRecord }|null);

        /** PVEData ChapterRewards */
        ChapterRewards?: ({ [k: string]: boolean }|null);

        /** PVEData DreamCount */
        DreamCount?: (data.IFightCount|null);

        /** PVEData MainSectionRewardMap */
        MainSectionRewardMap?: ({ [k: string]: boolean }|null);

        /** PVEData MainChapterRewardMap */
        MainChapterRewardMap?: ({ [k: string]: boolean }|null);

        /** PVEData Power */
        Power?: (number|Long|null);
    }

    /** Represents a PVEData. */
    class PVEData implements IPVEData {

        /**
         * Constructs a new PVEData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVEData);

        /** PVEData Teams. */
        public Teams: { [k: string]: data.ITeamInfo };

        /** PVEData LessonRecords. */
        public LessonRecords: { [k: string]: data.ILessonRecord };

        /** PVEData DreamRecords. */
        public DreamRecords: { [k: string]: data.ILessonRecord };

        /** PVEData DailyRecords. */
        public DailyRecords: { [k: string]: data.ILessonRecord };

        /** PVEData RiseRoadRecords. */
        public RiseRoadRecords: { [k: string]: data.ILessonRecord };

        /** PVEData ChapterRewards. */
        public ChapterRewards: { [k: string]: boolean };

        /** PVEData DreamCount. */
        public DreamCount?: (data.IFightCount|null);

        /** PVEData MainSectionRewardMap. */
        public MainSectionRewardMap: { [k: string]: boolean };

        /** PVEData MainChapterRewardMap. */
        public MainChapterRewardMap: { [k: string]: boolean };

        /** PVEData Power. */
        public Power: (number|Long);

        /**
         * Creates a new PVEData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVEData instance
         */
        public static create(properties?: data.IPVEData): data.PVEData;

        /**
         * Encodes the specified PVEData message. Does not implicitly {@link data.PVEData.verify|verify} messages.
         * @param message PVEData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVEData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVEData message, length delimited. Does not implicitly {@link data.PVEData.verify|verify} messages.
         * @param message PVEData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVEData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVEData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVEData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVEData;

        /**
         * Decodes a PVEData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVEData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVEData;

        /**
         * Verifies a PVEData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVEData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVEData
         */
        public static fromObject(object: { [k: string]: any }): data.PVEData;

        /**
         * Creates a plain object from a PVEData message. Also converts values to other types if specified.
         * @param message PVEData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVEData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVEData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPSpiritRankUser. */
    interface IPVPSpiritRankUser {

        /** PVPSpiritRankUser IsRobot */
        IsRobot?: (boolean|null);

        /** PVPSpiritRankUser UserID */
        UserID?: (string|null);

        /** PVPSpiritRankUser Name */
        Name?: (string|null);

        /** PVPSpiritRankUser HeadID */
        HeadID?: (number|null);

        /** PVPSpiritRankUser HeadFrameID */
        HeadFrameID?: (number|null);

        /** PVPSpiritRankUser Exp */
        Exp?: (number|null);

        /** PVPSpiritRankUser Power */
        Power?: (number|Long|null);

        /** PVPSpiritRankUser HeroUnitMap */
        HeroUnitMap?: ({ [k: string]: data.IBagUnit }|null);
    }

    /** Represents a PVPSpiritRankUser. */
    class PVPSpiritRankUser implements IPVPSpiritRankUser {

        /**
         * Constructs a new PVPSpiritRankUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPSpiritRankUser);

        /** PVPSpiritRankUser IsRobot. */
        public IsRobot: boolean;

        /** PVPSpiritRankUser UserID. */
        public UserID: string;

        /** PVPSpiritRankUser Name. */
        public Name: string;

        /** PVPSpiritRankUser HeadID. */
        public HeadID: number;

        /** PVPSpiritRankUser HeadFrameID. */
        public HeadFrameID: number;

        /** PVPSpiritRankUser Exp. */
        public Exp: number;

        /** PVPSpiritRankUser Power. */
        public Power: (number|Long);

        /** PVPSpiritRankUser HeroUnitMap. */
        public HeroUnitMap: { [k: string]: data.IBagUnit };

        /**
         * Creates a new PVPSpiritRankUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPSpiritRankUser instance
         */
        public static create(properties?: data.IPVPSpiritRankUser): data.PVPSpiritRankUser;

        /**
         * Encodes the specified PVPSpiritRankUser message. Does not implicitly {@link data.PVPSpiritRankUser.verify|verify} messages.
         * @param message PVPSpiritRankUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPSpiritRankUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPSpiritRankUser message, length delimited. Does not implicitly {@link data.PVPSpiritRankUser.verify|verify} messages.
         * @param message PVPSpiritRankUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPSpiritRankUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPSpiritRankUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPSpiritRankUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPSpiritRankUser;

        /**
         * Decodes a PVPSpiritRankUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPSpiritRankUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPSpiritRankUser;

        /**
         * Verifies a PVPSpiritRankUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPSpiritRankUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPSpiritRankUser
         */
        public static fromObject(object: { [k: string]: any }): data.PVPSpiritRankUser;

        /**
         * Creates a plain object from a PVPSpiritRankUser message. Also converts values to other types if specified.
         * @param message PVPSpiritRankUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPSpiritRankUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPSpiritRankUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPSpirit. */
    interface IPVPSpirit {

        /** PVPSpirit UserRankList */
        UserRankList?: (data.IPVPSpiritRankUser[]|null);

        /** PVPSpirit UserRankMap */
        UserRankMap?: ({ [k: string]: number }|null);
    }

    /** Represents a PVPSpirit. */
    class PVPSpirit implements IPVPSpirit {

        /**
         * Constructs a new PVPSpirit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPSpirit);

        /** PVPSpirit UserRankList. */
        public UserRankList: data.IPVPSpiritRankUser[];

        /** PVPSpirit UserRankMap. */
        public UserRankMap: { [k: string]: number };

        /**
         * Creates a new PVPSpirit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPSpirit instance
         */
        public static create(properties?: data.IPVPSpirit): data.PVPSpirit;

        /**
         * Encodes the specified PVPSpirit message. Does not implicitly {@link data.PVPSpirit.verify|verify} messages.
         * @param message PVPSpirit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPSpirit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPSpirit message, length delimited. Does not implicitly {@link data.PVPSpirit.verify|verify} messages.
         * @param message PVPSpirit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPSpirit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPSpirit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPSpirit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPSpirit;

        /**
         * Decodes a PVPSpirit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPSpirit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPSpirit;

        /**
         * Verifies a PVPSpirit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPSpirit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPSpirit
         */
        public static fromObject(object: { [k: string]: any }): data.PVPSpirit;

        /**
         * Creates a plain object from a PVPSpirit message. Also converts values to other types if specified.
         * @param message PVPSpirit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPSpirit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPSpirit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPFairyFightUser. */
    interface IPVPFairyFightUser {

        /** PVPFairyFightUser IsRobot */
        IsRobot?: (boolean|null);

        /** PVPFairyFightUser UserID */
        UserID?: (string|null);

        /** PVPFairyFightUser Name */
        Name?: (string|null);

        /** PVPFairyFightUser HeadID */
        HeadID?: (number|null);

        /** PVPFairyFightUser HeadFrameID */
        HeadFrameID?: (number|null);

        /** PVPFairyFightUser Exp */
        Exp?: (number|null);

        /** PVPFairyFightUser Power */
        Power?: (number|Long|null);

        /** PVPFairyFightUser HeroUnitMap */
        HeroUnitMap?: ({ [k: string]: data.IBagUnit }|null);
    }

    /** Represents a PVPFairyFightUser. */
    class PVPFairyFightUser implements IPVPFairyFightUser {

        /**
         * Constructs a new PVPFairyFightUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPFairyFightUser);

        /** PVPFairyFightUser IsRobot. */
        public IsRobot: boolean;

        /** PVPFairyFightUser UserID. */
        public UserID: string;

        /** PVPFairyFightUser Name. */
        public Name: string;

        /** PVPFairyFightUser HeadID. */
        public HeadID: number;

        /** PVPFairyFightUser HeadFrameID. */
        public HeadFrameID: number;

        /** PVPFairyFightUser Exp. */
        public Exp: number;

        /** PVPFairyFightUser Power. */
        public Power: (number|Long);

        /** PVPFairyFightUser HeroUnitMap. */
        public HeroUnitMap: { [k: string]: data.IBagUnit };

        /**
         * Creates a new PVPFairyFightUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPFairyFightUser instance
         */
        public static create(properties?: data.IPVPFairyFightUser): data.PVPFairyFightUser;

        /**
         * Encodes the specified PVPFairyFightUser message. Does not implicitly {@link data.PVPFairyFightUser.verify|verify} messages.
         * @param message PVPFairyFightUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPFairyFightUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPFairyFightUser message, length delimited. Does not implicitly {@link data.PVPFairyFightUser.verify|verify} messages.
         * @param message PVPFairyFightUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPFairyFightUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPFairyFightUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPFairyFightUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPFairyFightUser;

        /**
         * Decodes a PVPFairyFightUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPFairyFightUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPFairyFightUser;

        /**
         * Verifies a PVPFairyFightUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPFairyFightUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPFairyFightUser
         */
        public static fromObject(object: { [k: string]: any }): data.PVPFairyFightUser;

        /**
         * Creates a plain object from a PVPFairyFightUser message. Also converts values to other types if specified.
         * @param message PVPFairyFightUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPFairyFightUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPFairyFightUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPFairyScale. */
    interface IPVPFairyScale {

        /** PVPFairyScale FightUserList1 */
        FightUserList1?: (data.IPVPFairyFightUser[]|null);

        /** PVPFairyScale FightUserList2 */
        FightUserList2?: (data.IPVPFairyFightUser[]|null);
    }

    /** Represents a PVPFairyScale. */
    class PVPFairyScale implements IPVPFairyScale {

        /**
         * Constructs a new PVPFairyScale.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPFairyScale);

        /** PVPFairyScale FightUserList1. */
        public FightUserList1: data.IPVPFairyFightUser[];

        /** PVPFairyScale FightUserList2. */
        public FightUserList2: data.IPVPFairyFightUser[];

        /**
         * Creates a new PVPFairyScale instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPFairyScale instance
         */
        public static create(properties?: data.IPVPFairyScale): data.PVPFairyScale;

        /**
         * Encodes the specified PVPFairyScale message. Does not implicitly {@link data.PVPFairyScale.verify|verify} messages.
         * @param message PVPFairyScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPFairyScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPFairyScale message, length delimited. Does not implicitly {@link data.PVPFairyScale.verify|verify} messages.
         * @param message PVPFairyScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPFairyScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPFairyScale message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPFairyScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPFairyScale;

        /**
         * Decodes a PVPFairyScale message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPFairyScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPFairyScale;

        /**
         * Verifies a PVPFairyScale message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPFairyScale message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPFairyScale
         */
        public static fromObject(object: { [k: string]: any }): data.PVPFairyScale;

        /**
         * Creates a plain object from a PVPFairyScale message. Also converts values to other types if specified.
         * @param message PVPFairyScale
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPFairyScale, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPFairyScale to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPFairy. */
    interface IPVPFairy {

        /** PVPFairy RefreshTime */
        RefreshTime?: (number|Long|null);

        /** PVPFairy ScaleList */
        ScaleList?: (data.IPVPFairyScale[]|null);
    }

    /** Represents a PVPFairy. */
    class PVPFairy implements IPVPFairy {

        /**
         * Constructs a new PVPFairy.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPFairy);

        /** PVPFairy RefreshTime. */
        public RefreshTime: (number|Long);

        /** PVPFairy ScaleList. */
        public ScaleList: data.IPVPFairyScale[];

        /**
         * Creates a new PVPFairy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPFairy instance
         */
        public static create(properties?: data.IPVPFairy): data.PVPFairy;

        /**
         * Encodes the specified PVPFairy message. Does not implicitly {@link data.PVPFairy.verify|verify} messages.
         * @param message PVPFairy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPFairy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPFairy message, length delimited. Does not implicitly {@link data.PVPFairy.verify|verify} messages.
         * @param message PVPFairy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPFairy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPFairy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPFairy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPFairy;

        /**
         * Decodes a PVPFairy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPFairy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPFairy;

        /**
         * Verifies a PVPFairy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPFairy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPFairy
         */
        public static fromObject(object: { [k: string]: any }): data.PVPFairy;

        /**
         * Creates a plain object from a PVPFairy message. Also converts values to other types if specified.
         * @param message PVPFairy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPFairy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPFairy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPSpiritEnemy. */
    interface IPVPSpiritEnemy {

        /** PVPSpiritEnemy rank */
        rank?: (number|null);

        /** PVPSpiritEnemy RankUserUnit */
        RankUserUnit?: (data.IPVPSpiritRankUser|null);
    }

    /** Represents a PVPSpiritEnemy. */
    class PVPSpiritEnemy implements IPVPSpiritEnemy {

        /**
         * Constructs a new PVPSpiritEnemy.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPSpiritEnemy);

        /** PVPSpiritEnemy rank. */
        public rank: number;

        /** PVPSpiritEnemy RankUserUnit. */
        public RankUserUnit?: (data.IPVPSpiritRankUser|null);

        /**
         * Creates a new PVPSpiritEnemy instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPSpiritEnemy instance
         */
        public static create(properties?: data.IPVPSpiritEnemy): data.PVPSpiritEnemy;

        /**
         * Encodes the specified PVPSpiritEnemy message. Does not implicitly {@link data.PVPSpiritEnemy.verify|verify} messages.
         * @param message PVPSpiritEnemy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPSpiritEnemy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPSpiritEnemy message, length delimited. Does not implicitly {@link data.PVPSpiritEnemy.verify|verify} messages.
         * @param message PVPSpiritEnemy message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPSpiritEnemy, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPSpiritEnemy message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPSpiritEnemy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPSpiritEnemy;

        /**
         * Decodes a PVPSpiritEnemy message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPSpiritEnemy
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPSpiritEnemy;

        /**
         * Verifies a PVPSpiritEnemy message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPSpiritEnemy message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPSpiritEnemy
         */
        public static fromObject(object: { [k: string]: any }): data.PVPSpiritEnemy;

        /**
         * Creates a plain object from a PVPSpiritEnemy message. Also converts values to other types if specified.
         * @param message PVPSpiritEnemy
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPSpiritEnemy, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPSpiritEnemy to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPSpiritFightUser. */
    interface IPVPSpiritFightUser {

        /** PVPSpiritFightUser UserID */
        UserID?: (string|null);

        /** PVPSpiritFightUser Name */
        Name?: (string|null);

        /** PVPSpiritFightUser HeadID */
        HeadID?: (number|null);

        /** PVPSpiritFightUser HeadFrameID */
        HeadFrameID?: (number|null);

        /** PVPSpiritFightUser Exp */
        Exp?: (number|null);

        /** PVPSpiritFightUser Power */
        Power?: (number|Long|null);

        /** PVPSpiritFightUser HeroUnitMap */
        HeroUnitMap?: ({ [k: string]: data.IBagUnit }|null);
    }

    /** Represents a PVPSpiritFightUser. */
    class PVPSpiritFightUser implements IPVPSpiritFightUser {

        /**
         * Constructs a new PVPSpiritFightUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPSpiritFightUser);

        /** PVPSpiritFightUser UserID. */
        public UserID: string;

        /** PVPSpiritFightUser Name. */
        public Name: string;

        /** PVPSpiritFightUser HeadID. */
        public HeadID: number;

        /** PVPSpiritFightUser HeadFrameID. */
        public HeadFrameID: number;

        /** PVPSpiritFightUser Exp. */
        public Exp: number;

        /** PVPSpiritFightUser Power. */
        public Power: (number|Long);

        /** PVPSpiritFightUser HeroUnitMap. */
        public HeroUnitMap: { [k: string]: data.IBagUnit };

        /**
         * Creates a new PVPSpiritFightUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPSpiritFightUser instance
         */
        public static create(properties?: data.IPVPSpiritFightUser): data.PVPSpiritFightUser;

        /**
         * Encodes the specified PVPSpiritFightUser message. Does not implicitly {@link data.PVPSpiritFightUser.verify|verify} messages.
         * @param message PVPSpiritFightUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPSpiritFightUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPSpiritFightUser message, length delimited. Does not implicitly {@link data.PVPSpiritFightUser.verify|verify} messages.
         * @param message PVPSpiritFightUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPSpiritFightUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPSpiritFightUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPSpiritFightUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPSpiritFightUser;

        /**
         * Decodes a PVPSpiritFightUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPSpiritFightUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPSpiritFightUser;

        /**
         * Verifies a PVPSpiritFightUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPSpiritFightUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPSpiritFightUser
         */
        public static fromObject(object: { [k: string]: any }): data.PVPSpiritFightUser;

        /**
         * Creates a plain object from a PVPSpiritFightUser message. Also converts values to other types if specified.
         * @param message PVPSpiritFightUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPSpiritFightUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPSpiritFightUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPSpiritFight. */
    interface IPVPSpiritFight {

        /** PVPSpiritFight IsWin */
        IsWin?: (boolean|null);

        /** PVPSpiritFight IsChallenger */
        IsChallenger?: (boolean|null);

        /** PVPSpiritFight FightTime */
        FightTime?: (number|Long|null);

        /** PVPSpiritFight ChangeRank */
        ChangeRank?: (number|null);

        /** PVPSpiritFight FightUserUnit */
        FightUserUnit?: (data.IPVPSpiritFightUser|null);

        /** PVPSpiritFight FightUID */
        FightUID?: (string|null);
    }

    /** Represents a PVPSpiritFight. */
    class PVPSpiritFight implements IPVPSpiritFight {

        /**
         * Constructs a new PVPSpiritFight.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPSpiritFight);

        /** PVPSpiritFight IsWin. */
        public IsWin: boolean;

        /** PVPSpiritFight IsChallenger. */
        public IsChallenger: boolean;

        /** PVPSpiritFight FightTime. */
        public FightTime: (number|Long);

        /** PVPSpiritFight ChangeRank. */
        public ChangeRank: number;

        /** PVPSpiritFight FightUserUnit. */
        public FightUserUnit?: (data.IPVPSpiritFightUser|null);

        /** PVPSpiritFight FightUID. */
        public FightUID: string;

        /**
         * Creates a new PVPSpiritFight instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPSpiritFight instance
         */
        public static create(properties?: data.IPVPSpiritFight): data.PVPSpiritFight;

        /**
         * Encodes the specified PVPSpiritFight message. Does not implicitly {@link data.PVPSpiritFight.verify|verify} messages.
         * @param message PVPSpiritFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPSpiritFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPSpiritFight message, length delimited. Does not implicitly {@link data.PVPSpiritFight.verify|verify} messages.
         * @param message PVPSpiritFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPSpiritFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPSpiritFight message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPSpiritFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPSpiritFight;

        /**
         * Decodes a PVPSpiritFight message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPSpiritFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPSpiritFight;

        /**
         * Verifies a PVPSpiritFight message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPSpiritFight message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPSpiritFight
         */
        public static fromObject(object: { [k: string]: any }): data.PVPSpiritFight;

        /**
         * Creates a plain object from a PVPSpiritFight message. Also converts values to other types if specified.
         * @param message PVPSpiritFight
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPSpiritFight, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPSpiritFight to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPSpiritData. */
    interface IPVPSpiritData {

        /** PVPSpiritData TopRank */
        TopRank?: (number|null);

        /** PVPSpiritData BuyTicketsTimes */
        BuyTicketsTimes?: (number|null);

        /** PVPSpiritData LastTradeTime */
        LastTradeTime?: (number|Long|null);

        /** PVPSpiritData DefensiveHeroMap */
        DefensiveHeroMap?: ({ [k: string]: number }|null);

        /** PVPSpiritData EnemyRankList */
        EnemyRankList?: (number[]|null);

        /** PVPSpiritData FightList */
        FightList?: (data.IPVPSpiritFight[]|null);

        /** PVPSpiritData Rank */
        Rank?: (number|null);
    }

    /** Represents a PVPSpiritData. */
    class PVPSpiritData implements IPVPSpiritData {

        /**
         * Constructs a new PVPSpiritData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPSpiritData);

        /** PVPSpiritData TopRank. */
        public TopRank: number;

        /** PVPSpiritData BuyTicketsTimes. */
        public BuyTicketsTimes: number;

        /** PVPSpiritData LastTradeTime. */
        public LastTradeTime: (number|Long);

        /** PVPSpiritData DefensiveHeroMap. */
        public DefensiveHeroMap: { [k: string]: number };

        /** PVPSpiritData EnemyRankList. */
        public EnemyRankList: number[];

        /** PVPSpiritData FightList. */
        public FightList: data.IPVPSpiritFight[];

        /** PVPSpiritData Rank. */
        public Rank: number;

        /**
         * Creates a new PVPSpiritData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPSpiritData instance
         */
        public static create(properties?: data.IPVPSpiritData): data.PVPSpiritData;

        /**
         * Encodes the specified PVPSpiritData message. Does not implicitly {@link data.PVPSpiritData.verify|verify} messages.
         * @param message PVPSpiritData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPSpiritData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPSpiritData message, length delimited. Does not implicitly {@link data.PVPSpiritData.verify|verify} messages.
         * @param message PVPSpiritData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPSpiritData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPSpiritData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPSpiritData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPSpiritData;

        /**
         * Decodes a PVPSpiritData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPSpiritData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPSpiritData;

        /**
         * Verifies a PVPSpiritData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPSpiritData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPSpiritData
         */
        public static fromObject(object: { [k: string]: any }): data.PVPSpiritData;

        /**
         * Creates a plain object from a PVPSpiritData message. Also converts values to other types if specified.
         * @param message PVPSpiritData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPSpiritData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPSpiritData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPFairyData. */
    interface IPVPFairyData {

        /** PVPFairyData Integral */
        Integral?: (number|null);

        /** PVPFairyData ChallengeTimes */
        ChallengeTimes?: (number|null);

        /** PVPFairyData WinTimes */
        WinTimes?: (number|null);

        /** PVPFairyData FightUserList */
        FightUserList?: (data.IPVPFairyFightUser[]|null);
    }

    /** Represents a PVPFairyData. */
    class PVPFairyData implements IPVPFairyData {

        /**
         * Constructs a new PVPFairyData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPFairyData);

        /** PVPFairyData Integral. */
        public Integral: number;

        /** PVPFairyData ChallengeTimes. */
        public ChallengeTimes: number;

        /** PVPFairyData WinTimes. */
        public WinTimes: number;

        /** PVPFairyData FightUserList. */
        public FightUserList: data.IPVPFairyFightUser[];

        /**
         * Creates a new PVPFairyData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPFairyData instance
         */
        public static create(properties?: data.IPVPFairyData): data.PVPFairyData;

        /**
         * Encodes the specified PVPFairyData message. Does not implicitly {@link data.PVPFairyData.verify|verify} messages.
         * @param message PVPFairyData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPFairyData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPFairyData message, length delimited. Does not implicitly {@link data.PVPFairyData.verify|verify} messages.
         * @param message PVPFairyData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPFairyData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPFairyData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPFairyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPFairyData;

        /**
         * Decodes a PVPFairyData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPFairyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPFairyData;

        /**
         * Verifies a PVPFairyData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPFairyData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPFairyData
         */
        public static fromObject(object: { [k: string]: any }): data.PVPFairyData;

        /**
         * Creates a plain object from a PVPFairyData message. Also converts values to other types if specified.
         * @param message PVPFairyData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPFairyData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPFairyData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelDefensiveLineupHero. */
    interface IPvpPeakDuelDefensiveLineupHero {

        /** PvpPeakDuelDefensiveLineupHero DefensiveHeroList */
        DefensiveHeroList?: (number[]|null);
    }

    /** Represents a PvpPeakDuelDefensiveLineupHero. */
    class PvpPeakDuelDefensiveLineupHero implements IPvpPeakDuelDefensiveLineupHero {

        /**
         * Constructs a new PvpPeakDuelDefensiveLineupHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPvpPeakDuelDefensiveLineupHero);

        /** PvpPeakDuelDefensiveLineupHero DefensiveHeroList. */
        public DefensiveHeroList: number[];

        /**
         * Creates a new PvpPeakDuelDefensiveLineupHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelDefensiveLineupHero instance
         */
        public static create(properties?: data.IPvpPeakDuelDefensiveLineupHero): data.PvpPeakDuelDefensiveLineupHero;

        /**
         * Encodes the specified PvpPeakDuelDefensiveLineupHero message. Does not implicitly {@link data.PvpPeakDuelDefensiveLineupHero.verify|verify} messages.
         * @param message PvpPeakDuelDefensiveLineupHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPvpPeakDuelDefensiveLineupHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelDefensiveLineupHero message, length delimited. Does not implicitly {@link data.PvpPeakDuelDefensiveLineupHero.verify|verify} messages.
         * @param message PvpPeakDuelDefensiveLineupHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPvpPeakDuelDefensiveLineupHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelDefensiveLineupHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelDefensiveLineupHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PvpPeakDuelDefensiveLineupHero;

        /**
         * Decodes a PvpPeakDuelDefensiveLineupHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelDefensiveLineupHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PvpPeakDuelDefensiveLineupHero;

        /**
         * Verifies a PvpPeakDuelDefensiveLineupHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelDefensiveLineupHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelDefensiveLineupHero
         */
        public static fromObject(object: { [k: string]: any }): data.PvpPeakDuelDefensiveLineupHero;

        /**
         * Creates a plain object from a PvpPeakDuelDefensiveLineupHero message. Also converts values to other types if specified.
         * @param message PvpPeakDuelDefensiveLineupHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PvpPeakDuelDefensiveLineupHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelDefensiveLineupHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPPeakDuelFight. */
    interface IPVPPeakDuelFight {

        /** PVPPeakDuelFight IsWin */
        IsWin?: (boolean|null);

        /** PVPPeakDuelFight IsChallenger */
        IsChallenger?: (boolean|null);

        /** PVPPeakDuelFight FightTime */
        FightTime?: (number|Long|null);

        /** PVPPeakDuelFight IntegralChange */
        IntegralChange?: (number|null);

        /** PVPPeakDuelFight IntegralLast */
        IntegralLast?: (number|null);

        /** PVPPeakDuelFight PVPPeakDuelIntegralUnit */
        PVPPeakDuelIntegralUnit?: (data.IPVPPeakDuelIntegral|null);

        /** PVPPeakDuelFight FightUIDList */
        FightUIDList?: (string[]|null);
    }

    /** Represents a PVPPeakDuelFight. */
    class PVPPeakDuelFight implements IPVPPeakDuelFight {

        /**
         * Constructs a new PVPPeakDuelFight.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPPeakDuelFight);

        /** PVPPeakDuelFight IsWin. */
        public IsWin: boolean;

        /** PVPPeakDuelFight IsChallenger. */
        public IsChallenger: boolean;

        /** PVPPeakDuelFight FightTime. */
        public FightTime: (number|Long);

        /** PVPPeakDuelFight IntegralChange. */
        public IntegralChange: number;

        /** PVPPeakDuelFight IntegralLast. */
        public IntegralLast: number;

        /** PVPPeakDuelFight PVPPeakDuelIntegralUnit. */
        public PVPPeakDuelIntegralUnit?: (data.IPVPPeakDuelIntegral|null);

        /** PVPPeakDuelFight FightUIDList. */
        public FightUIDList: string[];

        /**
         * Creates a new PVPPeakDuelFight instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPPeakDuelFight instance
         */
        public static create(properties?: data.IPVPPeakDuelFight): data.PVPPeakDuelFight;

        /**
         * Encodes the specified PVPPeakDuelFight message. Does not implicitly {@link data.PVPPeakDuelFight.verify|verify} messages.
         * @param message PVPPeakDuelFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPPeakDuelFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPPeakDuelFight message, length delimited. Does not implicitly {@link data.PVPPeakDuelFight.verify|verify} messages.
         * @param message PVPPeakDuelFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPPeakDuelFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPPeakDuelFight message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPPeakDuelFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPPeakDuelFight;

        /**
         * Decodes a PVPPeakDuelFight message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPPeakDuelFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPPeakDuelFight;

        /**
         * Verifies a PVPPeakDuelFight message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPPeakDuelFight message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPPeakDuelFight
         */
        public static fromObject(object: { [k: string]: any }): data.PVPPeakDuelFight;

        /**
         * Creates a plain object from a PVPPeakDuelFight message. Also converts values to other types if specified.
         * @param message PVPPeakDuelFight
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPPeakDuelFight, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPPeakDuelFight to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPPeakDuelData. */
    interface IPVPPeakDuelData {

        /** PVPPeakDuelData Integral */
        Integral?: (number|null);

        /** PVPPeakDuelData LastTradeTime */
        LastTradeTime?: (number|Long|null);

        /** PVPPeakDuelData PVPPeakDuelIntegralList */
        PVPPeakDuelIntegralList?: (data.IPVPPeakDuelIntegral[]|null);

        /** PVPPeakDuelData PvpPeakDuelDefensiveLineupHeroList */
        PvpPeakDuelDefensiveLineupHeroList?: (data.IPvpPeakDuelDefensiveLineupHero[]|null);

        /** PVPPeakDuelData FightList */
        FightList?: (data.IPVPPeakDuelFight[]|null);
    }

    /** Represents a PVPPeakDuelData. */
    class PVPPeakDuelData implements IPVPPeakDuelData {

        /**
         * Constructs a new PVPPeakDuelData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPPeakDuelData);

        /** PVPPeakDuelData Integral. */
        public Integral: number;

        /** PVPPeakDuelData LastTradeTime. */
        public LastTradeTime: (number|Long);

        /** PVPPeakDuelData PVPPeakDuelIntegralList. */
        public PVPPeakDuelIntegralList: data.IPVPPeakDuelIntegral[];

        /** PVPPeakDuelData PvpPeakDuelDefensiveLineupHeroList. */
        public PvpPeakDuelDefensiveLineupHeroList: data.IPvpPeakDuelDefensiveLineupHero[];

        /** PVPPeakDuelData FightList. */
        public FightList: data.IPVPPeakDuelFight[];

        /**
         * Creates a new PVPPeakDuelData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPPeakDuelData instance
         */
        public static create(properties?: data.IPVPPeakDuelData): data.PVPPeakDuelData;

        /**
         * Encodes the specified PVPPeakDuelData message. Does not implicitly {@link data.PVPPeakDuelData.verify|verify} messages.
         * @param message PVPPeakDuelData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPPeakDuelData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPPeakDuelData message, length delimited. Does not implicitly {@link data.PVPPeakDuelData.verify|verify} messages.
         * @param message PVPPeakDuelData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPPeakDuelData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPPeakDuelData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPPeakDuelData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPPeakDuelData;

        /**
         * Decodes a PVPPeakDuelData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPPeakDuelData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPPeakDuelData;

        /**
         * Verifies a PVPPeakDuelData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPPeakDuelData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPPeakDuelData
         */
        public static fromObject(object: { [k: string]: any }): data.PVPPeakDuelData;

        /**
         * Creates a plain object from a PVPPeakDuelData message. Also converts values to other types if specified.
         * @param message PVPPeakDuelData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPPeakDuelData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPPeakDuelData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPData. */
    interface IPVPData {

        /** PVPData PVPSpiritData */
        PVPSpiritData?: (data.IPVPSpiritData|null);

        /** PVPData PVPFairyData */
        PVPFairyData?: (data.IPVPFairyData|null);

        /** PVPData PVPPeakDuelData */
        PVPPeakDuelData?: (data.IPVPPeakDuelData|null);
    }

    /** Represents a PVPData. */
    class PVPData implements IPVPData {

        /**
         * Constructs a new PVPData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPData);

        /** PVPData PVPSpiritData. */
        public PVPSpiritData?: (data.IPVPSpiritData|null);

        /** PVPData PVPFairyData. */
        public PVPFairyData?: (data.IPVPFairyData|null);

        /** PVPData PVPPeakDuelData. */
        public PVPPeakDuelData?: (data.IPVPPeakDuelData|null);

        /**
         * Creates a new PVPData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPData instance
         */
        public static create(properties?: data.IPVPData): data.PVPData;

        /**
         * Encodes the specified PVPData message. Does not implicitly {@link data.PVPData.verify|verify} messages.
         * @param message PVPData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPData message, length delimited. Does not implicitly {@link data.PVPData.verify|verify} messages.
         * @param message PVPData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPData;

        /**
         * Decodes a PVPData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPData;

        /**
         * Verifies a PVPData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPData
         */
        public static fromObject(object: { [k: string]: any }): data.PVPData;

        /**
         * Creates a plain object from a PVPData message. Also converts values to other types if specified.
         * @param message PVPData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankUser. */
    interface IRankUser {

        /** RankUser UserID */
        UserID?: (string|null);

        /** RankUser Name */
        Name?: (string|null);

        /** RankUser HeadID */
        HeadID?: (number|null);

        /** RankUser HeadFrameID */
        HeadFrameID?: (number|null);

        /** RankUser Exp */
        Exp?: (number|null);
    }

    /** Represents a RankUser. */
    class RankUser implements IRankUser {

        /**
         * Constructs a new RankUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IRankUser);

        /** RankUser UserID. */
        public UserID: string;

        /** RankUser Name. */
        public Name: string;

        /** RankUser HeadID. */
        public HeadID: number;

        /** RankUser HeadFrameID. */
        public HeadFrameID: number;

        /** RankUser Exp. */
        public Exp: number;

        /**
         * Creates a new RankUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankUser instance
         */
        public static create(properties?: data.IRankUser): data.RankUser;

        /**
         * Encodes the specified RankUser message. Does not implicitly {@link data.RankUser.verify|verify} messages.
         * @param message RankUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IRankUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankUser message, length delimited. Does not implicitly {@link data.RankUser.verify|verify} messages.
         * @param message RankUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IRankUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.RankUser;

        /**
         * Decodes a RankUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.RankUser;

        /**
         * Verifies a RankUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankUser
         */
        public static fromObject(object: { [k: string]: any }): data.RankUser;

        /**
         * Creates a plain object from a RankUser message. Also converts values to other types if specified.
         * @param message RankUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.RankUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerFiveHero. */
    interface IPowerFiveHero {

        /** PowerFiveHero User */
        User?: (data.IRankUser|null);

        /** PowerFiveHero HeroIDList */
        HeroIDList?: (number[]|null);

        /** PowerFiveHero Power */
        Power?: (number|Long|null);

        /** PowerFiveHero Time */
        Time?: (number|Long|null);
    }

    /** Represents a PowerFiveHero. */
    class PowerFiveHero implements IPowerFiveHero {

        /**
         * Constructs a new PowerFiveHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPowerFiveHero);

        /** PowerFiveHero User. */
        public User?: (data.IRankUser|null);

        /** PowerFiveHero HeroIDList. */
        public HeroIDList: number[];

        /** PowerFiveHero Power. */
        public Power: (number|Long);

        /** PowerFiveHero Time. */
        public Time: (number|Long);

        /**
         * Creates a new PowerFiveHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerFiveHero instance
         */
        public static create(properties?: data.IPowerFiveHero): data.PowerFiveHero;

        /**
         * Encodes the specified PowerFiveHero message. Does not implicitly {@link data.PowerFiveHero.verify|verify} messages.
         * @param message PowerFiveHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPowerFiveHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerFiveHero message, length delimited. Does not implicitly {@link data.PowerFiveHero.verify|verify} messages.
         * @param message PowerFiveHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPowerFiveHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerFiveHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerFiveHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PowerFiveHero;

        /**
         * Decodes a PowerFiveHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerFiveHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PowerFiveHero;

        /**
         * Verifies a PowerFiveHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerFiveHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerFiveHero
         */
        public static fromObject(object: { [k: string]: any }): data.PowerFiveHero;

        /**
         * Creates a plain object from a PowerFiveHero message. Also converts values to other types if specified.
         * @param message PowerFiveHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PowerFiveHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerFiveHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerOneHero. */
    interface IPowerOneHero {

        /** PowerOneHero User */
        User?: (data.IRankUser|null);

        /** PowerOneHero HeroID */
        HeroID?: (number|null);

        /** PowerOneHero Power */
        Power?: (number|Long|null);

        /** PowerOneHero Time */
        Time?: (number|Long|null);
    }

    /** Represents a PowerOneHero. */
    class PowerOneHero implements IPowerOneHero {

        /**
         * Constructs a new PowerOneHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPowerOneHero);

        /** PowerOneHero User. */
        public User?: (data.IRankUser|null);

        /** PowerOneHero HeroID. */
        public HeroID: number;

        /** PowerOneHero Power. */
        public Power: (number|Long);

        /** PowerOneHero Time. */
        public Time: (number|Long);

        /**
         * Creates a new PowerOneHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerOneHero instance
         */
        public static create(properties?: data.IPowerOneHero): data.PowerOneHero;

        /**
         * Encodes the specified PowerOneHero message. Does not implicitly {@link data.PowerOneHero.verify|verify} messages.
         * @param message PowerOneHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPowerOneHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerOneHero message, length delimited. Does not implicitly {@link data.PowerOneHero.verify|verify} messages.
         * @param message PowerOneHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPowerOneHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerOneHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerOneHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PowerOneHero;

        /**
         * Decodes a PowerOneHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerOneHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PowerOneHero;

        /**
         * Verifies a PowerOneHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerOneHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerOneHero
         */
        public static fromObject(object: { [k: string]: any }): data.PowerOneHero;

        /**
         * Creates a plain object from a PowerOneHero message. Also converts values to other types if specified.
         * @param message PowerOneHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PowerOneHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerOneHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerTotalHero. */
    interface IPowerTotalHero {

        /** PowerTotalHero User */
        User?: (data.IRankUser|null);

        /** PowerTotalHero Count */
        Count?: (number|null);

        /** PowerTotalHero Power */
        Power?: (number|Long|null);

        /** PowerTotalHero Time */
        Time?: (number|Long|null);
    }

    /** Represents a PowerTotalHero. */
    class PowerTotalHero implements IPowerTotalHero {

        /**
         * Constructs a new PowerTotalHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPowerTotalHero);

        /** PowerTotalHero User. */
        public User?: (data.IRankUser|null);

        /** PowerTotalHero Count. */
        public Count: number;

        /** PowerTotalHero Power. */
        public Power: (number|Long);

        /** PowerTotalHero Time. */
        public Time: (number|Long);

        /**
         * Creates a new PowerTotalHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerTotalHero instance
         */
        public static create(properties?: data.IPowerTotalHero): data.PowerTotalHero;

        /**
         * Encodes the specified PowerTotalHero message. Does not implicitly {@link data.PowerTotalHero.verify|verify} messages.
         * @param message PowerTotalHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPowerTotalHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerTotalHero message, length delimited. Does not implicitly {@link data.PowerTotalHero.verify|verify} messages.
         * @param message PowerTotalHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPowerTotalHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerTotalHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerTotalHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PowerTotalHero;

        /**
         * Decodes a PowerTotalHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerTotalHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PowerTotalHero;

        /**
         * Verifies a PowerTotalHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerTotalHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerTotalHero
         */
        public static fromObject(object: { [k: string]: any }): data.PowerTotalHero;

        /**
         * Creates a plain object from a PowerTotalHero message. Also converts values to other types if specified.
         * @param message PowerTotalHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PowerTotalHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerTotalHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPFairyIntegral. */
    interface IPVPFairyIntegral {

        /** PVPFairyIntegral User */
        User?: (data.IRankUser|null);

        /** PVPFairyIntegral Integral */
        Integral?: (number|null);

        /** PVPFairyIntegral Power */
        Power?: (number|Long|null);

        /** PVPFairyIntegral Time */
        Time?: (number|Long|null);

        /** PVPFairyIntegral WinTimes */
        WinTimes?: (number|null);
    }

    /** Represents a PVPFairyIntegral. */
    class PVPFairyIntegral implements IPVPFairyIntegral {

        /**
         * Constructs a new PVPFairyIntegral.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPFairyIntegral);

        /** PVPFairyIntegral User. */
        public User?: (data.IRankUser|null);

        /** PVPFairyIntegral Integral. */
        public Integral: number;

        /** PVPFairyIntegral Power. */
        public Power: (number|Long);

        /** PVPFairyIntegral Time. */
        public Time: (number|Long);

        /** PVPFairyIntegral WinTimes. */
        public WinTimes: number;

        /**
         * Creates a new PVPFairyIntegral instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPFairyIntegral instance
         */
        public static create(properties?: data.IPVPFairyIntegral): data.PVPFairyIntegral;

        /**
         * Encodes the specified PVPFairyIntegral message. Does not implicitly {@link data.PVPFairyIntegral.verify|verify} messages.
         * @param message PVPFairyIntegral message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPFairyIntegral, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPFairyIntegral message, length delimited. Does not implicitly {@link data.PVPFairyIntegral.verify|verify} messages.
         * @param message PVPFairyIntegral message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPFairyIntegral, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPFairyIntegral message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPFairyIntegral
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPFairyIntegral;

        /**
         * Decodes a PVPFairyIntegral message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPFairyIntegral
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPFairyIntegral;

        /**
         * Verifies a PVPFairyIntegral message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPFairyIntegral message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPFairyIntegral
         */
        public static fromObject(object: { [k: string]: any }): data.PVPFairyIntegral;

        /**
         * Creates a plain object from a PVPFairyIntegral message. Also converts values to other types if specified.
         * @param message PVPFairyIntegral
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPFairyIntegral, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPFairyIntegral to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVEAdventureScale. */
    interface IPVEAdventureScale {

        /** PVEAdventureScale User */
        User?: (data.IRankUser|null);

        /** PVEAdventureScale LessonId */
        LessonId?: (number|null);

        /** PVEAdventureScale Time */
        Time?: (number|Long|null);
    }

    /** Represents a PVEAdventureScale. */
    class PVEAdventureScale implements IPVEAdventureScale {

        /**
         * Constructs a new PVEAdventureScale.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVEAdventureScale);

        /** PVEAdventureScale User. */
        public User?: (data.IRankUser|null);

        /** PVEAdventureScale LessonId. */
        public LessonId: number;

        /** PVEAdventureScale Time. */
        public Time: (number|Long);

        /**
         * Creates a new PVEAdventureScale instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVEAdventureScale instance
         */
        public static create(properties?: data.IPVEAdventureScale): data.PVEAdventureScale;

        /**
         * Encodes the specified PVEAdventureScale message. Does not implicitly {@link data.PVEAdventureScale.verify|verify} messages.
         * @param message PVEAdventureScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVEAdventureScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVEAdventureScale message, length delimited. Does not implicitly {@link data.PVEAdventureScale.verify|verify} messages.
         * @param message PVEAdventureScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVEAdventureScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVEAdventureScale message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVEAdventureScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVEAdventureScale;

        /**
         * Decodes a PVEAdventureScale message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVEAdventureScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVEAdventureScale;

        /**
         * Verifies a PVEAdventureScale message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVEAdventureScale message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVEAdventureScale
         */
        public static fromObject(object: { [k: string]: any }): data.PVEAdventureScale;

        /**
         * Creates a plain object from a PVEAdventureScale message. Also converts values to other types if specified.
         * @param message PVEAdventureScale
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVEAdventureScale, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVEAdventureScale to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVEDreamScale. */
    interface IPVEDreamScale {

        /** PVEDreamScale User */
        User?: (data.IRankUser|null);

        /** PVEDreamScale LessonId */
        LessonId?: (number|null);

        /** PVEDreamScale Time */
        Time?: (number|Long|null);
    }

    /** Represents a PVEDreamScale. */
    class PVEDreamScale implements IPVEDreamScale {

        /**
         * Constructs a new PVEDreamScale.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVEDreamScale);

        /** PVEDreamScale User. */
        public User?: (data.IRankUser|null);

        /** PVEDreamScale LessonId. */
        public LessonId: number;

        /** PVEDreamScale Time. */
        public Time: (number|Long);

        /**
         * Creates a new PVEDreamScale instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVEDreamScale instance
         */
        public static create(properties?: data.IPVEDreamScale): data.PVEDreamScale;

        /**
         * Encodes the specified PVEDreamScale message. Does not implicitly {@link data.PVEDreamScale.verify|verify} messages.
         * @param message PVEDreamScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVEDreamScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVEDreamScale message, length delimited. Does not implicitly {@link data.PVEDreamScale.verify|verify} messages.
         * @param message PVEDreamScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVEDreamScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVEDreamScale message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVEDreamScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVEDreamScale;

        /**
         * Decodes a PVEDreamScale message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVEDreamScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVEDreamScale;

        /**
         * Verifies a PVEDreamScale message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVEDreamScale message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVEDreamScale
         */
        public static fromObject(object: { [k: string]: any }): data.PVEDreamScale;

        /**
         * Creates a plain object from a PVEDreamScale message. Also converts values to other types if specified.
         * @param message PVEDreamScale
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVEDreamScale, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVEDreamScale to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryScale. */
    interface ITrialPurgatoryScale {

        /** TrialPurgatoryScale User */
        User?: (data.IRankUser|null);

        /** TrialPurgatoryScale Progress */
        Progress?: (number|null);

        /** TrialPurgatoryScale Time */
        Time?: (number|Long|null);
    }

    /** Represents a TrialPurgatoryScale. */
    class TrialPurgatoryScale implements ITrialPurgatoryScale {

        /**
         * Constructs a new TrialPurgatoryScale.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialPurgatoryScale);

        /** TrialPurgatoryScale User. */
        public User?: (data.IRankUser|null);

        /** TrialPurgatoryScale Progress. */
        public Progress: number;

        /** TrialPurgatoryScale Time. */
        public Time: (number|Long);

        /**
         * Creates a new TrialPurgatoryScale instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryScale instance
         */
        public static create(properties?: data.ITrialPurgatoryScale): data.TrialPurgatoryScale;

        /**
         * Encodes the specified TrialPurgatoryScale message. Does not implicitly {@link data.TrialPurgatoryScale.verify|verify} messages.
         * @param message TrialPurgatoryScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialPurgatoryScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryScale message, length delimited. Does not implicitly {@link data.TrialPurgatoryScale.verify|verify} messages.
         * @param message TrialPurgatoryScale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialPurgatoryScale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryScale message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialPurgatoryScale;

        /**
         * Decodes a TrialPurgatoryScale message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryScale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialPurgatoryScale;

        /**
         * Verifies a TrialPurgatoryScale message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryScale message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryScale
         */
        public static fromObject(object: { [k: string]: any }): data.TrialPurgatoryScale;

        /**
         * Creates a plain object from a TrialPurgatoryScale message. Also converts values to other types if specified.
         * @param message TrialPurgatoryScale
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialPurgatoryScale, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryScale to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialDevilDamage. */
    interface ITrialDevilDamage {

        /** TrialDevilDamage User */
        User?: (data.IRankUser|null);

        /** TrialDevilDamage Damage */
        Damage?: (number|null);

        /** TrialDevilDamage Time */
        Time?: (number|Long|null);
    }

    /** Represents a TrialDevilDamage. */
    class TrialDevilDamage implements ITrialDevilDamage {

        /**
         * Constructs a new TrialDevilDamage.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialDevilDamage);

        /** TrialDevilDamage User. */
        public User?: (data.IRankUser|null);

        /** TrialDevilDamage Damage. */
        public Damage: number;

        /** TrialDevilDamage Time. */
        public Time: (number|Long);

        /**
         * Creates a new TrialDevilDamage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialDevilDamage instance
         */
        public static create(properties?: data.ITrialDevilDamage): data.TrialDevilDamage;

        /**
         * Encodes the specified TrialDevilDamage message. Does not implicitly {@link data.TrialDevilDamage.verify|verify} messages.
         * @param message TrialDevilDamage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialDevilDamage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialDevilDamage message, length delimited. Does not implicitly {@link data.TrialDevilDamage.verify|verify} messages.
         * @param message TrialDevilDamage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialDevilDamage, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialDevilDamage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialDevilDamage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialDevilDamage;

        /**
         * Decodes a TrialDevilDamage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialDevilDamage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialDevilDamage;

        /**
         * Verifies a TrialDevilDamage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialDevilDamage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialDevilDamage
         */
        public static fromObject(object: { [k: string]: any }): data.TrialDevilDamage;

        /**
         * Creates a plain object from a TrialDevilDamage message. Also converts values to other types if specified.
         * @param message TrialDevilDamage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialDevilDamage, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialDevilDamage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPPeakDuelDefensiveHero. */
    interface IPVPPeakDuelDefensiveHero {

        /** PVPPeakDuelDefensiveHero HeroUnitMap */
        HeroUnitMap?: ({ [k: string]: data.IBagUnit }|null);

        /** PVPPeakDuelDefensiveHero Power */
        Power?: (number|Long|null);
    }

    /** Represents a PVPPeakDuelDefensiveHero. */
    class PVPPeakDuelDefensiveHero implements IPVPPeakDuelDefensiveHero {

        /**
         * Constructs a new PVPPeakDuelDefensiveHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPPeakDuelDefensiveHero);

        /** PVPPeakDuelDefensiveHero HeroUnitMap. */
        public HeroUnitMap: { [k: string]: data.IBagUnit };

        /** PVPPeakDuelDefensiveHero Power. */
        public Power: (number|Long);

        /**
         * Creates a new PVPPeakDuelDefensiveHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPPeakDuelDefensiveHero instance
         */
        public static create(properties?: data.IPVPPeakDuelDefensiveHero): data.PVPPeakDuelDefensiveHero;

        /**
         * Encodes the specified PVPPeakDuelDefensiveHero message. Does not implicitly {@link data.PVPPeakDuelDefensiveHero.verify|verify} messages.
         * @param message PVPPeakDuelDefensiveHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPPeakDuelDefensiveHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPPeakDuelDefensiveHero message, length delimited. Does not implicitly {@link data.PVPPeakDuelDefensiveHero.verify|verify} messages.
         * @param message PVPPeakDuelDefensiveHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPPeakDuelDefensiveHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPPeakDuelDefensiveHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPPeakDuelDefensiveHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPPeakDuelDefensiveHero;

        /**
         * Decodes a PVPPeakDuelDefensiveHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPPeakDuelDefensiveHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPPeakDuelDefensiveHero;

        /**
         * Verifies a PVPPeakDuelDefensiveHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPPeakDuelDefensiveHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPPeakDuelDefensiveHero
         */
        public static fromObject(object: { [k: string]: any }): data.PVPPeakDuelDefensiveHero;

        /**
         * Creates a plain object from a PVPPeakDuelDefensiveHero message. Also converts values to other types if specified.
         * @param message PVPPeakDuelDefensiveHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPPeakDuelDefensiveHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPPeakDuelDefensiveHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPPeakDuelIntegral. */
    interface IPVPPeakDuelIntegral {

        /** PVPPeakDuelIntegral User */
        User?: (data.IRankUser|null);

        /** PVPPeakDuelIntegral IsRobot */
        IsRobot?: (boolean|null);

        /** PVPPeakDuelIntegral Integral */
        Integral?: (number|null);

        /** PVPPeakDuelIntegral PVPPeakDuelDefensiveHeroList */
        PVPPeakDuelDefensiveHeroList?: (data.IPVPPeakDuelDefensiveHero[]|null);

        /** PVPPeakDuelIntegral Time */
        Time?: (number|Long|null);
    }

    /** Represents a PVPPeakDuelIntegral. */
    class PVPPeakDuelIntegral implements IPVPPeakDuelIntegral {

        /**
         * Constructs a new PVPPeakDuelIntegral.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPPeakDuelIntegral);

        /** PVPPeakDuelIntegral User. */
        public User?: (data.IRankUser|null);

        /** PVPPeakDuelIntegral IsRobot. */
        public IsRobot: boolean;

        /** PVPPeakDuelIntegral Integral. */
        public Integral: number;

        /** PVPPeakDuelIntegral PVPPeakDuelDefensiveHeroList. */
        public PVPPeakDuelDefensiveHeroList: data.IPVPPeakDuelDefensiveHero[];

        /** PVPPeakDuelIntegral Time. */
        public Time: (number|Long);

        /**
         * Creates a new PVPPeakDuelIntegral instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPPeakDuelIntegral instance
         */
        public static create(properties?: data.IPVPPeakDuelIntegral): data.PVPPeakDuelIntegral;

        /**
         * Encodes the specified PVPPeakDuelIntegral message. Does not implicitly {@link data.PVPPeakDuelIntegral.verify|verify} messages.
         * @param message PVPPeakDuelIntegral message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPPeakDuelIntegral, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPPeakDuelIntegral message, length delimited. Does not implicitly {@link data.PVPPeakDuelIntegral.verify|verify} messages.
         * @param message PVPPeakDuelIntegral message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPPeakDuelIntegral, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPPeakDuelIntegral message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPPeakDuelIntegral
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPPeakDuelIntegral;

        /**
         * Decodes a PVPPeakDuelIntegral message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPPeakDuelIntegral
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPPeakDuelIntegral;

        /**
         * Verifies a PVPPeakDuelIntegral message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPPeakDuelIntegral message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPPeakDuelIntegral
         */
        public static fromObject(object: { [k: string]: any }): data.PVPPeakDuelIntegral;

        /**
         * Creates a plain object from a PVPPeakDuelIntegral message. Also converts values to other types if specified.
         * @param message PVPPeakDuelIntegral
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPPeakDuelIntegral, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPPeakDuelIntegral to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerFiveHeroRank. */
    interface IPowerFiveHeroRank {

        /** PowerFiveHeroRank PowerFiveHeroList */
        PowerFiveHeroList?: (data.IPowerFiveHero[]|null);
    }

    /** Represents a PowerFiveHeroRank. */
    class PowerFiveHeroRank implements IPowerFiveHeroRank {

        /**
         * Constructs a new PowerFiveHeroRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPowerFiveHeroRank);

        /** PowerFiveHeroRank PowerFiveHeroList. */
        public PowerFiveHeroList: data.IPowerFiveHero[];

        /**
         * Creates a new PowerFiveHeroRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerFiveHeroRank instance
         */
        public static create(properties?: data.IPowerFiveHeroRank): data.PowerFiveHeroRank;

        /**
         * Encodes the specified PowerFiveHeroRank message. Does not implicitly {@link data.PowerFiveHeroRank.verify|verify} messages.
         * @param message PowerFiveHeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPowerFiveHeroRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerFiveHeroRank message, length delimited. Does not implicitly {@link data.PowerFiveHeroRank.verify|verify} messages.
         * @param message PowerFiveHeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPowerFiveHeroRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerFiveHeroRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerFiveHeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PowerFiveHeroRank;

        /**
         * Decodes a PowerFiveHeroRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerFiveHeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PowerFiveHeroRank;

        /**
         * Verifies a PowerFiveHeroRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerFiveHeroRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerFiveHeroRank
         */
        public static fromObject(object: { [k: string]: any }): data.PowerFiveHeroRank;

        /**
         * Creates a plain object from a PowerFiveHeroRank message. Also converts values to other types if specified.
         * @param message PowerFiveHeroRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PowerFiveHeroRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerFiveHeroRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerOneHeroRank. */
    interface IPowerOneHeroRank {

        /** PowerOneHeroRank PowerOneHeroList */
        PowerOneHeroList?: (data.IPowerOneHero[]|null);
    }

    /** Represents a PowerOneHeroRank. */
    class PowerOneHeroRank implements IPowerOneHeroRank {

        /**
         * Constructs a new PowerOneHeroRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPowerOneHeroRank);

        /** PowerOneHeroRank PowerOneHeroList. */
        public PowerOneHeroList: data.IPowerOneHero[];

        /**
         * Creates a new PowerOneHeroRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerOneHeroRank instance
         */
        public static create(properties?: data.IPowerOneHeroRank): data.PowerOneHeroRank;

        /**
         * Encodes the specified PowerOneHeroRank message. Does not implicitly {@link data.PowerOneHeroRank.verify|verify} messages.
         * @param message PowerOneHeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPowerOneHeroRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerOneHeroRank message, length delimited. Does not implicitly {@link data.PowerOneHeroRank.verify|verify} messages.
         * @param message PowerOneHeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPowerOneHeroRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerOneHeroRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerOneHeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PowerOneHeroRank;

        /**
         * Decodes a PowerOneHeroRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerOneHeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PowerOneHeroRank;

        /**
         * Verifies a PowerOneHeroRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerOneHeroRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerOneHeroRank
         */
        public static fromObject(object: { [k: string]: any }): data.PowerOneHeroRank;

        /**
         * Creates a plain object from a PowerOneHeroRank message. Also converts values to other types if specified.
         * @param message PowerOneHeroRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PowerOneHeroRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerOneHeroRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerTotalHeroRank. */
    interface IPowerTotalHeroRank {

        /** PowerTotalHeroRank PowerTotalHeroList */
        PowerTotalHeroList?: (data.IPowerTotalHero[]|null);
    }

    /** Represents a PowerTotalHeroRank. */
    class PowerTotalHeroRank implements IPowerTotalHeroRank {

        /**
         * Constructs a new PowerTotalHeroRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPowerTotalHeroRank);

        /** PowerTotalHeroRank PowerTotalHeroList. */
        public PowerTotalHeroList: data.IPowerTotalHero[];

        /**
         * Creates a new PowerTotalHeroRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerTotalHeroRank instance
         */
        public static create(properties?: data.IPowerTotalHeroRank): data.PowerTotalHeroRank;

        /**
         * Encodes the specified PowerTotalHeroRank message. Does not implicitly {@link data.PowerTotalHeroRank.verify|verify} messages.
         * @param message PowerTotalHeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPowerTotalHeroRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerTotalHeroRank message, length delimited. Does not implicitly {@link data.PowerTotalHeroRank.verify|verify} messages.
         * @param message PowerTotalHeroRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPowerTotalHeroRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerTotalHeroRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerTotalHeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PowerTotalHeroRank;

        /**
         * Decodes a PowerTotalHeroRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerTotalHeroRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PowerTotalHeroRank;

        /**
         * Verifies a PowerTotalHeroRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerTotalHeroRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerTotalHeroRank
         */
        public static fromObject(object: { [k: string]: any }): data.PowerTotalHeroRank;

        /**
         * Creates a plain object from a PowerTotalHeroRank message. Also converts values to other types if specified.
         * @param message PowerTotalHeroRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PowerTotalHeroRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerTotalHeroRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPFairyIntegralRank. */
    interface IPVPFairyIntegralRank {

        /** PVPFairyIntegralRank PVPFairyIntegralList */
        PVPFairyIntegralList?: (data.IPVPFairyIntegral[]|null);
    }

    /** Represents a PVPFairyIntegralRank. */
    class PVPFairyIntegralRank implements IPVPFairyIntegralRank {

        /**
         * Constructs a new PVPFairyIntegralRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPFairyIntegralRank);

        /** PVPFairyIntegralRank PVPFairyIntegralList. */
        public PVPFairyIntegralList: data.IPVPFairyIntegral[];

        /**
         * Creates a new PVPFairyIntegralRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPFairyIntegralRank instance
         */
        public static create(properties?: data.IPVPFairyIntegralRank): data.PVPFairyIntegralRank;

        /**
         * Encodes the specified PVPFairyIntegralRank message. Does not implicitly {@link data.PVPFairyIntegralRank.verify|verify} messages.
         * @param message PVPFairyIntegralRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPFairyIntegralRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPFairyIntegralRank message, length delimited. Does not implicitly {@link data.PVPFairyIntegralRank.verify|verify} messages.
         * @param message PVPFairyIntegralRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPFairyIntegralRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPFairyIntegralRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPFairyIntegralRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPFairyIntegralRank;

        /**
         * Decodes a PVPFairyIntegralRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPFairyIntegralRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPFairyIntegralRank;

        /**
         * Verifies a PVPFairyIntegralRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPFairyIntegralRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPFairyIntegralRank
         */
        public static fromObject(object: { [k: string]: any }): data.PVPFairyIntegralRank;

        /**
         * Creates a plain object from a PVPFairyIntegralRank message. Also converts values to other types if specified.
         * @param message PVPFairyIntegralRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPFairyIntegralRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPFairyIntegralRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVEAdventureScaleRank. */
    interface IPVEAdventureScaleRank {

        /** PVEAdventureScaleRank PVEAdventureScaleList */
        PVEAdventureScaleList?: (data.IPVEAdventureScale[]|null);
    }

    /** Represents a PVEAdventureScaleRank. */
    class PVEAdventureScaleRank implements IPVEAdventureScaleRank {

        /**
         * Constructs a new PVEAdventureScaleRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVEAdventureScaleRank);

        /** PVEAdventureScaleRank PVEAdventureScaleList. */
        public PVEAdventureScaleList: data.IPVEAdventureScale[];

        /**
         * Creates a new PVEAdventureScaleRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVEAdventureScaleRank instance
         */
        public static create(properties?: data.IPVEAdventureScaleRank): data.PVEAdventureScaleRank;

        /**
         * Encodes the specified PVEAdventureScaleRank message. Does not implicitly {@link data.PVEAdventureScaleRank.verify|verify} messages.
         * @param message PVEAdventureScaleRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVEAdventureScaleRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVEAdventureScaleRank message, length delimited. Does not implicitly {@link data.PVEAdventureScaleRank.verify|verify} messages.
         * @param message PVEAdventureScaleRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVEAdventureScaleRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVEAdventureScaleRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVEAdventureScaleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVEAdventureScaleRank;

        /**
         * Decodes a PVEAdventureScaleRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVEAdventureScaleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVEAdventureScaleRank;

        /**
         * Verifies a PVEAdventureScaleRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVEAdventureScaleRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVEAdventureScaleRank
         */
        public static fromObject(object: { [k: string]: any }): data.PVEAdventureScaleRank;

        /**
         * Creates a plain object from a PVEAdventureScaleRank message. Also converts values to other types if specified.
         * @param message PVEAdventureScaleRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVEAdventureScaleRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVEAdventureScaleRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVEDreamScaleRank. */
    interface IPVEDreamScaleRank {

        /** PVEDreamScaleRank PVEDreamScaleList */
        PVEDreamScaleList?: (data.IPVEDreamScale[]|null);
    }

    /** Represents a PVEDreamScaleRank. */
    class PVEDreamScaleRank implements IPVEDreamScaleRank {

        /**
         * Constructs a new PVEDreamScaleRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVEDreamScaleRank);

        /** PVEDreamScaleRank PVEDreamScaleList. */
        public PVEDreamScaleList: data.IPVEDreamScale[];

        /**
         * Creates a new PVEDreamScaleRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVEDreamScaleRank instance
         */
        public static create(properties?: data.IPVEDreamScaleRank): data.PVEDreamScaleRank;

        /**
         * Encodes the specified PVEDreamScaleRank message. Does not implicitly {@link data.PVEDreamScaleRank.verify|verify} messages.
         * @param message PVEDreamScaleRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVEDreamScaleRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVEDreamScaleRank message, length delimited. Does not implicitly {@link data.PVEDreamScaleRank.verify|verify} messages.
         * @param message PVEDreamScaleRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVEDreamScaleRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVEDreamScaleRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVEDreamScaleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVEDreamScaleRank;

        /**
         * Decodes a PVEDreamScaleRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVEDreamScaleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVEDreamScaleRank;

        /**
         * Verifies a PVEDreamScaleRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVEDreamScaleRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVEDreamScaleRank
         */
        public static fromObject(object: { [k: string]: any }): data.PVEDreamScaleRank;

        /**
         * Creates a plain object from a PVEDreamScaleRank message. Also converts values to other types if specified.
         * @param message PVEDreamScaleRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVEDreamScaleRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVEDreamScaleRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryScaleRank. */
    interface ITrialPurgatoryScaleRank {

        /** TrialPurgatoryScaleRank TrialPurgatoryScaleList */
        TrialPurgatoryScaleList?: (data.ITrialPurgatoryScale[]|null);
    }

    /** Represents a TrialPurgatoryScaleRank. */
    class TrialPurgatoryScaleRank implements ITrialPurgatoryScaleRank {

        /**
         * Constructs a new TrialPurgatoryScaleRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialPurgatoryScaleRank);

        /** TrialPurgatoryScaleRank TrialPurgatoryScaleList. */
        public TrialPurgatoryScaleList: data.ITrialPurgatoryScale[];

        /**
         * Creates a new TrialPurgatoryScaleRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryScaleRank instance
         */
        public static create(properties?: data.ITrialPurgatoryScaleRank): data.TrialPurgatoryScaleRank;

        /**
         * Encodes the specified TrialPurgatoryScaleRank message. Does not implicitly {@link data.TrialPurgatoryScaleRank.verify|verify} messages.
         * @param message TrialPurgatoryScaleRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialPurgatoryScaleRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryScaleRank message, length delimited. Does not implicitly {@link data.TrialPurgatoryScaleRank.verify|verify} messages.
         * @param message TrialPurgatoryScaleRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialPurgatoryScaleRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryScaleRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryScaleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialPurgatoryScaleRank;

        /**
         * Decodes a TrialPurgatoryScaleRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryScaleRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialPurgatoryScaleRank;

        /**
         * Verifies a TrialPurgatoryScaleRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryScaleRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryScaleRank
         */
        public static fromObject(object: { [k: string]: any }): data.TrialPurgatoryScaleRank;

        /**
         * Creates a plain object from a TrialPurgatoryScaleRank message. Also converts values to other types if specified.
         * @param message TrialPurgatoryScaleRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialPurgatoryScaleRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryScaleRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialDevilDamageRank. */
    interface ITrialDevilDamageRank {

        /** TrialDevilDamageRank RefreshTime2 */
        RefreshTime2?: (number|Long|null);

        /** TrialDevilDamageRank TrialDevilDamageList */
        TrialDevilDamageList?: (data.ITrialDevilDamage[]|null);
    }

    /** Represents a TrialDevilDamageRank. */
    class TrialDevilDamageRank implements ITrialDevilDamageRank {

        /**
         * Constructs a new TrialDevilDamageRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialDevilDamageRank);

        /** TrialDevilDamageRank RefreshTime2. */
        public RefreshTime2: (number|Long);

        /** TrialDevilDamageRank TrialDevilDamageList. */
        public TrialDevilDamageList: data.ITrialDevilDamage[];

        /**
         * Creates a new TrialDevilDamageRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialDevilDamageRank instance
         */
        public static create(properties?: data.ITrialDevilDamageRank): data.TrialDevilDamageRank;

        /**
         * Encodes the specified TrialDevilDamageRank message. Does not implicitly {@link data.TrialDevilDamageRank.verify|verify} messages.
         * @param message TrialDevilDamageRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialDevilDamageRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialDevilDamageRank message, length delimited. Does not implicitly {@link data.TrialDevilDamageRank.verify|verify} messages.
         * @param message TrialDevilDamageRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialDevilDamageRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialDevilDamageRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialDevilDamageRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialDevilDamageRank;

        /**
         * Decodes a TrialDevilDamageRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialDevilDamageRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialDevilDamageRank;

        /**
         * Verifies a TrialDevilDamageRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialDevilDamageRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialDevilDamageRank
         */
        public static fromObject(object: { [k: string]: any }): data.TrialDevilDamageRank;

        /**
         * Creates a plain object from a TrialDevilDamageRank message. Also converts values to other types if specified.
         * @param message TrialDevilDamageRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialDevilDamageRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialDevilDamageRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PVPPeakDuelIntegralRank. */
    interface IPVPPeakDuelIntegralRank {

        /** PVPPeakDuelIntegralRank RefreshTime2 */
        RefreshTime2?: (number|Long|null);

        /** PVPPeakDuelIntegralRank PVPPeakDuelIntegralList */
        PVPPeakDuelIntegralList?: (data.IPVPPeakDuelIntegral[]|null);
    }

    /** Represents a PVPPeakDuelIntegralRank. */
    class PVPPeakDuelIntegralRank implements IPVPPeakDuelIntegralRank {

        /**
         * Constructs a new PVPPeakDuelIntegralRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPVPPeakDuelIntegralRank);

        /** PVPPeakDuelIntegralRank RefreshTime2. */
        public RefreshTime2: (number|Long);

        /** PVPPeakDuelIntegralRank PVPPeakDuelIntegralList. */
        public PVPPeakDuelIntegralList: data.IPVPPeakDuelIntegral[];

        /**
         * Creates a new PVPPeakDuelIntegralRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PVPPeakDuelIntegralRank instance
         */
        public static create(properties?: data.IPVPPeakDuelIntegralRank): data.PVPPeakDuelIntegralRank;

        /**
         * Encodes the specified PVPPeakDuelIntegralRank message. Does not implicitly {@link data.PVPPeakDuelIntegralRank.verify|verify} messages.
         * @param message PVPPeakDuelIntegralRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPVPPeakDuelIntegralRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PVPPeakDuelIntegralRank message, length delimited. Does not implicitly {@link data.PVPPeakDuelIntegralRank.verify|verify} messages.
         * @param message PVPPeakDuelIntegralRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPVPPeakDuelIntegralRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PVPPeakDuelIntegralRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PVPPeakDuelIntegralRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PVPPeakDuelIntegralRank;

        /**
         * Decodes a PVPPeakDuelIntegralRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PVPPeakDuelIntegralRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PVPPeakDuelIntegralRank;

        /**
         * Verifies a PVPPeakDuelIntegralRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PVPPeakDuelIntegralRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PVPPeakDuelIntegralRank
         */
        public static fromObject(object: { [k: string]: any }): data.PVPPeakDuelIntegralRank;

        /**
         * Creates a plain object from a PVPPeakDuelIntegralRank message. Also converts values to other types if specified.
         * @param message PVPPeakDuelIntegralRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PVPPeakDuelIntegralRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PVPPeakDuelIntegralRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RefreshData. */
    interface IRefreshData {

        /** RefreshData RefreshTime1 */
        RefreshTime1?: (number|Long|null);

        /** RefreshData RefreshTime2 */
        RefreshTime2?: (number|Long|null);
    }

    /** Represents a RefreshData. */
    class RefreshData implements IRefreshData {

        /**
         * Constructs a new RefreshData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IRefreshData);

        /** RefreshData RefreshTime1. */
        public RefreshTime1: (number|Long);

        /** RefreshData RefreshTime2. */
        public RefreshTime2: (number|Long);

        /**
         * Creates a new RefreshData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RefreshData instance
         */
        public static create(properties?: data.IRefreshData): data.RefreshData;

        /**
         * Encodes the specified RefreshData message. Does not implicitly {@link data.RefreshData.verify|verify} messages.
         * @param message RefreshData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IRefreshData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RefreshData message, length delimited. Does not implicitly {@link data.RefreshData.verify|verify} messages.
         * @param message RefreshData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IRefreshData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RefreshData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RefreshData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.RefreshData;

        /**
         * Decodes a RefreshData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RefreshData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.RefreshData;

        /**
         * Verifies a RefreshData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RefreshData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RefreshData
         */
        public static fromObject(object: { [k: string]: any }): data.RefreshData;

        /**
         * Creates a plain object from a RefreshData message. Also converts values to other types if specified.
         * @param message RefreshData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.RefreshData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RefreshData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopRandomShopData. */
    interface IShopRandomShopData {

        /** ShopRandomShopData RandomCount */
        RandomCount?: (number|null);

        /** ShopRandomShopData RandomShopCommodityIDMap */
        RandomShopCommodityIDMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a ShopRandomShopData. */
    class ShopRandomShopData implements IShopRandomShopData {

        /**
         * Constructs a new ShopRandomShopData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IShopRandomShopData);

        /** ShopRandomShopData RandomCount. */
        public RandomCount: number;

        /** ShopRandomShopData RandomShopCommodityIDMap. */
        public RandomShopCommodityIDMap: { [k: string]: boolean };

        /**
         * Creates a new ShopRandomShopData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopRandomShopData instance
         */
        public static create(properties?: data.IShopRandomShopData): data.ShopRandomShopData;

        /**
         * Encodes the specified ShopRandomShopData message. Does not implicitly {@link data.ShopRandomShopData.verify|verify} messages.
         * @param message ShopRandomShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IShopRandomShopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopRandomShopData message, length delimited. Does not implicitly {@link data.ShopRandomShopData.verify|verify} messages.
         * @param message ShopRandomShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IShopRandomShopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopRandomShopData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopRandomShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ShopRandomShopData;

        /**
         * Decodes a ShopRandomShopData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopRandomShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ShopRandomShopData;

        /**
         * Verifies a ShopRandomShopData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopRandomShopData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopRandomShopData
         */
        public static fromObject(object: { [k: string]: any }): data.ShopRandomShopData;

        /**
         * Creates a plain object from a ShopRandomShopData message. Also converts values to other types if specified.
         * @param message ShopRandomShopData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ShopRandomShopData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopRandomShopData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopTimeFiniteGiftBale. */
    interface IShopTimeFiniteGiftBale {

        /** ShopTimeFiniteGiftBale ID */
        ID?: (number|null);

        /** ShopTimeFiniteGiftBale GiftID */
        GiftID?: (number|null);

        /** ShopTimeFiniteGiftBale ExpiredTime */
        ExpiredTime?: (number|Long|null);

        /** ShopTimeFiniteGiftBale TimerIndex */
        TimerIndex?: (number|Long|null);
    }

    /** Represents a ShopTimeFiniteGiftBale. */
    class ShopTimeFiniteGiftBale implements IShopTimeFiniteGiftBale {

        /**
         * Constructs a new ShopTimeFiniteGiftBale.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IShopTimeFiniteGiftBale);

        /** ShopTimeFiniteGiftBale ID. */
        public ID: number;

        /** ShopTimeFiniteGiftBale GiftID. */
        public GiftID: number;

        /** ShopTimeFiniteGiftBale ExpiredTime. */
        public ExpiredTime: (number|Long);

        /** ShopTimeFiniteGiftBale TimerIndex. */
        public TimerIndex: (number|Long);

        /**
         * Creates a new ShopTimeFiniteGiftBale instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopTimeFiniteGiftBale instance
         */
        public static create(properties?: data.IShopTimeFiniteGiftBale): data.ShopTimeFiniteGiftBale;

        /**
         * Encodes the specified ShopTimeFiniteGiftBale message. Does not implicitly {@link data.ShopTimeFiniteGiftBale.verify|verify} messages.
         * @param message ShopTimeFiniteGiftBale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IShopTimeFiniteGiftBale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopTimeFiniteGiftBale message, length delimited. Does not implicitly {@link data.ShopTimeFiniteGiftBale.verify|verify} messages.
         * @param message ShopTimeFiniteGiftBale message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IShopTimeFiniteGiftBale, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopTimeFiniteGiftBale message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopTimeFiniteGiftBale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ShopTimeFiniteGiftBale;

        /**
         * Decodes a ShopTimeFiniteGiftBale message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopTimeFiniteGiftBale
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ShopTimeFiniteGiftBale;

        /**
         * Verifies a ShopTimeFiniteGiftBale message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopTimeFiniteGiftBale message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopTimeFiniteGiftBale
         */
        public static fromObject(object: { [k: string]: any }): data.ShopTimeFiniteGiftBale;

        /**
         * Creates a plain object from a ShopTimeFiniteGiftBale message. Also converts values to other types if specified.
         * @param message ShopTimeFiniteGiftBale
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ShopTimeFiniteGiftBale, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopTimeFiniteGiftBale to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopTimeFiniteGiftData. */
    interface IShopTimeFiniteGiftData {

        /** ShopTimeFiniteGiftData Seq */
        Seq?: (number|null);

        /** ShopTimeFiniteGiftData TouchCount */
        TouchCount?: (number|null);

        /** ShopTimeFiniteGiftData NextFoundGiftTime */
        NextFoundGiftTime?: (number|Long|null);

        /** ShopTimeFiniteGiftData RechargeTotal */
        RechargeTotal?: (number|null);

        /** ShopTimeFiniteGiftData RechargeTimes */
        RechargeTimes?: (number|null);

        /** ShopTimeFiniteGiftData RechargeHighList */
        RechargeHighList?: (number[]|null);

        /** ShopTimeFiniteGiftData RechargeHighAverage */
        RechargeHighAverage?: (number|null);

        /** ShopTimeFiniteGiftData ShopTimeFiniteGiftBaleMap */
        ShopTimeFiniteGiftBaleMap?: ({ [k: string]: data.IShopTimeFiniteGiftBale }|null);

        /** ShopTimeFiniteGiftData ShopTimeFiniteGiftBaleMap2 */
        ShopTimeFiniteGiftBaleMap2?: ({ [k: string]: data.IShopTimeFiniteGiftBale }|null);
    }

    /** Represents a ShopTimeFiniteGiftData. */
    class ShopTimeFiniteGiftData implements IShopTimeFiniteGiftData {

        /**
         * Constructs a new ShopTimeFiniteGiftData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IShopTimeFiniteGiftData);

        /** ShopTimeFiniteGiftData Seq. */
        public Seq: number;

        /** ShopTimeFiniteGiftData TouchCount. */
        public TouchCount: number;

        /** ShopTimeFiniteGiftData NextFoundGiftTime. */
        public NextFoundGiftTime: (number|Long);

        /** ShopTimeFiniteGiftData RechargeTotal. */
        public RechargeTotal: number;

        /** ShopTimeFiniteGiftData RechargeTimes. */
        public RechargeTimes: number;

        /** ShopTimeFiniteGiftData RechargeHighList. */
        public RechargeHighList: number[];

        /** ShopTimeFiniteGiftData RechargeHighAverage. */
        public RechargeHighAverage: number;

        /** ShopTimeFiniteGiftData ShopTimeFiniteGiftBaleMap. */
        public ShopTimeFiniteGiftBaleMap: { [k: string]: data.IShopTimeFiniteGiftBale };

        /** ShopTimeFiniteGiftData ShopTimeFiniteGiftBaleMap2. */
        public ShopTimeFiniteGiftBaleMap2: { [k: string]: data.IShopTimeFiniteGiftBale };

        /**
         * Creates a new ShopTimeFiniteGiftData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopTimeFiniteGiftData instance
         */
        public static create(properties?: data.IShopTimeFiniteGiftData): data.ShopTimeFiniteGiftData;

        /**
         * Encodes the specified ShopTimeFiniteGiftData message. Does not implicitly {@link data.ShopTimeFiniteGiftData.verify|verify} messages.
         * @param message ShopTimeFiniteGiftData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IShopTimeFiniteGiftData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopTimeFiniteGiftData message, length delimited. Does not implicitly {@link data.ShopTimeFiniteGiftData.verify|verify} messages.
         * @param message ShopTimeFiniteGiftData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IShopTimeFiniteGiftData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopTimeFiniteGiftData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopTimeFiniteGiftData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ShopTimeFiniteGiftData;

        /**
         * Decodes a ShopTimeFiniteGiftData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopTimeFiniteGiftData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ShopTimeFiniteGiftData;

        /**
         * Verifies a ShopTimeFiniteGiftData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopTimeFiniteGiftData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopTimeFiniteGiftData
         */
        public static fromObject(object: { [k: string]: any }): data.ShopTimeFiniteGiftData;

        /**
         * Creates a plain object from a ShopTimeFiniteGiftData message. Also converts values to other types if specified.
         * @param message ShopTimeFiniteGiftData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ShopTimeFiniteGiftData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopTimeFiniteGiftData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopData. */
    interface IShopData {

        /** ShopData ShopRandomShopData */
        ShopRandomShopData?: (data.IShopRandomShopData|null);

        /** ShopData ShopTimeFiniteGiftData */
        ShopTimeFiniteGiftData?: (data.IShopTimeFiniteGiftData|null);
    }

    /** Represents a ShopData. */
    class ShopData implements IShopData {

        /**
         * Constructs a new ShopData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IShopData);

        /** ShopData ShopRandomShopData. */
        public ShopRandomShopData?: (data.IShopRandomShopData|null);

        /** ShopData ShopTimeFiniteGiftData. */
        public ShopTimeFiniteGiftData?: (data.IShopTimeFiniteGiftData|null);

        /**
         * Creates a new ShopData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopData instance
         */
        public static create(properties?: data.IShopData): data.ShopData;

        /**
         * Encodes the specified ShopData message. Does not implicitly {@link data.ShopData.verify|verify} messages.
         * @param message ShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IShopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopData message, length delimited. Does not implicitly {@link data.ShopData.verify|verify} messages.
         * @param message ShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IShopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ShopData;

        /**
         * Decodes a ShopData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ShopData;

        /**
         * Verifies a ShopData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopData
         */
        public static fromObject(object: { [k: string]: any }): data.ShopData;

        /**
         * Creates a plain object from a ShopData message. Also converts values to other types if specified.
         * @param message ShopData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ShopData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskTargetData. */
    interface ITaskTargetData {

        /** TaskTargetData GroupCountMap */
        GroupCountMap?: ({ [k: string]: number }|null);

        /** TaskTargetData ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a TaskTargetData. */
    class TaskTargetData implements ITaskTargetData {

        /**
         * Constructs a new TaskTargetData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITaskTargetData);

        /** TaskTargetData GroupCountMap. */
        public GroupCountMap: { [k: string]: number };

        /** TaskTargetData ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new TaskTargetData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskTargetData instance
         */
        public static create(properties?: data.ITaskTargetData): data.TaskTargetData;

        /**
         * Encodes the specified TaskTargetData message. Does not implicitly {@link data.TaskTargetData.verify|verify} messages.
         * @param message TaskTargetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITaskTargetData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskTargetData message, length delimited. Does not implicitly {@link data.TaskTargetData.verify|verify} messages.
         * @param message TaskTargetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITaskTargetData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskTargetData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskTargetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TaskTargetData;

        /**
         * Decodes a TaskTargetData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskTargetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TaskTargetData;

        /**
         * Verifies a TaskTargetData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskTargetData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskTargetData
         */
        public static fromObject(object: { [k: string]: any }): data.TaskTargetData;

        /**
         * Creates a plain object from a TaskTargetData message. Also converts values to other types if specified.
         * @param message TaskTargetData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TaskTargetData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskTargetData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskMainData. */
    interface ITaskMainData {

        /** TaskMainData ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a TaskMainData. */
    class TaskMainData implements ITaskMainData {

        /**
         * Constructs a new TaskMainData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITaskMainData);

        /** TaskMainData ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /**
         * Creates a new TaskMainData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskMainData instance
         */
        public static create(properties?: data.ITaskMainData): data.TaskMainData;

        /**
         * Encodes the specified TaskMainData message. Does not implicitly {@link data.TaskMainData.verify|verify} messages.
         * @param message TaskMainData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITaskMainData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskMainData message, length delimited. Does not implicitly {@link data.TaskMainData.verify|verify} messages.
         * @param message TaskMainData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITaskMainData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskMainData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskMainData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TaskMainData;

        /**
         * Decodes a TaskMainData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskMainData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TaskMainData;

        /**
         * Verifies a TaskMainData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskMainData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskMainData
         */
        public static fromObject(object: { [k: string]: any }): data.TaskMainData;

        /**
         * Creates a plain object from a TaskMainData message. Also converts values to other types if specified.
         * @param message TaskMainData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TaskMainData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskMainData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskData. */
    interface ITaskData {

        /** TaskData TaskTargetData */
        TaskTargetData?: (data.ITaskTargetData|null);

        /** TaskData TaskMainData */
        TaskMainData?: (data.ITaskMainData|null);
    }

    /** Represents a TaskData. */
    class TaskData implements ITaskData {

        /**
         * Constructs a new TaskData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITaskData);

        /** TaskData TaskTargetData. */
        public TaskTargetData?: (data.ITaskTargetData|null);

        /** TaskData TaskMainData. */
        public TaskMainData?: (data.ITaskMainData|null);

        /**
         * Creates a new TaskData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskData instance
         */
        public static create(properties?: data.ITaskData): data.TaskData;

        /**
         * Encodes the specified TaskData message. Does not implicitly {@link data.TaskData.verify|verify} messages.
         * @param message TaskData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITaskData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskData message, length delimited. Does not implicitly {@link data.TaskData.verify|verify} messages.
         * @param message TaskData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITaskData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TaskData;

        /**
         * Decodes a TaskData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TaskData;

        /**
         * Verifies a TaskData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskData
         */
        public static fromObject(object: { [k: string]: any }): data.TaskData;

        /**
         * Creates a plain object from a TaskData message. Also converts values to other types if specified.
         * @param message TaskData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TaskData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TIME_LIMIT_PLAY_TYPE enum. */
    enum TIME_LIMIT_PLAY_TYPE {
        TRAVEL = 0,
        FANTASY = 1
    }

    /** Properties of a TravelShopData. */
    interface ITravelShopData {

        /** TravelShopData ShopID */
        ShopID?: (number|null);

        /** TravelShopData isBuy */
        isBuy?: (boolean|null);
    }

    /** Represents a TravelShopData. */
    class TravelShopData implements ITravelShopData {

        /**
         * Constructs a new TravelShopData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITravelShopData);

        /** TravelShopData ShopID. */
        public ShopID: number;

        /** TravelShopData isBuy. */
        public isBuy: boolean;

        /**
         * Creates a new TravelShopData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TravelShopData instance
         */
        public static create(properties?: data.ITravelShopData): data.TravelShopData;

        /**
         * Encodes the specified TravelShopData message. Does not implicitly {@link data.TravelShopData.verify|verify} messages.
         * @param message TravelShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITravelShopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TravelShopData message, length delimited. Does not implicitly {@link data.TravelShopData.verify|verify} messages.
         * @param message TravelShopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITravelShopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TravelShopData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TravelShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TravelShopData;

        /**
         * Decodes a TravelShopData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TravelShopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TravelShopData;

        /**
         * Verifies a TravelShopData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TravelShopData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TravelShopData
         */
        public static fromObject(object: { [k: string]: any }): data.TravelShopData;

        /**
         * Creates a plain object from a TravelShopData message. Also converts values to other types if specified.
         * @param message TravelShopData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TravelShopData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TravelShopData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TravelData. */
    interface ITravelData {

        /** TravelData CompensateWeightMap */
        CompensateWeightMap?: ({ [k: string]: number }|null);

        /** TravelData RandomShopTextIndex */
        RandomShopTextIndex?: (number|null);

        /** TravelData ShopDataMap */
        ShopDataMap?: ({ [k: string]: data.ITravelShopData }|null);

        /** TravelData TouchTime */
        TouchTime?: (number|Long|null);

        /** TravelData ExpiredTime */
        ExpiredTime?: (number|Long|null);

        /** TravelData TimerIndex */
        TimerIndex?: (number|Long|null);
    }

    /** Represents a TravelData. */
    class TravelData implements ITravelData {

        /**
         * Constructs a new TravelData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITravelData);

        /** TravelData CompensateWeightMap. */
        public CompensateWeightMap: { [k: string]: number };

        /** TravelData RandomShopTextIndex. */
        public RandomShopTextIndex: number;

        /** TravelData ShopDataMap. */
        public ShopDataMap: { [k: string]: data.ITravelShopData };

        /** TravelData TouchTime. */
        public TouchTime: (number|Long);

        /** TravelData ExpiredTime. */
        public ExpiredTime: (number|Long);

        /** TravelData TimerIndex. */
        public TimerIndex: (number|Long);

        /**
         * Creates a new TravelData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TravelData instance
         */
        public static create(properties?: data.ITravelData): data.TravelData;

        /**
         * Encodes the specified TravelData message. Does not implicitly {@link data.TravelData.verify|verify} messages.
         * @param message TravelData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITravelData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TravelData message, length delimited. Does not implicitly {@link data.TravelData.verify|verify} messages.
         * @param message TravelData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITravelData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TravelData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TravelData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TravelData;

        /**
         * Decodes a TravelData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TravelData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TravelData;

        /**
         * Verifies a TravelData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TravelData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TravelData
         */
        public static fromObject(object: { [k: string]: any }): data.TravelData;

        /**
         * Creates a plain object from a TravelData message. Also converts values to other types if specified.
         * @param message TravelData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TravelData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TravelData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FightData. */
    interface IFightData {

        /** FightData ID */
        ID?: (number|Long|null);

        /** FightData FightID */
        FightID?: (number|null);

        /** FightData MonsterIDList */
        MonsterIDList?: (number[]|null);

        /** FightData Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** FightData TouchTime */
        TouchTime?: (number|Long|null);

        /** FightData ExpiredTime */
        ExpiredTime?: (number|Long|null);

        /** FightData timerIndex */
        timerIndex?: (number|Long|null);
    }

    /** Represents a FightData. */
    class FightData implements IFightData {

        /**
         * Constructs a new FightData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFightData);

        /** FightData ID. */
        public ID: (number|Long);

        /** FightData FightID. */
        public FightID: number;

        /** FightData MonsterIDList. */
        public MonsterIDList: number[];

        /** FightData Prizes. */
        public Prizes: data.IItemInfo[];

        /** FightData TouchTime. */
        public TouchTime: (number|Long);

        /** FightData ExpiredTime. */
        public ExpiredTime: (number|Long);

        /** FightData timerIndex. */
        public timerIndex: (number|Long);

        /**
         * Creates a new FightData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FightData instance
         */
        public static create(properties?: data.IFightData): data.FightData;

        /**
         * Encodes the specified FightData message. Does not implicitly {@link data.FightData.verify|verify} messages.
         * @param message FightData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFightData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FightData message, length delimited. Does not implicitly {@link data.FightData.verify|verify} messages.
         * @param message FightData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFightData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FightData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FightData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FightData;

        /**
         * Decodes a FightData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FightData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FightData;

        /**
         * Verifies a FightData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FightData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FightData
         */
        public static fromObject(object: { [k: string]: any }): data.FightData;

        /**
         * Creates a plain object from a FightData message. Also converts values to other types if specified.
         * @param message FightData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FightData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FightData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FantasyData. */
    interface IFantasyData {

        /** FantasyData Seq */
        Seq?: (number|Long|null);

        /** FantasyData FightDataMap */
        FightDataMap?: ({ [k: string]: data.IFightData }|null);

        /** FantasyData FightDataMap2 */
        FightDataMap2?: ({ [k: string]: data.IFightData }|null);
    }

    /** Represents a FantasyData. */
    class FantasyData implements IFantasyData {

        /**
         * Constructs a new FantasyData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IFantasyData);

        /** FantasyData Seq. */
        public Seq: (number|Long);

        /** FantasyData FightDataMap. */
        public FightDataMap: { [k: string]: data.IFightData };

        /** FantasyData FightDataMap2. */
        public FightDataMap2: { [k: string]: data.IFightData };

        /**
         * Creates a new FantasyData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FantasyData instance
         */
        public static create(properties?: data.IFantasyData): data.FantasyData;

        /**
         * Encodes the specified FantasyData message. Does not implicitly {@link data.FantasyData.verify|verify} messages.
         * @param message FantasyData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IFantasyData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FantasyData message, length delimited. Does not implicitly {@link data.FantasyData.verify|verify} messages.
         * @param message FantasyData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IFantasyData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FantasyData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FantasyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.FantasyData;

        /**
         * Decodes a FantasyData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FantasyData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.FantasyData;

        /**
         * Verifies a FantasyData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FantasyData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FantasyData
         */
        public static fromObject(object: { [k: string]: any }): data.FantasyData;

        /**
         * Creates a plain object from a FantasyData message. Also converts values to other types if specified.
         * @param message FantasyData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.FantasyData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FantasyData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayData. */
    interface IPlayData {

        /** PlayData PlayType */
        PlayType?: (number|null);

        /** PlayData TouchCount */
        TouchCount?: (number|null);

        /** PlayData LastTime */
        LastTime?: (number|Long|null);

        /** PlayData FiringPinIndex */
        FiringPinIndex?: (number|null);

        /** PlayData FiringPinLucky */
        FiringPinLucky?: (number|null);

        /** PlayData TravelData */
        TravelData?: (data.ITravelData|null);

        /** PlayData FantasyData */
        FantasyData?: (data.IFantasyData|null);
    }

    /** Represents a PlayData. */
    class PlayData implements IPlayData {

        /**
         * Constructs a new PlayData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IPlayData);

        /** PlayData PlayType. */
        public PlayType: number;

        /** PlayData TouchCount. */
        public TouchCount: number;

        /** PlayData LastTime. */
        public LastTime: (number|Long);

        /** PlayData FiringPinIndex. */
        public FiringPinIndex: number;

        /** PlayData FiringPinLucky. */
        public FiringPinLucky: number;

        /** PlayData TravelData. */
        public TravelData?: (data.ITravelData|null);

        /** PlayData FantasyData. */
        public FantasyData?: (data.IFantasyData|null);

        /**
         * Creates a new PlayData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayData instance
         */
        public static create(properties?: data.IPlayData): data.PlayData;

        /**
         * Encodes the specified PlayData message. Does not implicitly {@link data.PlayData.verify|verify} messages.
         * @param message PlayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IPlayData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayData message, length delimited. Does not implicitly {@link data.PlayData.verify|verify} messages.
         * @param message PlayData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IPlayData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.PlayData;

        /**
         * Decodes a PlayData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.PlayData;

        /**
         * Verifies a PlayData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayData
         */
        public static fromObject(object: { [k: string]: any }): data.PlayData;

        /**
         * Creates a plain object from a PlayData message. Also converts values to other types if specified.
         * @param message PlayData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.PlayData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitData. */
    interface ITimeLimitData {

        /** TimeLimitData PlayDataMap */
        PlayDataMap?: ({ [k: string]: data.IPlayData }|null);
    }

    /** Represents a TimeLimitData. */
    class TimeLimitData implements ITimeLimitData {

        /**
         * Constructs a new TimeLimitData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITimeLimitData);

        /** TimeLimitData PlayDataMap. */
        public PlayDataMap: { [k: string]: data.IPlayData };

        /**
         * Creates a new TimeLimitData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitData instance
         */
        public static create(properties?: data.ITimeLimitData): data.TimeLimitData;

        /**
         * Encodes the specified TimeLimitData message. Does not implicitly {@link data.TimeLimitData.verify|verify} messages.
         * @param message TimeLimitData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITimeLimitData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitData message, length delimited. Does not implicitly {@link data.TimeLimitData.verify|verify} messages.
         * @param message TimeLimitData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITimeLimitData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TimeLimitData;

        /**
         * Decodes a TimeLimitData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TimeLimitData;

        /**
         * Verifies a TimeLimitData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitData
         */
        public static fromObject(object: { [k: string]: any }): data.TimeLimitData;

        /**
         * Creates a plain object from a TimeLimitData message. Also converts values to other types if specified.
         * @param message TimeLimitData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TimeLimitData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TODO_TYPE enum. */
    enum TODO_TYPE {
        MAIL = 0,
        PVP_SPIRIT_FIGHT = 1,
        FACTION_SET_ALLOW_APPLY_TIME = 2,
        PVP_SPIRIT_FIGHT_TRADE_ENEMY = 3,
        FACTION_EXPEDITION_FIRE_WIN = 4,
        PVP_PEAK_DUEL_FIGHT = 5
    }

    /** Properties of a TodoMail. */
    interface ITodoMail {

        /** TodoMail Tag */
        Tag?: (number|null);

        /** TodoMail Title */
        Title?: (string|null);

        /** TodoMail Desc */
        Desc?: (string|null);

        /** TodoMail Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TodoMail. */
    class TodoMail implements ITodoMail {

        /**
         * Constructs a new TodoMail.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodoMail);

        /** TodoMail Tag. */
        public Tag: number;

        /** TodoMail Title. */
        public Title: string;

        /** TodoMail Desc. */
        public Desc: string;

        /** TodoMail Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TodoMail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TodoMail instance
         */
        public static create(properties?: data.ITodoMail): data.TodoMail;

        /**
         * Encodes the specified TodoMail message. Does not implicitly {@link data.TodoMail.verify|verify} messages.
         * @param message TodoMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodoMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TodoMail message, length delimited. Does not implicitly {@link data.TodoMail.verify|verify} messages.
         * @param message TodoMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodoMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TodoMail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TodoMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TodoMail;

        /**
         * Decodes a TodoMail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TodoMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TodoMail;

        /**
         * Verifies a TodoMail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TodoMail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TodoMail
         */
        public static fromObject(object: { [k: string]: any }): data.TodoMail;

        /**
         * Creates a plain object from a TodoMail message. Also converts values to other types if specified.
         * @param message TodoMail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TodoMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TodoMail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TodoPVPSpiritFight. */
    interface ITodoPVPSpiritFight {

        /** TodoPVPSpiritFight IsWin */
        IsWin?: (boolean|null);

        /** TodoPVPSpiritFight IsChallenger */
        IsChallenger?: (boolean|null);

        /** TodoPVPSpiritFight FightTime */
        FightTime?: (number|Long|null);

        /** TodoPVPSpiritFight ChangeRank */
        ChangeRank?: (number|null);

        /** TodoPVPSpiritFight FightUserUnit */
        FightUserUnit?: (data.IPVPSpiritFightUser|null);

        /** TodoPVPSpiritFight FightUID */
        FightUID?: (string|null);
    }

    /** Represents a TodoPVPSpiritFight. */
    class TodoPVPSpiritFight implements ITodoPVPSpiritFight {

        /**
         * Constructs a new TodoPVPSpiritFight.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodoPVPSpiritFight);

        /** TodoPVPSpiritFight IsWin. */
        public IsWin: boolean;

        /** TodoPVPSpiritFight IsChallenger. */
        public IsChallenger: boolean;

        /** TodoPVPSpiritFight FightTime. */
        public FightTime: (number|Long);

        /** TodoPVPSpiritFight ChangeRank. */
        public ChangeRank: number;

        /** TodoPVPSpiritFight FightUserUnit. */
        public FightUserUnit?: (data.IPVPSpiritFightUser|null);

        /** TodoPVPSpiritFight FightUID. */
        public FightUID: string;

        /**
         * Creates a new TodoPVPSpiritFight instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TodoPVPSpiritFight instance
         */
        public static create(properties?: data.ITodoPVPSpiritFight): data.TodoPVPSpiritFight;

        /**
         * Encodes the specified TodoPVPSpiritFight message. Does not implicitly {@link data.TodoPVPSpiritFight.verify|verify} messages.
         * @param message TodoPVPSpiritFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodoPVPSpiritFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TodoPVPSpiritFight message, length delimited. Does not implicitly {@link data.TodoPVPSpiritFight.verify|verify} messages.
         * @param message TodoPVPSpiritFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodoPVPSpiritFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TodoPVPSpiritFight message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TodoPVPSpiritFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TodoPVPSpiritFight;

        /**
         * Decodes a TodoPVPSpiritFight message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TodoPVPSpiritFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TodoPVPSpiritFight;

        /**
         * Verifies a TodoPVPSpiritFight message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TodoPVPSpiritFight message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TodoPVPSpiritFight
         */
        public static fromObject(object: { [k: string]: any }): data.TodoPVPSpiritFight;

        /**
         * Creates a plain object from a TodoPVPSpiritFight message. Also converts values to other types if specified.
         * @param message TodoPVPSpiritFight
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TodoPVPSpiritFight, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TodoPVPSpiritFight to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TodoFactionSetAllowApplyTime. */
    interface ITodoFactionSetAllowApplyTime {

        /** TodoFactionSetAllowApplyTime AllowApplyTime */
        AllowApplyTime?: (number|Long|null);
    }

    /** Represents a TodoFactionSetAllowApplyTime. */
    class TodoFactionSetAllowApplyTime implements ITodoFactionSetAllowApplyTime {

        /**
         * Constructs a new TodoFactionSetAllowApplyTime.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodoFactionSetAllowApplyTime);

        /** TodoFactionSetAllowApplyTime AllowApplyTime. */
        public AllowApplyTime: (number|Long);

        /**
         * Creates a new TodoFactionSetAllowApplyTime instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TodoFactionSetAllowApplyTime instance
         */
        public static create(properties?: data.ITodoFactionSetAllowApplyTime): data.TodoFactionSetAllowApplyTime;

        /**
         * Encodes the specified TodoFactionSetAllowApplyTime message. Does not implicitly {@link data.TodoFactionSetAllowApplyTime.verify|verify} messages.
         * @param message TodoFactionSetAllowApplyTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodoFactionSetAllowApplyTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TodoFactionSetAllowApplyTime message, length delimited. Does not implicitly {@link data.TodoFactionSetAllowApplyTime.verify|verify} messages.
         * @param message TodoFactionSetAllowApplyTime message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodoFactionSetAllowApplyTime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TodoFactionSetAllowApplyTime message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TodoFactionSetAllowApplyTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TodoFactionSetAllowApplyTime;

        /**
         * Decodes a TodoFactionSetAllowApplyTime message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TodoFactionSetAllowApplyTime
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TodoFactionSetAllowApplyTime;

        /**
         * Verifies a TodoFactionSetAllowApplyTime message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TodoFactionSetAllowApplyTime message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TodoFactionSetAllowApplyTime
         */
        public static fromObject(object: { [k: string]: any }): data.TodoFactionSetAllowApplyTime;

        /**
         * Creates a plain object from a TodoFactionSetAllowApplyTime message. Also converts values to other types if specified.
         * @param message TodoFactionSetAllowApplyTime
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TodoFactionSetAllowApplyTime, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TodoFactionSetAllowApplyTime to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TodoPeakDuelFight. */
    interface ITodoPeakDuelFight {

        /** TodoPeakDuelFight IsWin */
        IsWin?: (boolean|null);

        /** TodoPeakDuelFight IsChallenger */
        IsChallenger?: (boolean|null);

        /** TodoPeakDuelFight FightTime */
        FightTime?: (number|Long|null);

        /** TodoPeakDuelFight IntegralChange */
        IntegralChange?: (number|null);

        /** TodoPeakDuelFight IntegralLast */
        IntegralLast?: (number|null);

        /** TodoPeakDuelFight PVPPeakDuelIntegralUnit */
        PVPPeakDuelIntegralUnit?: (data.IPVPPeakDuelIntegral|null);

        /** TodoPeakDuelFight FightUIDList */
        FightUIDList?: (string[]|null);
    }

    /** Represents a TodoPeakDuelFight. */
    class TodoPeakDuelFight implements ITodoPeakDuelFight {

        /**
         * Constructs a new TodoPeakDuelFight.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodoPeakDuelFight);

        /** TodoPeakDuelFight IsWin. */
        public IsWin: boolean;

        /** TodoPeakDuelFight IsChallenger. */
        public IsChallenger: boolean;

        /** TodoPeakDuelFight FightTime. */
        public FightTime: (number|Long);

        /** TodoPeakDuelFight IntegralChange. */
        public IntegralChange: number;

        /** TodoPeakDuelFight IntegralLast. */
        public IntegralLast: number;

        /** TodoPeakDuelFight PVPPeakDuelIntegralUnit. */
        public PVPPeakDuelIntegralUnit?: (data.IPVPPeakDuelIntegral|null);

        /** TodoPeakDuelFight FightUIDList. */
        public FightUIDList: string[];

        /**
         * Creates a new TodoPeakDuelFight instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TodoPeakDuelFight instance
         */
        public static create(properties?: data.ITodoPeakDuelFight): data.TodoPeakDuelFight;

        /**
         * Encodes the specified TodoPeakDuelFight message. Does not implicitly {@link data.TodoPeakDuelFight.verify|verify} messages.
         * @param message TodoPeakDuelFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodoPeakDuelFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TodoPeakDuelFight message, length delimited. Does not implicitly {@link data.TodoPeakDuelFight.verify|verify} messages.
         * @param message TodoPeakDuelFight message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodoPeakDuelFight, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TodoPeakDuelFight message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TodoPeakDuelFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TodoPeakDuelFight;

        /**
         * Decodes a TodoPeakDuelFight message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TodoPeakDuelFight
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TodoPeakDuelFight;

        /**
         * Verifies a TodoPeakDuelFight message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TodoPeakDuelFight message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TodoPeakDuelFight
         */
        public static fromObject(object: { [k: string]: any }): data.TodoPeakDuelFight;

        /**
         * Creates a plain object from a TodoPeakDuelFight message. Also converts values to other types if specified.
         * @param message TodoPeakDuelFight
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TodoPeakDuelFight, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TodoPeakDuelFight to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TodoAffair. */
    interface ITodoAffair {

        /** TodoAffair TodoType */
        TodoType?: (number|null);

        /** TodoAffair TodoMailUnit */
        TodoMailUnit?: (data.ITodoMail|null);

        /** TodoAffair TodoPVPSpiritFightUnit */
        TodoPVPSpiritFightUnit?: (data.ITodoPVPSpiritFight|null);

        /** TodoAffair TodoFactionSetAllowApplyTimeUnit */
        TodoFactionSetAllowApplyTimeUnit?: (data.ITodoFactionSetAllowApplyTime|null);

        /** TodoAffair TodoPeakDuelFight */
        TodoPeakDuelFight?: (data.ITodoPeakDuelFight|null);
    }

    /** Represents a TodoAffair. */
    class TodoAffair implements ITodoAffair {

        /**
         * Constructs a new TodoAffair.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodoAffair);

        /** TodoAffair TodoType. */
        public TodoType: number;

        /** TodoAffair TodoMailUnit. */
        public TodoMailUnit?: (data.ITodoMail|null);

        /** TodoAffair TodoPVPSpiritFightUnit. */
        public TodoPVPSpiritFightUnit?: (data.ITodoPVPSpiritFight|null);

        /** TodoAffair TodoFactionSetAllowApplyTimeUnit. */
        public TodoFactionSetAllowApplyTimeUnit?: (data.ITodoFactionSetAllowApplyTime|null);

        /** TodoAffair TodoPeakDuelFight. */
        public TodoPeakDuelFight?: (data.ITodoPeakDuelFight|null);

        /**
         * Creates a new TodoAffair instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TodoAffair instance
         */
        public static create(properties?: data.ITodoAffair): data.TodoAffair;

        /**
         * Encodes the specified TodoAffair message. Does not implicitly {@link data.TodoAffair.verify|verify} messages.
         * @param message TodoAffair message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodoAffair, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TodoAffair message, length delimited. Does not implicitly {@link data.TodoAffair.verify|verify} messages.
         * @param message TodoAffair message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodoAffair, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TodoAffair message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TodoAffair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TodoAffair;

        /**
         * Decodes a TodoAffair message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TodoAffair
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TodoAffair;

        /**
         * Verifies a TodoAffair message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TodoAffair message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TodoAffair
         */
        public static fromObject(object: { [k: string]: any }): data.TodoAffair;

        /**
         * Creates a plain object from a TodoAffair message. Also converts values to other types if specified.
         * @param message TodoAffair
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TodoAffair, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TodoAffair to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TodoUser. */
    interface ITodoUser {

        /** TodoUser TodoAffairList */
        TodoAffairList?: (data.ITodoAffair[]|null);
    }

    /** Represents a TodoUser. */
    class TodoUser implements ITodoUser {

        /**
         * Constructs a new TodoUser.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodoUser);

        /** TodoUser TodoAffairList. */
        public TodoAffairList: data.ITodoAffair[];

        /**
         * Creates a new TodoUser instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TodoUser instance
         */
        public static create(properties?: data.ITodoUser): data.TodoUser;

        /**
         * Encodes the specified TodoUser message. Does not implicitly {@link data.TodoUser.verify|verify} messages.
         * @param message TodoUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodoUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TodoUser message, length delimited. Does not implicitly {@link data.TodoUser.verify|verify} messages.
         * @param message TodoUser message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodoUser, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TodoUser message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TodoUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TodoUser;

        /**
         * Decodes a TodoUser message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TodoUser
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TodoUser;

        /**
         * Verifies a TodoUser message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TodoUser message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TodoUser
         */
        public static fromObject(object: { [k: string]: any }): data.TodoUser;

        /**
         * Creates a plain object from a TodoUser message. Also converts values to other types if specified.
         * @param message TodoUser
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TodoUser, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TodoUser to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Todo. */
    interface ITodo {

        /** Todo TodoUserMap */
        TodoUserMap?: ({ [k: string]: data.ITodoUser }|null);
    }

    /** Represents a Todo. */
    class Todo implements ITodo {

        /**
         * Constructs a new Todo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITodo);

        /** Todo TodoUserMap. */
        public TodoUserMap: { [k: string]: data.ITodoUser };

        /**
         * Creates a new Todo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Todo instance
         */
        public static create(properties?: data.ITodo): data.Todo;

        /**
         * Encodes the specified Todo message. Does not implicitly {@link data.Todo.verify|verify} messages.
         * @param message Todo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITodo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Todo message, length delimited. Does not implicitly {@link data.Todo.verify|verify} messages.
         * @param message Todo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITodo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Todo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Todo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.Todo;

        /**
         * Decodes a Todo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Todo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.Todo;

        /**
         * Verifies a Todo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Todo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Todo
         */
        public static fromObject(object: { [k: string]: any }): data.Todo;

        /**
         * Creates a plain object from a Todo message. Also converts values to other types if specified.
         * @param message Todo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.Todo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Todo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SimulateRecord. */
    interface ISimulateRecord {

        /** SimulateRecord Seq */
        Seq?: (number|null);

        /** SimulateRecord Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a SimulateRecord. */
    class SimulateRecord implements ISimulateRecord {

        /**
         * Constructs a new SimulateRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ISimulateRecord);

        /** SimulateRecord Seq. */
        public Seq: number;

        /** SimulateRecord Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new SimulateRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SimulateRecord instance
         */
        public static create(properties?: data.ISimulateRecord): data.SimulateRecord;

        /**
         * Encodes the specified SimulateRecord message. Does not implicitly {@link data.SimulateRecord.verify|verify} messages.
         * @param message SimulateRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ISimulateRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SimulateRecord message, length delimited. Does not implicitly {@link data.SimulateRecord.verify|verify} messages.
         * @param message SimulateRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ISimulateRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SimulateRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SimulateRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.SimulateRecord;

        /**
         * Decodes a SimulateRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SimulateRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.SimulateRecord;

        /**
         * Verifies a SimulateRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SimulateRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SimulateRecord
         */
        public static fromObject(object: { [k: string]: any }): data.SimulateRecord;

        /**
         * Creates a plain object from a SimulateRecord message. Also converts values to other types if specified.
         * @param message SimulateRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.SimulateRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SimulateRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CardPoolRecord. */
    interface ICardPoolRecord {

        /** CardPoolRecord FreeDrawTime */
        FreeDrawTime?: (number|Long|null);

        /** CardPoolRecord FreeDrawCount */
        FreeDrawCount?: (number|null);

        /** CardPoolRecord ContinuousDraw */
        ContinuousDraw?: (number|null);

        /** CardPoolRecord Compensation */
        Compensation?: (number|null);

        /** CardPoolRecord OpenSimulate */
        OpenSimulate?: (boolean|null);

        /** CardPoolRecord SeqCounter */
        SeqCounter?: (number|null);

        /** CardPoolRecord CompensationFlag */
        CompensationFlag?: (boolean|null);

        /** CardPoolRecord CurrentSimulate */
        CurrentSimulate?: (data.ISimulateRecord|null);

        /** CardPoolRecord SimulateRecords */
        SimulateRecords?: (data.ISimulateRecord[]|null);

        /** CardPoolRecord SimulateAll */
        SimulateAll?: (data.ISimulateRecord[]|null);
    }

    /** Represents a CardPoolRecord. */
    class CardPoolRecord implements ICardPoolRecord {

        /**
         * Constructs a new CardPoolRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ICardPoolRecord);

        /** CardPoolRecord FreeDrawTime. */
        public FreeDrawTime: (number|Long);

        /** CardPoolRecord FreeDrawCount. */
        public FreeDrawCount: number;

        /** CardPoolRecord ContinuousDraw. */
        public ContinuousDraw: number;

        /** CardPoolRecord Compensation. */
        public Compensation: number;

        /** CardPoolRecord OpenSimulate. */
        public OpenSimulate: boolean;

        /** CardPoolRecord SeqCounter. */
        public SeqCounter: number;

        /** CardPoolRecord CompensationFlag. */
        public CompensationFlag: boolean;

        /** CardPoolRecord CurrentSimulate. */
        public CurrentSimulate?: (data.ISimulateRecord|null);

        /** CardPoolRecord SimulateRecords. */
        public SimulateRecords: data.ISimulateRecord[];

        /** CardPoolRecord SimulateAll. */
        public SimulateAll: data.ISimulateRecord[];

        /**
         * Creates a new CardPoolRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardPoolRecord instance
         */
        public static create(properties?: data.ICardPoolRecord): data.CardPoolRecord;

        /**
         * Encodes the specified CardPoolRecord message. Does not implicitly {@link data.CardPoolRecord.verify|verify} messages.
         * @param message CardPoolRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ICardPoolRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CardPoolRecord message, length delimited. Does not implicitly {@link data.CardPoolRecord.verify|verify} messages.
         * @param message CardPoolRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ICardPoolRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CardPoolRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardPoolRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.CardPoolRecord;

        /**
         * Decodes a CardPoolRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardPoolRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.CardPoolRecord;

        /**
         * Verifies a CardPoolRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CardPoolRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CardPoolRecord
         */
        public static fromObject(object: { [k: string]: any }): data.CardPoolRecord;

        /**
         * Creates a plain object from a CardPoolRecord message. Also converts values to other types if specified.
         * @param message CardPoolRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.CardPoolRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CardPoolRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChargeOrderRecord. */
    interface IChargeOrderRecord {

        /** ChargeOrderRecord ProductID */
        ProductID?: (number|null);

        /** ChargeOrderRecord FirstChargeTimes */
        FirstChargeTimes?: (number|null);
    }

    /** Represents a ChargeOrderRecord. */
    class ChargeOrderRecord implements IChargeOrderRecord {

        /**
         * Constructs a new ChargeOrderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IChargeOrderRecord);

        /** ChargeOrderRecord ProductID. */
        public ProductID: number;

        /** ChargeOrderRecord FirstChargeTimes. */
        public FirstChargeTimes: number;

        /**
         * Creates a new ChargeOrderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChargeOrderRecord instance
         */
        public static create(properties?: data.IChargeOrderRecord): data.ChargeOrderRecord;

        /**
         * Encodes the specified ChargeOrderRecord message. Does not implicitly {@link data.ChargeOrderRecord.verify|verify} messages.
         * @param message ChargeOrderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IChargeOrderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChargeOrderRecord message, length delimited. Does not implicitly {@link data.ChargeOrderRecord.verify|verify} messages.
         * @param message ChargeOrderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IChargeOrderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChargeOrderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChargeOrderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ChargeOrderRecord;

        /**
         * Decodes a ChargeOrderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChargeOrderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ChargeOrderRecord;

        /**
         * Verifies a ChargeOrderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChargeOrderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChargeOrderRecord
         */
        public static fromObject(object: { [k: string]: any }): data.ChargeOrderRecord;

        /**
         * Creates a plain object from a ChargeOrderRecord message. Also converts values to other types if specified.
         * @param message ChargeOrderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ChargeOrderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChargeOrderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ProductOrderRecord. */
    interface IProductOrderRecord {

        /** ProductOrderRecord ProductID */
        ProductID?: (number|null);

        /** ProductOrderRecord PurchaseTime */
        PurchaseTime?: ((number|Long)[]|null);
    }

    /** Represents a ProductOrderRecord. */
    class ProductOrderRecord implements IProductOrderRecord {

        /**
         * Constructs a new ProductOrderRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IProductOrderRecord);

        /** ProductOrderRecord ProductID. */
        public ProductID: number;

        /** ProductOrderRecord PurchaseTime. */
        public PurchaseTime: (number|Long)[];

        /**
         * Creates a new ProductOrderRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProductOrderRecord instance
         */
        public static create(properties?: data.IProductOrderRecord): data.ProductOrderRecord;

        /**
         * Encodes the specified ProductOrderRecord message. Does not implicitly {@link data.ProductOrderRecord.verify|verify} messages.
         * @param message ProductOrderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IProductOrderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProductOrderRecord message, length delimited. Does not implicitly {@link data.ProductOrderRecord.verify|verify} messages.
         * @param message ProductOrderRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IProductOrderRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProductOrderRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProductOrderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.ProductOrderRecord;

        /**
         * Decodes a ProductOrderRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProductOrderRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.ProductOrderRecord;

        /**
         * Verifies a ProductOrderRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProductOrderRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProductOrderRecord
         */
        public static fromObject(object: { [k: string]: any }): data.ProductOrderRecord;

        /**
         * Creates a plain object from a ProductOrderRecord message. Also converts values to other types if specified.
         * @param message ProductOrderRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.ProductOrderRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProductOrderRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrackData. */
    interface ITrackData {

        /** TrackData CardPoolRecords */
        CardPoolRecords?: ({ [k: string]: data.ICardPoolRecord }|null);

        /** TrackData ChargeRecords */
        ChargeRecords?: ({ [k: string]: data.IChargeOrderRecord }|null);

        /** TrackData ProductRecords */
        ProductRecords?: ({ [k: string]: data.IProductOrderRecord }|null);

        /** TrackData SummonCardLimitMap */
        SummonCardLimitMap?: ({ [k: string]: number }|null);
    }

    /** Represents a TrackData. */
    class TrackData implements ITrackData {

        /**
         * Constructs a new TrackData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrackData);

        /** TrackData CardPoolRecords. */
        public CardPoolRecords: { [k: string]: data.ICardPoolRecord };

        /** TrackData ChargeRecords. */
        public ChargeRecords: { [k: string]: data.IChargeOrderRecord };

        /** TrackData ProductRecords. */
        public ProductRecords: { [k: string]: data.IProductOrderRecord };

        /** TrackData SummonCardLimitMap. */
        public SummonCardLimitMap: { [k: string]: number };

        /**
         * Creates a new TrackData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrackData instance
         */
        public static create(properties?: data.ITrackData): data.TrackData;

        /**
         * Encodes the specified TrackData message. Does not implicitly {@link data.TrackData.verify|verify} messages.
         * @param message TrackData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrackData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrackData message, length delimited. Does not implicitly {@link data.TrackData.verify|verify} messages.
         * @param message TrackData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrackData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrackData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrackData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrackData;

        /**
         * Decodes a TrackData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrackData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrackData;

        /**
         * Verifies a TrackData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrackData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrackData
         */
        public static fromObject(object: { [k: string]: any }): data.TrackData;

        /**
         * Creates a plain object from a TrackData message. Also converts values to other types if specified.
         * @param message TrackData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrackData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrackData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TreasureAchieve. */
    interface ITreasureAchieve {

        /** TreasureAchieve Achieve */
        Achieve?: ({ [k: string]: number }|null);
    }

    /** Represents a TreasureAchieve. */
    class TreasureAchieve implements ITreasureAchieve {

        /**
         * Constructs a new TreasureAchieve.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITreasureAchieve);

        /** TreasureAchieve Achieve. */
        public Achieve: { [k: string]: number };

        /**
         * Creates a new TreasureAchieve instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureAchieve instance
         */
        public static create(properties?: data.ITreasureAchieve): data.TreasureAchieve;

        /**
         * Encodes the specified TreasureAchieve message. Does not implicitly {@link data.TreasureAchieve.verify|verify} messages.
         * @param message TreasureAchieve message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITreasureAchieve, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreasureAchieve message, length delimited. Does not implicitly {@link data.TreasureAchieve.verify|verify} messages.
         * @param message TreasureAchieve message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITreasureAchieve, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreasureAchieve message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureAchieve
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TreasureAchieve;

        /**
         * Decodes a TreasureAchieve message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureAchieve
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TreasureAchieve;

        /**
         * Verifies a TreasureAchieve message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreasureAchieve message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreasureAchieve
         */
        public static fromObject(object: { [k: string]: any }): data.TreasureAchieve;

        /**
         * Creates a plain object from a TreasureAchieve message. Also converts values to other types if specified.
         * @param message TreasureAchieve
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TreasureAchieve, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreasureAchieve to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a treasureProfit. */
    interface ItreasureProfit {

        /** treasureProfit Profit */
        Profit?: ({ [k: string]: number }|null);
    }

    /** Represents a treasureProfit. */
    class treasureProfit implements ItreasureProfit {

        /**
         * Constructs a new treasureProfit.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ItreasureProfit);

        /** treasureProfit Profit. */
        public Profit: { [k: string]: number };

        /**
         * Creates a new treasureProfit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns treasureProfit instance
         */
        public static create(properties?: data.ItreasureProfit): data.treasureProfit;

        /**
         * Encodes the specified treasureProfit message. Does not implicitly {@link data.treasureProfit.verify|verify} messages.
         * @param message treasureProfit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ItreasureProfit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified treasureProfit message, length delimited. Does not implicitly {@link data.treasureProfit.verify|verify} messages.
         * @param message treasureProfit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ItreasureProfit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a treasureProfit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns treasureProfit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.treasureProfit;

        /**
         * Decodes a treasureProfit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns treasureProfit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.treasureProfit;

        /**
         * Verifies a treasureProfit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a treasureProfit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns treasureProfit
         */
        public static fromObject(object: { [k: string]: any }): data.treasureProfit;

        /**
         * Creates a plain object from a treasureProfit message. Also converts values to other types if specified.
         * @param message treasureProfit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.treasureProfit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this treasureProfit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TreasureData. */
    interface ITreasureData {

        /** TreasureData TreasureAchieve */
        TreasureAchieve?: (data.ITreasureAchieve|null);

        /** TreasureData TreasureProfit */
        TreasureProfit?: (data.ItreasureProfit|null);
    }

    /** Represents a TreasureData. */
    class TreasureData implements ITreasureData {

        /**
         * Constructs a new TreasureData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITreasureData);

        /** TreasureData TreasureAchieve. */
        public TreasureAchieve?: (data.ITreasureAchieve|null);

        /** TreasureData TreasureProfit. */
        public TreasureProfit?: (data.ItreasureProfit|null);

        /**
         * Creates a new TreasureData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureData instance
         */
        public static create(properties?: data.ITreasureData): data.TreasureData;

        /**
         * Encodes the specified TreasureData message. Does not implicitly {@link data.TreasureData.verify|verify} messages.
         * @param message TreasureData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITreasureData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreasureData message, length delimited. Does not implicitly {@link data.TreasureData.verify|verify} messages.
         * @param message TreasureData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITreasureData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreasureData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TreasureData;

        /**
         * Decodes a TreasureData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TreasureData;

        /**
         * Verifies a TreasureData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreasureData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreasureData
         */
        public static fromObject(object: { [k: string]: any }): data.TreasureData;

        /**
         * Creates a plain object from a TreasureData message. Also converts values to other types if specified.
         * @param message TreasureData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TreasureData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreasureData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellLesson. */
    interface ITrialHellLesson {

        /** TrialHellLesson MonsterIDList */
        MonsterIDList?: (number[]|null);

        /** TrialHellLesson SceneIndex */
        SceneIndex?: (number|null);
    }

    /** Represents a TrialHellLesson. */
    class TrialHellLesson implements ITrialHellLesson {

        /**
         * Constructs a new TrialHellLesson.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialHellLesson);

        /** TrialHellLesson MonsterIDList. */
        public MonsterIDList: number[];

        /** TrialHellLesson SceneIndex. */
        public SceneIndex: number;

        /**
         * Creates a new TrialHellLesson instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellLesson instance
         */
        public static create(properties?: data.ITrialHellLesson): data.TrialHellLesson;

        /**
         * Encodes the specified TrialHellLesson message. Does not implicitly {@link data.TrialHellLesson.verify|verify} messages.
         * @param message TrialHellLesson message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialHellLesson, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellLesson message, length delimited. Does not implicitly {@link data.TrialHellLesson.verify|verify} messages.
         * @param message TrialHellLesson message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialHellLesson, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellLesson message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellLesson
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialHellLesson;

        /**
         * Decodes a TrialHellLesson message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellLesson
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialHellLesson;

        /**
         * Verifies a TrialHellLesson message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellLesson message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellLesson
         */
        public static fromObject(object: { [k: string]: any }): data.TrialHellLesson;

        /**
         * Creates a plain object from a TrialHellLesson message. Also converts values to other types if specified.
         * @param message TrialHellLesson
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialHellLesson, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellLesson to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHell. */
    interface ITrialHell {

        /** TrialHell RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialHell NextTime */
        NextTime?: (number|Long|null);

        /** TrialHell LessonMap */
        LessonMap?: ({ [k: string]: data.ITrialHellLesson }|null);
    }

    /** Represents a TrialHell. */
    class TrialHell implements ITrialHell {

        /**
         * Constructs a new TrialHell.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialHell);

        /** TrialHell RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialHell NextTime. */
        public NextTime: (number|Long);

        /** TrialHell LessonMap. */
        public LessonMap: { [k: string]: data.ITrialHellLesson };

        /**
         * Creates a new TrialHell instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHell instance
         */
        public static create(properties?: data.ITrialHell): data.TrialHell;

        /**
         * Encodes the specified TrialHell message. Does not implicitly {@link data.TrialHell.verify|verify} messages.
         * @param message TrialHell message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialHell, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHell message, length delimited. Does not implicitly {@link data.TrialHell.verify|verify} messages.
         * @param message TrialHell message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialHell, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHell message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHell
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialHell;

        /**
         * Decodes a TrialHell message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHell
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialHell;

        /**
         * Verifies a TrialHell message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHell message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHell
         */
        public static fromObject(object: { [k: string]: any }): data.TrialHell;

        /**
         * Creates a plain object from a TrialHell message. Also converts values to other types if specified.
         * @param message TrialHell
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialHell, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHell to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamLesson. */
    interface ITrialCloudDreamLesson {

        /** TrialCloudDreamLesson MonsterIDList */
        MonsterIDList?: (number[]|null);

        /** TrialCloudDreamLesson Buff */
        Buff?: (number|null);

        /** TrialCloudDreamLesson SceneIndex */
        SceneIndex?: (number|null);
    }

    /** Represents a TrialCloudDreamLesson. */
    class TrialCloudDreamLesson implements ITrialCloudDreamLesson {

        /**
         * Constructs a new TrialCloudDreamLesson.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialCloudDreamLesson);

        /** TrialCloudDreamLesson MonsterIDList. */
        public MonsterIDList: number[];

        /** TrialCloudDreamLesson Buff. */
        public Buff: number;

        /** TrialCloudDreamLesson SceneIndex. */
        public SceneIndex: number;

        /**
         * Creates a new TrialCloudDreamLesson instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamLesson instance
         */
        public static create(properties?: data.ITrialCloudDreamLesson): data.TrialCloudDreamLesson;

        /**
         * Encodes the specified TrialCloudDreamLesson message. Does not implicitly {@link data.TrialCloudDreamLesson.verify|verify} messages.
         * @param message TrialCloudDreamLesson message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialCloudDreamLesson, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamLesson message, length delimited. Does not implicitly {@link data.TrialCloudDreamLesson.verify|verify} messages.
         * @param message TrialCloudDreamLesson message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialCloudDreamLesson, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamLesson message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamLesson
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialCloudDreamLesson;

        /**
         * Decodes a TrialCloudDreamLesson message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamLesson
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialCloudDreamLesson;

        /**
         * Verifies a TrialCloudDreamLesson message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamLesson message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamLesson
         */
        public static fromObject(object: { [k: string]: any }): data.TrialCloudDreamLesson;

        /**
         * Creates a plain object from a TrialCloudDreamLesson message. Also converts values to other types if specified.
         * @param message TrialCloudDreamLesson
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialCloudDreamLesson, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamLesson to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDream. */
    interface ITrialCloudDream {

        /** TrialCloudDream RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialCloudDream NextTime */
        NextTime?: (number|Long|null);

        /** TrialCloudDream LessonMap */
        LessonMap?: ({ [k: string]: data.ITrialCloudDreamLesson }|null);
    }

    /** Represents a TrialCloudDream. */
    class TrialCloudDream implements ITrialCloudDream {

        /**
         * Constructs a new TrialCloudDream.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialCloudDream);

        /** TrialCloudDream RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialCloudDream NextTime. */
        public NextTime: (number|Long);

        /** TrialCloudDream LessonMap. */
        public LessonMap: { [k: string]: data.ITrialCloudDreamLesson };

        /**
         * Creates a new TrialCloudDream instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDream instance
         */
        public static create(properties?: data.ITrialCloudDream): data.TrialCloudDream;

        /**
         * Encodes the specified TrialCloudDream message. Does not implicitly {@link data.TrialCloudDream.verify|verify} messages.
         * @param message TrialCloudDream message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialCloudDream, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDream message, length delimited. Does not implicitly {@link data.TrialCloudDream.verify|verify} messages.
         * @param message TrialCloudDream message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialCloudDream, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDream message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDream
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialCloudDream;

        /**
         * Decodes a TrialCloudDream message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDream
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialCloudDream;

        /**
         * Verifies a TrialCloudDream message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDream message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDream
         */
        public static fromObject(object: { [k: string]: any }): data.TrialCloudDream;

        /**
         * Creates a plain object from a TrialCloudDream message. Also converts values to other types if specified.
         * @param message TrialCloudDream
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialCloudDream, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDream to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoor. */
    interface ITrialMiracleDoor {

        /** TrialMiracleDoor RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialMiracleDoor NextTime */
        NextTime?: (number|Long|null);

        /** TrialMiracleDoor CurrentPeriod */
        CurrentPeriod?: (number|null);

        /** TrialMiracleDoor ControlPeriod */
        ControlPeriod?: (number|null);
    }

    /** Represents a TrialMiracleDoor. */
    class TrialMiracleDoor implements ITrialMiracleDoor {

        /**
         * Constructs a new TrialMiracleDoor.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialMiracleDoor);

        /** TrialMiracleDoor RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialMiracleDoor NextTime. */
        public NextTime: (number|Long);

        /** TrialMiracleDoor CurrentPeriod. */
        public CurrentPeriod: number;

        /** TrialMiracleDoor ControlPeriod. */
        public ControlPeriod: number;

        /**
         * Creates a new TrialMiracleDoor instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoor instance
         */
        public static create(properties?: data.ITrialMiracleDoor): data.TrialMiracleDoor;

        /**
         * Encodes the specified TrialMiracleDoor message. Does not implicitly {@link data.TrialMiracleDoor.verify|verify} messages.
         * @param message TrialMiracleDoor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialMiracleDoor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoor message, length delimited. Does not implicitly {@link data.TrialMiracleDoor.verify|verify} messages.
         * @param message TrialMiracleDoor message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialMiracleDoor, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoor message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialMiracleDoor;

        /**
         * Decodes a TrialMiracleDoor message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoor
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialMiracleDoor;

        /**
         * Verifies a TrialMiracleDoor message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoor message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoor
         */
        public static fromObject(object: { [k: string]: any }): data.TrialMiracleDoor;

        /**
         * Creates a plain object from a TrialMiracleDoor message. Also converts values to other types if specified.
         * @param message TrialMiracleDoor
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialMiracleDoor, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoor to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIsland. */
    interface ITrialIsland {

        /** TrialIsland RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialIsland NextTime */
        NextTime?: (number|Long|null);
    }

    /** Represents a TrialIsland. */
    class TrialIsland implements ITrialIsland {

        /**
         * Constructs a new TrialIsland.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialIsland);

        /** TrialIsland RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialIsland NextTime. */
        public NextTime: (number|Long);

        /**
         * Creates a new TrialIsland instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIsland instance
         */
        public static create(properties?: data.ITrialIsland): data.TrialIsland;

        /**
         * Encodes the specified TrialIsland message. Does not implicitly {@link data.TrialIsland.verify|verify} messages.
         * @param message TrialIsland message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialIsland, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIsland message, length delimited. Does not implicitly {@link data.TrialIsland.verify|verify} messages.
         * @param message TrialIsland message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialIsland, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIsland message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIsland
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialIsland;

        /**
         * Decodes a TrialIsland message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIsland
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialIsland;

        /**
         * Verifies a TrialIsland message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIsland message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIsland
         */
        public static fromObject(object: { [k: string]: any }): data.TrialIsland;

        /**
         * Creates a plain object from a TrialIsland message. Also converts values to other types if specified.
         * @param message TrialIsland
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialIsland, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIsland to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellData. */
    interface ITrialHellData {

        /** TrialHellData RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialHellData UseHeroMap */
        UseHeroMap?: ({ [k: string]: boolean }|null);

        /** TrialHellData PassLessonMap */
        PassLessonMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a TrialHellData. */
    class TrialHellData implements ITrialHellData {

        /**
         * Constructs a new TrialHellData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialHellData);

        /** TrialHellData RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialHellData UseHeroMap. */
        public UseHeroMap: { [k: string]: boolean };

        /** TrialHellData PassLessonMap. */
        public PassLessonMap: { [k: string]: boolean };

        /**
         * Creates a new TrialHellData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellData instance
         */
        public static create(properties?: data.ITrialHellData): data.TrialHellData;

        /**
         * Encodes the specified TrialHellData message. Does not implicitly {@link data.TrialHellData.verify|verify} messages.
         * @param message TrialHellData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialHellData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellData message, length delimited. Does not implicitly {@link data.TrialHellData.verify|verify} messages.
         * @param message TrialHellData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialHellData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialHellData;

        /**
         * Decodes a TrialHellData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialHellData;

        /**
         * Verifies a TrialHellData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialHellData;

        /**
         * Creates a plain object from a TrialHellData message. Also converts values to other types if specified.
         * @param message TrialHellData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialHellData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamPassLesson. */
    interface ITrialCloudDreamPassLesson {

        /** TrialCloudDreamPassLesson UseHeroMap */
        UseHeroMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a TrialCloudDreamPassLesson. */
    class TrialCloudDreamPassLesson implements ITrialCloudDreamPassLesson {

        /**
         * Constructs a new TrialCloudDreamPassLesson.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialCloudDreamPassLesson);

        /** TrialCloudDreamPassLesson UseHeroMap. */
        public UseHeroMap: { [k: string]: boolean };

        /**
         * Creates a new TrialCloudDreamPassLesson instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamPassLesson instance
         */
        public static create(properties?: data.ITrialCloudDreamPassLesson): data.TrialCloudDreamPassLesson;

        /**
         * Encodes the specified TrialCloudDreamPassLesson message. Does not implicitly {@link data.TrialCloudDreamPassLesson.verify|verify} messages.
         * @param message TrialCloudDreamPassLesson message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialCloudDreamPassLesson, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamPassLesson message, length delimited. Does not implicitly {@link data.TrialCloudDreamPassLesson.verify|verify} messages.
         * @param message TrialCloudDreamPassLesson message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialCloudDreamPassLesson, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamPassLesson message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamPassLesson
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialCloudDreamPassLesson;

        /**
         * Decodes a TrialCloudDreamPassLesson message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamPassLesson
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialCloudDreamPassLesson;

        /**
         * Verifies a TrialCloudDreamPassLesson message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamPassLesson message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamPassLesson
         */
        public static fromObject(object: { [k: string]: any }): data.TrialCloudDreamPassLesson;

        /**
         * Creates a plain object from a TrialCloudDreamPassLesson message. Also converts values to other types if specified.
         * @param message TrialCloudDreamPassLesson
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialCloudDreamPassLesson, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamPassLesson to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamData. */
    interface ITrialCloudDreamData {

        /** TrialCloudDreamData RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialCloudDreamData IsReceiveSweepReward */
        IsReceiveSweepReward?: (boolean|null);

        /** TrialCloudDreamData ReceiveRewardMap */
        ReceiveRewardMap?: ({ [k: string]: boolean }|null);

        /** TrialCloudDreamData TrialCloudDreamPassLessonMap */
        TrialCloudDreamPassLessonMap?: ({ [k: string]: data.ITrialCloudDreamPassLesson }|null);
    }

    /** Represents a TrialCloudDreamData. */
    class TrialCloudDreamData implements ITrialCloudDreamData {

        /**
         * Constructs a new TrialCloudDreamData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialCloudDreamData);

        /** TrialCloudDreamData RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialCloudDreamData IsReceiveSweepReward. */
        public IsReceiveSweepReward: boolean;

        /** TrialCloudDreamData ReceiveRewardMap. */
        public ReceiveRewardMap: { [k: string]: boolean };

        /** TrialCloudDreamData TrialCloudDreamPassLessonMap. */
        public TrialCloudDreamPassLessonMap: { [k: string]: data.ITrialCloudDreamPassLesson };

        /**
         * Creates a new TrialCloudDreamData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamData instance
         */
        public static create(properties?: data.ITrialCloudDreamData): data.TrialCloudDreamData;

        /**
         * Encodes the specified TrialCloudDreamData message. Does not implicitly {@link data.TrialCloudDreamData.verify|verify} messages.
         * @param message TrialCloudDreamData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialCloudDreamData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamData message, length delimited. Does not implicitly {@link data.TrialCloudDreamData.verify|verify} messages.
         * @param message TrialCloudDreamData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialCloudDreamData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialCloudDreamData;

        /**
         * Decodes a TrialCloudDreamData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialCloudDreamData;

        /**
         * Verifies a TrialCloudDreamData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialCloudDreamData;

        /**
         * Creates a plain object from a TrialCloudDreamData message. Also converts values to other types if specified.
         * @param message TrialCloudDreamData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialCloudDreamData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorData. */
    interface ITrialMiracleDoorData {

        /** TrialMiracleDoorData RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialMiracleDoorData PassLessonMap */
        PassLessonMap?: ({ [k: string]: boolean }|null);

        /** TrialMiracleDoorData IsReceiveReward */
        IsReceiveReward?: (boolean|null);
    }

    /** Represents a TrialMiracleDoorData. */
    class TrialMiracleDoorData implements ITrialMiracleDoorData {

        /**
         * Constructs a new TrialMiracleDoorData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialMiracleDoorData);

        /** TrialMiracleDoorData RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialMiracleDoorData PassLessonMap. */
        public PassLessonMap: { [k: string]: boolean };

        /** TrialMiracleDoorData IsReceiveReward. */
        public IsReceiveReward: boolean;

        /**
         * Creates a new TrialMiracleDoorData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorData instance
         */
        public static create(properties?: data.ITrialMiracleDoorData): data.TrialMiracleDoorData;

        /**
         * Encodes the specified TrialMiracleDoorData message. Does not implicitly {@link data.TrialMiracleDoorData.verify|verify} messages.
         * @param message TrialMiracleDoorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialMiracleDoorData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorData message, length delimited. Does not implicitly {@link data.TrialMiracleDoorData.verify|verify} messages.
         * @param message TrialMiracleDoorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialMiracleDoorData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialMiracleDoorData;

        /**
         * Decodes a TrialMiracleDoorData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialMiracleDoorData;

        /**
         * Verifies a TrialMiracleDoorData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialMiracleDoorData;

        /**
         * Creates a plain object from a TrialMiracleDoorData message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialMiracleDoorData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRoleInfo. */
    interface ITrialRoleInfo {

        /** TrialRoleInfo ID */
        ID?: (number|null);

        /** TrialRoleInfo HPPercent */
        HPPercent?: (number|null);

        /** TrialRoleInfo Energy */
        Energy?: (number|null);
    }

    /** Represents a TrialRoleInfo. */
    class TrialRoleInfo implements ITrialRoleInfo {

        /**
         * Constructs a new TrialRoleInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialRoleInfo);

        /** TrialRoleInfo ID. */
        public ID: number;

        /** TrialRoleInfo HPPercent. */
        public HPPercent: number;

        /** TrialRoleInfo Energy. */
        public Energy: number;

        /**
         * Creates a new TrialRoleInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRoleInfo instance
         */
        public static create(properties?: data.ITrialRoleInfo): data.TrialRoleInfo;

        /**
         * Encodes the specified TrialRoleInfo message. Does not implicitly {@link data.TrialRoleInfo.verify|verify} messages.
         * @param message TrialRoleInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialRoleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRoleInfo message, length delimited. Does not implicitly {@link data.TrialRoleInfo.verify|verify} messages.
         * @param message TrialRoleInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialRoleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRoleInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRoleInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialRoleInfo;

        /**
         * Decodes a TrialRoleInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRoleInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialRoleInfo;

        /**
         * Verifies a TrialRoleInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRoleInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRoleInfo
         */
        public static fromObject(object: { [k: string]: any }): data.TrialRoleInfo;

        /**
         * Creates a plain object from a TrialRoleInfo message. Also converts values to other types if specified.
         * @param message TrialRoleInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialRoleInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRoleInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RespectShopInfo. */
    interface IRespectShopInfo {

        /** RespectShopInfo ShopID */
        ShopID?: (number|null);

        /** RespectShopInfo Bought */
        Bought?: (boolean|null);
    }

    /** Represents a RespectShopInfo. */
    class RespectShopInfo implements IRespectShopInfo {

        /**
         * Constructs a new RespectShopInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IRespectShopInfo);

        /** RespectShopInfo ShopID. */
        public ShopID: number;

        /** RespectShopInfo Bought. */
        public Bought: boolean;

        /**
         * Creates a new RespectShopInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RespectShopInfo instance
         */
        public static create(properties?: data.IRespectShopInfo): data.RespectShopInfo;

        /**
         * Encodes the specified RespectShopInfo message. Does not implicitly {@link data.RespectShopInfo.verify|verify} messages.
         * @param message RespectShopInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IRespectShopInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RespectShopInfo message, length delimited. Does not implicitly {@link data.RespectShopInfo.verify|verify} messages.
         * @param message RespectShopInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IRespectShopInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RespectShopInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RespectShopInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.RespectShopInfo;

        /**
         * Decodes a RespectShopInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RespectShopInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.RespectShopInfo;

        /**
         * Verifies a RespectShopInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RespectShopInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RespectShopInfo
         */
        public static fromObject(object: { [k: string]: any }): data.RespectShopInfo;

        /**
         * Creates a plain object from a RespectShopInfo message. Also converts values to other types if specified.
         * @param message RespectShopInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.RespectShopInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RespectShopInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectData. */
    interface ITrialRespectData {

        /** TrialRespectData Opened */
        Opened?: (boolean|null);

        /** TrialRespectData RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialRespectData RefreshLv */
        RefreshLv?: (number|null);

        /** TrialRespectData Progress */
        Progress?: (number|null);

        /** TrialRespectData RewardRecords */
        RewardRecords?: (number[]|null);

        /** TrialRespectData Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialRespectData Monsters */
        Monsters?: (data.ITrialRoleInfo[]|null);

        /** TrialRespectData Items */
        Items?: (data.IRespectShopInfo[]|null);
    }

    /** Represents a TrialRespectData. */
    class TrialRespectData implements ITrialRespectData {

        /**
         * Constructs a new TrialRespectData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialRespectData);

        /** TrialRespectData Opened. */
        public Opened: boolean;

        /** TrialRespectData RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialRespectData RefreshLv. */
        public RefreshLv: number;

        /** TrialRespectData Progress. */
        public Progress: number;

        /** TrialRespectData RewardRecords. */
        public RewardRecords: number[];

        /** TrialRespectData Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialRespectData Monsters. */
        public Monsters: data.ITrialRoleInfo[];

        /** TrialRespectData Items. */
        public Items: data.IRespectShopInfo[];

        /**
         * Creates a new TrialRespectData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectData instance
         */
        public static create(properties?: data.ITrialRespectData): data.TrialRespectData;

        /**
         * Encodes the specified TrialRespectData message. Does not implicitly {@link data.TrialRespectData.verify|verify} messages.
         * @param message TrialRespectData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialRespectData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectData message, length delimited. Does not implicitly {@link data.TrialRespectData.verify|verify} messages.
         * @param message TrialRespectData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialRespectData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialRespectData;

        /**
         * Decodes a TrialRespectData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialRespectData;

        /**
         * Verifies a TrialRespectData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialRespectData;

        /**
         * Creates a plain object from a TrialRespectData message. Also converts values to other types if specified.
         * @param message TrialRespectData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialRespectData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMonsterInfo. */
    interface ITrialMonsterInfo {

        /** TrialMonsterInfo GroupID */
        GroupID?: (number|null);

        /** TrialMonsterInfo DropID */
        DropID?: (number|null);

        /** TrialMonsterInfo Roles */
        Roles?: (data.ITrialRoleInfo[]|null);

        /** TrialMonsterInfo RolePos */
        RolePos?: (number[]|null);
    }

    /** Represents a TrialMonsterInfo. */
    class TrialMonsterInfo implements ITrialMonsterInfo {

        /**
         * Constructs a new TrialMonsterInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialMonsterInfo);

        /** TrialMonsterInfo GroupID. */
        public GroupID: number;

        /** TrialMonsterInfo DropID. */
        public DropID: number;

        /** TrialMonsterInfo Roles. */
        public Roles: data.ITrialRoleInfo[];

        /** TrialMonsterInfo RolePos. */
        public RolePos: number[];

        /**
         * Creates a new TrialMonsterInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMonsterInfo instance
         */
        public static create(properties?: data.ITrialMonsterInfo): data.TrialMonsterInfo;

        /**
         * Encodes the specified TrialMonsterInfo message. Does not implicitly {@link data.TrialMonsterInfo.verify|verify} messages.
         * @param message TrialMonsterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialMonsterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMonsterInfo message, length delimited. Does not implicitly {@link data.TrialMonsterInfo.verify|verify} messages.
         * @param message TrialMonsterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialMonsterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMonsterInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMonsterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialMonsterInfo;

        /**
         * Decodes a TrialMonsterInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMonsterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialMonsterInfo;

        /**
         * Verifies a TrialMonsterInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMonsterInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMonsterInfo
         */
        public static fromObject(object: { [k: string]: any }): data.TrialMonsterInfo;

        /**
         * Creates a plain object from a TrialMonsterInfo message. Also converts values to other types if specified.
         * @param message TrialMonsterInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialMonsterInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMonsterInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPointInfo. */
    interface ITrialPointInfo {

        /** TrialPointInfo PointUID */
        PointUID?: (number|null);

        /** TrialPointInfo PointID */
        PointID?: (number|null);

        /** TrialPointInfo Type */
        Type?: (data.TrialPointInfo.PointType|null);

        /** TrialPointInfo Status */
        Status?: (data.TrialPointInfo.PointStatus|null);

        /** TrialPointInfo Monster */
        Monster?: (data.ITrialMonsterInfo|null);
    }

    /** Represents a TrialPointInfo. */
    class TrialPointInfo implements ITrialPointInfo {

        /**
         * Constructs a new TrialPointInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialPointInfo);

        /** TrialPointInfo PointUID. */
        public PointUID: number;

        /** TrialPointInfo PointID. */
        public PointID: number;

        /** TrialPointInfo Type. */
        public Type: data.TrialPointInfo.PointType;

        /** TrialPointInfo Status. */
        public Status: data.TrialPointInfo.PointStatus;

        /** TrialPointInfo Monster. */
        public Monster?: (data.ITrialMonsterInfo|null);

        /**
         * Creates a new TrialPointInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPointInfo instance
         */
        public static create(properties?: data.ITrialPointInfo): data.TrialPointInfo;

        /**
         * Encodes the specified TrialPointInfo message. Does not implicitly {@link data.TrialPointInfo.verify|verify} messages.
         * @param message TrialPointInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialPointInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPointInfo message, length delimited. Does not implicitly {@link data.TrialPointInfo.verify|verify} messages.
         * @param message TrialPointInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialPointInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPointInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPointInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialPointInfo;

        /**
         * Decodes a TrialPointInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPointInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialPointInfo;

        /**
         * Verifies a TrialPointInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPointInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPointInfo
         */
        public static fromObject(object: { [k: string]: any }): data.TrialPointInfo;

        /**
         * Creates a plain object from a TrialPointInfo message. Also converts values to other types if specified.
         * @param message TrialPointInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialPointInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPointInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace TrialPointInfo {

        /** PointType enum. */
        enum PointType {
            PTInvalid = 0,
            PTMonster = 1,
            PTLiveAltar = 2,
            PTHPAltar = 3,
            PTShop = 4,
            PTBox = 5,
            PTBuff = 6,
            PTPreview = 7,
            PTDeBuff = 8,
            PTTrap = 9,
            PTTransGate = 10,
            PTBoss = 11,
            PTElite = 12
        }

        /** PointStatus enum. */
        enum PointStatus {
            PSInvalid = 0,
            PSMask = 1,
            PSPreView = 2,
            PSUnMask = 3
        }
    }

    /** Properties of a TrialPurgatoryData. */
    interface ITrialPurgatoryData {

        /** TrialPurgatoryData Progress */
        Progress?: (number|null);

        /** TrialPurgatoryData RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialPurgatoryData FreeReliveTime */
        FreeReliveTime?: (number|Long|null);

        /** TrialPurgatoryData Points */
        Points?: (data.ITrialPointInfo[]|null);

        /** TrialPurgatoryData Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialPurgatoryData BuffList */
        BuffList?: (number[]|null);
    }

    /** Represents a TrialPurgatoryData. */
    class TrialPurgatoryData implements ITrialPurgatoryData {

        /**
         * Constructs a new TrialPurgatoryData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialPurgatoryData);

        /** TrialPurgatoryData Progress. */
        public Progress: number;

        /** TrialPurgatoryData RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialPurgatoryData FreeReliveTime. */
        public FreeReliveTime: (number|Long);

        /** TrialPurgatoryData Points. */
        public Points: data.ITrialPointInfo[];

        /** TrialPurgatoryData Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialPurgatoryData BuffList. */
        public BuffList: number[];

        /**
         * Creates a new TrialPurgatoryData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryData instance
         */
        public static create(properties?: data.ITrialPurgatoryData): data.TrialPurgatoryData;

        /**
         * Encodes the specified TrialPurgatoryData message. Does not implicitly {@link data.TrialPurgatoryData.verify|verify} messages.
         * @param message TrialPurgatoryData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialPurgatoryData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryData message, length delimited. Does not implicitly {@link data.TrialPurgatoryData.verify|verify} messages.
         * @param message TrialPurgatoryData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialPurgatoryData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialPurgatoryData;

        /**
         * Decodes a TrialPurgatoryData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialPurgatoryData;

        /**
         * Verifies a TrialPurgatoryData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialPurgatoryData;

        /**
         * Creates a plain object from a TrialPurgatoryData message. Also converts values to other types if specified.
         * @param message TrialPurgatoryData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialPurgatoryData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandData. */
    interface ITrialIslandData {

        /** TrialIslandData RefreshTime */
        RefreshTime?: (number|Long|null);

        /** TrialIslandData RefreshLevel */
        RefreshLevel?: (number|null);

        /** TrialIslandData NextTime */
        NextTime?: (number|Long|null);

        /** TrialIslandData Progress */
        Progress?: (number|null);

        /** TrialIslandData FreeReliveTime */
        FreeReliveTime?: (number|Long|null);

        /** TrialIslandData FreeReliveCount */
        FreeReliveCount?: (number|null);

        /** TrialIslandData Points */
        Points?: (data.ITrialPointInfo[]|null);

        /** TrialIslandData Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialIslandData BuffList */
        BuffList?: (number[]|null);

        /** TrialIslandData SelectBuffList */
        SelectBuffList?: (number[]|null);
    }

    /** Represents a TrialIslandData. */
    class TrialIslandData implements ITrialIslandData {

        /**
         * Constructs a new TrialIslandData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialIslandData);

        /** TrialIslandData RefreshTime. */
        public RefreshTime: (number|Long);

        /** TrialIslandData RefreshLevel. */
        public RefreshLevel: number;

        /** TrialIslandData NextTime. */
        public NextTime: (number|Long);

        /** TrialIslandData Progress. */
        public Progress: number;

        /** TrialIslandData FreeReliveTime. */
        public FreeReliveTime: (number|Long);

        /** TrialIslandData FreeReliveCount. */
        public FreeReliveCount: number;

        /** TrialIslandData Points. */
        public Points: data.ITrialPointInfo[];

        /** TrialIslandData Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialIslandData BuffList. */
        public BuffList: number[];

        /** TrialIslandData SelectBuffList. */
        public SelectBuffList: number[];

        /**
         * Creates a new TrialIslandData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandData instance
         */
        public static create(properties?: data.ITrialIslandData): data.TrialIslandData;

        /**
         * Encodes the specified TrialIslandData message. Does not implicitly {@link data.TrialIslandData.verify|verify} messages.
         * @param message TrialIslandData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialIslandData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandData message, length delimited. Does not implicitly {@link data.TrialIslandData.verify|verify} messages.
         * @param message TrialIslandData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialIslandData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialIslandData;

        /**
         * Decodes a TrialIslandData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialIslandData;

        /**
         * Verifies a TrialIslandData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialIslandData;

        /**
         * Creates a plain object from a TrialIslandData message. Also converts values to other types if specified.
         * @param message TrialIslandData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialIslandData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialDevilData. */
    interface ITrialDevilData {

        /** TrialDevilData FightNum */
        FightNum?: (number|null);

        /** TrialDevilData TotalDamage */
        TotalDamage?: (number|null);

        /** TrialDevilData Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);
    }

    /** Represents a TrialDevilData. */
    class TrialDevilData implements ITrialDevilData {

        /**
         * Constructs a new TrialDevilData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialDevilData);

        /** TrialDevilData FightNum. */
        public FightNum: number;

        /** TrialDevilData TotalDamage. */
        public TotalDamage: number;

        /** TrialDevilData Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /**
         * Creates a new TrialDevilData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialDevilData instance
         */
        public static create(properties?: data.ITrialDevilData): data.TrialDevilData;

        /**
         * Encodes the specified TrialDevilData message. Does not implicitly {@link data.TrialDevilData.verify|verify} messages.
         * @param message TrialDevilData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialDevilData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialDevilData message, length delimited. Does not implicitly {@link data.TrialDevilData.verify|verify} messages.
         * @param message TrialDevilData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialDevilData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialDevilData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialDevilData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialDevilData;

        /**
         * Decodes a TrialDevilData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialDevilData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialDevilData;

        /**
         * Verifies a TrialDevilData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialDevilData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialDevilData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialDevilData;

        /**
         * Creates a plain object from a TrialDevilData message. Also converts values to other types if specified.
         * @param message TrialDevilData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialDevilData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialDevilData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkData. */
    interface ITrialLightDarkData {

        /** TrialLightDarkData LightDarkID */
        LightDarkID?: (number|null);

        /** TrialLightDarkData HexagramIDList */
        HexagramIDList?: (number[]|null);

        /** TrialLightDarkData MonsterLineupIDList */
        MonsterLineupIDList?: (number[]|null);

        /** TrialLightDarkData SceneIndex */
        SceneIndex?: (number|null);

        /** TrialLightDarkData ActivateHeroIDList */
        ActivateHeroIDList?: (number[]|null);
    }

    /** Represents a TrialLightDarkData. */
    class TrialLightDarkData implements ITrialLightDarkData {

        /**
         * Constructs a new TrialLightDarkData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialLightDarkData);

        /** TrialLightDarkData LightDarkID. */
        public LightDarkID: number;

        /** TrialLightDarkData HexagramIDList. */
        public HexagramIDList: number[];

        /** TrialLightDarkData MonsterLineupIDList. */
        public MonsterLineupIDList: number[];

        /** TrialLightDarkData SceneIndex. */
        public SceneIndex: number;

        /** TrialLightDarkData ActivateHeroIDList. */
        public ActivateHeroIDList: number[];

        /**
         * Creates a new TrialLightDarkData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkData instance
         */
        public static create(properties?: data.ITrialLightDarkData): data.TrialLightDarkData;

        /**
         * Encodes the specified TrialLightDarkData message. Does not implicitly {@link data.TrialLightDarkData.verify|verify} messages.
         * @param message TrialLightDarkData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialLightDarkData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkData message, length delimited. Does not implicitly {@link data.TrialLightDarkData.verify|verify} messages.
         * @param message TrialLightDarkData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialLightDarkData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialLightDarkData;

        /**
         * Decodes a TrialLightDarkData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialLightDarkData;

        /**
         * Verifies a TrialLightDarkData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialLightDarkData;

        /**
         * Creates a plain object from a TrialLightDarkData message. Also converts values to other types if specified.
         * @param message TrialLightDarkData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialLightDarkData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialData. */
    interface ITrialData {

        /** TrialData TrialHellData */
        TrialHellData?: (data.ITrialHellData|null);

        /** TrialData TrialCloudDreamData */
        TrialCloudDreamData?: (data.ITrialCloudDreamData|null);

        /** TrialData TrialMiracleDoorData */
        TrialMiracleDoorData?: (data.ITrialMiracleDoorData|null);

        /** TrialData TrialRespectData */
        TrialRespectData?: (data.ITrialRespectData|null);

        /** TrialData TrialPurgatoryData */
        TrialPurgatoryData?: (data.ITrialPurgatoryData|null);

        /** TrialData TrialIslandData */
        TrialIslandData?: (data.ITrialIslandData|null);

        /** TrialData TrialDevilData */
        TrialDevilData?: (data.ITrialDevilData|null);

        /** TrialData TrialLightDarkData */
        TrialLightDarkData?: (data.ITrialLightDarkData|null);
    }

    /** Represents a TrialData. */
    class TrialData implements ITrialData {

        /**
         * Constructs a new TrialData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.ITrialData);

        /** TrialData TrialHellData. */
        public TrialHellData?: (data.ITrialHellData|null);

        /** TrialData TrialCloudDreamData. */
        public TrialCloudDreamData?: (data.ITrialCloudDreamData|null);

        /** TrialData TrialMiracleDoorData. */
        public TrialMiracleDoorData?: (data.ITrialMiracleDoorData|null);

        /** TrialData TrialRespectData. */
        public TrialRespectData?: (data.ITrialRespectData|null);

        /** TrialData TrialPurgatoryData. */
        public TrialPurgatoryData?: (data.ITrialPurgatoryData|null);

        /** TrialData TrialIslandData. */
        public TrialIslandData?: (data.ITrialIslandData|null);

        /** TrialData TrialDevilData. */
        public TrialDevilData?: (data.ITrialDevilData|null);

        /** TrialData TrialLightDarkData. */
        public TrialLightDarkData?: (data.ITrialLightDarkData|null);

        /**
         * Creates a new TrialData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialData instance
         */
        public static create(properties?: data.ITrialData): data.TrialData;

        /**
         * Encodes the specified TrialData message. Does not implicitly {@link data.TrialData.verify|verify} messages.
         * @param message TrialData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.ITrialData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialData message, length delimited. Does not implicitly {@link data.TrialData.verify|verify} messages.
         * @param message TrialData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.ITrialData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.TrialData;

        /**
         * Decodes a TrialData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.TrialData;

        /**
         * Verifies a TrialData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialData
         */
        public static fromObject(object: { [k: string]: any }): data.TrialData;

        /**
         * Creates a plain object from a TrialData message. Also converts values to other types if specified.
         * @param message TrialData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.TrialData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalSageData. */
    interface IUniversalSageData {

        /** UniversalSageData IsChoose */
        IsChoose?: (boolean|null);
    }

    /** Represents an UniversalSageData. */
    class UniversalSageData implements IUniversalSageData {

        /**
         * Constructs a new UniversalSageData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalSageData);

        /** UniversalSageData IsChoose. */
        public IsChoose: boolean;

        /**
         * Creates a new UniversalSageData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalSageData instance
         */
        public static create(properties?: data.IUniversalSageData): data.UniversalSageData;

        /**
         * Encodes the specified UniversalSageData message. Does not implicitly {@link data.UniversalSageData.verify|verify} messages.
         * @param message UniversalSageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalSageData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalSageData message, length delimited. Does not implicitly {@link data.UniversalSageData.verify|verify} messages.
         * @param message UniversalSageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalSageData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalSageData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalSageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalSageData;

        /**
         * Decodes an UniversalSageData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalSageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalSageData;

        /**
         * Verifies an UniversalSageData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalSageData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalSageData
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalSageData;

        /**
         * Creates a plain object from an UniversalSageData message. Also converts values to other types if specified.
         * @param message UniversalSageData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalSageData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalSageData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainData. */
    interface IUniversalHangUpGainData {

        /** UniversalHangUpGainData ChapterID */
        ChapterID?: (number|null);

        /** UniversalHangUpGainData StartTime */
        StartTime?: (number|Long|null);

        /** UniversalHangUpGainData LastCalTime */
        LastCalTime?: (number|Long|null);

        /** UniversalHangUpGainData GainValueMap */
        GainValueMap?: ({ [k: string]: (number|Long) }|null);

        /** UniversalHangUpGainData FastHangUpCount */
        FastHangUpCount?: (number|null);

        /** UniversalHangUpGainData Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalHangUpGainData. */
    class UniversalHangUpGainData implements IUniversalHangUpGainData {

        /**
         * Constructs a new UniversalHangUpGainData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalHangUpGainData);

        /** UniversalHangUpGainData ChapterID. */
        public ChapterID: number;

        /** UniversalHangUpGainData StartTime. */
        public StartTime: (number|Long);

        /** UniversalHangUpGainData LastCalTime. */
        public LastCalTime: (number|Long);

        /** UniversalHangUpGainData GainValueMap. */
        public GainValueMap: { [k: string]: (number|Long) };

        /** UniversalHangUpGainData FastHangUpCount. */
        public FastHangUpCount: number;

        /** UniversalHangUpGainData Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalHangUpGainData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainData instance
         */
        public static create(properties?: data.IUniversalHangUpGainData): data.UniversalHangUpGainData;

        /**
         * Encodes the specified UniversalHangUpGainData message. Does not implicitly {@link data.UniversalHangUpGainData.verify|verify} messages.
         * @param message UniversalHangUpGainData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalHangUpGainData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainData message, length delimited. Does not implicitly {@link data.UniversalHangUpGainData.verify|verify} messages.
         * @param message UniversalHangUpGainData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalHangUpGainData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalHangUpGainData;

        /**
         * Decodes an UniversalHangUpGainData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalHangUpGainData;

        /**
         * Verifies an UniversalHangUpGainData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainData
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalHangUpGainData;

        /**
         * Creates a plain object from an UniversalHangUpGainData message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalHangUpGainData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalViewOtherData. */
    interface IUniversalViewOtherData {

        /** UniversalViewOtherData UserID */
        UserID?: (string|null);

        /** UniversalViewOtherData Name */
        Name?: (string|null);

        /** UniversalViewOtherData HeadID */
        HeadID?: (number|null);

        /** UniversalViewOtherData HeadFrameID */
        HeadFrameID?: (number|null);

        /** UniversalViewOtherData Exp */
        Exp?: (number|null);

        /** UniversalViewOtherData Power */
        Power?: (number|Long|null);

        /** UniversalViewOtherData AdventureLessonId */
        AdventureLessonId?: (number|null);

        /** UniversalViewOtherData DreamLessonId */
        DreamLessonId?: (number|null);

        /** UniversalViewOtherData PvpFairyIntegral */
        PvpFairyIntegral?: (number|null);

        /** UniversalViewOtherData FactionName */
        FactionName?: (string|null);

        /** UniversalViewOtherData PvpSpiritRank */
        PvpSpiritRank?: (number|null);
    }

    /** Represents an UniversalViewOtherData. */
    class UniversalViewOtherData implements IUniversalViewOtherData {

        /**
         * Constructs a new UniversalViewOtherData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalViewOtherData);

        /** UniversalViewOtherData UserID. */
        public UserID: string;

        /** UniversalViewOtherData Name. */
        public Name: string;

        /** UniversalViewOtherData HeadID. */
        public HeadID: number;

        /** UniversalViewOtherData HeadFrameID. */
        public HeadFrameID: number;

        /** UniversalViewOtherData Exp. */
        public Exp: number;

        /** UniversalViewOtherData Power. */
        public Power: (number|Long);

        /** UniversalViewOtherData AdventureLessonId. */
        public AdventureLessonId: number;

        /** UniversalViewOtherData DreamLessonId. */
        public DreamLessonId: number;

        /** UniversalViewOtherData PvpFairyIntegral. */
        public PvpFairyIntegral: number;

        /** UniversalViewOtherData FactionName. */
        public FactionName: string;

        /** UniversalViewOtherData PvpSpiritRank. */
        public PvpSpiritRank: number;

        /**
         * Creates a new UniversalViewOtherData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalViewOtherData instance
         */
        public static create(properties?: data.IUniversalViewOtherData): data.UniversalViewOtherData;

        /**
         * Encodes the specified UniversalViewOtherData message. Does not implicitly {@link data.UniversalViewOtherData.verify|verify} messages.
         * @param message UniversalViewOtherData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalViewOtherData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalViewOtherData message, length delimited. Does not implicitly {@link data.UniversalViewOtherData.verify|verify} messages.
         * @param message UniversalViewOtherData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalViewOtherData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalViewOtherData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalViewOtherData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalViewOtherData;

        /**
         * Decodes an UniversalViewOtherData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalViewOtherData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalViewOtherData;

        /**
         * Verifies an UniversalViewOtherData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalViewOtherData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalViewOtherData
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalViewOtherData;

        /**
         * Creates a plain object from an UniversalViewOtherData message. Also converts values to other types if specified.
         * @param message UniversalViewOtherData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalViewOtherData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalViewOtherData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateTribute. */
    interface IUniversalConsecrateTribute {

        /** UniversalConsecrateTribute ItemID */
        ItemID?: (number|null);

        /** UniversalConsecrateTribute StartTime */
        StartTime?: (number|Long|null);

        /** UniversalConsecrateTribute SpeedUpFlag */
        SpeedUpFlag?: (boolean|null);
    }

    /** Represents an UniversalConsecrateTribute. */
    class UniversalConsecrateTribute implements IUniversalConsecrateTribute {

        /**
         * Constructs a new UniversalConsecrateTribute.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalConsecrateTribute);

        /** UniversalConsecrateTribute ItemID. */
        public ItemID: number;

        /** UniversalConsecrateTribute StartTime. */
        public StartTime: (number|Long);

        /** UniversalConsecrateTribute SpeedUpFlag. */
        public SpeedUpFlag: boolean;

        /**
         * Creates a new UniversalConsecrateTribute instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateTribute instance
         */
        public static create(properties?: data.IUniversalConsecrateTribute): data.UniversalConsecrateTribute;

        /**
         * Encodes the specified UniversalConsecrateTribute message. Does not implicitly {@link data.UniversalConsecrateTribute.verify|verify} messages.
         * @param message UniversalConsecrateTribute message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalConsecrateTribute, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateTribute message, length delimited. Does not implicitly {@link data.UniversalConsecrateTribute.verify|verify} messages.
         * @param message UniversalConsecrateTribute message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalConsecrateTribute, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateTribute message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateTribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalConsecrateTribute;

        /**
         * Decodes an UniversalConsecrateTribute message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateTribute
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalConsecrateTribute;

        /**
         * Verifies an UniversalConsecrateTribute message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateTribute message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateTribute
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalConsecrateTribute;

        /**
         * Creates a plain object from an UniversalConsecrateTribute message. Also converts values to other types if specified.
         * @param message UniversalConsecrateTribute
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalConsecrateTribute, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateTribute to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateStatue. */
    interface IUniversalConsecrateStatue {

        /** UniversalConsecrateStatue StatueExp */
        StatueExp?: (number|null);

        /** UniversalConsecrateStatue StatueBefall */
        StatueBefall?: (number|null);

        /** UniversalConsecrateStatue UniversalConsecrateTributeList */
        UniversalConsecrateTributeList?: (data.IUniversalConsecrateTribute[]|null);

        /** UniversalConsecrateStatue ReceiveLevelRewardMap */
        ReceiveLevelRewardMap?: ({ [k: string]: boolean }|null);

        /** UniversalConsecrateStatue RandomBefallRewardIndexList */
        RandomBefallRewardIndexList?: (number[]|null);

        /** UniversalConsecrateStatue ReceiveBefallRewardCount */
        ReceiveBefallRewardCount?: (number|null);
    }

    /** Represents an UniversalConsecrateStatue. */
    class UniversalConsecrateStatue implements IUniversalConsecrateStatue {

        /**
         * Constructs a new UniversalConsecrateStatue.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalConsecrateStatue);

        /** UniversalConsecrateStatue StatueExp. */
        public StatueExp: number;

        /** UniversalConsecrateStatue StatueBefall. */
        public StatueBefall: number;

        /** UniversalConsecrateStatue UniversalConsecrateTributeList. */
        public UniversalConsecrateTributeList: data.IUniversalConsecrateTribute[];

        /** UniversalConsecrateStatue ReceiveLevelRewardMap. */
        public ReceiveLevelRewardMap: { [k: string]: boolean };

        /** UniversalConsecrateStatue RandomBefallRewardIndexList. */
        public RandomBefallRewardIndexList: number[];

        /** UniversalConsecrateStatue ReceiveBefallRewardCount. */
        public ReceiveBefallRewardCount: number;

        /**
         * Creates a new UniversalConsecrateStatue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateStatue instance
         */
        public static create(properties?: data.IUniversalConsecrateStatue): data.UniversalConsecrateStatue;

        /**
         * Encodes the specified UniversalConsecrateStatue message. Does not implicitly {@link data.UniversalConsecrateStatue.verify|verify} messages.
         * @param message UniversalConsecrateStatue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalConsecrateStatue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateStatue message, length delimited. Does not implicitly {@link data.UniversalConsecrateStatue.verify|verify} messages.
         * @param message UniversalConsecrateStatue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalConsecrateStatue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateStatue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateStatue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalConsecrateStatue;

        /**
         * Decodes an UniversalConsecrateStatue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateStatue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalConsecrateStatue;

        /**
         * Verifies an UniversalConsecrateStatue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateStatue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateStatue
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalConsecrateStatue;

        /**
         * Creates a plain object from an UniversalConsecrateStatue message. Also converts values to other types if specified.
         * @param message UniversalConsecrateStatue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalConsecrateStatue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateStatue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateData. */
    interface IUniversalConsecrateData {

        /** UniversalConsecrateData UniversalConsecrateStatueMap */
        UniversalConsecrateStatueMap?: ({ [k: string]: data.IUniversalConsecrateStatue }|null);
    }

    /** Represents an UniversalConsecrateData. */
    class UniversalConsecrateData implements IUniversalConsecrateData {

        /**
         * Constructs a new UniversalConsecrateData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalConsecrateData);

        /** UniversalConsecrateData UniversalConsecrateStatueMap. */
        public UniversalConsecrateStatueMap: { [k: string]: data.IUniversalConsecrateStatue };

        /**
         * Creates a new UniversalConsecrateData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateData instance
         */
        public static create(properties?: data.IUniversalConsecrateData): data.UniversalConsecrateData;

        /**
         * Encodes the specified UniversalConsecrateData message. Does not implicitly {@link data.UniversalConsecrateData.verify|verify} messages.
         * @param message UniversalConsecrateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalConsecrateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateData message, length delimited. Does not implicitly {@link data.UniversalConsecrateData.verify|verify} messages.
         * @param message UniversalConsecrateData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalConsecrateData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalConsecrateData;

        /**
         * Decodes an UniversalConsecrateData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalConsecrateData;

        /**
         * Verifies an UniversalConsecrateData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateData
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalConsecrateData;

        /**
         * Creates a plain object from an UniversalConsecrateData message. Also converts values to other types if specified.
         * @param message UniversalConsecrateData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalConsecrateData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalData. */
    interface IUniversalData {

        /** UniversalData UniversalSageData */
        UniversalSageData?: (data.IUniversalSageData|null);

        /** UniversalData UniversalHangUpGainData */
        UniversalHangUpGainData?: (data.IUniversalHangUpGainData|null);

        /** UniversalData UniversalConsecrateData */
        UniversalConsecrateData?: (data.IUniversalConsecrateData|null);
    }

    /** Represents an UniversalData. */
    class UniversalData implements IUniversalData {

        /**
         * Constructs a new UniversalData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUniversalData);

        /** UniversalData UniversalSageData. */
        public UniversalSageData?: (data.IUniversalSageData|null);

        /** UniversalData UniversalHangUpGainData. */
        public UniversalHangUpGainData?: (data.IUniversalHangUpGainData|null);

        /** UniversalData UniversalConsecrateData. */
        public UniversalConsecrateData?: (data.IUniversalConsecrateData|null);

        /**
         * Creates a new UniversalData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalData instance
         */
        public static create(properties?: data.IUniversalData): data.UniversalData;

        /**
         * Encodes the specified UniversalData message. Does not implicitly {@link data.UniversalData.verify|verify} messages.
         * @param message UniversalData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUniversalData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalData message, length delimited. Does not implicitly {@link data.UniversalData.verify|verify} messages.
         * @param message UniversalData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUniversalData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UniversalData;

        /**
         * Decodes an UniversalData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UniversalData;

        /**
         * Verifies an UniversalData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalData
         */
        public static fromObject(object: { [k: string]: any }): data.UniversalData;

        /**
         * Creates a plain object from an UniversalData message. Also converts values to other types if specified.
         * @param message UniversalData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UniversalData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserData. */
    interface IUserData {

        /** UserData Version */
        Version?: (number|null);

        /** UserData FromDBTime */
        FromDBTime?: (number|Long|null);

        /** UserData AccountData */
        AccountData?: (data.IAccountData|null);

        /** UserData BagData */
        BagData?: (data.IBagData|null);

        /** UserData PVEData */
        PVEData?: (data.IPVEData|null);

        /** UserData MailData */
        MailData?: (data.IMailData|null);

        /** UserData TrackData */
        TrackData?: (data.ITrackData|null);

        /** UserData FriendData */
        FriendData?: (data.IFriendData|null);

        /** UserData DropData */
        DropData?: (data.IDropData|null);

        /** UserData RefreshData */
        RefreshData?: (data.IRefreshData|null);

        /** UserData TimeLimitData */
        TimeLimitData?: (data.ITimeLimitData|null);

        /** UserData TrialData */
        TrialData?: (data.ITrialData|null);

        /** UserData PVPData */
        PVPData?: (data.IPVPData|null);

        /** UserData LeadData */
        LeadData?: (data.ILeadData|null);

        /** UserData TaskData */
        TaskData?: (data.ITaskData|null);

        /** UserData ActivityData */
        ActivityData?: (data.IActivityData|null);

        /** UserData GuideData */
        GuideData?: (data.IGuideData|null);

        /** UserData FactionData */
        FactionData?: (data.IFactionData|null);

        /** UserData DivineData */
        DivineData?: (data.IDivineData|null);

        /** UserData UniversalData */
        UniversalData?: (data.IUniversalData|null);

        /** UserData ShopData */
        ShopData?: (data.IShopData|null);

        /** UserData TreasureData */
        TreasureData?: (data.ITreasureData|null);

        /** UserData EpochData */
        EpochData?: (data.IEpochData|null);
    }

    /** Represents a UserData. */
    class UserData implements IUserData {

        /**
         * Constructs a new UserData.
         * @param [properties] Properties to set
         */
        constructor(properties?: data.IUserData);

        /** UserData Version. */
        public Version: number;

        /** UserData FromDBTime. */
        public FromDBTime: (number|Long);

        /** UserData AccountData. */
        public AccountData?: (data.IAccountData|null);

        /** UserData BagData. */
        public BagData?: (data.IBagData|null);

        /** UserData PVEData. */
        public PVEData?: (data.IPVEData|null);

        /** UserData MailData. */
        public MailData?: (data.IMailData|null);

        /** UserData TrackData. */
        public TrackData?: (data.ITrackData|null);

        /** UserData FriendData. */
        public FriendData?: (data.IFriendData|null);

        /** UserData DropData. */
        public DropData?: (data.IDropData|null);

        /** UserData RefreshData. */
        public RefreshData?: (data.IRefreshData|null);

        /** UserData TimeLimitData. */
        public TimeLimitData?: (data.ITimeLimitData|null);

        /** UserData TrialData. */
        public TrialData?: (data.ITrialData|null);

        /** UserData PVPData. */
        public PVPData?: (data.IPVPData|null);

        /** UserData LeadData. */
        public LeadData?: (data.ILeadData|null);

        /** UserData TaskData. */
        public TaskData?: (data.ITaskData|null);

        /** UserData ActivityData. */
        public ActivityData?: (data.IActivityData|null);

        /** UserData GuideData. */
        public GuideData?: (data.IGuideData|null);

        /** UserData FactionData. */
        public FactionData?: (data.IFactionData|null);

        /** UserData DivineData. */
        public DivineData?: (data.IDivineData|null);

        /** UserData UniversalData. */
        public UniversalData?: (data.IUniversalData|null);

        /** UserData ShopData. */
        public ShopData?: (data.IShopData|null);

        /** UserData TreasureData. */
        public TreasureData?: (data.ITreasureData|null);

        /** UserData EpochData. */
        public EpochData?: (data.IEpochData|null);

        /**
         * Creates a new UserData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserData instance
         */
        public static create(properties?: data.IUserData): data.UserData;

        /**
         * Encodes the specified UserData message. Does not implicitly {@link data.UserData.verify|verify} messages.
         * @param message UserData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: data.IUserData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserData message, length delimited. Does not implicitly {@link data.UserData.verify|verify} messages.
         * @param message UserData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: data.IUserData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): data.UserData;

        /**
         * Decodes a UserData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): data.UserData;

        /**
         * Verifies a UserData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserData
         */
        public static fromObject(object: { [k: string]: any }): data.UserData;

        /**
         * Creates a plain object from a UserData message. Also converts values to other types if specified.
         * @param message UserData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: data.UserData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace worldsvr. */
export namespace worldsvr {

    /** CMD enum. */
    enum CMD {
        INVALID = 0,
        CHECK_ACCOUNT_REQ = 1,
        CHECK_ACCOUNT_RES = 2
    }

    /** AccountType enum. */
    enum AccountType {
        AT_SELF = 0
    }

    /** ServerState enum. */
    enum ServerState {
        MAINTAIN = 0,
        SMOOTH = 1,
        CROWD = 2,
        FULL = 3
    }

    /** Properties of a GamesvrInfo. */
    interface IGamesvrInfo {

        /** GamesvrInfo GamesvrID */
        GamesvrID?: (number|null);

        /** GamesvrInfo URL */
        URL?: (string|null);

        /** GamesvrInfo State */
        State?: (worldsvr.ServerState|null);
    }

    /** Represents a GamesvrInfo. */
    class GamesvrInfo implements IGamesvrInfo {

        /**
         * Constructs a new GamesvrInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: worldsvr.IGamesvrInfo);

        /** GamesvrInfo GamesvrID. */
        public GamesvrID: number;

        /** GamesvrInfo URL. */
        public URL: string;

        /** GamesvrInfo State. */
        public State: worldsvr.ServerState;

        /**
         * Creates a new GamesvrInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GamesvrInfo instance
         */
        public static create(properties?: worldsvr.IGamesvrInfo): worldsvr.GamesvrInfo;

        /**
         * Encodes the specified GamesvrInfo message. Does not implicitly {@link worldsvr.GamesvrInfo.verify|verify} messages.
         * @param message GamesvrInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: worldsvr.IGamesvrInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GamesvrInfo message, length delimited. Does not implicitly {@link worldsvr.GamesvrInfo.verify|verify} messages.
         * @param message GamesvrInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: worldsvr.IGamesvrInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GamesvrInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GamesvrInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): worldsvr.GamesvrInfo;

        /**
         * Decodes a GamesvrInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GamesvrInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): worldsvr.GamesvrInfo;

        /**
         * Verifies a GamesvrInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GamesvrInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GamesvrInfo
         */
        public static fromObject(object: { [k: string]: any }): worldsvr.GamesvrInfo;

        /**
         * Creates a plain object from a GamesvrInfo message. Also converts values to other types if specified.
         * @param message GamesvrInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: worldsvr.GamesvrInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GamesvrInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheckAccountReq. */
    interface ICheckAccountReq {

        /** CheckAccountReq Account */
        Account?: (string|null);

        /** CheckAccountReq Session */
        Session?: (string|null);

        /** CheckAccountReq Platform */
        Platform?: (string|null);
    }

    /** Represents a CheckAccountReq. */
    class CheckAccountReq implements ICheckAccountReq {

        /**
         * Constructs a new CheckAccountReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: worldsvr.ICheckAccountReq);

        /** CheckAccountReq Account. */
        public Account: string;

        /** CheckAccountReq Session. */
        public Session: string;

        /** CheckAccountReq Platform. */
        public Platform: string;

        /**
         * Creates a new CheckAccountReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheckAccountReq instance
         */
        public static create(properties?: worldsvr.ICheckAccountReq): worldsvr.CheckAccountReq;

        /**
         * Encodes the specified CheckAccountReq message. Does not implicitly {@link worldsvr.CheckAccountReq.verify|verify} messages.
         * @param message CheckAccountReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: worldsvr.ICheckAccountReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheckAccountReq message, length delimited. Does not implicitly {@link worldsvr.CheckAccountReq.verify|verify} messages.
         * @param message CheckAccountReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: worldsvr.ICheckAccountReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheckAccountReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckAccountReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): worldsvr.CheckAccountReq;

        /**
         * Decodes a CheckAccountReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheckAccountReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): worldsvr.CheckAccountReq;

        /**
         * Verifies a CheckAccountReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheckAccountReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheckAccountReq
         */
        public static fromObject(object: { [k: string]: any }): worldsvr.CheckAccountReq;

        /**
         * Creates a plain object from a CheckAccountReq message. Also converts values to other types if specified.
         * @param message CheckAccountReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: worldsvr.CheckAccountReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheckAccountReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheckAccountRes. */
    interface ICheckAccountRes {

        /** CheckAccountRes UserID */
        UserID?: (string|null);

        /** CheckAccountRes Session */
        Session?: (string|null);

        /** CheckAccountRes Platform */
        Platform?: (string|null);

        /** CheckAccountRes Ext */
        Ext?: (string|null);

        /** CheckAccountRes Token */
        Token?: (string|null);

        /** CheckAccountRes GamesvrInfos */
        GamesvrInfos?: (worldsvr.IGamesvrInfo[]|null);

        /** CheckAccountRes WorldSvr */
        WorldSvr?: (number|null);
    }

    /** Represents a CheckAccountRes. */
    class CheckAccountRes implements ICheckAccountRes {

        /**
         * Constructs a new CheckAccountRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: worldsvr.ICheckAccountRes);

        /** CheckAccountRes UserID. */
        public UserID: string;

        /** CheckAccountRes Session. */
        public Session: string;

        /** CheckAccountRes Platform. */
        public Platform: string;

        /** CheckAccountRes Ext. */
        public Ext: string;

        /** CheckAccountRes Token. */
        public Token: string;

        /** CheckAccountRes GamesvrInfos. */
        public GamesvrInfos: worldsvr.IGamesvrInfo[];

        /** CheckAccountRes WorldSvr. */
        public WorldSvr: number;

        /**
         * Creates a new CheckAccountRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheckAccountRes instance
         */
        public static create(properties?: worldsvr.ICheckAccountRes): worldsvr.CheckAccountRes;

        /**
         * Encodes the specified CheckAccountRes message. Does not implicitly {@link worldsvr.CheckAccountRes.verify|verify} messages.
         * @param message CheckAccountRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: worldsvr.ICheckAccountRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheckAccountRes message, length delimited. Does not implicitly {@link worldsvr.CheckAccountRes.verify|verify} messages.
         * @param message CheckAccountRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: worldsvr.ICheckAccountRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheckAccountRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckAccountRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): worldsvr.CheckAccountRes;

        /**
         * Decodes a CheckAccountRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheckAccountRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): worldsvr.CheckAccountRes;

        /**
         * Verifies a CheckAccountRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheckAccountRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheckAccountRes
         */
        public static fromObject(object: { [k: string]: any }): worldsvr.CheckAccountRes;

        /**
         * Creates a plain object from a CheckAccountRes message. Also converts values to other types if specified.
         * @param message CheckAccountRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: worldsvr.CheckAccountRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheckAccountRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace gamesvr. */
export namespace gamesvr {

    /** Properties of an ActivitySpiritReceiveSpiritReq. */
    interface IActivitySpiritReceiveSpiritReq {

        /** ActivitySpiritReceiveSpiritReq GetPowerID */
        GetPowerID?: (number|null);
    }

    /** Represents an ActivitySpiritReceiveSpiritReq. */
    class ActivitySpiritReceiveSpiritReq implements IActivitySpiritReceiveSpiritReq {

        /**
         * Constructs a new ActivitySpiritReceiveSpiritReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySpiritReceiveSpiritReq);

        /** ActivitySpiritReceiveSpiritReq GetPowerID. */
        public GetPowerID: number;

        /**
         * Creates a new ActivitySpiritReceiveSpiritReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySpiritReceiveSpiritReq instance
         */
        public static create(properties?: gamesvr.IActivitySpiritReceiveSpiritReq): gamesvr.ActivitySpiritReceiveSpiritReq;

        /**
         * Encodes the specified ActivitySpiritReceiveSpiritReq message. Does not implicitly {@link gamesvr.ActivitySpiritReceiveSpiritReq.verify|verify} messages.
         * @param message ActivitySpiritReceiveSpiritReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySpiritReceiveSpiritReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySpiritReceiveSpiritReq message, length delimited. Does not implicitly {@link gamesvr.ActivitySpiritReceiveSpiritReq.verify|verify} messages.
         * @param message ActivitySpiritReceiveSpiritReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySpiritReceiveSpiritReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySpiritReceiveSpiritReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySpiritReceiveSpiritReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySpiritReceiveSpiritReq;

        /**
         * Decodes an ActivitySpiritReceiveSpiritReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySpiritReceiveSpiritReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySpiritReceiveSpiritReq;

        /**
         * Verifies an ActivitySpiritReceiveSpiritReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySpiritReceiveSpiritReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySpiritReceiveSpiritReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySpiritReceiveSpiritReq;

        /**
         * Creates a plain object from an ActivitySpiritReceiveSpiritReq message. Also converts values to other types if specified.
         * @param message ActivitySpiritReceiveSpiritReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySpiritReceiveSpiritReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySpiritReceiveSpiritReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySpiritReceiveSpiritRes. */
    interface IActivitySpiritReceiveSpiritRes {

        /** ActivitySpiritReceiveSpiritRes GetPowerID */
        GetPowerID?: (number|null);
    }

    /** Represents an ActivitySpiritReceiveSpiritRes. */
    class ActivitySpiritReceiveSpiritRes implements IActivitySpiritReceiveSpiritRes {

        /**
         * Constructs a new ActivitySpiritReceiveSpiritRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySpiritReceiveSpiritRes);

        /** ActivitySpiritReceiveSpiritRes GetPowerID. */
        public GetPowerID: number;

        /**
         * Creates a new ActivitySpiritReceiveSpiritRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySpiritReceiveSpiritRes instance
         */
        public static create(properties?: gamesvr.IActivitySpiritReceiveSpiritRes): gamesvr.ActivitySpiritReceiveSpiritRes;

        /**
         * Encodes the specified ActivitySpiritReceiveSpiritRes message. Does not implicitly {@link gamesvr.ActivitySpiritReceiveSpiritRes.verify|verify} messages.
         * @param message ActivitySpiritReceiveSpiritRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySpiritReceiveSpiritRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySpiritReceiveSpiritRes message, length delimited. Does not implicitly {@link gamesvr.ActivitySpiritReceiveSpiritRes.verify|verify} messages.
         * @param message ActivitySpiritReceiveSpiritRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySpiritReceiveSpiritRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySpiritReceiveSpiritRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySpiritReceiveSpiritRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySpiritReceiveSpiritRes;

        /**
         * Decodes an ActivitySpiritReceiveSpiritRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySpiritReceiveSpiritRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySpiritReceiveSpiritRes;

        /**
         * Verifies an ActivitySpiritReceiveSpiritRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySpiritReceiveSpiritRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySpiritReceiveSpiritRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySpiritReceiveSpiritRes;

        /**
         * Creates a plain object from an ActivitySpiritReceiveSpiritRes message. Also converts values to other types if specified.
         * @param message ActivitySpiritReceiveSpiritRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySpiritReceiveSpiritRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySpiritReceiveSpiritRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySpiritLastRefreshSpTimeNotify. */
    interface IActivitySpiritLastRefreshSpTimeNotify {

        /** ActivitySpiritLastRefreshSpTimeNotify LastRefreshSpTime */
        LastRefreshSpTime?: (number|Long|null);
    }

    /** Represents an ActivitySpiritLastRefreshSpTimeNotify. */
    class ActivitySpiritLastRefreshSpTimeNotify implements IActivitySpiritLastRefreshSpTimeNotify {

        /**
         * Constructs a new ActivitySpiritLastRefreshSpTimeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySpiritLastRefreshSpTimeNotify);

        /** ActivitySpiritLastRefreshSpTimeNotify LastRefreshSpTime. */
        public LastRefreshSpTime: (number|Long);

        /**
         * Creates a new ActivitySpiritLastRefreshSpTimeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySpiritLastRefreshSpTimeNotify instance
         */
        public static create(properties?: gamesvr.IActivitySpiritLastRefreshSpTimeNotify): gamesvr.ActivitySpiritLastRefreshSpTimeNotify;

        /**
         * Encodes the specified ActivitySpiritLastRefreshSpTimeNotify message. Does not implicitly {@link gamesvr.ActivitySpiritLastRefreshSpTimeNotify.verify|verify} messages.
         * @param message ActivitySpiritLastRefreshSpTimeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySpiritLastRefreshSpTimeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySpiritLastRefreshSpTimeNotify message, length delimited. Does not implicitly {@link gamesvr.ActivitySpiritLastRefreshSpTimeNotify.verify|verify} messages.
         * @param message ActivitySpiritLastRefreshSpTimeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySpiritLastRefreshSpTimeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySpiritLastRefreshSpTimeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySpiritLastRefreshSpTimeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySpiritLastRefreshSpTimeNotify;

        /**
         * Decodes an ActivitySpiritLastRefreshSpTimeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySpiritLastRefreshSpTimeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySpiritLastRefreshSpTimeNotify;

        /**
         * Verifies an ActivitySpiritLastRefreshSpTimeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySpiritLastRefreshSpTimeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySpiritLastRefreshSpTimeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySpiritLastRefreshSpTimeNotify;

        /**
         * Creates a plain object from an ActivitySpiritLastRefreshSpTimeNotify message. Also converts values to other types if specified.
         * @param message ActivitySpiritLastRefreshSpTimeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySpiritLastRefreshSpTimeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySpiritLastRefreshSpTimeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLevelReceiveRewardReq. */
    interface IActivityLevelReceiveRewardReq {

        /** ActivityLevelReceiveRewardReq LevelRewardID */
        LevelRewardID?: (number|null);
    }

    /** Represents an ActivityLevelReceiveRewardReq. */
    class ActivityLevelReceiveRewardReq implements IActivityLevelReceiveRewardReq {

        /**
         * Constructs a new ActivityLevelReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityLevelReceiveRewardReq);

        /** ActivityLevelReceiveRewardReq LevelRewardID. */
        public LevelRewardID: number;

        /**
         * Creates a new ActivityLevelReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLevelReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityLevelReceiveRewardReq): gamesvr.ActivityLevelReceiveRewardReq;

        /**
         * Encodes the specified ActivityLevelReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityLevelReceiveRewardReq.verify|verify} messages.
         * @param message ActivityLevelReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityLevelReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLevelReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityLevelReceiveRewardReq.verify|verify} messages.
         * @param message ActivityLevelReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityLevelReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLevelReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLevelReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityLevelReceiveRewardReq;

        /**
         * Decodes an ActivityLevelReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLevelReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityLevelReceiveRewardReq;

        /**
         * Verifies an ActivityLevelReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLevelReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLevelReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityLevelReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityLevelReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityLevelReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityLevelReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLevelReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLevelReceiveRewardRes. */
    interface IActivityLevelReceiveRewardRes {

        /** ActivityLevelReceiveRewardRes LevelRewardID */
        LevelRewardID?: (number|null);

        /** ActivityLevelReceiveRewardRes ReceiveOrdinaryReward */
        ReceiveOrdinaryReward?: (boolean|null);

        /** ActivityLevelReceiveRewardRes ReceiveSpecialReward */
        ReceiveSpecialReward?: (boolean|null);

        /** ActivityLevelReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityLevelReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityLevelReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityLevelReceiveRewardRes. */
    class ActivityLevelReceiveRewardRes implements IActivityLevelReceiveRewardRes {

        /**
         * Constructs a new ActivityLevelReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityLevelReceiveRewardRes);

        /** ActivityLevelReceiveRewardRes LevelRewardID. */
        public LevelRewardID: number;

        /** ActivityLevelReceiveRewardRes ReceiveOrdinaryReward. */
        public ReceiveOrdinaryReward: boolean;

        /** ActivityLevelReceiveRewardRes ReceiveSpecialReward. */
        public ReceiveSpecialReward: boolean;

        /** ActivityLevelReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityLevelReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityLevelReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityLevelReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLevelReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityLevelReceiveRewardRes): gamesvr.ActivityLevelReceiveRewardRes;

        /**
         * Encodes the specified ActivityLevelReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityLevelReceiveRewardRes.verify|verify} messages.
         * @param message ActivityLevelReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityLevelReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLevelReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityLevelReceiveRewardRes.verify|verify} messages.
         * @param message ActivityLevelReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityLevelReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLevelReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLevelReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityLevelReceiveRewardRes;

        /**
         * Decodes an ActivityLevelReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLevelReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityLevelReceiveRewardRes;

        /**
         * Verifies an ActivityLevelReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLevelReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLevelReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityLevelReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityLevelReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityLevelReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityLevelReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLevelReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLevelChangeRechargeAmountNotify. */
    interface IActivityLevelChangeRechargeAmountNotify {

        /** ActivityLevelChangeRechargeAmountNotify RechargeAmount */
        RechargeAmount?: (number|null);
    }

    /** Represents an ActivityLevelChangeRechargeAmountNotify. */
    class ActivityLevelChangeRechargeAmountNotify implements IActivityLevelChangeRechargeAmountNotify {

        /**
         * Constructs a new ActivityLevelChangeRechargeAmountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityLevelChangeRechargeAmountNotify);

        /** ActivityLevelChangeRechargeAmountNotify RechargeAmount. */
        public RechargeAmount: number;

        /**
         * Creates a new ActivityLevelChangeRechargeAmountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLevelChangeRechargeAmountNotify instance
         */
        public static create(properties?: gamesvr.IActivityLevelChangeRechargeAmountNotify): gamesvr.ActivityLevelChangeRechargeAmountNotify;

        /**
         * Encodes the specified ActivityLevelChangeRechargeAmountNotify message. Does not implicitly {@link gamesvr.ActivityLevelChangeRechargeAmountNotify.verify|verify} messages.
         * @param message ActivityLevelChangeRechargeAmountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityLevelChangeRechargeAmountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLevelChangeRechargeAmountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityLevelChangeRechargeAmountNotify.verify|verify} messages.
         * @param message ActivityLevelChangeRechargeAmountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityLevelChangeRechargeAmountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLevelChangeRechargeAmountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLevelChangeRechargeAmountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityLevelChangeRechargeAmountNotify;

        /**
         * Decodes an ActivityLevelChangeRechargeAmountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLevelChangeRechargeAmountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityLevelChangeRechargeAmountNotify;

        /**
         * Verifies an ActivityLevelChangeRechargeAmountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLevelChangeRechargeAmountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLevelChangeRechargeAmountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityLevelChangeRechargeAmountNotify;

        /**
         * Creates a plain object from an ActivityLevelChangeRechargeAmountNotify message. Also converts values to other types if specified.
         * @param message ActivityLevelChangeRechargeAmountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityLevelChangeRechargeAmountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLevelChangeRechargeAmountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInFlopCardReq. */
    interface IActivitySignInFlopCardReq {

        /** ActivitySignInFlopCardReq CardSerial */
        CardSerial?: (number|null);
    }

    /** Represents an ActivitySignInFlopCardReq. */
    class ActivitySignInFlopCardReq implements IActivitySignInFlopCardReq {

        /**
         * Constructs a new ActivitySignInFlopCardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInFlopCardReq);

        /** ActivitySignInFlopCardReq CardSerial. */
        public CardSerial: number;

        /**
         * Creates a new ActivitySignInFlopCardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInFlopCardReq instance
         */
        public static create(properties?: gamesvr.IActivitySignInFlopCardReq): gamesvr.ActivitySignInFlopCardReq;

        /**
         * Encodes the specified ActivitySignInFlopCardReq message. Does not implicitly {@link gamesvr.ActivitySignInFlopCardReq.verify|verify} messages.
         * @param message ActivitySignInFlopCardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInFlopCardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInFlopCardReq message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInFlopCardReq.verify|verify} messages.
         * @param message ActivitySignInFlopCardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInFlopCardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInFlopCardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInFlopCardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInFlopCardReq;

        /**
         * Decodes an ActivitySignInFlopCardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInFlopCardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInFlopCardReq;

        /**
         * Verifies an ActivitySignInFlopCardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInFlopCardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInFlopCardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInFlopCardReq;

        /**
         * Creates a plain object from an ActivitySignInFlopCardReq message. Also converts values to other types if specified.
         * @param message ActivitySignInFlopCardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInFlopCardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInFlopCardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInFlopCardRes. */
    interface IActivitySignInFlopCardRes {

        /** ActivitySignInFlopCardRes CardSerial */
        CardSerial?: (number|null);

        /** ActivitySignInFlopCardRes CardTime */
        CardTime?: (number|Long|null);

        /** ActivitySignInFlopCardRes SignInID */
        SignInID?: (number|null);

        /** ActivitySignInFlopCardRes Exp */
        Exp?: (number|null);

        /** ActivitySignInFlopCardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivitySignInFlopCardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivitySignInFlopCardRes. */
    class ActivitySignInFlopCardRes implements IActivitySignInFlopCardRes {

        /**
         * Constructs a new ActivitySignInFlopCardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInFlopCardRes);

        /** ActivitySignInFlopCardRes CardSerial. */
        public CardSerial: number;

        /** ActivitySignInFlopCardRes CardTime. */
        public CardTime: (number|Long);

        /** ActivitySignInFlopCardRes SignInID. */
        public SignInID: number;

        /** ActivitySignInFlopCardRes Exp. */
        public Exp: number;

        /** ActivitySignInFlopCardRes TotalExp. */
        public TotalExp: number;

        /** ActivitySignInFlopCardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivitySignInFlopCardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInFlopCardRes instance
         */
        public static create(properties?: gamesvr.IActivitySignInFlopCardRes): gamesvr.ActivitySignInFlopCardRes;

        /**
         * Encodes the specified ActivitySignInFlopCardRes message. Does not implicitly {@link gamesvr.ActivitySignInFlopCardRes.verify|verify} messages.
         * @param message ActivitySignInFlopCardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInFlopCardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInFlopCardRes message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInFlopCardRes.verify|verify} messages.
         * @param message ActivitySignInFlopCardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInFlopCardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInFlopCardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInFlopCardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInFlopCardRes;

        /**
         * Decodes an ActivitySignInFlopCardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInFlopCardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInFlopCardRes;

        /**
         * Verifies an ActivitySignInFlopCardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInFlopCardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInFlopCardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInFlopCardRes;

        /**
         * Creates a plain object from an ActivitySignInFlopCardRes message. Also converts values to other types if specified.
         * @param message ActivitySignInFlopCardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInFlopCardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInFlopCardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInRefreshHeroReq. */
    interface IActivitySignInRefreshHeroReq {
    }

    /** Represents an ActivitySignInRefreshHeroReq. */
    class ActivitySignInRefreshHeroReq implements IActivitySignInRefreshHeroReq {

        /**
         * Constructs a new ActivitySignInRefreshHeroReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInRefreshHeroReq);

        /**
         * Creates a new ActivitySignInRefreshHeroReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInRefreshHeroReq instance
         */
        public static create(properties?: gamesvr.IActivitySignInRefreshHeroReq): gamesvr.ActivitySignInRefreshHeroReq;

        /**
         * Encodes the specified ActivitySignInRefreshHeroReq message. Does not implicitly {@link gamesvr.ActivitySignInRefreshHeroReq.verify|verify} messages.
         * @param message ActivitySignInRefreshHeroReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInRefreshHeroReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInRefreshHeroReq message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInRefreshHeroReq.verify|verify} messages.
         * @param message ActivitySignInRefreshHeroReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInRefreshHeroReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInRefreshHeroReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInRefreshHeroReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInRefreshHeroReq;

        /**
         * Decodes an ActivitySignInRefreshHeroReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInRefreshHeroReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInRefreshHeroReq;

        /**
         * Verifies an ActivitySignInRefreshHeroReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInRefreshHeroReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInRefreshHeroReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInRefreshHeroReq;

        /**
         * Creates a plain object from an ActivitySignInRefreshHeroReq message. Also converts values to other types if specified.
         * @param message ActivitySignInRefreshHeroReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInRefreshHeroReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInRefreshHeroReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInRefreshHeroRes. */
    interface IActivitySignInRefreshHeroRes {

        /** ActivitySignInRefreshHeroRes SignInID */
        SignInID?: (number|null);
    }

    /** Represents an ActivitySignInRefreshHeroRes. */
    class ActivitySignInRefreshHeroRes implements IActivitySignInRefreshHeroRes {

        /**
         * Constructs a new ActivitySignInRefreshHeroRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInRefreshHeroRes);

        /** ActivitySignInRefreshHeroRes SignInID. */
        public SignInID: number;

        /**
         * Creates a new ActivitySignInRefreshHeroRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInRefreshHeroRes instance
         */
        public static create(properties?: gamesvr.IActivitySignInRefreshHeroRes): gamesvr.ActivitySignInRefreshHeroRes;

        /**
         * Encodes the specified ActivitySignInRefreshHeroRes message. Does not implicitly {@link gamesvr.ActivitySignInRefreshHeroRes.verify|verify} messages.
         * @param message ActivitySignInRefreshHeroRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInRefreshHeroRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInRefreshHeroRes message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInRefreshHeroRes.verify|verify} messages.
         * @param message ActivitySignInRefreshHeroRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInRefreshHeroRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInRefreshHeroRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInRefreshHeroRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInRefreshHeroRes;

        /**
         * Decodes an ActivitySignInRefreshHeroRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInRefreshHeroRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInRefreshHeroRes;

        /**
         * Verifies an ActivitySignInRefreshHeroRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInRefreshHeroRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInRefreshHeroRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInRefreshHeroRes;

        /**
         * Creates a plain object from an ActivitySignInRefreshHeroRes message. Also converts values to other types if specified.
         * @param message ActivitySignInRefreshHeroRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInRefreshHeroRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInRefreshHeroRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInReceiveHeroReq. */
    interface IActivitySignInReceiveHeroReq {
    }

    /** Represents an ActivitySignInReceiveHeroReq. */
    class ActivitySignInReceiveHeroReq implements IActivitySignInReceiveHeroReq {

        /**
         * Constructs a new ActivitySignInReceiveHeroReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInReceiveHeroReq);

        /**
         * Creates a new ActivitySignInReceiveHeroReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInReceiveHeroReq instance
         */
        public static create(properties?: gamesvr.IActivitySignInReceiveHeroReq): gamesvr.ActivitySignInReceiveHeroReq;

        /**
         * Encodes the specified ActivitySignInReceiveHeroReq message. Does not implicitly {@link gamesvr.ActivitySignInReceiveHeroReq.verify|verify} messages.
         * @param message ActivitySignInReceiveHeroReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInReceiveHeroReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInReceiveHeroReq message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInReceiveHeroReq.verify|verify} messages.
         * @param message ActivitySignInReceiveHeroReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInReceiveHeroReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInReceiveHeroReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInReceiveHeroReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInReceiveHeroReq;

        /**
         * Decodes an ActivitySignInReceiveHeroReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInReceiveHeroReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInReceiveHeroReq;

        /**
         * Verifies an ActivitySignInReceiveHeroReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInReceiveHeroReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInReceiveHeroReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInReceiveHeroReq;

        /**
         * Creates a plain object from an ActivitySignInReceiveHeroReq message. Also converts values to other types if specified.
         * @param message ActivitySignInReceiveHeroReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInReceiveHeroReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInReceiveHeroReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInReceiveHeroRes. */
    interface IActivitySignInReceiveHeroRes {

        /** ActivitySignInReceiveHeroRes IsReceive */
        IsReceive?: (boolean|null);
    }

    /** Represents an ActivitySignInReceiveHeroRes. */
    class ActivitySignInReceiveHeroRes implements IActivitySignInReceiveHeroRes {

        /**
         * Constructs a new ActivitySignInReceiveHeroRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInReceiveHeroRes);

        /** ActivitySignInReceiveHeroRes IsReceive. */
        public IsReceive: boolean;

        /**
         * Creates a new ActivitySignInReceiveHeroRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInReceiveHeroRes instance
         */
        public static create(properties?: gamesvr.IActivitySignInReceiveHeroRes): gamesvr.ActivitySignInReceiveHeroRes;

        /**
         * Encodes the specified ActivitySignInReceiveHeroRes message. Does not implicitly {@link gamesvr.ActivitySignInReceiveHeroRes.verify|verify} messages.
         * @param message ActivitySignInReceiveHeroRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInReceiveHeroRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInReceiveHeroRes message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInReceiveHeroRes.verify|verify} messages.
         * @param message ActivitySignInReceiveHeroRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInReceiveHeroRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInReceiveHeroRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInReceiveHeroRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInReceiveHeroRes;

        /**
         * Decodes an ActivitySignInReceiveHeroRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInReceiveHeroRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInReceiveHeroRes;

        /**
         * Verifies an ActivitySignInReceiveHeroRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInReceiveHeroRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInReceiveHeroRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInReceiveHeroRes;

        /**
         * Creates a plain object from an ActivitySignInReceiveHeroRes message. Also converts values to other types if specified.
         * @param message ActivitySignInReceiveHeroRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInReceiveHeroRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInReceiveHeroRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySignInChangeHeroNotify. */
    interface IActivitySignInChangeHeroNotify {

        /** ActivitySignInChangeHeroNotify SignInID */
        SignInID?: (number|null);
    }

    /** Represents an ActivitySignInChangeHeroNotify. */
    class ActivitySignInChangeHeroNotify implements IActivitySignInChangeHeroNotify {

        /**
         * Constructs a new ActivitySignInChangeHeroNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySignInChangeHeroNotify);

        /** ActivitySignInChangeHeroNotify SignInID. */
        public SignInID: number;

        /**
         * Creates a new ActivitySignInChangeHeroNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySignInChangeHeroNotify instance
         */
        public static create(properties?: gamesvr.IActivitySignInChangeHeroNotify): gamesvr.ActivitySignInChangeHeroNotify;

        /**
         * Encodes the specified ActivitySignInChangeHeroNotify message. Does not implicitly {@link gamesvr.ActivitySignInChangeHeroNotify.verify|verify} messages.
         * @param message ActivitySignInChangeHeroNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySignInChangeHeroNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySignInChangeHeroNotify message, length delimited. Does not implicitly {@link gamesvr.ActivitySignInChangeHeroNotify.verify|verify} messages.
         * @param message ActivitySignInChangeHeroNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySignInChangeHeroNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySignInChangeHeroNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySignInChangeHeroNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySignInChangeHeroNotify;

        /**
         * Decodes an ActivitySignInChangeHeroNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySignInChangeHeroNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySignInChangeHeroNotify;

        /**
         * Verifies an ActivitySignInChangeHeroNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySignInChangeHeroNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySignInChangeHeroNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySignInChangeHeroNotify;

        /**
         * Creates a plain object from an ActivitySignInChangeHeroNotify message. Also converts values to other types if specified.
         * @param message ActivitySignInChangeHeroNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySignInChangeHeroNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySignInChangeHeroNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySevenDayReceiveAnimateRewardReq. */
    interface IActivitySevenDayReceiveAnimateRewardReq {

        /** ActivitySevenDayReceiveAnimateRewardReq ActivityID */
        ActivityID?: (number|null);

        /** ActivitySevenDayReceiveAnimateRewardReq AnimateRewardIndex */
        AnimateRewardIndex?: (number|null);
    }

    /** Represents an ActivitySevenDayReceiveAnimateRewardReq. */
    class ActivitySevenDayReceiveAnimateRewardReq implements IActivitySevenDayReceiveAnimateRewardReq {

        /**
         * Constructs a new ActivitySevenDayReceiveAnimateRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySevenDayReceiveAnimateRewardReq);

        /** ActivitySevenDayReceiveAnimateRewardReq ActivityID. */
        public ActivityID: number;

        /** ActivitySevenDayReceiveAnimateRewardReq AnimateRewardIndex. */
        public AnimateRewardIndex: number;

        /**
         * Creates a new ActivitySevenDayReceiveAnimateRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySevenDayReceiveAnimateRewardReq instance
         */
        public static create(properties?: gamesvr.IActivitySevenDayReceiveAnimateRewardReq): gamesvr.ActivitySevenDayReceiveAnimateRewardReq;

        /**
         * Encodes the specified ActivitySevenDayReceiveAnimateRewardReq message. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveAnimateRewardReq.verify|verify} messages.
         * @param message ActivitySevenDayReceiveAnimateRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySevenDayReceiveAnimateRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySevenDayReceiveAnimateRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveAnimateRewardReq.verify|verify} messages.
         * @param message ActivitySevenDayReceiveAnimateRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySevenDayReceiveAnimateRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySevenDayReceiveAnimateRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySevenDayReceiveAnimateRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySevenDayReceiveAnimateRewardReq;

        /**
         * Decodes an ActivitySevenDayReceiveAnimateRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySevenDayReceiveAnimateRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySevenDayReceiveAnimateRewardReq;

        /**
         * Verifies an ActivitySevenDayReceiveAnimateRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySevenDayReceiveAnimateRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySevenDayReceiveAnimateRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySevenDayReceiveAnimateRewardReq;

        /**
         * Creates a plain object from an ActivitySevenDayReceiveAnimateRewardReq message. Also converts values to other types if specified.
         * @param message ActivitySevenDayReceiveAnimateRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySevenDayReceiveAnimateRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySevenDayReceiveAnimateRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySevenDayReceiveAnimateRewardRes. */
    interface IActivitySevenDayReceiveAnimateRewardRes {

        /** ActivitySevenDayReceiveAnimateRewardRes ActivityID */
        ActivityID?: (number|null);

        /** ActivitySevenDayReceiveAnimateRewardRes AnimateRewardIndex */
        AnimateRewardIndex?: (number|null);

        /** ActivitySevenDayReceiveAnimateRewardRes Exp */
        Exp?: (number|null);

        /** ActivitySevenDayReceiveAnimateRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivitySevenDayReceiveAnimateRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivitySevenDayReceiveAnimateRewardRes. */
    class ActivitySevenDayReceiveAnimateRewardRes implements IActivitySevenDayReceiveAnimateRewardRes {

        /**
         * Constructs a new ActivitySevenDayReceiveAnimateRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySevenDayReceiveAnimateRewardRes);

        /** ActivitySevenDayReceiveAnimateRewardRes ActivityID. */
        public ActivityID: number;

        /** ActivitySevenDayReceiveAnimateRewardRes AnimateRewardIndex. */
        public AnimateRewardIndex: number;

        /** ActivitySevenDayReceiveAnimateRewardRes Exp. */
        public Exp: number;

        /** ActivitySevenDayReceiveAnimateRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivitySevenDayReceiveAnimateRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivitySevenDayReceiveAnimateRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySevenDayReceiveAnimateRewardRes instance
         */
        public static create(properties?: gamesvr.IActivitySevenDayReceiveAnimateRewardRes): gamesvr.ActivitySevenDayReceiveAnimateRewardRes;

        /**
         * Encodes the specified ActivitySevenDayReceiveAnimateRewardRes message. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveAnimateRewardRes.verify|verify} messages.
         * @param message ActivitySevenDayReceiveAnimateRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySevenDayReceiveAnimateRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySevenDayReceiveAnimateRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveAnimateRewardRes.verify|verify} messages.
         * @param message ActivitySevenDayReceiveAnimateRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySevenDayReceiveAnimateRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySevenDayReceiveAnimateRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySevenDayReceiveAnimateRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySevenDayReceiveAnimateRewardRes;

        /**
         * Decodes an ActivitySevenDayReceiveAnimateRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySevenDayReceiveAnimateRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySevenDayReceiveAnimateRewardRes;

        /**
         * Verifies an ActivitySevenDayReceiveAnimateRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySevenDayReceiveAnimateRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySevenDayReceiveAnimateRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySevenDayReceiveAnimateRewardRes;

        /**
         * Creates a plain object from an ActivitySevenDayReceiveAnimateRewardRes message. Also converts values to other types if specified.
         * @param message ActivitySevenDayReceiveAnimateRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySevenDayReceiveAnimateRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySevenDayReceiveAnimateRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySevenDayReceiveTaskRewardReq. */
    interface IActivitySevenDayReceiveTaskRewardReq {

        /** ActivitySevenDayReceiveTaskRewardReq ActivityID */
        ActivityID?: (number|null);

        /** ActivitySevenDayReceiveTaskRewardReq TargetID */
        TargetID?: (number|null);
    }

    /** Represents an ActivitySevenDayReceiveTaskRewardReq. */
    class ActivitySevenDayReceiveTaskRewardReq implements IActivitySevenDayReceiveTaskRewardReq {

        /**
         * Constructs a new ActivitySevenDayReceiveTaskRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySevenDayReceiveTaskRewardReq);

        /** ActivitySevenDayReceiveTaskRewardReq ActivityID. */
        public ActivityID: number;

        /** ActivitySevenDayReceiveTaskRewardReq TargetID. */
        public TargetID: number;

        /**
         * Creates a new ActivitySevenDayReceiveTaskRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySevenDayReceiveTaskRewardReq instance
         */
        public static create(properties?: gamesvr.IActivitySevenDayReceiveTaskRewardReq): gamesvr.ActivitySevenDayReceiveTaskRewardReq;

        /**
         * Encodes the specified ActivitySevenDayReceiveTaskRewardReq message. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveTaskRewardReq.verify|verify} messages.
         * @param message ActivitySevenDayReceiveTaskRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySevenDayReceiveTaskRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySevenDayReceiveTaskRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveTaskRewardReq.verify|verify} messages.
         * @param message ActivitySevenDayReceiveTaskRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySevenDayReceiveTaskRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySevenDayReceiveTaskRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySevenDayReceiveTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySevenDayReceiveTaskRewardReq;

        /**
         * Decodes an ActivitySevenDayReceiveTaskRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySevenDayReceiveTaskRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySevenDayReceiveTaskRewardReq;

        /**
         * Verifies an ActivitySevenDayReceiveTaskRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySevenDayReceiveTaskRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySevenDayReceiveTaskRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySevenDayReceiveTaskRewardReq;

        /**
         * Creates a plain object from an ActivitySevenDayReceiveTaskRewardReq message. Also converts values to other types if specified.
         * @param message ActivitySevenDayReceiveTaskRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySevenDayReceiveTaskRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySevenDayReceiveTaskRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivitySevenDayReceiveTaskRewardRes. */
    interface IActivitySevenDayReceiveTaskRewardRes {

        /** ActivitySevenDayReceiveTaskRewardRes ActivityID */
        ActivityID?: (number|null);

        /** ActivitySevenDayReceiveTaskRewardRes TargetID */
        TargetID?: (number|null);

        /** ActivitySevenDayReceiveTaskRewardRes Exp */
        Exp?: (number|null);

        /** ActivitySevenDayReceiveTaskRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivitySevenDayReceiveTaskRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivitySevenDayReceiveTaskRewardRes. */
    class ActivitySevenDayReceiveTaskRewardRes implements IActivitySevenDayReceiveTaskRewardRes {

        /**
         * Constructs a new ActivitySevenDayReceiveTaskRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivitySevenDayReceiveTaskRewardRes);

        /** ActivitySevenDayReceiveTaskRewardRes ActivityID. */
        public ActivityID: number;

        /** ActivitySevenDayReceiveTaskRewardRes TargetID. */
        public TargetID: number;

        /** ActivitySevenDayReceiveTaskRewardRes Exp. */
        public Exp: number;

        /** ActivitySevenDayReceiveTaskRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivitySevenDayReceiveTaskRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivitySevenDayReceiveTaskRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivitySevenDayReceiveTaskRewardRes instance
         */
        public static create(properties?: gamesvr.IActivitySevenDayReceiveTaskRewardRes): gamesvr.ActivitySevenDayReceiveTaskRewardRes;

        /**
         * Encodes the specified ActivitySevenDayReceiveTaskRewardRes message. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveTaskRewardRes.verify|verify} messages.
         * @param message ActivitySevenDayReceiveTaskRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivitySevenDayReceiveTaskRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivitySevenDayReceiveTaskRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivitySevenDayReceiveTaskRewardRes.verify|verify} messages.
         * @param message ActivitySevenDayReceiveTaskRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivitySevenDayReceiveTaskRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivitySevenDayReceiveTaskRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivitySevenDayReceiveTaskRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivitySevenDayReceiveTaskRewardRes;

        /**
         * Decodes an ActivitySevenDayReceiveTaskRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivitySevenDayReceiveTaskRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivitySevenDayReceiveTaskRewardRes;

        /**
         * Verifies an ActivitySevenDayReceiveTaskRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivitySevenDayReceiveTaskRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivitySevenDayReceiveTaskRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivitySevenDayReceiveTaskRewardRes;

        /**
         * Creates a plain object from an ActivitySevenDayReceiveTaskRewardRes message. Also converts values to other types if specified.
         * @param message ActivitySevenDayReceiveTaskRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivitySevenDayReceiveTaskRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivitySevenDayReceiveTaskRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOpenServiceLoginReceiveRewardReq. */
    interface IActivityOpenServiceLoginReceiveRewardReq {

        /** ActivityOpenServiceLoginReceiveRewardReq ActivityID */
        ActivityID?: (number|null);

        /** ActivityOpenServiceLoginReceiveRewardReq LoginRewardIndexList */
        LoginRewardIndexList?: (number[]|null);
    }

    /** Represents an ActivityOpenServiceLoginReceiveRewardReq. */
    class ActivityOpenServiceLoginReceiveRewardReq implements IActivityOpenServiceLoginReceiveRewardReq {

        /**
         * Constructs a new ActivityOpenServiceLoginReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityOpenServiceLoginReceiveRewardReq);

        /** ActivityOpenServiceLoginReceiveRewardReq ActivityID. */
        public ActivityID: number;

        /** ActivityOpenServiceLoginReceiveRewardReq LoginRewardIndexList. */
        public LoginRewardIndexList: number[];

        /**
         * Creates a new ActivityOpenServiceLoginReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOpenServiceLoginReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityOpenServiceLoginReceiveRewardReq): gamesvr.ActivityOpenServiceLoginReceiveRewardReq;

        /**
         * Encodes the specified ActivityOpenServiceLoginReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityOpenServiceLoginReceiveRewardReq.verify|verify} messages.
         * @param message ActivityOpenServiceLoginReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityOpenServiceLoginReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOpenServiceLoginReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityOpenServiceLoginReceiveRewardReq.verify|verify} messages.
         * @param message ActivityOpenServiceLoginReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityOpenServiceLoginReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOpenServiceLoginReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOpenServiceLoginReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityOpenServiceLoginReceiveRewardReq;

        /**
         * Decodes an ActivityOpenServiceLoginReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOpenServiceLoginReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityOpenServiceLoginReceiveRewardReq;

        /**
         * Verifies an ActivityOpenServiceLoginReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOpenServiceLoginReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOpenServiceLoginReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityOpenServiceLoginReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityOpenServiceLoginReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityOpenServiceLoginReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityOpenServiceLoginReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOpenServiceLoginReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOpenServiceLoginReceiveRewardRes. */
    interface IActivityOpenServiceLoginReceiveRewardRes {

        /** ActivityOpenServiceLoginReceiveRewardRes ActivityID */
        ActivityID?: (number|null);

        /** ActivityOpenServiceLoginReceiveRewardRes LoginRewardIndexList */
        LoginRewardIndexList?: (number[]|null);

        /** ActivityOpenServiceLoginReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityOpenServiceLoginReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityOpenServiceLoginReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityOpenServiceLoginReceiveRewardRes. */
    class ActivityOpenServiceLoginReceiveRewardRes implements IActivityOpenServiceLoginReceiveRewardRes {

        /**
         * Constructs a new ActivityOpenServiceLoginReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityOpenServiceLoginReceiveRewardRes);

        /** ActivityOpenServiceLoginReceiveRewardRes ActivityID. */
        public ActivityID: number;

        /** ActivityOpenServiceLoginReceiveRewardRes LoginRewardIndexList. */
        public LoginRewardIndexList: number[];

        /** ActivityOpenServiceLoginReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityOpenServiceLoginReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityOpenServiceLoginReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityOpenServiceLoginReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOpenServiceLoginReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityOpenServiceLoginReceiveRewardRes): gamesvr.ActivityOpenServiceLoginReceiveRewardRes;

        /**
         * Encodes the specified ActivityOpenServiceLoginReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityOpenServiceLoginReceiveRewardRes.verify|verify} messages.
         * @param message ActivityOpenServiceLoginReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityOpenServiceLoginReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOpenServiceLoginReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityOpenServiceLoginReceiveRewardRes.verify|verify} messages.
         * @param message ActivityOpenServiceLoginReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityOpenServiceLoginReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOpenServiceLoginReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOpenServiceLoginReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityOpenServiceLoginReceiveRewardRes;

        /**
         * Decodes an ActivityOpenServiceLoginReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOpenServiceLoginReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityOpenServiceLoginReceiveRewardRes;

        /**
         * Verifies an ActivityOpenServiceLoginReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOpenServiceLoginReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOpenServiceLoginReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityOpenServiceLoginReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityOpenServiceLoginReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityOpenServiceLoginReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityOpenServiceLoginReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOpenServiceLoginReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityBattlePassReceiveRewardReq. */
    interface IActivityBattlePassReceiveRewardReq {

        /** ActivityBattlePassReceiveRewardReq LevelList */
        LevelList?: (number[]|null);
    }

    /** Represents an ActivityBattlePassReceiveRewardReq. */
    class ActivityBattlePassReceiveRewardReq implements IActivityBattlePassReceiveRewardReq {

        /**
         * Constructs a new ActivityBattlePassReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityBattlePassReceiveRewardReq);

        /** ActivityBattlePassReceiveRewardReq LevelList. */
        public LevelList: number[];

        /**
         * Creates a new ActivityBattlePassReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityBattlePassReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityBattlePassReceiveRewardReq): gamesvr.ActivityBattlePassReceiveRewardReq;

        /**
         * Encodes the specified ActivityBattlePassReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityBattlePassReceiveRewardReq.verify|verify} messages.
         * @param message ActivityBattlePassReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityBattlePassReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityBattlePassReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityBattlePassReceiveRewardReq.verify|verify} messages.
         * @param message ActivityBattlePassReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityBattlePassReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityBattlePassReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityBattlePassReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityBattlePassReceiveRewardReq;

        /**
         * Decodes an ActivityBattlePassReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityBattlePassReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityBattlePassReceiveRewardReq;

        /**
         * Verifies an ActivityBattlePassReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityBattlePassReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityBattlePassReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityBattlePassReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityBattlePassReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityBattlePassReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityBattlePassReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityBattlePassReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityBattlePassReceiveRewardRes. */
    interface IActivityBattlePassReceiveRewardRes {

        /** ActivityBattlePassReceiveRewardRes LevelList */
        LevelList?: (number[]|null);

        /** ActivityBattlePassReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityBattlePassReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityBattlePassReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityBattlePassReceiveRewardRes. */
    class ActivityBattlePassReceiveRewardRes implements IActivityBattlePassReceiveRewardRes {

        /**
         * Constructs a new ActivityBattlePassReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityBattlePassReceiveRewardRes);

        /** ActivityBattlePassReceiveRewardRes LevelList. */
        public LevelList: number[];

        /** ActivityBattlePassReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityBattlePassReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityBattlePassReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityBattlePassReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityBattlePassReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityBattlePassReceiveRewardRes): gamesvr.ActivityBattlePassReceiveRewardRes;

        /**
         * Encodes the specified ActivityBattlePassReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityBattlePassReceiveRewardRes.verify|verify} messages.
         * @param message ActivityBattlePassReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityBattlePassReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityBattlePassReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityBattlePassReceiveRewardRes.verify|verify} messages.
         * @param message ActivityBattlePassReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityBattlePassReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityBattlePassReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityBattlePassReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityBattlePassReceiveRewardRes;

        /**
         * Decodes an ActivityBattlePassReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityBattlePassReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityBattlePassReceiveRewardRes;

        /**
         * Verifies an ActivityBattlePassReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityBattlePassReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityBattlePassReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityBattlePassReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityBattlePassReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityBattlePassReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityBattlePassReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityBattlePassReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityBattlePassBuyBattlePassNotify. */
    interface IActivityBattlePassBuyBattlePassNotify {

        /** ActivityBattlePassBuyBattlePassNotify IsSpecial */
        IsSpecial?: (boolean|null);

        /** ActivityBattlePassBuyBattlePassNotify BuyCount */
        BuyCount?: (number|null);
    }

    /** Represents an ActivityBattlePassBuyBattlePassNotify. */
    class ActivityBattlePassBuyBattlePassNotify implements IActivityBattlePassBuyBattlePassNotify {

        /**
         * Constructs a new ActivityBattlePassBuyBattlePassNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityBattlePassBuyBattlePassNotify);

        /** ActivityBattlePassBuyBattlePassNotify IsSpecial. */
        public IsSpecial: boolean;

        /** ActivityBattlePassBuyBattlePassNotify BuyCount. */
        public BuyCount: number;

        /**
         * Creates a new ActivityBattlePassBuyBattlePassNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityBattlePassBuyBattlePassNotify instance
         */
        public static create(properties?: gamesvr.IActivityBattlePassBuyBattlePassNotify): gamesvr.ActivityBattlePassBuyBattlePassNotify;

        /**
         * Encodes the specified ActivityBattlePassBuyBattlePassNotify message. Does not implicitly {@link gamesvr.ActivityBattlePassBuyBattlePassNotify.verify|verify} messages.
         * @param message ActivityBattlePassBuyBattlePassNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityBattlePassBuyBattlePassNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityBattlePassBuyBattlePassNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityBattlePassBuyBattlePassNotify.verify|verify} messages.
         * @param message ActivityBattlePassBuyBattlePassNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityBattlePassBuyBattlePassNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityBattlePassBuyBattlePassNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityBattlePassBuyBattlePassNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityBattlePassBuyBattlePassNotify;

        /**
         * Decodes an ActivityBattlePassBuyBattlePassNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityBattlePassBuyBattlePassNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityBattlePassBuyBattlePassNotify;

        /**
         * Verifies an ActivityBattlePassBuyBattlePassNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityBattlePassBuyBattlePassNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityBattlePassBuyBattlePassNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityBattlePassBuyBattlePassNotify;

        /**
         * Creates a plain object from an ActivityBattlePassBuyBattlePassNotify message. Also converts values to other types if specified.
         * @param message ActivityBattlePassBuyBattlePassNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityBattlePassBuyBattlePassNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityBattlePassBuyBattlePassNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityBattlePassBuyLevelReq. */
    interface IActivityBattlePassBuyLevelReq {

        /** ActivityBattlePassBuyLevelReq BuyLevel */
        BuyLevel?: (number|null);
    }

    /** Represents an ActivityBattlePassBuyLevelReq. */
    class ActivityBattlePassBuyLevelReq implements IActivityBattlePassBuyLevelReq {

        /**
         * Constructs a new ActivityBattlePassBuyLevelReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityBattlePassBuyLevelReq);

        /** ActivityBattlePassBuyLevelReq BuyLevel. */
        public BuyLevel: number;

        /**
         * Creates a new ActivityBattlePassBuyLevelReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityBattlePassBuyLevelReq instance
         */
        public static create(properties?: gamesvr.IActivityBattlePassBuyLevelReq): gamesvr.ActivityBattlePassBuyLevelReq;

        /**
         * Encodes the specified ActivityBattlePassBuyLevelReq message. Does not implicitly {@link gamesvr.ActivityBattlePassBuyLevelReq.verify|verify} messages.
         * @param message ActivityBattlePassBuyLevelReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityBattlePassBuyLevelReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityBattlePassBuyLevelReq message, length delimited. Does not implicitly {@link gamesvr.ActivityBattlePassBuyLevelReq.verify|verify} messages.
         * @param message ActivityBattlePassBuyLevelReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityBattlePassBuyLevelReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityBattlePassBuyLevelReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityBattlePassBuyLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityBattlePassBuyLevelReq;

        /**
         * Decodes an ActivityBattlePassBuyLevelReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityBattlePassBuyLevelReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityBattlePassBuyLevelReq;

        /**
         * Verifies an ActivityBattlePassBuyLevelReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityBattlePassBuyLevelReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityBattlePassBuyLevelReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityBattlePassBuyLevelReq;

        /**
         * Creates a plain object from an ActivityBattlePassBuyLevelReq message. Also converts values to other types if specified.
         * @param message ActivityBattlePassBuyLevelReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityBattlePassBuyLevelReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityBattlePassBuyLevelReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityBattlePassBuyLevelRes. */
    interface IActivityBattlePassBuyLevelRes {
    }

    /** Represents an ActivityBattlePassBuyLevelRes. */
    class ActivityBattlePassBuyLevelRes implements IActivityBattlePassBuyLevelRes {

        /**
         * Constructs a new ActivityBattlePassBuyLevelRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityBattlePassBuyLevelRes);

        /**
         * Creates a new ActivityBattlePassBuyLevelRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityBattlePassBuyLevelRes instance
         */
        public static create(properties?: gamesvr.IActivityBattlePassBuyLevelRes): gamesvr.ActivityBattlePassBuyLevelRes;

        /**
         * Encodes the specified ActivityBattlePassBuyLevelRes message. Does not implicitly {@link gamesvr.ActivityBattlePassBuyLevelRes.verify|verify} messages.
         * @param message ActivityBattlePassBuyLevelRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityBattlePassBuyLevelRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityBattlePassBuyLevelRes message, length delimited. Does not implicitly {@link gamesvr.ActivityBattlePassBuyLevelRes.verify|verify} messages.
         * @param message ActivityBattlePassBuyLevelRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityBattlePassBuyLevelRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityBattlePassBuyLevelRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityBattlePassBuyLevelRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityBattlePassBuyLevelRes;

        /**
         * Decodes an ActivityBattlePassBuyLevelRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityBattlePassBuyLevelRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityBattlePassBuyLevelRes;

        /**
         * Verifies an ActivityBattlePassBuyLevelRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityBattlePassBuyLevelRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityBattlePassBuyLevelRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityBattlePassBuyLevelRes;

        /**
         * Creates a plain object from an ActivityBattlePassBuyLevelRes message. Also converts values to other types if specified.
         * @param message ActivityBattlePassBuyLevelRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityBattlePassBuyLevelRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityBattlePassBuyLevelRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyLotteryLotteryCountNotify. */
    interface IActivityDailyLotteryLotteryCountNotify {

        /** ActivityDailyLotteryLotteryCountNotify CanLotteryCount */
        CanLotteryCount?: (number|null);

        /** ActivityDailyLotteryLotteryCountNotify DayRechargeCount */
        DayRechargeCount?: (number|null);
    }

    /** Represents an ActivityDailyLotteryLotteryCountNotify. */
    class ActivityDailyLotteryLotteryCountNotify implements IActivityDailyLotteryLotteryCountNotify {

        /**
         * Constructs a new ActivityDailyLotteryLotteryCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDailyLotteryLotteryCountNotify);

        /** ActivityDailyLotteryLotteryCountNotify CanLotteryCount. */
        public CanLotteryCount: number;

        /** ActivityDailyLotteryLotteryCountNotify DayRechargeCount. */
        public DayRechargeCount: number;

        /**
         * Creates a new ActivityDailyLotteryLotteryCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyLotteryLotteryCountNotify instance
         */
        public static create(properties?: gamesvr.IActivityDailyLotteryLotteryCountNotify): gamesvr.ActivityDailyLotteryLotteryCountNotify;

        /**
         * Encodes the specified ActivityDailyLotteryLotteryCountNotify message. Does not implicitly {@link gamesvr.ActivityDailyLotteryLotteryCountNotify.verify|verify} messages.
         * @param message ActivityDailyLotteryLotteryCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDailyLotteryLotteryCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyLotteryLotteryCountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityDailyLotteryLotteryCountNotify.verify|verify} messages.
         * @param message ActivityDailyLotteryLotteryCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDailyLotteryLotteryCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyLotteryLotteryCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyLotteryLotteryCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDailyLotteryLotteryCountNotify;

        /**
         * Decodes an ActivityDailyLotteryLotteryCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyLotteryLotteryCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDailyLotteryLotteryCountNotify;

        /**
         * Verifies an ActivityDailyLotteryLotteryCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyLotteryLotteryCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyLotteryLotteryCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDailyLotteryLotteryCountNotify;

        /**
         * Creates a plain object from an ActivityDailyLotteryLotteryCountNotify message. Also converts values to other types if specified.
         * @param message ActivityDailyLotteryLotteryCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDailyLotteryLotteryCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyLotteryLotteryCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyLotteryDepartReq. */
    interface IActivityDailyLotteryDepartReq {
    }

    /** Represents an ActivityDailyLotteryDepartReq. */
    class ActivityDailyLotteryDepartReq implements IActivityDailyLotteryDepartReq {

        /**
         * Constructs a new ActivityDailyLotteryDepartReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDailyLotteryDepartReq);

        /**
         * Creates a new ActivityDailyLotteryDepartReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyLotteryDepartReq instance
         */
        public static create(properties?: gamesvr.IActivityDailyLotteryDepartReq): gamesvr.ActivityDailyLotteryDepartReq;

        /**
         * Encodes the specified ActivityDailyLotteryDepartReq message. Does not implicitly {@link gamesvr.ActivityDailyLotteryDepartReq.verify|verify} messages.
         * @param message ActivityDailyLotteryDepartReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDailyLotteryDepartReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyLotteryDepartReq message, length delimited. Does not implicitly {@link gamesvr.ActivityDailyLotteryDepartReq.verify|verify} messages.
         * @param message ActivityDailyLotteryDepartReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDailyLotteryDepartReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyLotteryDepartReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyLotteryDepartReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDailyLotteryDepartReq;

        /**
         * Decodes an ActivityDailyLotteryDepartReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyLotteryDepartReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDailyLotteryDepartReq;

        /**
         * Verifies an ActivityDailyLotteryDepartReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyLotteryDepartReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyLotteryDepartReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDailyLotteryDepartReq;

        /**
         * Creates a plain object from an ActivityDailyLotteryDepartReq message. Also converts values to other types if specified.
         * @param message ActivityDailyLotteryDepartReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDailyLotteryDepartReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyLotteryDepartReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyLotteryDepartRes. */
    interface IActivityDailyLotteryDepartRes {

        /** ActivityDailyLotteryDepartRes UseLotteryCount */
        UseLotteryCount?: (number|null);

        /** ActivityDailyLotteryDepartRes Period */
        Period?: (number|null);

        /** ActivityDailyLotteryDepartRes ID */
        ID?: (number|null);

        /** ActivityDailyLotteryDepartRes Exp */
        Exp?: (number|null);

        /** ActivityDailyLotteryDepartRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityDailyLotteryDepartRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityDailyLotteryDepartRes. */
    class ActivityDailyLotteryDepartRes implements IActivityDailyLotteryDepartRes {

        /**
         * Constructs a new ActivityDailyLotteryDepartRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDailyLotteryDepartRes);

        /** ActivityDailyLotteryDepartRes UseLotteryCount. */
        public UseLotteryCount: number;

        /** ActivityDailyLotteryDepartRes Period. */
        public Period: number;

        /** ActivityDailyLotteryDepartRes ID. */
        public ID: number;

        /** ActivityDailyLotteryDepartRes Exp. */
        public Exp: number;

        /** ActivityDailyLotteryDepartRes TotalExp. */
        public TotalExp: number;

        /** ActivityDailyLotteryDepartRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityDailyLotteryDepartRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyLotteryDepartRes instance
         */
        public static create(properties?: gamesvr.IActivityDailyLotteryDepartRes): gamesvr.ActivityDailyLotteryDepartRes;

        /**
         * Encodes the specified ActivityDailyLotteryDepartRes message. Does not implicitly {@link gamesvr.ActivityDailyLotteryDepartRes.verify|verify} messages.
         * @param message ActivityDailyLotteryDepartRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDailyLotteryDepartRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyLotteryDepartRes message, length delimited. Does not implicitly {@link gamesvr.ActivityDailyLotteryDepartRes.verify|verify} messages.
         * @param message ActivityDailyLotteryDepartRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDailyLotteryDepartRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyLotteryDepartRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyLotteryDepartRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDailyLotteryDepartRes;

        /**
         * Decodes an ActivityDailyLotteryDepartRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyLotteryDepartRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDailyLotteryDepartRes;

        /**
         * Verifies an ActivityDailyLotteryDepartRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyLotteryDepartRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyLotteryDepartRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDailyLotteryDepartRes;

        /**
         * Creates a plain object from an ActivityDailyLotteryDepartRes message. Also converts values to other types if specified.
         * @param message ActivityDailyLotteryDepartRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDailyLotteryDepartRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyLotteryDepartRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyRechargeDayRechargeCountNotify. */
    interface IActivityDailyRechargeDayRechargeCountNotify {

        /** ActivityDailyRechargeDayRechargeCountNotify PeriodDayRechargeMap */
        PeriodDayRechargeMap?: ({ [k: string]: number }|null);
    }

    /** Represents an ActivityDailyRechargeDayRechargeCountNotify. */
    class ActivityDailyRechargeDayRechargeCountNotify implements IActivityDailyRechargeDayRechargeCountNotify {

        /**
         * Constructs a new ActivityDailyRechargeDayRechargeCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDailyRechargeDayRechargeCountNotify);

        /** ActivityDailyRechargeDayRechargeCountNotify PeriodDayRechargeMap. */
        public PeriodDayRechargeMap: { [k: string]: number };

        /**
         * Creates a new ActivityDailyRechargeDayRechargeCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyRechargeDayRechargeCountNotify instance
         */
        public static create(properties?: gamesvr.IActivityDailyRechargeDayRechargeCountNotify): gamesvr.ActivityDailyRechargeDayRechargeCountNotify;

        /**
         * Encodes the specified ActivityDailyRechargeDayRechargeCountNotify message. Does not implicitly {@link gamesvr.ActivityDailyRechargeDayRechargeCountNotify.verify|verify} messages.
         * @param message ActivityDailyRechargeDayRechargeCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDailyRechargeDayRechargeCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyRechargeDayRechargeCountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityDailyRechargeDayRechargeCountNotify.verify|verify} messages.
         * @param message ActivityDailyRechargeDayRechargeCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDailyRechargeDayRechargeCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyRechargeDayRechargeCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyRechargeDayRechargeCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDailyRechargeDayRechargeCountNotify;

        /**
         * Decodes an ActivityDailyRechargeDayRechargeCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyRechargeDayRechargeCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDailyRechargeDayRechargeCountNotify;

        /**
         * Verifies an ActivityDailyRechargeDayRechargeCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyRechargeDayRechargeCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyRechargeDayRechargeCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDailyRechargeDayRechargeCountNotify;

        /**
         * Creates a plain object from an ActivityDailyRechargeDayRechargeCountNotify message. Also converts values to other types if specified.
         * @param message ActivityDailyRechargeDayRechargeCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDailyRechargeDayRechargeCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyRechargeDayRechargeCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyRechargeReceiveRewardReq. */
    interface IActivityDailyRechargeReceiveRewardReq {

        /** ActivityDailyRechargeReceiveRewardReq Period */
        Period?: (number|null);

        /** ActivityDailyRechargeReceiveRewardReq GapDay */
        GapDay?: (number|null);

        /** ActivityDailyRechargeReceiveRewardReq NumList */
        NumList?: (number[]|null);
    }

    /** Represents an ActivityDailyRechargeReceiveRewardReq. */
    class ActivityDailyRechargeReceiveRewardReq implements IActivityDailyRechargeReceiveRewardReq {

        /**
         * Constructs a new ActivityDailyRechargeReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDailyRechargeReceiveRewardReq);

        /** ActivityDailyRechargeReceiveRewardReq Period. */
        public Period: number;

        /** ActivityDailyRechargeReceiveRewardReq GapDay. */
        public GapDay: number;

        /** ActivityDailyRechargeReceiveRewardReq NumList. */
        public NumList: number[];

        /**
         * Creates a new ActivityDailyRechargeReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyRechargeReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityDailyRechargeReceiveRewardReq): gamesvr.ActivityDailyRechargeReceiveRewardReq;

        /**
         * Encodes the specified ActivityDailyRechargeReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityDailyRechargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityDailyRechargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDailyRechargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyRechargeReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityDailyRechargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityDailyRechargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDailyRechargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyRechargeReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyRechargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDailyRechargeReceiveRewardReq;

        /**
         * Decodes an ActivityDailyRechargeReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyRechargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDailyRechargeReceiveRewardReq;

        /**
         * Verifies an ActivityDailyRechargeReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyRechargeReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyRechargeReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDailyRechargeReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityDailyRechargeReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityDailyRechargeReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDailyRechargeReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyRechargeReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDailyRechargeReceiveRewardRes. */
    interface IActivityDailyRechargeReceiveRewardRes {

        /** ActivityDailyRechargeReceiveRewardRes Period */
        Period?: (number|null);

        /** ActivityDailyRechargeReceiveRewardRes GapDay */
        GapDay?: (number|null);

        /** ActivityDailyRechargeReceiveRewardRes NumList */
        NumList?: (number[]|null);

        /** ActivityDailyRechargeReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityDailyRechargeReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityDailyRechargeReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityDailyRechargeReceiveRewardRes. */
    class ActivityDailyRechargeReceiveRewardRes implements IActivityDailyRechargeReceiveRewardRes {

        /**
         * Constructs a new ActivityDailyRechargeReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDailyRechargeReceiveRewardRes);

        /** ActivityDailyRechargeReceiveRewardRes Period. */
        public Period: number;

        /** ActivityDailyRechargeReceiveRewardRes GapDay. */
        public GapDay: number;

        /** ActivityDailyRechargeReceiveRewardRes NumList. */
        public NumList: number[];

        /** ActivityDailyRechargeReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityDailyRechargeReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityDailyRechargeReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityDailyRechargeReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDailyRechargeReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityDailyRechargeReceiveRewardRes): gamesvr.ActivityDailyRechargeReceiveRewardRes;

        /**
         * Encodes the specified ActivityDailyRechargeReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityDailyRechargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityDailyRechargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDailyRechargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDailyRechargeReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityDailyRechargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityDailyRechargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDailyRechargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDailyRechargeReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDailyRechargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDailyRechargeReceiveRewardRes;

        /**
         * Decodes an ActivityDailyRechargeReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDailyRechargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDailyRechargeReceiveRewardRes;

        /**
         * Verifies an ActivityDailyRechargeReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDailyRechargeReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDailyRechargeReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDailyRechargeReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityDailyRechargeReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityDailyRechargeReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDailyRechargeReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDailyRechargeReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityAmountRechargeRechargeCountNotify. */
    interface IActivityAmountRechargeRechargeCountNotify {

        /** ActivityAmountRechargeRechargeCountNotify PeriodRechargeMap */
        PeriodRechargeMap?: ({ [k: string]: number }|null);
    }

    /** Represents an ActivityAmountRechargeRechargeCountNotify. */
    class ActivityAmountRechargeRechargeCountNotify implements IActivityAmountRechargeRechargeCountNotify {

        /**
         * Constructs a new ActivityAmountRechargeRechargeCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityAmountRechargeRechargeCountNotify);

        /** ActivityAmountRechargeRechargeCountNotify PeriodRechargeMap. */
        public PeriodRechargeMap: { [k: string]: number };

        /**
         * Creates a new ActivityAmountRechargeRechargeCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityAmountRechargeRechargeCountNotify instance
         */
        public static create(properties?: gamesvr.IActivityAmountRechargeRechargeCountNotify): gamesvr.ActivityAmountRechargeRechargeCountNotify;

        /**
         * Encodes the specified ActivityAmountRechargeRechargeCountNotify message. Does not implicitly {@link gamesvr.ActivityAmountRechargeRechargeCountNotify.verify|verify} messages.
         * @param message ActivityAmountRechargeRechargeCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityAmountRechargeRechargeCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityAmountRechargeRechargeCountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityAmountRechargeRechargeCountNotify.verify|verify} messages.
         * @param message ActivityAmountRechargeRechargeCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityAmountRechargeRechargeCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityAmountRechargeRechargeCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityAmountRechargeRechargeCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityAmountRechargeRechargeCountNotify;

        /**
         * Decodes an ActivityAmountRechargeRechargeCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityAmountRechargeRechargeCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityAmountRechargeRechargeCountNotify;

        /**
         * Verifies an ActivityAmountRechargeRechargeCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityAmountRechargeRechargeCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityAmountRechargeRechargeCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityAmountRechargeRechargeCountNotify;

        /**
         * Creates a plain object from an ActivityAmountRechargeRechargeCountNotify message. Also converts values to other types if specified.
         * @param message ActivityAmountRechargeRechargeCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityAmountRechargeRechargeCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityAmountRechargeRechargeCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityAmountRechargeReceiveRewardReq. */
    interface IActivityAmountRechargeReceiveRewardReq {

        /** ActivityAmountRechargeReceiveRewardReq Period */
        Period?: (number|null);

        /** ActivityAmountRechargeReceiveRewardReq NumList */
        NumList?: (number[]|null);
    }

    /** Represents an ActivityAmountRechargeReceiveRewardReq. */
    class ActivityAmountRechargeReceiveRewardReq implements IActivityAmountRechargeReceiveRewardReq {

        /**
         * Constructs a new ActivityAmountRechargeReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityAmountRechargeReceiveRewardReq);

        /** ActivityAmountRechargeReceiveRewardReq Period. */
        public Period: number;

        /** ActivityAmountRechargeReceiveRewardReq NumList. */
        public NumList: number[];

        /**
         * Creates a new ActivityAmountRechargeReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityAmountRechargeReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityAmountRechargeReceiveRewardReq): gamesvr.ActivityAmountRechargeReceiveRewardReq;

        /**
         * Encodes the specified ActivityAmountRechargeReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityAmountRechargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityAmountRechargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityAmountRechargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityAmountRechargeReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityAmountRechargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityAmountRechargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityAmountRechargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityAmountRechargeReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityAmountRechargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityAmountRechargeReceiveRewardReq;

        /**
         * Decodes an ActivityAmountRechargeReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityAmountRechargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityAmountRechargeReceiveRewardReq;

        /**
         * Verifies an ActivityAmountRechargeReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityAmountRechargeReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityAmountRechargeReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityAmountRechargeReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityAmountRechargeReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityAmountRechargeReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityAmountRechargeReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityAmountRechargeReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityAmountRechargeReceiveRewardRes. */
    interface IActivityAmountRechargeReceiveRewardRes {

        /** ActivityAmountRechargeReceiveRewardRes Period */
        Period?: (number|null);

        /** ActivityAmountRechargeReceiveRewardRes NumList */
        NumList?: (number[]|null);

        /** ActivityAmountRechargeReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityAmountRechargeReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityAmountRechargeReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityAmountRechargeReceiveRewardRes. */
    class ActivityAmountRechargeReceiveRewardRes implements IActivityAmountRechargeReceiveRewardRes {

        /**
         * Constructs a new ActivityAmountRechargeReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityAmountRechargeReceiveRewardRes);

        /** ActivityAmountRechargeReceiveRewardRes Period. */
        public Period: number;

        /** ActivityAmountRechargeReceiveRewardRes NumList. */
        public NumList: number[];

        /** ActivityAmountRechargeReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityAmountRechargeReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityAmountRechargeReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityAmountRechargeReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityAmountRechargeReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityAmountRechargeReceiveRewardRes): gamesvr.ActivityAmountRechargeReceiveRewardRes;

        /**
         * Encodes the specified ActivityAmountRechargeReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityAmountRechargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityAmountRechargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityAmountRechargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityAmountRechargeReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityAmountRechargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityAmountRechargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityAmountRechargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityAmountRechargeReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityAmountRechargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityAmountRechargeReceiveRewardRes;

        /**
         * Decodes an ActivityAmountRechargeReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityAmountRechargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityAmountRechargeReceiveRewardRes;

        /**
         * Verifies an ActivityAmountRechargeReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityAmountRechargeReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityAmountRechargeReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityAmountRechargeReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityAmountRechargeReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityAmountRechargeReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityAmountRechargeReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityAmountRechargeReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityRechargeRebateObtainReq. */
    interface IActivityRechargeRebateObtainReq {
    }

    /** Represents an ActivityRechargeRebateObtainReq. */
    class ActivityRechargeRebateObtainReq implements IActivityRechargeRebateObtainReq {

        /**
         * Constructs a new ActivityRechargeRebateObtainReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityRechargeRebateObtainReq);

        /**
         * Creates a new ActivityRechargeRebateObtainReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityRechargeRebateObtainReq instance
         */
        public static create(properties?: gamesvr.IActivityRechargeRebateObtainReq): gamesvr.ActivityRechargeRebateObtainReq;

        /**
         * Encodes the specified ActivityRechargeRebateObtainReq message. Does not implicitly {@link gamesvr.ActivityRechargeRebateObtainReq.verify|verify} messages.
         * @param message ActivityRechargeRebateObtainReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityRechargeRebateObtainReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityRechargeRebateObtainReq message, length delimited. Does not implicitly {@link gamesvr.ActivityRechargeRebateObtainReq.verify|verify} messages.
         * @param message ActivityRechargeRebateObtainReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityRechargeRebateObtainReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityRechargeRebateObtainReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityRechargeRebateObtainReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityRechargeRebateObtainReq;

        /**
         * Decodes an ActivityRechargeRebateObtainReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityRechargeRebateObtainReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityRechargeRebateObtainReq;

        /**
         * Verifies an ActivityRechargeRebateObtainReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityRechargeRebateObtainReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityRechargeRebateObtainReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityRechargeRebateObtainReq;

        /**
         * Creates a plain object from an ActivityRechargeRebateObtainReq message. Also converts values to other types if specified.
         * @param message ActivityRechargeRebateObtainReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityRechargeRebateObtainReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityRechargeRebateObtainReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityRechargeRebateObtainRes. */
    interface IActivityRechargeRebateObtainRes {

        /** ActivityRechargeRebateObtainRes RechargeCount */
        RechargeCount?: (number|null);
    }

    /** Represents an ActivityRechargeRebateObtainRes. */
    class ActivityRechargeRebateObtainRes implements IActivityRechargeRebateObtainRes {

        /**
         * Constructs a new ActivityRechargeRebateObtainRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityRechargeRebateObtainRes);

        /** ActivityRechargeRebateObtainRes RechargeCount. */
        public RechargeCount: number;

        /**
         * Creates a new ActivityRechargeRebateObtainRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityRechargeRebateObtainRes instance
         */
        public static create(properties?: gamesvr.IActivityRechargeRebateObtainRes): gamesvr.ActivityRechargeRebateObtainRes;

        /**
         * Encodes the specified ActivityRechargeRebateObtainRes message. Does not implicitly {@link gamesvr.ActivityRechargeRebateObtainRes.verify|verify} messages.
         * @param message ActivityRechargeRebateObtainRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityRechargeRebateObtainRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityRechargeRebateObtainRes message, length delimited. Does not implicitly {@link gamesvr.ActivityRechargeRebateObtainRes.verify|verify} messages.
         * @param message ActivityRechargeRebateObtainRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityRechargeRebateObtainRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityRechargeRebateObtainRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityRechargeRebateObtainRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityRechargeRebateObtainRes;

        /**
         * Decodes an ActivityRechargeRebateObtainRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityRechargeRebateObtainRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityRechargeRebateObtainRes;

        /**
         * Verifies an ActivityRechargeRebateObtainRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityRechargeRebateObtainRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityRechargeRebateObtainRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityRechargeRebateObtainRes;

        /**
         * Creates a plain object from an ActivityRechargeRebateObtainRes message. Also converts values to other types if specified.
         * @param message ActivityRechargeRebateObtainRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityRechargeRebateObtainRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityRechargeRebateObtainRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekReceiveRewardReq. */
    interface IActivityDoubleWeekReceiveRewardReq {

        /** ActivityDoubleWeekReceiveRewardReq ID */
        ID?: (number|null);

        /** ActivityDoubleWeekReceiveRewardReq ReceiveOrder */
        ReceiveOrder?: (number|null);
    }

    /** Represents an ActivityDoubleWeekReceiveRewardReq. */
    class ActivityDoubleWeekReceiveRewardReq implements IActivityDoubleWeekReceiveRewardReq {

        /**
         * Constructs a new ActivityDoubleWeekReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekReceiveRewardReq);

        /** ActivityDoubleWeekReceiveRewardReq ID. */
        public ID: number;

        /** ActivityDoubleWeekReceiveRewardReq ReceiveOrder. */
        public ReceiveOrder: number;

        /**
         * Creates a new ActivityDoubleWeekReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekReceiveRewardReq): gamesvr.ActivityDoubleWeekReceiveRewardReq;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveRewardReq.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveRewardReq.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekReceiveRewardReq;

        /**
         * Decodes an ActivityDoubleWeekReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekReceiveRewardReq;

        /**
         * Verifies an ActivityDoubleWeekReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityDoubleWeekReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekReceiveRewardRes. */
    interface IActivityDoubleWeekReceiveRewardRes {

        /** ActivityDoubleWeekReceiveRewardRes ID */
        ID?: (number|null);

        /** ActivityDoubleWeekReceiveRewardRes ReceiveOrder */
        ReceiveOrder?: (number|null);

        /** ActivityDoubleWeekReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityDoubleWeekReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityDoubleWeekReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityDoubleWeekReceiveRewardRes. */
    class ActivityDoubleWeekReceiveRewardRes implements IActivityDoubleWeekReceiveRewardRes {

        /**
         * Constructs a new ActivityDoubleWeekReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekReceiveRewardRes);

        /** ActivityDoubleWeekReceiveRewardRes ID. */
        public ID: number;

        /** ActivityDoubleWeekReceiveRewardRes ReceiveOrder. */
        public ReceiveOrder: number;

        /** ActivityDoubleWeekReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityDoubleWeekReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityDoubleWeekReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityDoubleWeekReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekReceiveRewardRes): gamesvr.ActivityDoubleWeekReceiveRewardRes;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveRewardRes.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveRewardRes.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekReceiveRewardRes;

        /**
         * Decodes an ActivityDoubleWeekReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekReceiveRewardRes;

        /**
         * Verifies an ActivityDoubleWeekReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityDoubleWeekReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekBuyGiftCount. */
    interface IActivityDoubleWeekBuyGiftCount {

        /** ActivityDoubleWeekBuyGiftCount ID */
        ID?: (number|null);

        /** ActivityDoubleWeekBuyGiftCount ShopID */
        ShopID?: (number|null);

        /** ActivityDoubleWeekBuyGiftCount Count */
        Count?: (number|null);
    }

    /** Represents an ActivityDoubleWeekBuyGiftCount. */
    class ActivityDoubleWeekBuyGiftCount implements IActivityDoubleWeekBuyGiftCount {

        /**
         * Constructs a new ActivityDoubleWeekBuyGiftCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekBuyGiftCount);

        /** ActivityDoubleWeekBuyGiftCount ID. */
        public ID: number;

        /** ActivityDoubleWeekBuyGiftCount ShopID. */
        public ShopID: number;

        /** ActivityDoubleWeekBuyGiftCount Count. */
        public Count: number;

        /**
         * Creates a new ActivityDoubleWeekBuyGiftCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekBuyGiftCount instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekBuyGiftCount): gamesvr.ActivityDoubleWeekBuyGiftCount;

        /**
         * Encodes the specified ActivityDoubleWeekBuyGiftCount message. Does not implicitly {@link gamesvr.ActivityDoubleWeekBuyGiftCount.verify|verify} messages.
         * @param message ActivityDoubleWeekBuyGiftCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekBuyGiftCount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekBuyGiftCount message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekBuyGiftCount.verify|verify} messages.
         * @param message ActivityDoubleWeekBuyGiftCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekBuyGiftCount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekBuyGiftCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekBuyGiftCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekBuyGiftCount;

        /**
         * Decodes an ActivityDoubleWeekBuyGiftCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekBuyGiftCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekBuyGiftCount;

        /**
         * Verifies an ActivityDoubleWeekBuyGiftCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekBuyGiftCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekBuyGiftCount
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekBuyGiftCount;

        /**
         * Creates a plain object from an ActivityDoubleWeekBuyGiftCount message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekBuyGiftCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekBuyGiftCount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekBuyGiftCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekReceiveDayRewardReq. */
    interface IActivityDoubleWeekReceiveDayRewardReq {

        /** ActivityDoubleWeekReceiveDayRewardReq ID */
        ID?: (number|null);

        /** ActivityDoubleWeekReceiveDayRewardReq DayList */
        DayList?: (number[]|null);
    }

    /** Represents an ActivityDoubleWeekReceiveDayRewardReq. */
    class ActivityDoubleWeekReceiveDayRewardReq implements IActivityDoubleWeekReceiveDayRewardReq {

        /**
         * Constructs a new ActivityDoubleWeekReceiveDayRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekReceiveDayRewardReq);

        /** ActivityDoubleWeekReceiveDayRewardReq ID. */
        public ID: number;

        /** ActivityDoubleWeekReceiveDayRewardReq DayList. */
        public DayList: number[];

        /**
         * Creates a new ActivityDoubleWeekReceiveDayRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekReceiveDayRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekReceiveDayRewardReq): gamesvr.ActivityDoubleWeekReceiveDayRewardReq;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveDayRewardReq message. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveDayRewardReq.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveDayRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekReceiveDayRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveDayRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveDayRewardReq.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveDayRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekReceiveDayRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekReceiveDayRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekReceiveDayRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekReceiveDayRewardReq;

        /**
         * Decodes an ActivityDoubleWeekReceiveDayRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekReceiveDayRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekReceiveDayRewardReq;

        /**
         * Verifies an ActivityDoubleWeekReceiveDayRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekReceiveDayRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekReceiveDayRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekReceiveDayRewardReq;

        /**
         * Creates a plain object from an ActivityDoubleWeekReceiveDayRewardReq message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekReceiveDayRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekReceiveDayRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekReceiveDayRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekBuyDayAdvanceNotify. */
    interface IActivityDoubleWeekBuyDayAdvanceNotify {

        /** ActivityDoubleWeekBuyDayAdvanceNotify ID */
        ID?: (number|null);
    }

    /** Represents an ActivityDoubleWeekBuyDayAdvanceNotify. */
    class ActivityDoubleWeekBuyDayAdvanceNotify implements IActivityDoubleWeekBuyDayAdvanceNotify {

        /**
         * Constructs a new ActivityDoubleWeekBuyDayAdvanceNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekBuyDayAdvanceNotify);

        /** ActivityDoubleWeekBuyDayAdvanceNotify ID. */
        public ID: number;

        /**
         * Creates a new ActivityDoubleWeekBuyDayAdvanceNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekBuyDayAdvanceNotify instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekBuyDayAdvanceNotify): gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify;

        /**
         * Encodes the specified ActivityDoubleWeekBuyDayAdvanceNotify message. Does not implicitly {@link gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify.verify|verify} messages.
         * @param message ActivityDoubleWeekBuyDayAdvanceNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekBuyDayAdvanceNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekBuyDayAdvanceNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify.verify|verify} messages.
         * @param message ActivityDoubleWeekBuyDayAdvanceNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekBuyDayAdvanceNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekBuyDayAdvanceNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekBuyDayAdvanceNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify;

        /**
         * Decodes an ActivityDoubleWeekBuyDayAdvanceNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekBuyDayAdvanceNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify;

        /**
         * Verifies an ActivityDoubleWeekBuyDayAdvanceNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekBuyDayAdvanceNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekBuyDayAdvanceNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify;

        /**
         * Creates a plain object from an ActivityDoubleWeekBuyDayAdvanceNotify message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekBuyDayAdvanceNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekBuyDayAdvanceNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekBuyDayAdvanceNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekReceiveDayRewardRes. */
    interface IActivityDoubleWeekReceiveDayRewardRes {

        /** ActivityDoubleWeekReceiveDayRewardRes ID */
        ID?: (number|null);

        /** ActivityDoubleWeekReceiveDayRewardRes DayList */
        DayList?: (number[]|null);

        /** ActivityDoubleWeekReceiveDayRewardRes Exp */
        Exp?: (number|null);

        /** ActivityDoubleWeekReceiveDayRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityDoubleWeekReceiveDayRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityDoubleWeekReceiveDayRewardRes. */
    class ActivityDoubleWeekReceiveDayRewardRes implements IActivityDoubleWeekReceiveDayRewardRes {

        /**
         * Constructs a new ActivityDoubleWeekReceiveDayRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekReceiveDayRewardRes);

        /** ActivityDoubleWeekReceiveDayRewardRes ID. */
        public ID: number;

        /** ActivityDoubleWeekReceiveDayRewardRes DayList. */
        public DayList: number[];

        /** ActivityDoubleWeekReceiveDayRewardRes Exp. */
        public Exp: number;

        /** ActivityDoubleWeekReceiveDayRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityDoubleWeekReceiveDayRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityDoubleWeekReceiveDayRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekReceiveDayRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekReceiveDayRewardRes): gamesvr.ActivityDoubleWeekReceiveDayRewardRes;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveDayRewardRes message. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveDayRewardRes.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveDayRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekReceiveDayRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekReceiveDayRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekReceiveDayRewardRes.verify|verify} messages.
         * @param message ActivityDoubleWeekReceiveDayRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekReceiveDayRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekReceiveDayRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekReceiveDayRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekReceiveDayRewardRes;

        /**
         * Decodes an ActivityDoubleWeekReceiveDayRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekReceiveDayRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekReceiveDayRewardRes;

        /**
         * Verifies an ActivityDoubleWeekReceiveDayRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekReceiveDayRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekReceiveDayRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekReceiveDayRewardRes;

        /**
         * Creates a plain object from an ActivityDoubleWeekReceiveDayRewardRes message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekReceiveDayRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekReceiveDayRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekReceiveDayRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityDoubleWeekBuyGiftCountNotify. */
    interface IActivityDoubleWeekBuyGiftCountNotify {

        /** ActivityDoubleWeekBuyGiftCountNotify ActivityDoubleWeekBuyGiftCountList */
        ActivityDoubleWeekBuyGiftCountList?: (gamesvr.IActivityDoubleWeekBuyGiftCount[]|null);
    }

    /** Represents an ActivityDoubleWeekBuyGiftCountNotify. */
    class ActivityDoubleWeekBuyGiftCountNotify implements IActivityDoubleWeekBuyGiftCountNotify {

        /**
         * Constructs a new ActivityDoubleWeekBuyGiftCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityDoubleWeekBuyGiftCountNotify);

        /** ActivityDoubleWeekBuyGiftCountNotify ActivityDoubleWeekBuyGiftCountList. */
        public ActivityDoubleWeekBuyGiftCountList: gamesvr.IActivityDoubleWeekBuyGiftCount[];

        /**
         * Creates a new ActivityDoubleWeekBuyGiftCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityDoubleWeekBuyGiftCountNotify instance
         */
        public static create(properties?: gamesvr.IActivityDoubleWeekBuyGiftCountNotify): gamesvr.ActivityDoubleWeekBuyGiftCountNotify;

        /**
         * Encodes the specified ActivityDoubleWeekBuyGiftCountNotify message. Does not implicitly {@link gamesvr.ActivityDoubleWeekBuyGiftCountNotify.verify|verify} messages.
         * @param message ActivityDoubleWeekBuyGiftCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityDoubleWeekBuyGiftCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityDoubleWeekBuyGiftCountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityDoubleWeekBuyGiftCountNotify.verify|verify} messages.
         * @param message ActivityDoubleWeekBuyGiftCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityDoubleWeekBuyGiftCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityDoubleWeekBuyGiftCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityDoubleWeekBuyGiftCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityDoubleWeekBuyGiftCountNotify;

        /**
         * Decodes an ActivityDoubleWeekBuyGiftCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityDoubleWeekBuyGiftCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityDoubleWeekBuyGiftCountNotify;

        /**
         * Verifies an ActivityDoubleWeekBuyGiftCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityDoubleWeekBuyGiftCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityDoubleWeekBuyGiftCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityDoubleWeekBuyGiftCountNotify;

        /**
         * Creates a plain object from an ActivityDoubleWeekBuyGiftCountNotify message. Also converts values to other types if specified.
         * @param message ActivityDoubleWeekBuyGiftCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityDoubleWeekBuyGiftCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityDoubleWeekBuyGiftCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityMonthCardBuyMonthCardNotify. */
    interface IActivityMonthCardBuyMonthCardNotify {

        /** ActivityMonthCardBuyMonthCardNotify FastenID */
        FastenID?: (number|null);

        /** ActivityMonthCardBuyMonthCardNotify ExpiredTime */
        ExpiredTime?: (number|Long|null);

        /** ActivityMonthCardBuyMonthCardNotify LastReceiveGetRewardTime */
        LastReceiveGetRewardTime?: (number|Long|null);

        /** ActivityMonthCardBuyMonthCardNotify Exp */
        Exp?: (number|null);

        /** ActivityMonthCardBuyMonthCardNotify TotalExp */
        TotalExp?: (number|null);

        /** ActivityMonthCardBuyMonthCardNotify Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityMonthCardBuyMonthCardNotify. */
    class ActivityMonthCardBuyMonthCardNotify implements IActivityMonthCardBuyMonthCardNotify {

        /**
         * Constructs a new ActivityMonthCardBuyMonthCardNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityMonthCardBuyMonthCardNotify);

        /** ActivityMonthCardBuyMonthCardNotify FastenID. */
        public FastenID: number;

        /** ActivityMonthCardBuyMonthCardNotify ExpiredTime. */
        public ExpiredTime: (number|Long);

        /** ActivityMonthCardBuyMonthCardNotify LastReceiveGetRewardTime. */
        public LastReceiveGetRewardTime: (number|Long);

        /** ActivityMonthCardBuyMonthCardNotify Exp. */
        public Exp: number;

        /** ActivityMonthCardBuyMonthCardNotify TotalExp. */
        public TotalExp: number;

        /** ActivityMonthCardBuyMonthCardNotify Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityMonthCardBuyMonthCardNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityMonthCardBuyMonthCardNotify instance
         */
        public static create(properties?: gamesvr.IActivityMonthCardBuyMonthCardNotify): gamesvr.ActivityMonthCardBuyMonthCardNotify;

        /**
         * Encodes the specified ActivityMonthCardBuyMonthCardNotify message. Does not implicitly {@link gamesvr.ActivityMonthCardBuyMonthCardNotify.verify|verify} messages.
         * @param message ActivityMonthCardBuyMonthCardNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityMonthCardBuyMonthCardNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityMonthCardBuyMonthCardNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityMonthCardBuyMonthCardNotify.verify|verify} messages.
         * @param message ActivityMonthCardBuyMonthCardNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityMonthCardBuyMonthCardNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityMonthCardBuyMonthCardNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityMonthCardBuyMonthCardNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityMonthCardBuyMonthCardNotify;

        /**
         * Decodes an ActivityMonthCardBuyMonthCardNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityMonthCardBuyMonthCardNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityMonthCardBuyMonthCardNotify;

        /**
         * Verifies an ActivityMonthCardBuyMonthCardNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityMonthCardBuyMonthCardNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityMonthCardBuyMonthCardNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityMonthCardBuyMonthCardNotify;

        /**
         * Creates a plain object from an ActivityMonthCardBuyMonthCardNotify message. Also converts values to other types if specified.
         * @param message ActivityMonthCardBuyMonthCardNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityMonthCardBuyMonthCardNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityMonthCardBuyMonthCardNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityMonthCardReceiveDayRewardReq. */
    interface IActivityMonthCardReceiveDayRewardReq {

        /** ActivityMonthCardReceiveDayRewardReq FastenID */
        FastenID?: (number|null);
    }

    /** Represents an ActivityMonthCardReceiveDayRewardReq. */
    class ActivityMonthCardReceiveDayRewardReq implements IActivityMonthCardReceiveDayRewardReq {

        /**
         * Constructs a new ActivityMonthCardReceiveDayRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityMonthCardReceiveDayRewardReq);

        /** ActivityMonthCardReceiveDayRewardReq FastenID. */
        public FastenID: number;

        /**
         * Creates a new ActivityMonthCardReceiveDayRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityMonthCardReceiveDayRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityMonthCardReceiveDayRewardReq): gamesvr.ActivityMonthCardReceiveDayRewardReq;

        /**
         * Encodes the specified ActivityMonthCardReceiveDayRewardReq message. Does not implicitly {@link gamesvr.ActivityMonthCardReceiveDayRewardReq.verify|verify} messages.
         * @param message ActivityMonthCardReceiveDayRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityMonthCardReceiveDayRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityMonthCardReceiveDayRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityMonthCardReceiveDayRewardReq.verify|verify} messages.
         * @param message ActivityMonthCardReceiveDayRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityMonthCardReceiveDayRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityMonthCardReceiveDayRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityMonthCardReceiveDayRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityMonthCardReceiveDayRewardReq;

        /**
         * Decodes an ActivityMonthCardReceiveDayRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityMonthCardReceiveDayRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityMonthCardReceiveDayRewardReq;

        /**
         * Verifies an ActivityMonthCardReceiveDayRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityMonthCardReceiveDayRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityMonthCardReceiveDayRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityMonthCardReceiveDayRewardReq;

        /**
         * Creates a plain object from an ActivityMonthCardReceiveDayRewardReq message. Also converts values to other types if specified.
         * @param message ActivityMonthCardReceiveDayRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityMonthCardReceiveDayRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityMonthCardReceiveDayRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityMonthCardReceiveDayRewardRes. */
    interface IActivityMonthCardReceiveDayRewardRes {

        /** ActivityMonthCardReceiveDayRewardRes FastenID */
        FastenID?: (number|null);

        /** ActivityMonthCardReceiveDayRewardRes LastReceiveGetRewardTime */
        LastReceiveGetRewardTime?: (number|Long|null);

        /** ActivityMonthCardReceiveDayRewardRes Exp */
        Exp?: (number|null);

        /** ActivityMonthCardReceiveDayRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityMonthCardReceiveDayRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityMonthCardReceiveDayRewardRes. */
    class ActivityMonthCardReceiveDayRewardRes implements IActivityMonthCardReceiveDayRewardRes {

        /**
         * Constructs a new ActivityMonthCardReceiveDayRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityMonthCardReceiveDayRewardRes);

        /** ActivityMonthCardReceiveDayRewardRes FastenID. */
        public FastenID: number;

        /** ActivityMonthCardReceiveDayRewardRes LastReceiveGetRewardTime. */
        public LastReceiveGetRewardTime: (number|Long);

        /** ActivityMonthCardReceiveDayRewardRes Exp. */
        public Exp: number;

        /** ActivityMonthCardReceiveDayRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityMonthCardReceiveDayRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityMonthCardReceiveDayRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityMonthCardReceiveDayRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityMonthCardReceiveDayRewardRes): gamesvr.ActivityMonthCardReceiveDayRewardRes;

        /**
         * Encodes the specified ActivityMonthCardReceiveDayRewardRes message. Does not implicitly {@link gamesvr.ActivityMonthCardReceiveDayRewardRes.verify|verify} messages.
         * @param message ActivityMonthCardReceiveDayRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityMonthCardReceiveDayRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityMonthCardReceiveDayRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityMonthCardReceiveDayRewardRes.verify|verify} messages.
         * @param message ActivityMonthCardReceiveDayRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityMonthCardReceiveDayRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityMonthCardReceiveDayRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityMonthCardReceiveDayRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityMonthCardReceiveDayRewardRes;

        /**
         * Decodes an ActivityMonthCardReceiveDayRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityMonthCardReceiveDayRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityMonthCardReceiveDayRewardRes;

        /**
         * Verifies an ActivityMonthCardReceiveDayRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityMonthCardReceiveDayRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityMonthCardReceiveDayRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityMonthCardReceiveDayRewardRes;

        /**
         * Creates a plain object from an ActivityMonthCardReceiveDayRewardRes message. Also converts values to other types if specified.
         * @param message ActivityMonthCardReceiveDayRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityMonthCardReceiveDayRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityMonthCardReceiveDayRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOnlineRewardReceiveRewardReq. */
    interface IActivityOnlineRewardReceiveRewardReq {

        /** ActivityOnlineRewardReceiveRewardReq ReceiveIDList */
        ReceiveIDList?: (number[]|null);
    }

    /** Represents an ActivityOnlineRewardReceiveRewardReq. */
    class ActivityOnlineRewardReceiveRewardReq implements IActivityOnlineRewardReceiveRewardReq {

        /**
         * Constructs a new ActivityOnlineRewardReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityOnlineRewardReceiveRewardReq);

        /** ActivityOnlineRewardReceiveRewardReq ReceiveIDList. */
        public ReceiveIDList: number[];

        /**
         * Creates a new ActivityOnlineRewardReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOnlineRewardReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityOnlineRewardReceiveRewardReq): gamesvr.ActivityOnlineRewardReceiveRewardReq;

        /**
         * Encodes the specified ActivityOnlineRewardReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityOnlineRewardReceiveRewardReq.verify|verify} messages.
         * @param message ActivityOnlineRewardReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityOnlineRewardReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOnlineRewardReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityOnlineRewardReceiveRewardReq.verify|verify} messages.
         * @param message ActivityOnlineRewardReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityOnlineRewardReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOnlineRewardReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOnlineRewardReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityOnlineRewardReceiveRewardReq;

        /**
         * Decodes an ActivityOnlineRewardReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOnlineRewardReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityOnlineRewardReceiveRewardReq;

        /**
         * Verifies an ActivityOnlineRewardReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOnlineRewardReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOnlineRewardReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityOnlineRewardReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityOnlineRewardReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityOnlineRewardReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityOnlineRewardReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOnlineRewardReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityOnlineRewardReceiveRewardRes. */
    interface IActivityOnlineRewardReceiveRewardRes {

        /** ActivityOnlineRewardReceiveRewardRes ReceiveIDList */
        ReceiveIDList?: (number[]|null);

        /** ActivityOnlineRewardReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityOnlineRewardReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityOnlineRewardReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityOnlineRewardReceiveRewardRes. */
    class ActivityOnlineRewardReceiveRewardRes implements IActivityOnlineRewardReceiveRewardRes {

        /**
         * Constructs a new ActivityOnlineRewardReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityOnlineRewardReceiveRewardRes);

        /** ActivityOnlineRewardReceiveRewardRes ReceiveIDList. */
        public ReceiveIDList: number[];

        /** ActivityOnlineRewardReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityOnlineRewardReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityOnlineRewardReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityOnlineRewardReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityOnlineRewardReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityOnlineRewardReceiveRewardRes): gamesvr.ActivityOnlineRewardReceiveRewardRes;

        /**
         * Encodes the specified ActivityOnlineRewardReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityOnlineRewardReceiveRewardRes.verify|verify} messages.
         * @param message ActivityOnlineRewardReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityOnlineRewardReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityOnlineRewardReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityOnlineRewardReceiveRewardRes.verify|verify} messages.
         * @param message ActivityOnlineRewardReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityOnlineRewardReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityOnlineRewardReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityOnlineRewardReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityOnlineRewardReceiveRewardRes;

        /**
         * Decodes an ActivityOnlineRewardReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityOnlineRewardReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityOnlineRewardReceiveRewardRes;

        /**
         * Verifies an ActivityOnlineRewardReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityOnlineRewardReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityOnlineRewardReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityOnlineRewardReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityOnlineRewardReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityOnlineRewardReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityOnlineRewardReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityOnlineRewardReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFirstChargeReceiveRewardReq. */
    interface IActivityFirstChargeReceiveRewardReq {

        /** ActivityFirstChargeReceiveRewardReq RewardIndex */
        RewardIndex?: (number|null);
    }

    /** Represents an ActivityFirstChargeReceiveRewardReq. */
    class ActivityFirstChargeReceiveRewardReq implements IActivityFirstChargeReceiveRewardReq {

        /**
         * Constructs a new ActivityFirstChargeReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityFirstChargeReceiveRewardReq);

        /** ActivityFirstChargeReceiveRewardReq RewardIndex. */
        public RewardIndex: number;

        /**
         * Creates a new ActivityFirstChargeReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFirstChargeReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityFirstChargeReceiveRewardReq): gamesvr.ActivityFirstChargeReceiveRewardReq;

        /**
         * Encodes the specified ActivityFirstChargeReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityFirstChargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityFirstChargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityFirstChargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFirstChargeReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityFirstChargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityFirstChargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityFirstChargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFirstChargeReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFirstChargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityFirstChargeReceiveRewardReq;

        /**
         * Decodes an ActivityFirstChargeReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFirstChargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityFirstChargeReceiveRewardReq;

        /**
         * Verifies an ActivityFirstChargeReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFirstChargeReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFirstChargeReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityFirstChargeReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityFirstChargeReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityFirstChargeReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityFirstChargeReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFirstChargeReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFirstChargeReceiveRewardRes. */
    interface IActivityFirstChargeReceiveRewardRes {

        /** ActivityFirstChargeReceiveRewardRes RewardRecord */
        RewardRecord?: (number[]|null);

        /** ActivityFirstChargeReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityFirstChargeReceiveRewardRes. */
    class ActivityFirstChargeReceiveRewardRes implements IActivityFirstChargeReceiveRewardRes {

        /**
         * Constructs a new ActivityFirstChargeReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityFirstChargeReceiveRewardRes);

        /** ActivityFirstChargeReceiveRewardRes RewardRecord. */
        public RewardRecord: number[];

        /** ActivityFirstChargeReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityFirstChargeReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFirstChargeReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityFirstChargeReceiveRewardRes): gamesvr.ActivityFirstChargeReceiveRewardRes;

        /**
         * Encodes the specified ActivityFirstChargeReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityFirstChargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityFirstChargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityFirstChargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFirstChargeReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityFirstChargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityFirstChargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityFirstChargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFirstChargeReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFirstChargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityFirstChargeReceiveRewardRes;

        /**
         * Decodes an ActivityFirstChargeReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFirstChargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityFirstChargeReceiveRewardRes;

        /**
         * Verifies an ActivityFirstChargeReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFirstChargeReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFirstChargeReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityFirstChargeReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityFirstChargeReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityFirstChargeReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityFirstChargeReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFirstChargeReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityHeroGrowupReceiveRewardReq. */
    interface IActivityHeroGrowupReceiveRewardReq {

        /** ActivityHeroGrowupReceiveRewardReq GrowUpID */
        GrowUpID?: (number|null);
    }

    /** Represents an ActivityHeroGrowupReceiveRewardReq. */
    class ActivityHeroGrowupReceiveRewardReq implements IActivityHeroGrowupReceiveRewardReq {

        /**
         * Constructs a new ActivityHeroGrowupReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityHeroGrowupReceiveRewardReq);

        /** ActivityHeroGrowupReceiveRewardReq GrowUpID. */
        public GrowUpID: number;

        /**
         * Creates a new ActivityHeroGrowupReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityHeroGrowupReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityHeroGrowupReceiveRewardReq): gamesvr.ActivityHeroGrowupReceiveRewardReq;

        /**
         * Encodes the specified ActivityHeroGrowupReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityHeroGrowupReceiveRewardReq.verify|verify} messages.
         * @param message ActivityHeroGrowupReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityHeroGrowupReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityHeroGrowupReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityHeroGrowupReceiveRewardReq.verify|verify} messages.
         * @param message ActivityHeroGrowupReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityHeroGrowupReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityHeroGrowupReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityHeroGrowupReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityHeroGrowupReceiveRewardReq;

        /**
         * Decodes an ActivityHeroGrowupReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityHeroGrowupReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityHeroGrowupReceiveRewardReq;

        /**
         * Verifies an ActivityHeroGrowupReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityHeroGrowupReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityHeroGrowupReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityHeroGrowupReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityHeroGrowupReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityHeroGrowupReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityHeroGrowupReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityHeroGrowupReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityHeroGrowupReceiveRewardRes. */
    interface IActivityHeroGrowupReceiveRewardRes {

        /** ActivityHeroGrowupReceiveRewardRes RewardGrowUpID */
        RewardGrowUpID?: (number|null);

        /** ActivityHeroGrowupReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityHeroGrowupReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityHeroGrowupReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityHeroGrowupReceiveRewardRes. */
    class ActivityHeroGrowupReceiveRewardRes implements IActivityHeroGrowupReceiveRewardRes {

        /**
         * Constructs a new ActivityHeroGrowupReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityHeroGrowupReceiveRewardRes);

        /** ActivityHeroGrowupReceiveRewardRes RewardGrowUpID. */
        public RewardGrowUpID: number;

        /** ActivityHeroGrowupReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityHeroGrowupReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityHeroGrowupReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityHeroGrowupReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityHeroGrowupReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityHeroGrowupReceiveRewardRes): gamesvr.ActivityHeroGrowupReceiveRewardRes;

        /**
         * Encodes the specified ActivityHeroGrowupReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityHeroGrowupReceiveRewardRes.verify|verify} messages.
         * @param message ActivityHeroGrowupReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityHeroGrowupReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityHeroGrowupReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityHeroGrowupReceiveRewardRes.verify|verify} messages.
         * @param message ActivityHeroGrowupReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityHeroGrowupReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityHeroGrowupReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityHeroGrowupReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityHeroGrowupReceiveRewardRes;

        /**
         * Decodes an ActivityHeroGrowupReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityHeroGrowupReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityHeroGrowupReceiveRewardRes;

        /**
         * Verifies an ActivityHeroGrowupReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityHeroGrowupReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityHeroGrowupReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityHeroGrowupReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityHeroGrowupReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityHeroGrowupReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityHeroGrowupReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityHeroGrowupReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityEternalRechargeRechargeCountNotify. */
    interface IActivityEternalRechargeRechargeCountNotify {

        /** ActivityEternalRechargeRechargeCountNotify PeriodRechargeMap */
        PeriodRechargeMap?: ({ [k: string]: number }|null);
    }

    /** Represents an ActivityEternalRechargeRechargeCountNotify. */
    class ActivityEternalRechargeRechargeCountNotify implements IActivityEternalRechargeRechargeCountNotify {

        /**
         * Constructs a new ActivityEternalRechargeRechargeCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityEternalRechargeRechargeCountNotify);

        /** ActivityEternalRechargeRechargeCountNotify PeriodRechargeMap. */
        public PeriodRechargeMap: { [k: string]: number };

        /**
         * Creates a new ActivityEternalRechargeRechargeCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityEternalRechargeRechargeCountNotify instance
         */
        public static create(properties?: gamesvr.IActivityEternalRechargeRechargeCountNotify): gamesvr.ActivityEternalRechargeRechargeCountNotify;

        /**
         * Encodes the specified ActivityEternalRechargeRechargeCountNotify message. Does not implicitly {@link gamesvr.ActivityEternalRechargeRechargeCountNotify.verify|verify} messages.
         * @param message ActivityEternalRechargeRechargeCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityEternalRechargeRechargeCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityEternalRechargeRechargeCountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityEternalRechargeRechargeCountNotify.verify|verify} messages.
         * @param message ActivityEternalRechargeRechargeCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityEternalRechargeRechargeCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityEternalRechargeRechargeCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityEternalRechargeRechargeCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityEternalRechargeRechargeCountNotify;

        /**
         * Decodes an ActivityEternalRechargeRechargeCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityEternalRechargeRechargeCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityEternalRechargeRechargeCountNotify;

        /**
         * Verifies an ActivityEternalRechargeRechargeCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityEternalRechargeRechargeCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityEternalRechargeRechargeCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityEternalRechargeRechargeCountNotify;

        /**
         * Creates a plain object from an ActivityEternalRechargeRechargeCountNotify message. Also converts values to other types if specified.
         * @param message ActivityEternalRechargeRechargeCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityEternalRechargeRechargeCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityEternalRechargeRechargeCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityEternalRechargeReceiveRewardReq. */
    interface IActivityEternalRechargeReceiveRewardReq {

        /** ActivityEternalRechargeReceiveRewardReq Period */
        Period?: (number|null);

        /** ActivityEternalRechargeReceiveRewardReq NumList */
        NumList?: (number[]|null);
    }

    /** Represents an ActivityEternalRechargeReceiveRewardReq. */
    class ActivityEternalRechargeReceiveRewardReq implements IActivityEternalRechargeReceiveRewardReq {

        /**
         * Constructs a new ActivityEternalRechargeReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityEternalRechargeReceiveRewardReq);

        /** ActivityEternalRechargeReceiveRewardReq Period. */
        public Period: number;

        /** ActivityEternalRechargeReceiveRewardReq NumList. */
        public NumList: number[];

        /**
         * Creates a new ActivityEternalRechargeReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityEternalRechargeReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityEternalRechargeReceiveRewardReq): gamesvr.ActivityEternalRechargeReceiveRewardReq;

        /**
         * Encodes the specified ActivityEternalRechargeReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityEternalRechargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityEternalRechargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityEternalRechargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityEternalRechargeReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityEternalRechargeReceiveRewardReq.verify|verify} messages.
         * @param message ActivityEternalRechargeReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityEternalRechargeReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityEternalRechargeReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityEternalRechargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityEternalRechargeReceiveRewardReq;

        /**
         * Decodes an ActivityEternalRechargeReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityEternalRechargeReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityEternalRechargeReceiveRewardReq;

        /**
         * Verifies an ActivityEternalRechargeReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityEternalRechargeReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityEternalRechargeReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityEternalRechargeReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityEternalRechargeReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityEternalRechargeReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityEternalRechargeReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityEternalRechargeReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityEternalRechargeReceiveRewardRes. */
    interface IActivityEternalRechargeReceiveRewardRes {

        /** ActivityEternalRechargeReceiveRewardRes Period */
        Period?: (number|null);

        /** ActivityEternalRechargeReceiveRewardRes NumList */
        NumList?: (number[]|null);

        /** ActivityEternalRechargeReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityEternalRechargeReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityEternalRechargeReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityEternalRechargeReceiveRewardRes. */
    class ActivityEternalRechargeReceiveRewardRes implements IActivityEternalRechargeReceiveRewardRes {

        /**
         * Constructs a new ActivityEternalRechargeReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityEternalRechargeReceiveRewardRes);

        /** ActivityEternalRechargeReceiveRewardRes Period. */
        public Period: number;

        /** ActivityEternalRechargeReceiveRewardRes NumList. */
        public NumList: number[];

        /** ActivityEternalRechargeReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityEternalRechargeReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityEternalRechargeReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityEternalRechargeReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityEternalRechargeReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityEternalRechargeReceiveRewardRes): gamesvr.ActivityEternalRechargeReceiveRewardRes;

        /**
         * Encodes the specified ActivityEternalRechargeReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityEternalRechargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityEternalRechargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityEternalRechargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityEternalRechargeReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityEternalRechargeReceiveRewardRes.verify|verify} messages.
         * @param message ActivityEternalRechargeReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityEternalRechargeReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityEternalRechargeReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityEternalRechargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityEternalRechargeReceiveRewardRes;

        /**
         * Decodes an ActivityEternalRechargeReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityEternalRechargeReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityEternalRechargeReceiveRewardRes;

        /**
         * Verifies an ActivityEternalRechargeReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityEternalRechargeReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityEternalRechargeReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityEternalRechargeReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityEternalRechargeReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityEternalRechargeReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityEternalRechargeReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityEternalRechargeReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFeastGifBuyGiftCountNotify. */
    interface IActivityFeastGifBuyGiftCountNotify {

        /** ActivityFeastGifBuyGiftCountNotify ShopID */
        ShopID?: (number|null);

        /** ActivityFeastGifBuyGiftCountNotify Count */
        Count?: (number|null);
    }

    /** Represents an ActivityFeastGifBuyGiftCountNotify. */
    class ActivityFeastGifBuyGiftCountNotify implements IActivityFeastGifBuyGiftCountNotify {

        /**
         * Constructs a new ActivityFeastGifBuyGiftCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityFeastGifBuyGiftCountNotify);

        /** ActivityFeastGifBuyGiftCountNotify ShopID. */
        public ShopID: number;

        /** ActivityFeastGifBuyGiftCountNotify Count. */
        public Count: number;

        /**
         * Creates a new ActivityFeastGifBuyGiftCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFeastGifBuyGiftCountNotify instance
         */
        public static create(properties?: gamesvr.IActivityFeastGifBuyGiftCountNotify): gamesvr.ActivityFeastGifBuyGiftCountNotify;

        /**
         * Encodes the specified ActivityFeastGifBuyGiftCountNotify message. Does not implicitly {@link gamesvr.ActivityFeastGifBuyGiftCountNotify.verify|verify} messages.
         * @param message ActivityFeastGifBuyGiftCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityFeastGifBuyGiftCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFeastGifBuyGiftCountNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityFeastGifBuyGiftCountNotify.verify|verify} messages.
         * @param message ActivityFeastGifBuyGiftCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityFeastGifBuyGiftCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFeastGifBuyGiftCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFeastGifBuyGiftCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityFeastGifBuyGiftCountNotify;

        /**
         * Decodes an ActivityFeastGifBuyGiftCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFeastGifBuyGiftCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityFeastGifBuyGiftCountNotify;

        /**
         * Verifies an ActivityFeastGifBuyGiftCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFeastGifBuyGiftCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFeastGifBuyGiftCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityFeastGifBuyGiftCountNotify;

        /**
         * Creates a plain object from an ActivityFeastGifBuyGiftCountNotify message. Also converts values to other types if specified.
         * @param message ActivityFeastGifBuyGiftCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityFeastGifBuyGiftCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFeastGifBuyGiftCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFeastGiftReceiveSurpriseRewardReq. */
    interface IActivityFeastGiftReceiveSurpriseRewardReq {
    }

    /** Represents an ActivityFeastGiftReceiveSurpriseRewardReq. */
    class ActivityFeastGiftReceiveSurpriseRewardReq implements IActivityFeastGiftReceiveSurpriseRewardReq {

        /**
         * Constructs a new ActivityFeastGiftReceiveSurpriseRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityFeastGiftReceiveSurpriseRewardReq);

        /**
         * Creates a new ActivityFeastGiftReceiveSurpriseRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFeastGiftReceiveSurpriseRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityFeastGiftReceiveSurpriseRewardReq): gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq;

        /**
         * Encodes the specified ActivityFeastGiftReceiveSurpriseRewardReq message. Does not implicitly {@link gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq.verify|verify} messages.
         * @param message ActivityFeastGiftReceiveSurpriseRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityFeastGiftReceiveSurpriseRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFeastGiftReceiveSurpriseRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq.verify|verify} messages.
         * @param message ActivityFeastGiftReceiveSurpriseRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityFeastGiftReceiveSurpriseRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFeastGiftReceiveSurpriseRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFeastGiftReceiveSurpriseRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq;

        /**
         * Decodes an ActivityFeastGiftReceiveSurpriseRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFeastGiftReceiveSurpriseRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq;

        /**
         * Verifies an ActivityFeastGiftReceiveSurpriseRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFeastGiftReceiveSurpriseRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFeastGiftReceiveSurpriseRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq;

        /**
         * Creates a plain object from an ActivityFeastGiftReceiveSurpriseRewardReq message. Also converts values to other types if specified.
         * @param message ActivityFeastGiftReceiveSurpriseRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityFeastGiftReceiveSurpriseRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFeastGiftReceiveSurpriseRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityFeastGiftReceiveSurpriseRewardRes. */
    interface IActivityFeastGiftReceiveSurpriseRewardRes {

        /** ActivityFeastGiftReceiveSurpriseRewardRes ReceiveSurpriseReward */
        ReceiveSurpriseReward?: (boolean|null);

        /** ActivityFeastGiftReceiveSurpriseRewardRes Exp */
        Exp?: (number|null);

        /** ActivityFeastGiftReceiveSurpriseRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityFeastGiftReceiveSurpriseRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityFeastGiftReceiveSurpriseRewardRes. */
    class ActivityFeastGiftReceiveSurpriseRewardRes implements IActivityFeastGiftReceiveSurpriseRewardRes {

        /**
         * Constructs a new ActivityFeastGiftReceiveSurpriseRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityFeastGiftReceiveSurpriseRewardRes);

        /** ActivityFeastGiftReceiveSurpriseRewardRes ReceiveSurpriseReward. */
        public ReceiveSurpriseReward: boolean;

        /** ActivityFeastGiftReceiveSurpriseRewardRes Exp. */
        public Exp: number;

        /** ActivityFeastGiftReceiveSurpriseRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityFeastGiftReceiveSurpriseRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityFeastGiftReceiveSurpriseRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityFeastGiftReceiveSurpriseRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityFeastGiftReceiveSurpriseRewardRes): gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes;

        /**
         * Encodes the specified ActivityFeastGiftReceiveSurpriseRewardRes message. Does not implicitly {@link gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes.verify|verify} messages.
         * @param message ActivityFeastGiftReceiveSurpriseRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityFeastGiftReceiveSurpriseRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityFeastGiftReceiveSurpriseRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes.verify|verify} messages.
         * @param message ActivityFeastGiftReceiveSurpriseRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityFeastGiftReceiveSurpriseRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityFeastGiftReceiveSurpriseRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityFeastGiftReceiveSurpriseRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes;

        /**
         * Decodes an ActivityFeastGiftReceiveSurpriseRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityFeastGiftReceiveSurpriseRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes;

        /**
         * Verifies an ActivityFeastGiftReceiveSurpriseRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityFeastGiftReceiveSurpriseRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityFeastGiftReceiveSurpriseRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes;

        /**
         * Creates a plain object from an ActivityFeastGiftReceiveSurpriseRewardRes message. Also converts values to other types if specified.
         * @param message ActivityFeastGiftReceiveSurpriseRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityFeastGiftReceiveSurpriseRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityFeastGiftReceiveSurpriseRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLuxuryGiftBuyGiftNotify. */
    interface IActivityLuxuryGiftBuyGiftNotify {

        /** ActivityLuxuryGiftBuyGiftNotify BuyGift */
        BuyGift?: (boolean|null);

        /** ActivityLuxuryGiftBuyGiftNotify Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityLuxuryGiftBuyGiftNotify. */
    class ActivityLuxuryGiftBuyGiftNotify implements IActivityLuxuryGiftBuyGiftNotify {

        /**
         * Constructs a new ActivityLuxuryGiftBuyGiftNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityLuxuryGiftBuyGiftNotify);

        /** ActivityLuxuryGiftBuyGiftNotify BuyGift. */
        public BuyGift: boolean;

        /** ActivityLuxuryGiftBuyGiftNotify Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityLuxuryGiftBuyGiftNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLuxuryGiftBuyGiftNotify instance
         */
        public static create(properties?: gamesvr.IActivityLuxuryGiftBuyGiftNotify): gamesvr.ActivityLuxuryGiftBuyGiftNotify;

        /**
         * Encodes the specified ActivityLuxuryGiftBuyGiftNotify message. Does not implicitly {@link gamesvr.ActivityLuxuryGiftBuyGiftNotify.verify|verify} messages.
         * @param message ActivityLuxuryGiftBuyGiftNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityLuxuryGiftBuyGiftNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLuxuryGiftBuyGiftNotify message, length delimited. Does not implicitly {@link gamesvr.ActivityLuxuryGiftBuyGiftNotify.verify|verify} messages.
         * @param message ActivityLuxuryGiftBuyGiftNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityLuxuryGiftBuyGiftNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLuxuryGiftBuyGiftNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLuxuryGiftBuyGiftNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityLuxuryGiftBuyGiftNotify;

        /**
         * Decodes an ActivityLuxuryGiftBuyGiftNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLuxuryGiftBuyGiftNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityLuxuryGiftBuyGiftNotify;

        /**
         * Verifies an ActivityLuxuryGiftBuyGiftNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLuxuryGiftBuyGiftNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLuxuryGiftBuyGiftNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityLuxuryGiftBuyGiftNotify;

        /**
         * Creates a plain object from an ActivityLuxuryGiftBuyGiftNotify message. Also converts values to other types if specified.
         * @param message ActivityLuxuryGiftBuyGiftNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityLuxuryGiftBuyGiftNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLuxuryGiftBuyGiftNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLuxuryGiftReceiveRewardReq. */
    interface IActivityLuxuryGiftReceiveRewardReq {

        /** ActivityLuxuryGiftReceiveRewardReq ReceiveDayList */
        ReceiveDayList?: (number[]|null);
    }

    /** Represents an ActivityLuxuryGiftReceiveRewardReq. */
    class ActivityLuxuryGiftReceiveRewardReq implements IActivityLuxuryGiftReceiveRewardReq {

        /**
         * Constructs a new ActivityLuxuryGiftReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityLuxuryGiftReceiveRewardReq);

        /** ActivityLuxuryGiftReceiveRewardReq ReceiveDayList. */
        public ReceiveDayList: number[];

        /**
         * Creates a new ActivityLuxuryGiftReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLuxuryGiftReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IActivityLuxuryGiftReceiveRewardReq): gamesvr.ActivityLuxuryGiftReceiveRewardReq;

        /**
         * Encodes the specified ActivityLuxuryGiftReceiveRewardReq message. Does not implicitly {@link gamesvr.ActivityLuxuryGiftReceiveRewardReq.verify|verify} messages.
         * @param message ActivityLuxuryGiftReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityLuxuryGiftReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLuxuryGiftReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.ActivityLuxuryGiftReceiveRewardReq.verify|verify} messages.
         * @param message ActivityLuxuryGiftReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityLuxuryGiftReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLuxuryGiftReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLuxuryGiftReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityLuxuryGiftReceiveRewardReq;

        /**
         * Decodes an ActivityLuxuryGiftReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLuxuryGiftReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityLuxuryGiftReceiveRewardReq;

        /**
         * Verifies an ActivityLuxuryGiftReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLuxuryGiftReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLuxuryGiftReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityLuxuryGiftReceiveRewardReq;

        /**
         * Creates a plain object from an ActivityLuxuryGiftReceiveRewardReq message. Also converts values to other types if specified.
         * @param message ActivityLuxuryGiftReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityLuxuryGiftReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLuxuryGiftReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityLuxuryGiftReceiveRewardRes. */
    interface IActivityLuxuryGiftReceiveRewardRes {

        /** ActivityLuxuryGiftReceiveRewardRes ReceiveDayList */
        ReceiveDayList?: (number[]|null);

        /** ActivityLuxuryGiftReceiveRewardRes Exp */
        Exp?: (number|null);

        /** ActivityLuxuryGiftReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** ActivityLuxuryGiftReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ActivityLuxuryGiftReceiveRewardRes. */
    class ActivityLuxuryGiftReceiveRewardRes implements IActivityLuxuryGiftReceiveRewardRes {

        /**
         * Constructs a new ActivityLuxuryGiftReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IActivityLuxuryGiftReceiveRewardRes);

        /** ActivityLuxuryGiftReceiveRewardRes ReceiveDayList. */
        public ReceiveDayList: number[];

        /** ActivityLuxuryGiftReceiveRewardRes Exp. */
        public Exp: number;

        /** ActivityLuxuryGiftReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** ActivityLuxuryGiftReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ActivityLuxuryGiftReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityLuxuryGiftReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IActivityLuxuryGiftReceiveRewardRes): gamesvr.ActivityLuxuryGiftReceiveRewardRes;

        /**
         * Encodes the specified ActivityLuxuryGiftReceiveRewardRes message. Does not implicitly {@link gamesvr.ActivityLuxuryGiftReceiveRewardRes.verify|verify} messages.
         * @param message ActivityLuxuryGiftReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IActivityLuxuryGiftReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityLuxuryGiftReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.ActivityLuxuryGiftReceiveRewardRes.verify|verify} messages.
         * @param message ActivityLuxuryGiftReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IActivityLuxuryGiftReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityLuxuryGiftReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityLuxuryGiftReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ActivityLuxuryGiftReceiveRewardRes;

        /**
         * Decodes an ActivityLuxuryGiftReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityLuxuryGiftReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ActivityLuxuryGiftReceiveRewardRes;

        /**
         * Verifies an ActivityLuxuryGiftReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityLuxuryGiftReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityLuxuryGiftReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ActivityLuxuryGiftReceiveRewardRes;

        /**
         * Creates a plain object from an ActivityLuxuryGiftReceiveRewardRes message. Also converts values to other types if specified.
         * @param message ActivityLuxuryGiftReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ActivityLuxuryGiftReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityLuxuryGiftReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RoleState enum. */
    enum RoleState {
        Normal = 0,
        Dead = 1
    }

    /** ResultType enum. */
    enum ResultType {
        RTInvalid = 0,
        RTHPResult = 1,
        RTPowerResult = 2,
        RTBuffResult = 3,
        RTHaloResult = 4,
        RTSkillLightResult = 5,
        RTBuffLightResult = 6,
        RTHaloLightResult = 7,
        RTRoleDeadResult = 8,
        RTTeamBuffResult = 9,
        RTRoleTimerResult = 10,
        RTRoleReviveResult = 11,
        RTTeamBuffLightResult = 12
    }

    /** Properties of a Result. */
    interface IResult {

        /** Result ResultType */
        ResultType?: (gamesvr.ResultType|null);

        /** Result From */
        From?: (number|null);

        /** Result ItemID */
        ItemID?: (number|null);

        /** Result Index */
        Index?: (number|null);

        /** Result FromAttack */
        FromAttack?: (boolean|null);

        /** Result Display */
        Display?: (number|null);

        /** Result HPResult */
        HPResult?: (gamesvr.IHPResult|null);

        /** Result PowerResult */
        PowerResult?: (gamesvr.IPowerResult|null);

        /** Result BuffResult */
        BuffResult?: (gamesvr.IBuffResult|null);

        /** Result HaloResult */
        HaloResult?: (gamesvr.IHaloResult|null);

        /** Result SkillLightResult */
        SkillLightResult?: (gamesvr.ISkillLightResult|null);

        /** Result BuffLightResult */
        BuffLightResult?: (gamesvr.IBuffLightResult|null);

        /** Result HaloLightResult */
        HaloLightResult?: (gamesvr.IHaloLightResult|null);

        /** Result RoleDeadResult */
        RoleDeadResult?: (gamesvr.IRoleDeadResult|null);

        /** Result TeamBuffResult */
        TeamBuffResult?: (gamesvr.ITeamBuffResult|null);

        /** Result RoleTimerResult */
        RoleTimerResult?: (gamesvr.IRoleTimerResult|null);

        /** Result RoleReviveResult */
        RoleReviveResult?: (gamesvr.IRoleReviveResult|null);

        /** Result TeamBuffLightResult */
        TeamBuffLightResult?: (gamesvr.ITeamBuffLightResult|null);
    }

    /** Represents a Result. */
    class Result implements IResult {

        /**
         * Constructs a new Result.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IResult);

        /** Result ResultType. */
        public ResultType: gamesvr.ResultType;

        /** Result From. */
        public From: number;

        /** Result ItemID. */
        public ItemID: number;

        /** Result Index. */
        public Index: number;

        /** Result FromAttack. */
        public FromAttack: boolean;

        /** Result Display. */
        public Display: number;

        /** Result HPResult. */
        public HPResult?: (gamesvr.IHPResult|null);

        /** Result PowerResult. */
        public PowerResult?: (gamesvr.IPowerResult|null);

        /** Result BuffResult. */
        public BuffResult?: (gamesvr.IBuffResult|null);

        /** Result HaloResult. */
        public HaloResult?: (gamesvr.IHaloResult|null);

        /** Result SkillLightResult. */
        public SkillLightResult?: (gamesvr.ISkillLightResult|null);

        /** Result BuffLightResult. */
        public BuffLightResult?: (gamesvr.IBuffLightResult|null);

        /** Result HaloLightResult. */
        public HaloLightResult?: (gamesvr.IHaloLightResult|null);

        /** Result RoleDeadResult. */
        public RoleDeadResult?: (gamesvr.IRoleDeadResult|null);

        /** Result TeamBuffResult. */
        public TeamBuffResult?: (gamesvr.ITeamBuffResult|null);

        /** Result RoleTimerResult. */
        public RoleTimerResult?: (gamesvr.IRoleTimerResult|null);

        /** Result RoleReviveResult. */
        public RoleReviveResult?: (gamesvr.IRoleReviveResult|null);

        /** Result TeamBuffLightResult. */
        public TeamBuffLightResult?: (gamesvr.ITeamBuffLightResult|null);

        /**
         * Creates a new Result instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Result instance
         */
        public static create(properties?: gamesvr.IResult): gamesvr.Result;

        /**
         * Encodes the specified Result message. Does not implicitly {@link gamesvr.Result.verify|verify} messages.
         * @param message Result message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Result message, length delimited. Does not implicitly {@link gamesvr.Result.verify|verify} messages.
         * @param message Result message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Result message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Result
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.Result;

        /**
         * Decodes a Result message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Result
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.Result;

        /**
         * Verifies a Result message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Result message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Result
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.Result;

        /**
         * Creates a plain object from a Result message. Also converts values to other types if specified.
         * @param message Result
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.Result, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Result to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HPResult. */
    interface IHPResult {

        /** HPResult RoleUID */
        RoleUID?: (number|null);

        /** HPResult Delta */
        Delta?: (number|null);

        /** HPResult DeltaMaxHP */
        DeltaMaxHP?: (number|null);

        /** HPResult HP */
        HP?: (number|null);

        /** HPResult MaxHP */
        MaxHP?: (number|null);

        /** HPResult DeltaShield */
        DeltaShield?: (number|null);

        /** HPResult Shield */
        Shield?: (number|null);

        /** HPResult RisistFatal */
        RisistFatal?: (boolean|null);

        /** HPResult HPDetail */
        HPDetail?: (gamesvr.IHPDetail|null);
    }

    /** Represents a HPResult. */
    class HPResult implements IHPResult {

        /**
         * Constructs a new HPResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHPResult);

        /** HPResult RoleUID. */
        public RoleUID: number;

        /** HPResult Delta. */
        public Delta: number;

        /** HPResult DeltaMaxHP. */
        public DeltaMaxHP: number;

        /** HPResult HP. */
        public HP: number;

        /** HPResult MaxHP. */
        public MaxHP: number;

        /** HPResult DeltaShield. */
        public DeltaShield: number;

        /** HPResult Shield. */
        public Shield: number;

        /** HPResult RisistFatal. */
        public RisistFatal: boolean;

        /** HPResult HPDetail. */
        public HPDetail?: (gamesvr.IHPDetail|null);

        /**
         * Creates a new HPResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HPResult instance
         */
        public static create(properties?: gamesvr.IHPResult): gamesvr.HPResult;

        /**
         * Encodes the specified HPResult message. Does not implicitly {@link gamesvr.HPResult.verify|verify} messages.
         * @param message HPResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHPResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HPResult message, length delimited. Does not implicitly {@link gamesvr.HPResult.verify|verify} messages.
         * @param message HPResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHPResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HPResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HPResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HPResult;

        /**
         * Decodes a HPResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HPResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HPResult;

        /**
         * Verifies a HPResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HPResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HPResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HPResult;

        /**
         * Creates a plain object from a HPResult message. Also converts values to other types if specified.
         * @param message HPResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HPResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HPResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HPDetail. */
    interface IHPDetail {

        /** HPDetail RoleUID */
        RoleUID?: (number|null);

        /** HPDetail TargetUID */
        TargetUID?: (number|null);

        /** HPDetail Attack */
        Attack?: (number|null);

        /** HPDetail RawAttack */
        RawAttack?: (number|null);

        /** HPDetail TrueAttack */
        TrueAttack?: (number|null);

        /** HPDetail Vampire */
        Vampire?: (number|null);

        /** HPDetail Protect */
        Protect?: (number|null);

        /** HPDetail ExtraHarm */
        ExtraHarm?: (number|null);

        /** HPDetail Miss */
        Miss?: (boolean|null);

        /** HPDetail Crit */
        Crit?: (boolean|null);

        /** HPDetail Parry */
        Parry?: (boolean|null);

        /** HPDetail BackAttack */
        BackAttack?: (boolean|null);

        /** HPDetail Pursuit */
        Pursuit?: (boolean|null);

        /** HPDetail TruthRoleUID */
        TruthRoleUID?: (number|null);
    }

    /** Represents a HPDetail. */
    class HPDetail implements IHPDetail {

        /**
         * Constructs a new HPDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHPDetail);

        /** HPDetail RoleUID. */
        public RoleUID: number;

        /** HPDetail TargetUID. */
        public TargetUID: number;

        /** HPDetail Attack. */
        public Attack: number;

        /** HPDetail RawAttack. */
        public RawAttack: number;

        /** HPDetail TrueAttack. */
        public TrueAttack: number;

        /** HPDetail Vampire. */
        public Vampire: number;

        /** HPDetail Protect. */
        public Protect: number;

        /** HPDetail ExtraHarm. */
        public ExtraHarm: number;

        /** HPDetail Miss. */
        public Miss: boolean;

        /** HPDetail Crit. */
        public Crit: boolean;

        /** HPDetail Parry. */
        public Parry: boolean;

        /** HPDetail BackAttack. */
        public BackAttack: boolean;

        /** HPDetail Pursuit. */
        public Pursuit: boolean;

        /** HPDetail TruthRoleUID. */
        public TruthRoleUID: number;

        /**
         * Creates a new HPDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HPDetail instance
         */
        public static create(properties?: gamesvr.IHPDetail): gamesvr.HPDetail;

        /**
         * Encodes the specified HPDetail message. Does not implicitly {@link gamesvr.HPDetail.verify|verify} messages.
         * @param message HPDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHPDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HPDetail message, length delimited. Does not implicitly {@link gamesvr.HPDetail.verify|verify} messages.
         * @param message HPDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHPDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HPDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HPDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HPDetail;

        /**
         * Decodes a HPDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HPDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HPDetail;

        /**
         * Verifies a HPDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HPDetail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HPDetail
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HPDetail;

        /**
         * Creates a plain object from a HPDetail message. Also converts values to other types if specified.
         * @param message HPDetail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HPDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HPDetail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PowerResult. */
    interface IPowerResult {

        /** PowerResult RoleUID */
        RoleUID?: (number|null);

        /** PowerResult Power */
        Power?: (number|null);

        /** PowerResult Delta */
        Delta?: (number|null);
    }

    /** Represents a PowerResult. */
    class PowerResult implements IPowerResult {

        /**
         * Constructs a new PowerResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPowerResult);

        /** PowerResult RoleUID. */
        public RoleUID: number;

        /** PowerResult Power. */
        public Power: number;

        /** PowerResult Delta. */
        public Delta: number;

        /**
         * Creates a new PowerResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PowerResult instance
         */
        public static create(properties?: gamesvr.IPowerResult): gamesvr.PowerResult;

        /**
         * Encodes the specified PowerResult message. Does not implicitly {@link gamesvr.PowerResult.verify|verify} messages.
         * @param message PowerResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPowerResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PowerResult message, length delimited. Does not implicitly {@link gamesvr.PowerResult.verify|verify} messages.
         * @param message PowerResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPowerResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PowerResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PowerResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PowerResult;

        /**
         * Decodes a PowerResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PowerResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PowerResult;

        /**
         * Verifies a PowerResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PowerResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PowerResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PowerResult;

        /**
         * Creates a plain object from a PowerResult message. Also converts values to other types if specified.
         * @param message PowerResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PowerResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PowerResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuffResult. */
    interface IBuffResult {

        /** BuffResult RoleUID */
        RoleUID?: (number|null);

        /** BuffResult BuffUID */
        BuffUID?: (number|null);

        /** BuffResult BuffID */
        BuffID?: (number|null);

        /** BuffResult Delta */
        Delta?: (number|null);

        /** BuffResult Count */
        Count?: (number|null);

        /** BuffResult Resist */
        Resist?: (boolean|null);
    }

    /** Represents a BuffResult. */
    class BuffResult implements IBuffResult {

        /**
         * Constructs a new BuffResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuffResult);

        /** BuffResult RoleUID. */
        public RoleUID: number;

        /** BuffResult BuffUID. */
        public BuffUID: number;

        /** BuffResult BuffID. */
        public BuffID: number;

        /** BuffResult Delta. */
        public Delta: number;

        /** BuffResult Count. */
        public Count: number;

        /** BuffResult Resist. */
        public Resist: boolean;

        /**
         * Creates a new BuffResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuffResult instance
         */
        public static create(properties?: gamesvr.IBuffResult): gamesvr.BuffResult;

        /**
         * Encodes the specified BuffResult message. Does not implicitly {@link gamesvr.BuffResult.verify|verify} messages.
         * @param message BuffResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuffResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuffResult message, length delimited. Does not implicitly {@link gamesvr.BuffResult.verify|verify} messages.
         * @param message BuffResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuffResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuffResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuffResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuffResult;

        /**
         * Decodes a BuffResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuffResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuffResult;

        /**
         * Verifies a BuffResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuffResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuffResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuffResult;

        /**
         * Creates a plain object from a BuffResult message. Also converts values to other types if specified.
         * @param message BuffResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuffResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuffResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HaloResult. */
    interface IHaloResult {

        /** HaloResult RoleUID */
        RoleUID?: (number|null);

        /** HaloResult HaloUID */
        HaloUID?: (number|null);

        /** HaloResult HaloID */
        HaloID?: (number|null);

        /** HaloResult isAdd */
        isAdd?: (boolean|null);

        /** HaloResult RangeUid */
        RangeUid?: (number[]|null);
    }

    /** Represents a HaloResult. */
    class HaloResult implements IHaloResult {

        /**
         * Constructs a new HaloResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHaloResult);

        /** HaloResult RoleUID. */
        public RoleUID: number;

        /** HaloResult HaloUID. */
        public HaloUID: number;

        /** HaloResult HaloID. */
        public HaloID: number;

        /** HaloResult isAdd. */
        public isAdd: boolean;

        /** HaloResult RangeUid. */
        public RangeUid: number[];

        /**
         * Creates a new HaloResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HaloResult instance
         */
        public static create(properties?: gamesvr.IHaloResult): gamesvr.HaloResult;

        /**
         * Encodes the specified HaloResult message. Does not implicitly {@link gamesvr.HaloResult.verify|verify} messages.
         * @param message HaloResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHaloResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HaloResult message, length delimited. Does not implicitly {@link gamesvr.HaloResult.verify|verify} messages.
         * @param message HaloResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHaloResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HaloResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HaloResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HaloResult;

        /**
         * Decodes a HaloResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HaloResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HaloResult;

        /**
         * Verifies a HaloResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HaloResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HaloResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HaloResult;

        /**
         * Creates a plain object from a HaloResult message. Also converts values to other types if specified.
         * @param message HaloResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HaloResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HaloResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SkillLightResult. */
    interface ISkillLightResult {

        /** SkillLightResult RoleUID */
        RoleUID?: (number|null);

        /** SkillLightResult SkillID */
        SkillID?: (number|null);
    }

    /** Represents a SkillLightResult. */
    class SkillLightResult implements ISkillLightResult {

        /**
         * Constructs a new SkillLightResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISkillLightResult);

        /** SkillLightResult RoleUID. */
        public RoleUID: number;

        /** SkillLightResult SkillID. */
        public SkillID: number;

        /**
         * Creates a new SkillLightResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SkillLightResult instance
         */
        public static create(properties?: gamesvr.ISkillLightResult): gamesvr.SkillLightResult;

        /**
         * Encodes the specified SkillLightResult message. Does not implicitly {@link gamesvr.SkillLightResult.verify|verify} messages.
         * @param message SkillLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISkillLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SkillLightResult message, length delimited. Does not implicitly {@link gamesvr.SkillLightResult.verify|verify} messages.
         * @param message SkillLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISkillLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SkillLightResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SkillLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SkillLightResult;

        /**
         * Decodes a SkillLightResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SkillLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SkillLightResult;

        /**
         * Verifies a SkillLightResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SkillLightResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SkillLightResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SkillLightResult;

        /**
         * Creates a plain object from a SkillLightResult message. Also converts values to other types if specified.
         * @param message SkillLightResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SkillLightResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SkillLightResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuffLightResult. */
    interface IBuffLightResult {

        /** BuffLightResult RoleUID */
        RoleUID?: (number|null);

        /** BuffLightResult BuffUID */
        BuffUID?: (number|null);
    }

    /** Represents a BuffLightResult. */
    class BuffLightResult implements IBuffLightResult {

        /**
         * Constructs a new BuffLightResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuffLightResult);

        /** BuffLightResult RoleUID. */
        public RoleUID: number;

        /** BuffLightResult BuffUID. */
        public BuffUID: number;

        /**
         * Creates a new BuffLightResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuffLightResult instance
         */
        public static create(properties?: gamesvr.IBuffLightResult): gamesvr.BuffLightResult;

        /**
         * Encodes the specified BuffLightResult message. Does not implicitly {@link gamesvr.BuffLightResult.verify|verify} messages.
         * @param message BuffLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuffLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuffLightResult message, length delimited. Does not implicitly {@link gamesvr.BuffLightResult.verify|verify} messages.
         * @param message BuffLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuffLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuffLightResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuffLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuffLightResult;

        /**
         * Decodes a BuffLightResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuffLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuffLightResult;

        /**
         * Verifies a BuffLightResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuffLightResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuffLightResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuffLightResult;

        /**
         * Creates a plain object from a BuffLightResult message. Also converts values to other types if specified.
         * @param message BuffLightResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuffLightResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuffLightResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HaloLightResult. */
    interface IHaloLightResult {

        /** HaloLightResult RoleUID */
        RoleUID?: (number|null);

        /** HaloLightResult HaloUID */
        HaloUID?: (number|null);
    }

    /** Represents a HaloLightResult. */
    class HaloLightResult implements IHaloLightResult {

        /**
         * Constructs a new HaloLightResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHaloLightResult);

        /** HaloLightResult RoleUID. */
        public RoleUID: number;

        /** HaloLightResult HaloUID. */
        public HaloUID: number;

        /**
         * Creates a new HaloLightResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HaloLightResult instance
         */
        public static create(properties?: gamesvr.IHaloLightResult): gamesvr.HaloLightResult;

        /**
         * Encodes the specified HaloLightResult message. Does not implicitly {@link gamesvr.HaloLightResult.verify|verify} messages.
         * @param message HaloLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHaloLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HaloLightResult message, length delimited. Does not implicitly {@link gamesvr.HaloLightResult.verify|verify} messages.
         * @param message HaloLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHaloLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HaloLightResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HaloLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HaloLightResult;

        /**
         * Decodes a HaloLightResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HaloLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HaloLightResult;

        /**
         * Verifies a HaloLightResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HaloLightResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HaloLightResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HaloLightResult;

        /**
         * Creates a plain object from a HaloLightResult message. Also converts values to other types if specified.
         * @param message HaloLightResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HaloLightResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HaloLightResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamBuffLightResult. */
    interface ITeamBuffLightResult {

        /** TeamBuffLightResult Team */
        Team?: (number|null);

        /** TeamBuffLightResult BuffID */
        BuffID?: (number|null);
    }

    /** Represents a TeamBuffLightResult. */
    class TeamBuffLightResult implements ITeamBuffLightResult {

        /**
         * Constructs a new TeamBuffLightResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITeamBuffLightResult);

        /** TeamBuffLightResult Team. */
        public Team: number;

        /** TeamBuffLightResult BuffID. */
        public BuffID: number;

        /**
         * Creates a new TeamBuffLightResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamBuffLightResult instance
         */
        public static create(properties?: gamesvr.ITeamBuffLightResult): gamesvr.TeamBuffLightResult;

        /**
         * Encodes the specified TeamBuffLightResult message. Does not implicitly {@link gamesvr.TeamBuffLightResult.verify|verify} messages.
         * @param message TeamBuffLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITeamBuffLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamBuffLightResult message, length delimited. Does not implicitly {@link gamesvr.TeamBuffLightResult.verify|verify} messages.
         * @param message TeamBuffLightResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITeamBuffLightResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamBuffLightResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamBuffLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TeamBuffLightResult;

        /**
         * Decodes a TeamBuffLightResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamBuffLightResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TeamBuffLightResult;

        /**
         * Verifies a TeamBuffLightResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamBuffLightResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamBuffLightResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TeamBuffLightResult;

        /**
         * Creates a plain object from a TeamBuffLightResult message. Also converts values to other types if specified.
         * @param message TeamBuffLightResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TeamBuffLightResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamBuffLightResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleDeadResult. */
    interface IRoleDeadResult {

        /** RoleDeadResult RoleUID */
        RoleUID?: (number|null);

        /** RoleDeadResult RoleState */
        RoleState?: (gamesvr.RoleState|null);
    }

    /** Represents a RoleDeadResult. */
    class RoleDeadResult implements IRoleDeadResult {

        /**
         * Constructs a new RoleDeadResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRoleDeadResult);

        /** RoleDeadResult RoleUID. */
        public RoleUID: number;

        /** RoleDeadResult RoleState. */
        public RoleState: gamesvr.RoleState;

        /**
         * Creates a new RoleDeadResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleDeadResult instance
         */
        public static create(properties?: gamesvr.IRoleDeadResult): gamesvr.RoleDeadResult;

        /**
         * Encodes the specified RoleDeadResult message. Does not implicitly {@link gamesvr.RoleDeadResult.verify|verify} messages.
         * @param message RoleDeadResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRoleDeadResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleDeadResult message, length delimited. Does not implicitly {@link gamesvr.RoleDeadResult.verify|verify} messages.
         * @param message RoleDeadResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRoleDeadResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleDeadResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleDeadResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RoleDeadResult;

        /**
         * Decodes a RoleDeadResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleDeadResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RoleDeadResult;

        /**
         * Verifies a RoleDeadResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleDeadResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleDeadResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RoleDeadResult;

        /**
         * Creates a plain object from a RoleDeadResult message. Also converts values to other types if specified.
         * @param message RoleDeadResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RoleDeadResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleDeadResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamBuffResult. */
    interface ITeamBuffResult {

        /** TeamBuffResult Team */
        Team?: (number|null);

        /** TeamBuffResult BuffID */
        BuffID?: (number|null);

        /** TeamBuffResult Delta */
        Delta?: (number|null);

        /** TeamBuffResult Power */
        Power?: (number|null);

        /** TeamBuffResult MaxPower */
        MaxPower?: (number|null);
    }

    /** Represents a TeamBuffResult. */
    class TeamBuffResult implements ITeamBuffResult {

        /**
         * Constructs a new TeamBuffResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITeamBuffResult);

        /** TeamBuffResult Team. */
        public Team: number;

        /** TeamBuffResult BuffID. */
        public BuffID: number;

        /** TeamBuffResult Delta. */
        public Delta: number;

        /** TeamBuffResult Power. */
        public Power: number;

        /** TeamBuffResult MaxPower. */
        public MaxPower: number;

        /**
         * Creates a new TeamBuffResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamBuffResult instance
         */
        public static create(properties?: gamesvr.ITeamBuffResult): gamesvr.TeamBuffResult;

        /**
         * Encodes the specified TeamBuffResult message. Does not implicitly {@link gamesvr.TeamBuffResult.verify|verify} messages.
         * @param message TeamBuffResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITeamBuffResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamBuffResult message, length delimited. Does not implicitly {@link gamesvr.TeamBuffResult.verify|verify} messages.
         * @param message TeamBuffResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITeamBuffResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamBuffResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamBuffResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TeamBuffResult;

        /**
         * Decodes a TeamBuffResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamBuffResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TeamBuffResult;

        /**
         * Verifies a TeamBuffResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamBuffResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamBuffResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TeamBuffResult;

        /**
         * Creates a plain object from a TeamBuffResult message. Also converts values to other types if specified.
         * @param message TeamBuffResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TeamBuffResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamBuffResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleTimerResult. */
    interface IRoleTimerResult {

        /** RoleTimerResult RoleUID */
        RoleUID?: (number|null);

        /** RoleTimerResult RolePosition */
        RolePosition?: (number|null);

        /** RoleTimerResult Delta */
        Delta?: (number|null);

        /** RoleTimerResult SpeedDelta */
        SpeedDelta?: (number|null);

        /** RoleTimerResult Speed */
        Speed?: (number|null);
    }

    /** Represents a RoleTimerResult. */
    class RoleTimerResult implements IRoleTimerResult {

        /**
         * Constructs a new RoleTimerResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRoleTimerResult);

        /** RoleTimerResult RoleUID. */
        public RoleUID: number;

        /** RoleTimerResult RolePosition. */
        public RolePosition: number;

        /** RoleTimerResult Delta. */
        public Delta: number;

        /** RoleTimerResult SpeedDelta. */
        public SpeedDelta: number;

        /** RoleTimerResult Speed. */
        public Speed: number;

        /**
         * Creates a new RoleTimerResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleTimerResult instance
         */
        public static create(properties?: gamesvr.IRoleTimerResult): gamesvr.RoleTimerResult;

        /**
         * Encodes the specified RoleTimerResult message. Does not implicitly {@link gamesvr.RoleTimerResult.verify|verify} messages.
         * @param message RoleTimerResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRoleTimerResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleTimerResult message, length delimited. Does not implicitly {@link gamesvr.RoleTimerResult.verify|verify} messages.
         * @param message RoleTimerResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRoleTimerResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleTimerResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleTimerResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RoleTimerResult;

        /**
         * Decodes a RoleTimerResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleTimerResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RoleTimerResult;

        /**
         * Verifies a RoleTimerResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleTimerResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleTimerResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RoleTimerResult;

        /**
         * Creates a plain object from a RoleTimerResult message. Also converts values to other types if specified.
         * @param message RoleTimerResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RoleTimerResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleTimerResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleReviveResult. */
    interface IRoleReviveResult {

        /** RoleReviveResult RoleUID */
        RoleUID?: (number|null);

        /** RoleReviveResult RoleState */
        RoleState?: (gamesvr.RoleState|null);
    }

    /** Represents a RoleReviveResult. */
    class RoleReviveResult implements IRoleReviveResult {

        /**
         * Constructs a new RoleReviveResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRoleReviveResult);

        /** RoleReviveResult RoleUID. */
        public RoleUID: number;

        /** RoleReviveResult RoleState. */
        public RoleState: gamesvr.RoleState;

        /**
         * Creates a new RoleReviveResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleReviveResult instance
         */
        public static create(properties?: gamesvr.IRoleReviveResult): gamesvr.RoleReviveResult;

        /**
         * Encodes the specified RoleReviveResult message. Does not implicitly {@link gamesvr.RoleReviveResult.verify|verify} messages.
         * @param message RoleReviveResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRoleReviveResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleReviveResult message, length delimited. Does not implicitly {@link gamesvr.RoleReviveResult.verify|verify} messages.
         * @param message RoleReviveResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRoleReviveResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleReviveResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleReviveResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RoleReviveResult;

        /**
         * Decodes a RoleReviveResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleReviveResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RoleReviveResult;

        /**
         * Verifies a RoleReviveResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleReviveResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleReviveResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RoleReviveResult;

        /**
         * Creates a plain object from a RoleReviveResult message. Also converts values to other types if specified.
         * @param message RoleReviveResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RoleReviveResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleReviveResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Buff. */
    interface IBuff {

        /** Buff UID */
        UID?: (number|null);

        /** Buff ID */
        ID?: (number|null);

        /** Buff Count */
        Count?: (number|null);
    }

    /** Represents a Buff. */
    class Buff implements IBuff {

        /**
         * Constructs a new Buff.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuff);

        /** Buff UID. */
        public UID: number;

        /** Buff ID. */
        public ID: number;

        /** Buff Count. */
        public Count: number;

        /**
         * Creates a new Buff instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Buff instance
         */
        public static create(properties?: gamesvr.IBuff): gamesvr.Buff;

        /**
         * Encodes the specified Buff message. Does not implicitly {@link gamesvr.Buff.verify|verify} messages.
         * @param message Buff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuff, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Buff message, length delimited. Does not implicitly {@link gamesvr.Buff.verify|verify} messages.
         * @param message Buff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuff, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Buff message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Buff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.Buff;

        /**
         * Decodes a Buff message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Buff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.Buff;

        /**
         * Verifies a Buff message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Buff message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Buff
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.Buff;

        /**
         * Creates a plain object from a Buff message. Also converts values to other types if specified.
         * @param message Buff
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.Buff, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Buff to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Halo. */
    interface IHalo {

        /** Halo UID */
        UID?: (number|null);

        /** Halo ID */
        ID?: (number|null);

        /** Halo RoleID */
        RoleID?: (number|null);

        /** Halo From */
        From?: (number|null);
    }

    /** Represents a Halo. */
    class Halo implements IHalo {

        /**
         * Constructs a new Halo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHalo);

        /** Halo UID. */
        public UID: number;

        /** Halo ID. */
        public ID: number;

        /** Halo RoleID. */
        public RoleID: number;

        /** Halo From. */
        public From: number;

        /**
         * Creates a new Halo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Halo instance
         */
        public static create(properties?: gamesvr.IHalo): gamesvr.Halo;

        /**
         * Encodes the specified Halo message. Does not implicitly {@link gamesvr.Halo.verify|verify} messages.
         * @param message Halo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHalo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Halo message, length delimited. Does not implicitly {@link gamesvr.Halo.verify|verify} messages.
         * @param message Halo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHalo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Halo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Halo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.Halo;

        /**
         * Decodes a Halo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Halo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.Halo;

        /**
         * Verifies a Halo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Halo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Halo
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.Halo;

        /**
         * Creates a plain object from a Halo message. Also converts values to other types if specified.
         * @param message Halo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.Halo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Halo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamBuff. */
    interface ITeamBuff {

        /** TeamBuff UID */
        UID?: (number|null);

        /** TeamBuff ID */
        ID?: (number|null);

        /** TeamBuff Count */
        Count?: (number|null);

        /** TeamBuff Power */
        Power?: (number|null);

        /** TeamBuff MaxPower */
        MaxPower?: (number|null);
    }

    /** Represents a TeamBuff. */
    class TeamBuff implements ITeamBuff {

        /**
         * Constructs a new TeamBuff.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITeamBuff);

        /** TeamBuff UID. */
        public UID: number;

        /** TeamBuff ID. */
        public ID: number;

        /** TeamBuff Count. */
        public Count: number;

        /** TeamBuff Power. */
        public Power: number;

        /** TeamBuff MaxPower. */
        public MaxPower: number;

        /**
         * Creates a new TeamBuff instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamBuff instance
         */
        public static create(properties?: gamesvr.ITeamBuff): gamesvr.TeamBuff;

        /**
         * Encodes the specified TeamBuff message. Does not implicitly {@link gamesvr.TeamBuff.verify|verify} messages.
         * @param message TeamBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITeamBuff, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamBuff message, length delimited. Does not implicitly {@link gamesvr.TeamBuff.verify|verify} messages.
         * @param message TeamBuff message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITeamBuff, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamBuff message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TeamBuff;

        /**
         * Decodes a TeamBuff message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamBuff
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TeamBuff;

        /**
         * Verifies a TeamBuff message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamBuff message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamBuff
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TeamBuff;

        /**
         * Creates a plain object from a TeamBuff message. Also converts values to other types if specified.
         * @param message TeamBuff
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TeamBuff, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamBuff to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Role. */
    interface IRole {

        /** Role UID */
        UID?: (number|null);

        /** Role ID */
        ID?: (number|null);

        /** Role Pos */
        Pos?: (number|null);

        /** Role MaxHP */
        MaxHP?: (number|null);

        /** Role HP */
        HP?: (number|null);

        /** Role MaxPower */
        MaxPower?: (number|null);

        /** Role Power */
        Power?: (number|null);

        /** Role RoleState */
        RoleState?: (gamesvr.RoleState|null);

        /** Role Buffs */
        Buffs?: (gamesvr.IBuff[]|null);

        /** Role Halos */
        Halos?: (gamesvr.IHalo[]|null);
    }

    /** Represents a Role. */
    class Role implements IRole {

        /**
         * Constructs a new Role.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRole);

        /** Role UID. */
        public UID: number;

        /** Role ID. */
        public ID: number;

        /** Role Pos. */
        public Pos: number;

        /** Role MaxHP. */
        public MaxHP: number;

        /** Role HP. */
        public HP: number;

        /** Role MaxPower. */
        public MaxPower: number;

        /** Role Power. */
        public Power: number;

        /** Role RoleState. */
        public RoleState: gamesvr.RoleState;

        /** Role Buffs. */
        public Buffs: gamesvr.IBuff[];

        /** Role Halos. */
        public Halos: gamesvr.IHalo[];

        /**
         * Creates a new Role instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Role instance
         */
        public static create(properties?: gamesvr.IRole): gamesvr.Role;

        /**
         * Encodes the specified Role message. Does not implicitly {@link gamesvr.Role.verify|verify} messages.
         * @param message Role message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Role message, length delimited. Does not implicitly {@link gamesvr.Role.verify|verify} messages.
         * @param message Role message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Role message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Role
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.Role;

        /**
         * Decodes a Role message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Role
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.Role;

        /**
         * Verifies a Role message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Role message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Role
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.Role;

        /**
         * Creates a plain object from a Role message. Also converts values to other types if specified.
         * @param message Role
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.Role, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Role to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Team. */
    interface ITeam {

        /** Team Level */
        Level?: (number|null);

        /** Team Roles */
        Roles?: (gamesvr.IRole[]|null);

        /** Team Talents */
        Talents?: (number[]|null);

        /** Team Treasures */
        Treasures?: (number[]|null);

        /** Team TeamBuff */
        TeamBuff?: (gamesvr.ITeamBuff[]|null);
    }

    /** Represents a Team. */
    class Team implements ITeam {

        /**
         * Constructs a new Team.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITeam);

        /** Team Level. */
        public Level: number;

        /** Team Roles. */
        public Roles: gamesvr.IRole[];

        /** Team Talents. */
        public Talents: number[];

        /** Team Treasures. */
        public Treasures: number[];

        /** Team TeamBuff. */
        public TeamBuff: gamesvr.ITeamBuff[];

        /**
         * Creates a new Team instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Team instance
         */
        public static create(properties?: gamesvr.ITeam): gamesvr.Team;

        /**
         * Encodes the specified Team message. Does not implicitly {@link gamesvr.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Team message, length delimited. Does not implicitly {@link gamesvr.Team.verify|verify} messages.
         * @param message Team message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITeam, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Team message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.Team;

        /**
         * Decodes a Team message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Team
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.Team;

        /**
         * Verifies a Team message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Team message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Team
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.Team;

        /**
         * Creates a plain object from a Team message. Also converts values to other types if specified.
         * @param message Team
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.Team, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Team to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoleTimer. */
    interface IRoleTimer {

        /** RoleTimer UID */
        UID?: (number|null);

        /** RoleTimer Position */
        Position?: (number|null);

        /** RoleTimer Speed */
        Speed?: (number|null);

        /** RoleTimer IsBomb */
        IsBomb?: (boolean|null);
    }

    /** Represents a RoleTimer. */
    class RoleTimer implements IRoleTimer {

        /**
         * Constructs a new RoleTimer.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRoleTimer);

        /** RoleTimer UID. */
        public UID: number;

        /** RoleTimer Position. */
        public Position: number;

        /** RoleTimer Speed. */
        public Speed: number;

        /** RoleTimer IsBomb. */
        public IsBomb: boolean;

        /**
         * Creates a new RoleTimer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoleTimer instance
         */
        public static create(properties?: gamesvr.IRoleTimer): gamesvr.RoleTimer;

        /**
         * Encodes the specified RoleTimer message. Does not implicitly {@link gamesvr.RoleTimer.verify|verify} messages.
         * @param message RoleTimer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRoleTimer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoleTimer message, length delimited. Does not implicitly {@link gamesvr.RoleTimer.verify|verify} messages.
         * @param message RoleTimer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRoleTimer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoleTimer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoleTimer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RoleTimer;

        /**
         * Decodes a RoleTimer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoleTimer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RoleTimer;

        /**
         * Verifies a RoleTimer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoleTimer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoleTimer
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RoleTimer;

        /**
         * Creates a plain object from a RoleTimer message. Also converts values to other types if specified.
         * @param message RoleTimer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RoleTimer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoleTimer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimerInfo. */
    interface ITimerInfo {

        /** TimerInfo RoundRole */
        RoundRole?: (number|null);

        /** TimerInfo RoleTimer */
        RoleTimer?: (gamesvr.IRoleTimer[]|null);
    }

    /** Represents a TimerInfo. */
    class TimerInfo implements ITimerInfo {

        /**
         * Constructs a new TimerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimerInfo);

        /** TimerInfo RoundRole. */
        public RoundRole: number;

        /** TimerInfo RoleTimer. */
        public RoleTimer: gamesvr.IRoleTimer[];

        /**
         * Creates a new TimerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimerInfo instance
         */
        public static create(properties?: gamesvr.ITimerInfo): gamesvr.TimerInfo;

        /**
         * Encodes the specified TimerInfo message. Does not implicitly {@link gamesvr.TimerInfo.verify|verify} messages.
         * @param message TimerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimerInfo message, length delimited. Does not implicitly {@link gamesvr.TimerInfo.verify|verify} messages.
         * @param message TimerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimerInfo;

        /**
         * Decodes a TimerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimerInfo;

        /**
         * Verifies a TimerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimerInfo
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimerInfo;

        /**
         * Creates a plain object from a TimerInfo message. Also converts values to other types if specified.
         * @param message TimerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BattleStartResult. */
    interface IBattleStartResult {

        /** BattleStartResult Timer */
        Timer?: (gamesvr.ITimerInfo|null);

        /** BattleStartResult Results */
        Results?: (gamesvr.IResult[]|null);
    }

    /** Represents a BattleStartResult. */
    class BattleStartResult implements IBattleStartResult {

        /**
         * Constructs a new BattleStartResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBattleStartResult);

        /** BattleStartResult Timer. */
        public Timer?: (gamesvr.ITimerInfo|null);

        /** BattleStartResult Results. */
        public Results: gamesvr.IResult[];

        /**
         * Creates a new BattleStartResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleStartResult instance
         */
        public static create(properties?: gamesvr.IBattleStartResult): gamesvr.BattleStartResult;

        /**
         * Encodes the specified BattleStartResult message. Does not implicitly {@link gamesvr.BattleStartResult.verify|verify} messages.
         * @param message BattleStartResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBattleStartResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BattleStartResult message, length delimited. Does not implicitly {@link gamesvr.BattleStartResult.verify|verify} messages.
         * @param message BattleStartResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBattleStartResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BattleStartResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleStartResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BattleStartResult;

        /**
         * Decodes a BattleStartResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleStartResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BattleStartResult;

        /**
         * Verifies a BattleStartResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BattleStartResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BattleStartResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BattleStartResult;

        /**
         * Creates a plain object from a BattleStartResult message. Also converts values to other types if specified.
         * @param message BattleStartResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BattleStartResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BattleStartResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BattleEndResult. */
    interface IBattleEndResult {

        /** BattleEndResult Win */
        Win?: (boolean|null);

        /** BattleEndResult TimeOut */
        TimeOut?: (boolean|null);

        /** BattleEndResult Results */
        Results?: (gamesvr.IResult[]|null);
    }

    /** Represents a BattleEndResult. */
    class BattleEndResult implements IBattleEndResult {

        /**
         * Constructs a new BattleEndResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBattleEndResult);

        /** BattleEndResult Win. */
        public Win: boolean;

        /** BattleEndResult TimeOut. */
        public TimeOut: boolean;

        /** BattleEndResult Results. */
        public Results: gamesvr.IResult[];

        /**
         * Creates a new BattleEndResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleEndResult instance
         */
        public static create(properties?: gamesvr.IBattleEndResult): gamesvr.BattleEndResult;

        /**
         * Encodes the specified BattleEndResult message. Does not implicitly {@link gamesvr.BattleEndResult.verify|verify} messages.
         * @param message BattleEndResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBattleEndResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BattleEndResult message, length delimited. Does not implicitly {@link gamesvr.BattleEndResult.verify|verify} messages.
         * @param message BattleEndResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBattleEndResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BattleEndResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleEndResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BattleEndResult;

        /**
         * Decodes a BattleEndResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleEndResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BattleEndResult;

        /**
         * Verifies a BattleEndResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BattleEndResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BattleEndResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BattleEndResult;

        /**
         * Creates a plain object from a BattleEndResult message. Also converts values to other types if specified.
         * @param message BattleEndResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BattleEndResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BattleEndResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RoundResult. */
    interface IRoundResult {

        /** RoundResult Round */
        Round?: (number|null);

        /** RoundResult Timer */
        Timer?: (gamesvr.ITimerInfo|null);

        /** RoundResult RoundStartRes */
        RoundStartRes?: (gamesvr.IResult[]|null);

        /** RoundResult ActionRes */
        ActionRes?: (gamesvr.IResult[]|null);

        /** RoundResult RoundEndRes */
        RoundEndRes?: (gamesvr.IResult[]|null);
    }

    /** Represents a RoundResult. */
    class RoundResult implements IRoundResult {

        /**
         * Constructs a new RoundResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRoundResult);

        /** RoundResult Round. */
        public Round: number;

        /** RoundResult Timer. */
        public Timer?: (gamesvr.ITimerInfo|null);

        /** RoundResult RoundStartRes. */
        public RoundStartRes: gamesvr.IResult[];

        /** RoundResult ActionRes. */
        public ActionRes: gamesvr.IResult[];

        /** RoundResult RoundEndRes. */
        public RoundEndRes: gamesvr.IResult[];

        /**
         * Creates a new RoundResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RoundResult instance
         */
        public static create(properties?: gamesvr.IRoundResult): gamesvr.RoundResult;

        /**
         * Encodes the specified RoundResult message. Does not implicitly {@link gamesvr.RoundResult.verify|verify} messages.
         * @param message RoundResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRoundResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RoundResult message, length delimited. Does not implicitly {@link gamesvr.RoundResult.verify|verify} messages.
         * @param message RoundResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRoundResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RoundResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RoundResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RoundResult;

        /**
         * Decodes a RoundResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RoundResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RoundResult;

        /**
         * Verifies a RoundResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RoundResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RoundResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RoundResult;

        /**
         * Creates a plain object from a RoundResult message. Also converts values to other types if specified.
         * @param message RoundResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RoundResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RoundResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterBattleResult. */
    interface IEnterBattleResult {

        /** EnterBattleResult Teams */
        Teams?: (gamesvr.ITeam[]|null);

        /** EnterBattleResult BattleStartRes */
        BattleStartRes?: (gamesvr.IBattleStartResult|null);

        /** EnterBattleResult RoundRes */
        RoundRes?: (gamesvr.IRoundResult[]|null);

        /** EnterBattleResult BattleEndRes */
        BattleEndRes?: (gamesvr.IBattleEndResult|null);
    }

    /** Represents an EnterBattleResult. */
    class EnterBattleResult implements IEnterBattleResult {

        /**
         * Constructs a new EnterBattleResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnterBattleResult);

        /** EnterBattleResult Teams. */
        public Teams: gamesvr.ITeam[];

        /** EnterBattleResult BattleStartRes. */
        public BattleStartRes?: (gamesvr.IBattleStartResult|null);

        /** EnterBattleResult RoundRes. */
        public RoundRes: gamesvr.IRoundResult[];

        /** EnterBattleResult BattleEndRes. */
        public BattleEndRes?: (gamesvr.IBattleEndResult|null);

        /**
         * Creates a new EnterBattleResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterBattleResult instance
         */
        public static create(properties?: gamesvr.IEnterBattleResult): gamesvr.EnterBattleResult;

        /**
         * Encodes the specified EnterBattleResult message. Does not implicitly {@link gamesvr.EnterBattleResult.verify|verify} messages.
         * @param message EnterBattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnterBattleResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterBattleResult message, length delimited. Does not implicitly {@link gamesvr.EnterBattleResult.verify|verify} messages.
         * @param message EnterBattleResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnterBattleResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterBattleResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterBattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnterBattleResult;

        /**
         * Decodes an EnterBattleResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterBattleResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnterBattleResult;

        /**
         * Verifies an EnterBattleResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterBattleResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterBattleResult
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnterBattleResult;

        /**
         * Creates a plain object from an EnterBattleResult message. Also converts values to other types if specified.
         * @param message EnterBattleResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnterBattleResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterBattleResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BattleMeasureReq. */
    interface IBattleMeasureReq {

        /** BattleMeasureReq BattleCfg */
        BattleCfg?: (data.IMeasureBattleCfg[]|null);
    }

    /** Represents a BattleMeasureReq. */
    class BattleMeasureReq implements IBattleMeasureReq {

        /**
         * Constructs a new BattleMeasureReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBattleMeasureReq);

        /** BattleMeasureReq BattleCfg. */
        public BattleCfg: data.IMeasureBattleCfg[];

        /**
         * Creates a new BattleMeasureReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleMeasureReq instance
         */
        public static create(properties?: gamesvr.IBattleMeasureReq): gamesvr.BattleMeasureReq;

        /**
         * Encodes the specified BattleMeasureReq message. Does not implicitly {@link gamesvr.BattleMeasureReq.verify|verify} messages.
         * @param message BattleMeasureReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBattleMeasureReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BattleMeasureReq message, length delimited. Does not implicitly {@link gamesvr.BattleMeasureReq.verify|verify} messages.
         * @param message BattleMeasureReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBattleMeasureReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BattleMeasureReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleMeasureReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BattleMeasureReq;

        /**
         * Decodes a BattleMeasureReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleMeasureReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BattleMeasureReq;

        /**
         * Verifies a BattleMeasureReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BattleMeasureReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BattleMeasureReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BattleMeasureReq;

        /**
         * Creates a plain object from a BattleMeasureReq message. Also converts values to other types if specified.
         * @param message BattleMeasureReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BattleMeasureReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BattleMeasureReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BattleMeasureRes. */
    interface IBattleMeasureRes {

        /** BattleMeasureRes MeasureResult */
        MeasureResult?: (data.IMeasureResult[]|null);
    }

    /** Represents a BattleMeasureRes. */
    class BattleMeasureRes implements IBattleMeasureRes {

        /**
         * Constructs a new BattleMeasureRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBattleMeasureRes);

        /** BattleMeasureRes MeasureResult. */
        public MeasureResult: data.IMeasureResult[];

        /**
         * Creates a new BattleMeasureRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BattleMeasureRes instance
         */
        public static create(properties?: gamesvr.IBattleMeasureRes): gamesvr.BattleMeasureRes;

        /**
         * Encodes the specified BattleMeasureRes message. Does not implicitly {@link gamesvr.BattleMeasureRes.verify|verify} messages.
         * @param message BattleMeasureRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBattleMeasureRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BattleMeasureRes message, length delimited. Does not implicitly {@link gamesvr.BattleMeasureRes.verify|verify} messages.
         * @param message BattleMeasureRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBattleMeasureRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BattleMeasureRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BattleMeasureRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BattleMeasureRes;

        /**
         * Decodes a BattleMeasureRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BattleMeasureRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BattleMeasureRes;

        /**
         * Verifies a BattleMeasureRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BattleMeasureRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BattleMeasureRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BattleMeasureRes;

        /**
         * Creates a plain object from a BattleMeasureRes message. Also converts values to other types if specified.
         * @param message BattleMeasureRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BattleMeasureRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BattleMeasureRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuyBattlePassReq. */
    interface IBuyBattlePassReq {
    }

    /** Represents a BuyBattlePassReq. */
    class BuyBattlePassReq implements IBuyBattlePassReq {

        /**
         * Constructs a new BuyBattlePassReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuyBattlePassReq);

        /**
         * Creates a new BuyBattlePassReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyBattlePassReq instance
         */
        public static create(properties?: gamesvr.IBuyBattlePassReq): gamesvr.BuyBattlePassReq;

        /**
         * Encodes the specified BuyBattlePassReq message. Does not implicitly {@link gamesvr.BuyBattlePassReq.verify|verify} messages.
         * @param message BuyBattlePassReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuyBattlePassReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuyBattlePassReq message, length delimited. Does not implicitly {@link gamesvr.BuyBattlePassReq.verify|verify} messages.
         * @param message BuyBattlePassReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuyBattlePassReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuyBattlePassReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyBattlePassReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuyBattlePassReq;

        /**
         * Decodes a BuyBattlePassReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyBattlePassReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuyBattlePassReq;

        /**
         * Verifies a BuyBattlePassReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuyBattlePassReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuyBattlePassReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuyBattlePassReq;

        /**
         * Creates a plain object from a BuyBattlePassReq message. Also converts values to other types if specified.
         * @param message BuyBattlePassReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuyBattlePassReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuyBattlePassReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuyBattlePassRes. */
    interface IBuyBattlePassRes {
    }

    /** Represents a BuyBattlePassRes. */
    class BuyBattlePassRes implements IBuyBattlePassRes {

        /**
         * Constructs a new BuyBattlePassRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuyBattlePassRes);

        /**
         * Creates a new BuyBattlePassRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyBattlePassRes instance
         */
        public static create(properties?: gamesvr.IBuyBattlePassRes): gamesvr.BuyBattlePassRes;

        /**
         * Encodes the specified BuyBattlePassRes message. Does not implicitly {@link gamesvr.BuyBattlePassRes.verify|verify} messages.
         * @param message BuyBattlePassRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuyBattlePassRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuyBattlePassRes message, length delimited. Does not implicitly {@link gamesvr.BuyBattlePassRes.verify|verify} messages.
         * @param message BuyBattlePassRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuyBattlePassRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuyBattlePassRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyBattlePassRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuyBattlePassRes;

        /**
         * Decodes a BuyBattlePassRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyBattlePassRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuyBattlePassRes;

        /**
         * Verifies a BuyBattlePassRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuyBattlePassRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuyBattlePassRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuyBattlePassRes;

        /**
         * Creates a plain object from a BuyBattlePassRes message. Also converts values to other types if specified.
         * @param message BuyBattlePassRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuyBattlePassRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuyBattlePassRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SendChatReq. */
    interface ISendChatReq {

        /** SendChatReq Type */
        Type?: (number|null);

        /** SendChatReq Message */
        Message?: (string|null);

        /** SendChatReq MsgFrameId */
        MsgFrameId?: (number|null);
    }

    /** Represents a SendChatReq. */
    class SendChatReq implements ISendChatReq {

        /**
         * Constructs a new SendChatReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISendChatReq);

        /** SendChatReq Type. */
        public Type: number;

        /** SendChatReq Message. */
        public Message: string;

        /** SendChatReq MsgFrameId. */
        public MsgFrameId: number;

        /**
         * Creates a new SendChatReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendChatReq instance
         */
        public static create(properties?: gamesvr.ISendChatReq): gamesvr.SendChatReq;

        /**
         * Encodes the specified SendChatReq message. Does not implicitly {@link gamesvr.SendChatReq.verify|verify} messages.
         * @param message SendChatReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISendChatReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendChatReq message, length delimited. Does not implicitly {@link gamesvr.SendChatReq.verify|verify} messages.
         * @param message SendChatReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISendChatReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendChatReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendChatReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SendChatReq;

        /**
         * Decodes a SendChatReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendChatReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SendChatReq;

        /**
         * Verifies a SendChatReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendChatReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendChatReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SendChatReq;

        /**
         * Creates a plain object from a SendChatReq message. Also converts values to other types if specified.
         * @param message SendChatReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SendChatReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendChatReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SendChatRes. */
    interface ISendChatRes {
    }

    /** Represents a SendChatRes. */
    class SendChatRes implements ISendChatRes {

        /**
         * Constructs a new SendChatRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISendChatRes);

        /**
         * Creates a new SendChatRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendChatRes instance
         */
        public static create(properties?: gamesvr.ISendChatRes): gamesvr.SendChatRes;

        /**
         * Encodes the specified SendChatRes message. Does not implicitly {@link gamesvr.SendChatRes.verify|verify} messages.
         * @param message SendChatRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISendChatRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendChatRes message, length delimited. Does not implicitly {@link gamesvr.SendChatRes.verify|verify} messages.
         * @param message SendChatRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISendChatRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendChatRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendChatRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SendChatRes;

        /**
         * Decodes a SendChatRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendChatRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SendChatRes;

        /**
         * Verifies a SendChatRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendChatRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendChatRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SendChatRes;

        /**
         * Creates a plain object from a SendChatRes message. Also converts values to other types if specified.
         * @param message SendChatRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SendChatRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendChatRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChatMessageNotify. */
    interface IChatMessageNotify {

        /** ChatMessageNotify Type */
        Type?: (number|null);

        /** ChatMessageNotify ReceivedTime */
        ReceivedTime?: (number|Long|null);

        /** ChatMessageNotify Message */
        Message?: (string|null);

        /** ChatMessageNotify MsgFrameId */
        MsgFrameId?: (number|null);

        /** ChatMessageNotify UserInfo */
        UserInfo?: (data.IOtherData|null);
    }

    /** Represents a ChatMessageNotify. */
    class ChatMessageNotify implements IChatMessageNotify {

        /**
         * Constructs a new ChatMessageNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChatMessageNotify);

        /** ChatMessageNotify Type. */
        public Type: number;

        /** ChatMessageNotify ReceivedTime. */
        public ReceivedTime: (number|Long);

        /** ChatMessageNotify Message. */
        public Message: string;

        /** ChatMessageNotify MsgFrameId. */
        public MsgFrameId: number;

        /** ChatMessageNotify UserInfo. */
        public UserInfo?: (data.IOtherData|null);

        /**
         * Creates a new ChatMessageNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatMessageNotify instance
         */
        public static create(properties?: gamesvr.IChatMessageNotify): gamesvr.ChatMessageNotify;

        /**
         * Encodes the specified ChatMessageNotify message. Does not implicitly {@link gamesvr.ChatMessageNotify.verify|verify} messages.
         * @param message ChatMessageNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChatMessageNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChatMessageNotify message, length delimited. Does not implicitly {@link gamesvr.ChatMessageNotify.verify|verify} messages.
         * @param message ChatMessageNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChatMessageNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChatMessageNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatMessageNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChatMessageNotify;

        /**
         * Decodes a ChatMessageNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatMessageNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChatMessageNotify;

        /**
         * Verifies a ChatMessageNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatMessageNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatMessageNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChatMessageNotify;

        /**
         * Creates a plain object from a ChatMessageNotify message. Also converts values to other types if specified.
         * @param message ChatMessageNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChatMessageNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatMessageNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockUserReq. */
    interface IBlockUserReq {

        /** BlockUserReq UserInfo */
        UserInfo?: (data.IOtherData|null);
    }

    /** Represents a BlockUserReq. */
    class BlockUserReq implements IBlockUserReq {

        /**
         * Constructs a new BlockUserReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBlockUserReq);

        /** BlockUserReq UserInfo. */
        public UserInfo?: (data.IOtherData|null);

        /**
         * Creates a new BlockUserReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockUserReq instance
         */
        public static create(properties?: gamesvr.IBlockUserReq): gamesvr.BlockUserReq;

        /**
         * Encodes the specified BlockUserReq message. Does not implicitly {@link gamesvr.BlockUserReq.verify|verify} messages.
         * @param message BlockUserReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBlockUserReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockUserReq message, length delimited. Does not implicitly {@link gamesvr.BlockUserReq.verify|verify} messages.
         * @param message BlockUserReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBlockUserReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockUserReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockUserReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BlockUserReq;

        /**
         * Decodes a BlockUserReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockUserReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BlockUserReq;

        /**
         * Verifies a BlockUserReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockUserReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockUserReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BlockUserReq;

        /**
         * Creates a plain object from a BlockUserReq message. Also converts values to other types if specified.
         * @param message BlockUserReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BlockUserReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockUserReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BlockUserRes. */
    interface IBlockUserRes {

        /** BlockUserRes UserInfo */
        UserInfo?: (data.IOtherData|null);
    }

    /** Represents a BlockUserRes. */
    class BlockUserRes implements IBlockUserRes {

        /**
         * Constructs a new BlockUserRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBlockUserRes);

        /** BlockUserRes UserInfo. */
        public UserInfo?: (data.IOtherData|null);

        /**
         * Creates a new BlockUserRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BlockUserRes instance
         */
        public static create(properties?: gamesvr.IBlockUserRes): gamesvr.BlockUserRes;

        /**
         * Encodes the specified BlockUserRes message. Does not implicitly {@link gamesvr.BlockUserRes.verify|verify} messages.
         * @param message BlockUserRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBlockUserRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BlockUserRes message, length delimited. Does not implicitly {@link gamesvr.BlockUserRes.verify|verify} messages.
         * @param message BlockUserRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBlockUserRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BlockUserRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BlockUserRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BlockUserRes;

        /**
         * Decodes a BlockUserRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BlockUserRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BlockUserRes;

        /**
         * Verifies a BlockUserRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BlockUserRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BlockUserRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BlockUserRes;

        /**
         * Creates a plain object from a BlockUserRes message. Also converts values to other types if specified.
         * @param message BlockUserRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BlockUserRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BlockUserRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveBlockedReq. */
    interface IRemoveBlockedReq {

        /** RemoveBlockedReq UserID */
        UserID?: (string|null);
    }

    /** Represents a RemoveBlockedReq. */
    class RemoveBlockedReq implements IRemoveBlockedReq {

        /**
         * Constructs a new RemoveBlockedReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRemoveBlockedReq);

        /** RemoveBlockedReq UserID. */
        public UserID: string;

        /**
         * Creates a new RemoveBlockedReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveBlockedReq instance
         */
        public static create(properties?: gamesvr.IRemoveBlockedReq): gamesvr.RemoveBlockedReq;

        /**
         * Encodes the specified RemoveBlockedReq message. Does not implicitly {@link gamesvr.RemoveBlockedReq.verify|verify} messages.
         * @param message RemoveBlockedReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRemoveBlockedReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveBlockedReq message, length delimited. Does not implicitly {@link gamesvr.RemoveBlockedReq.verify|verify} messages.
         * @param message RemoveBlockedReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRemoveBlockedReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveBlockedReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveBlockedReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RemoveBlockedReq;

        /**
         * Decodes a RemoveBlockedReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveBlockedReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RemoveBlockedReq;

        /**
         * Verifies a RemoveBlockedReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveBlockedReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveBlockedReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RemoveBlockedReq;

        /**
         * Creates a plain object from a RemoveBlockedReq message. Also converts values to other types if specified.
         * @param message RemoveBlockedReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RemoveBlockedReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveBlockedReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RemoveBlockedRes. */
    interface IRemoveBlockedRes {

        /** RemoveBlockedRes UserID */
        UserID?: (string|null);
    }

    /** Represents a RemoveBlockedRes. */
    class RemoveBlockedRes implements IRemoveBlockedRes {

        /**
         * Constructs a new RemoveBlockedRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRemoveBlockedRes);

        /** RemoveBlockedRes UserID. */
        public UserID: string;

        /**
         * Creates a new RemoveBlockedRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveBlockedRes instance
         */
        public static create(properties?: gamesvr.IRemoveBlockedRes): gamesvr.RemoveBlockedRes;

        /**
         * Encodes the specified RemoveBlockedRes message. Does not implicitly {@link gamesvr.RemoveBlockedRes.verify|verify} messages.
         * @param message RemoveBlockedRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRemoveBlockedRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveBlockedRes message, length delimited. Does not implicitly {@link gamesvr.RemoveBlockedRes.verify|verify} messages.
         * @param message RemoveBlockedRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRemoveBlockedRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveBlockedRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveBlockedRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RemoveBlockedRes;

        /**
         * Decodes a RemoveBlockedRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveBlockedRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RemoveBlockedRes;

        /**
         * Verifies a RemoveBlockedRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveBlockedRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveBlockedRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RemoveBlockedRes;

        /**
         * Creates a plain object from a RemoveBlockedRes message. Also converts values to other types if specified.
         * @param message RemoveBlockedRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RemoveBlockedRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveBlockedRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionRefreshTaskNotify. */
    interface IDivineExpeditionRefreshTaskNotify {

        /** DivineExpeditionRefreshTaskNotify DivineExpeditionTaskMap */
        DivineExpeditionTaskMap?: ({ [k: string]: data.IDivineExpeditionTask }|null);
    }

    /** Represents a DivineExpeditionRefreshTaskNotify. */
    class DivineExpeditionRefreshTaskNotify implements IDivineExpeditionRefreshTaskNotify {

        /**
         * Constructs a new DivineExpeditionRefreshTaskNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionRefreshTaskNotify);

        /** DivineExpeditionRefreshTaskNotify DivineExpeditionTaskMap. */
        public DivineExpeditionTaskMap: { [k: string]: data.IDivineExpeditionTask };

        /**
         * Creates a new DivineExpeditionRefreshTaskNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionRefreshTaskNotify instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionRefreshTaskNotify): gamesvr.DivineExpeditionRefreshTaskNotify;

        /**
         * Encodes the specified DivineExpeditionRefreshTaskNotify message. Does not implicitly {@link gamesvr.DivineExpeditionRefreshTaskNotify.verify|verify} messages.
         * @param message DivineExpeditionRefreshTaskNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionRefreshTaskNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionRefreshTaskNotify message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionRefreshTaskNotify.verify|verify} messages.
         * @param message DivineExpeditionRefreshTaskNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionRefreshTaskNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionRefreshTaskNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionRefreshTaskNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionRefreshTaskNotify;

        /**
         * Decodes a DivineExpeditionRefreshTaskNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionRefreshTaskNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionRefreshTaskNotify;

        /**
         * Verifies a DivineExpeditionRefreshTaskNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionRefreshTaskNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionRefreshTaskNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionRefreshTaskNotify;

        /**
         * Creates a plain object from a DivineExpeditionRefreshTaskNotify message. Also converts values to other types if specified.
         * @param message DivineExpeditionRefreshTaskNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionRefreshTaskNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionRefreshTaskNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionJoinTask. */
    interface IDivineExpeditionJoinTask {

        /** DivineExpeditionJoinTask Seq */
        Seq?: (number|null);

        /** DivineExpeditionJoinTask HeroIDList */
        HeroIDList?: (number[]|null);
    }

    /** Represents a DivineExpeditionJoinTask. */
    class DivineExpeditionJoinTask implements IDivineExpeditionJoinTask {

        /**
         * Constructs a new DivineExpeditionJoinTask.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionJoinTask);

        /** DivineExpeditionJoinTask Seq. */
        public Seq: number;

        /** DivineExpeditionJoinTask HeroIDList. */
        public HeroIDList: number[];

        /**
         * Creates a new DivineExpeditionJoinTask instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionJoinTask instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionJoinTask): gamesvr.DivineExpeditionJoinTask;

        /**
         * Encodes the specified DivineExpeditionJoinTask message. Does not implicitly {@link gamesvr.DivineExpeditionJoinTask.verify|verify} messages.
         * @param message DivineExpeditionJoinTask message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionJoinTask, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionJoinTask message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionJoinTask.verify|verify} messages.
         * @param message DivineExpeditionJoinTask message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionJoinTask, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionJoinTask message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionJoinTask
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionJoinTask;

        /**
         * Decodes a DivineExpeditionJoinTask message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionJoinTask
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionJoinTask;

        /**
         * Verifies a DivineExpeditionJoinTask message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionJoinTask message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionJoinTask
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionJoinTask;

        /**
         * Creates a plain object from a DivineExpeditionJoinTask message. Also converts values to other types if specified.
         * @param message DivineExpeditionJoinTask
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionJoinTask, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionJoinTask to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionJoinReq. */
    interface IDivineExpeditionJoinReq {

        /** DivineExpeditionJoinReq DivineExpeditionJoinTaskList */
        DivineExpeditionJoinTaskList?: (gamesvr.IDivineExpeditionJoinTask[]|null);
    }

    /** Represents a DivineExpeditionJoinReq. */
    class DivineExpeditionJoinReq implements IDivineExpeditionJoinReq {

        /**
         * Constructs a new DivineExpeditionJoinReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionJoinReq);

        /** DivineExpeditionJoinReq DivineExpeditionJoinTaskList. */
        public DivineExpeditionJoinTaskList: gamesvr.IDivineExpeditionJoinTask[];

        /**
         * Creates a new DivineExpeditionJoinReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionJoinReq instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionJoinReq): gamesvr.DivineExpeditionJoinReq;

        /**
         * Encodes the specified DivineExpeditionJoinReq message. Does not implicitly {@link gamesvr.DivineExpeditionJoinReq.verify|verify} messages.
         * @param message DivineExpeditionJoinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionJoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionJoinReq message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionJoinReq.verify|verify} messages.
         * @param message DivineExpeditionJoinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionJoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionJoinReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionJoinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionJoinReq;

        /**
         * Decodes a DivineExpeditionJoinReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionJoinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionJoinReq;

        /**
         * Verifies a DivineExpeditionJoinReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionJoinReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionJoinReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionJoinReq;

        /**
         * Creates a plain object from a DivineExpeditionJoinReq message. Also converts values to other types if specified.
         * @param message DivineExpeditionJoinReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionJoinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionJoinReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionJoinRes. */
    interface IDivineExpeditionJoinRes {

        /** DivineExpeditionJoinRes DivineExpeditionTaskMap */
        DivineExpeditionTaskMap?: ({ [k: string]: data.IDivineExpeditionTask }|null);
    }

    /** Represents a DivineExpeditionJoinRes. */
    class DivineExpeditionJoinRes implements IDivineExpeditionJoinRes {

        /**
         * Constructs a new DivineExpeditionJoinRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionJoinRes);

        /** DivineExpeditionJoinRes DivineExpeditionTaskMap. */
        public DivineExpeditionTaskMap: { [k: string]: data.IDivineExpeditionTask };

        /**
         * Creates a new DivineExpeditionJoinRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionJoinRes instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionJoinRes): gamesvr.DivineExpeditionJoinRes;

        /**
         * Encodes the specified DivineExpeditionJoinRes message. Does not implicitly {@link gamesvr.DivineExpeditionJoinRes.verify|verify} messages.
         * @param message DivineExpeditionJoinRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionJoinRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionJoinRes message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionJoinRes.verify|verify} messages.
         * @param message DivineExpeditionJoinRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionJoinRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionJoinRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionJoinRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionJoinRes;

        /**
         * Decodes a DivineExpeditionJoinRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionJoinRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionJoinRes;

        /**
         * Verifies a DivineExpeditionJoinRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionJoinRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionJoinRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionJoinRes;

        /**
         * Creates a plain object from a DivineExpeditionJoinRes message. Also converts values to other types if specified.
         * @param message DivineExpeditionJoinRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionJoinRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionJoinRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionReceiveRewardReq. */
    interface IDivineExpeditionReceiveRewardReq {

        /** DivineExpeditionReceiveRewardReq ReceiveSeqList */
        ReceiveSeqList?: (number[]|null);
    }

    /** Represents a DivineExpeditionReceiveRewardReq. */
    class DivineExpeditionReceiveRewardReq implements IDivineExpeditionReceiveRewardReq {

        /**
         * Constructs a new DivineExpeditionReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionReceiveRewardReq);

        /** DivineExpeditionReceiveRewardReq ReceiveSeqList. */
        public ReceiveSeqList: number[];

        /**
         * Creates a new DivineExpeditionReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionReceiveRewardReq): gamesvr.DivineExpeditionReceiveRewardReq;

        /**
         * Encodes the specified DivineExpeditionReceiveRewardReq message. Does not implicitly {@link gamesvr.DivineExpeditionReceiveRewardReq.verify|verify} messages.
         * @param message DivineExpeditionReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionReceiveRewardReq.verify|verify} messages.
         * @param message DivineExpeditionReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionReceiveRewardReq;

        /**
         * Decodes a DivineExpeditionReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionReceiveRewardReq;

        /**
         * Verifies a DivineExpeditionReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionReceiveRewardReq;

        /**
         * Creates a plain object from a DivineExpeditionReceiveRewardReq message. Also converts values to other types if specified.
         * @param message DivineExpeditionReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionReceiveRewardRes. */
    interface IDivineExpeditionReceiveRewardRes {

        /** DivineExpeditionReceiveRewardRes ReceiveSeqList */
        ReceiveSeqList?: (number[]|null);

        /** DivineExpeditionReceiveRewardRes Level */
        Level?: (number|null);

        /** DivineExpeditionReceiveRewardRes LevelFinishTaskCount */
        LevelFinishTaskCount?: (number|null);

        /** DivineExpeditionReceiveRewardRes Exp */
        Exp?: (number|null);

        /** DivineExpeditionReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** DivineExpeditionReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a DivineExpeditionReceiveRewardRes. */
    class DivineExpeditionReceiveRewardRes implements IDivineExpeditionReceiveRewardRes {

        /**
         * Constructs a new DivineExpeditionReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionReceiveRewardRes);

        /** DivineExpeditionReceiveRewardRes ReceiveSeqList. */
        public ReceiveSeqList: number[];

        /** DivineExpeditionReceiveRewardRes Level. */
        public Level: number;

        /** DivineExpeditionReceiveRewardRes LevelFinishTaskCount. */
        public LevelFinishTaskCount: number;

        /** DivineExpeditionReceiveRewardRes Exp. */
        public Exp: number;

        /** DivineExpeditionReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** DivineExpeditionReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new DivineExpeditionReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionReceiveRewardRes): gamesvr.DivineExpeditionReceiveRewardRes;

        /**
         * Encodes the specified DivineExpeditionReceiveRewardRes message. Does not implicitly {@link gamesvr.DivineExpeditionReceiveRewardRes.verify|verify} messages.
         * @param message DivineExpeditionReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionReceiveRewardRes.verify|verify} messages.
         * @param message DivineExpeditionReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionReceiveRewardRes;

        /**
         * Decodes a DivineExpeditionReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionReceiveRewardRes;

        /**
         * Verifies a DivineExpeditionReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionReceiveRewardRes;

        /**
         * Creates a plain object from a DivineExpeditionReceiveRewardRes message. Also converts values to other types if specified.
         * @param message DivineExpeditionReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionResetTaskReq. */
    interface IDivineExpeditionResetTaskReq {
    }

    /** Represents a DivineExpeditionResetTaskReq. */
    class DivineExpeditionResetTaskReq implements IDivineExpeditionResetTaskReq {

        /**
         * Constructs a new DivineExpeditionResetTaskReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionResetTaskReq);

        /**
         * Creates a new DivineExpeditionResetTaskReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionResetTaskReq instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionResetTaskReq): gamesvr.DivineExpeditionResetTaskReq;

        /**
         * Encodes the specified DivineExpeditionResetTaskReq message. Does not implicitly {@link gamesvr.DivineExpeditionResetTaskReq.verify|verify} messages.
         * @param message DivineExpeditionResetTaskReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionResetTaskReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionResetTaskReq message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionResetTaskReq.verify|verify} messages.
         * @param message DivineExpeditionResetTaskReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionResetTaskReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionResetTaskReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionResetTaskReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionResetTaskReq;

        /**
         * Decodes a DivineExpeditionResetTaskReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionResetTaskReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionResetTaskReq;

        /**
         * Verifies a DivineExpeditionResetTaskReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionResetTaskReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionResetTaskReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionResetTaskReq;

        /**
         * Creates a plain object from a DivineExpeditionResetTaskReq message. Also converts values to other types if specified.
         * @param message DivineExpeditionResetTaskReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionResetTaskReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionResetTaskReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionResetTaskRes. */
    interface IDivineExpeditionResetTaskRes {

        /** DivineExpeditionResetTaskRes ClearSeqList */
        ClearSeqList?: (number[]|null);

        /** DivineExpeditionResetTaskRes DivineExpeditionTaskMap */
        DivineExpeditionTaskMap?: ({ [k: string]: data.IDivineExpeditionTask }|null);
    }

    /** Represents a DivineExpeditionResetTaskRes. */
    class DivineExpeditionResetTaskRes implements IDivineExpeditionResetTaskRes {

        /**
         * Constructs a new DivineExpeditionResetTaskRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionResetTaskRes);

        /** DivineExpeditionResetTaskRes ClearSeqList. */
        public ClearSeqList: number[];

        /** DivineExpeditionResetTaskRes DivineExpeditionTaskMap. */
        public DivineExpeditionTaskMap: { [k: string]: data.IDivineExpeditionTask };

        /**
         * Creates a new DivineExpeditionResetTaskRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionResetTaskRes instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionResetTaskRes): gamesvr.DivineExpeditionResetTaskRes;

        /**
         * Encodes the specified DivineExpeditionResetTaskRes message. Does not implicitly {@link gamesvr.DivineExpeditionResetTaskRes.verify|verify} messages.
         * @param message DivineExpeditionResetTaskRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionResetTaskRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionResetTaskRes message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionResetTaskRes.verify|verify} messages.
         * @param message DivineExpeditionResetTaskRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionResetTaskRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionResetTaskRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionResetTaskRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionResetTaskRes;

        /**
         * Decodes a DivineExpeditionResetTaskRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionResetTaskRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionResetTaskRes;

        /**
         * Verifies a DivineExpeditionResetTaskRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionResetTaskRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionResetTaskRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionResetTaskRes;

        /**
         * Creates a plain object from a DivineExpeditionResetTaskRes message. Also converts values to other types if specified.
         * @param message DivineExpeditionResetTaskRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionResetTaskRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionResetTaskRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionRecallReq. */
    interface IDivineExpeditionRecallReq {

        /** DivineExpeditionRecallReq Seq */
        Seq?: (number|null);
    }

    /** Represents a DivineExpeditionRecallReq. */
    class DivineExpeditionRecallReq implements IDivineExpeditionRecallReq {

        /**
         * Constructs a new DivineExpeditionRecallReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionRecallReq);

        /** DivineExpeditionRecallReq Seq. */
        public Seq: number;

        /**
         * Creates a new DivineExpeditionRecallReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionRecallReq instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionRecallReq): gamesvr.DivineExpeditionRecallReq;

        /**
         * Encodes the specified DivineExpeditionRecallReq message. Does not implicitly {@link gamesvr.DivineExpeditionRecallReq.verify|verify} messages.
         * @param message DivineExpeditionRecallReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionRecallReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionRecallReq message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionRecallReq.verify|verify} messages.
         * @param message DivineExpeditionRecallReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionRecallReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionRecallReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionRecallReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionRecallReq;

        /**
         * Decodes a DivineExpeditionRecallReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionRecallReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionRecallReq;

        /**
         * Verifies a DivineExpeditionRecallReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionRecallReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionRecallReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionRecallReq;

        /**
         * Creates a plain object from a DivineExpeditionRecallReq message. Also converts values to other types if specified.
         * @param message DivineExpeditionRecallReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionRecallReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionRecallReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DivineExpeditionRecallRes. */
    interface IDivineExpeditionRecallRes {

        /** DivineExpeditionRecallRes Seq */
        Seq?: (number|null);
    }

    /** Represents a DivineExpeditionRecallRes. */
    class DivineExpeditionRecallRes implements IDivineExpeditionRecallRes {

        /**
         * Constructs a new DivineExpeditionRecallRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDivineExpeditionRecallRes);

        /** DivineExpeditionRecallRes Seq. */
        public Seq: number;

        /**
         * Creates a new DivineExpeditionRecallRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DivineExpeditionRecallRes instance
         */
        public static create(properties?: gamesvr.IDivineExpeditionRecallRes): gamesvr.DivineExpeditionRecallRes;

        /**
         * Encodes the specified DivineExpeditionRecallRes message. Does not implicitly {@link gamesvr.DivineExpeditionRecallRes.verify|verify} messages.
         * @param message DivineExpeditionRecallRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDivineExpeditionRecallRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DivineExpeditionRecallRes message, length delimited. Does not implicitly {@link gamesvr.DivineExpeditionRecallRes.verify|verify} messages.
         * @param message DivineExpeditionRecallRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDivineExpeditionRecallRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DivineExpeditionRecallRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DivineExpeditionRecallRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DivineExpeditionRecallRes;

        /**
         * Decodes a DivineExpeditionRecallRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DivineExpeditionRecallRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DivineExpeditionRecallRes;

        /**
         * Verifies a DivineExpeditionRecallRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DivineExpeditionRecallRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DivineExpeditionRecallRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DivineExpeditionRecallRes;

        /**
         * Creates a plain object from a DivineExpeditionRecallRes message. Also converts values to other types if specified.
         * @param message DivineExpeditionRecallRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DivineExpeditionRecallRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DivineExpeditionRecallRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardViewRewardReq. */
    interface IEpochRewardViewRewardReq {

        /** EpochRewardViewRewardReq ThemeID */
        ThemeID?: (number|null);
    }

    /** Represents an EpochRewardViewRewardReq. */
    class EpochRewardViewRewardReq implements IEpochRewardViewRewardReq {

        /**
         * Constructs a new EpochRewardViewRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochRewardViewRewardReq);

        /** EpochRewardViewRewardReq ThemeID. */
        public ThemeID: number;

        /**
         * Creates a new EpochRewardViewRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardViewRewardReq instance
         */
        public static create(properties?: gamesvr.IEpochRewardViewRewardReq): gamesvr.EpochRewardViewRewardReq;

        /**
         * Encodes the specified EpochRewardViewRewardReq message. Does not implicitly {@link gamesvr.EpochRewardViewRewardReq.verify|verify} messages.
         * @param message EpochRewardViewRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochRewardViewRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardViewRewardReq message, length delimited. Does not implicitly {@link gamesvr.EpochRewardViewRewardReq.verify|verify} messages.
         * @param message EpochRewardViewRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochRewardViewRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardViewRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardViewRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochRewardViewRewardReq;

        /**
         * Decodes an EpochRewardViewRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardViewRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochRewardViewRewardReq;

        /**
         * Verifies an EpochRewardViewRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardViewRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardViewRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochRewardViewRewardReq;

        /**
         * Creates a plain object from an EpochRewardViewRewardReq message. Also converts values to other types if specified.
         * @param message EpochRewardViewRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochRewardViewRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardViewRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardViewRewardRes. */
    interface IEpochRewardViewRewardRes {

        /** EpochRewardViewRewardRes ThemeID */
        ThemeID?: (number|null);

        /** EpochRewardViewRewardRes EpochRewardThemeUnit */
        EpochRewardThemeUnit?: (data.IEpochRewardTheme|null);

        /** EpochRewardViewRewardRes UniversalViewOtherMap */
        UniversalViewOtherMap?: ({ [k: string]: data.IUniversalViewOtherData }|null);
    }

    /** Represents an EpochRewardViewRewardRes. */
    class EpochRewardViewRewardRes implements IEpochRewardViewRewardRes {

        /**
         * Constructs a new EpochRewardViewRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochRewardViewRewardRes);

        /** EpochRewardViewRewardRes ThemeID. */
        public ThemeID: number;

        /** EpochRewardViewRewardRes EpochRewardThemeUnit. */
        public EpochRewardThemeUnit?: (data.IEpochRewardTheme|null);

        /** EpochRewardViewRewardRes UniversalViewOtherMap. */
        public UniversalViewOtherMap: { [k: string]: data.IUniversalViewOtherData };

        /**
         * Creates a new EpochRewardViewRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardViewRewardRes instance
         */
        public static create(properties?: gamesvr.IEpochRewardViewRewardRes): gamesvr.EpochRewardViewRewardRes;

        /**
         * Encodes the specified EpochRewardViewRewardRes message. Does not implicitly {@link gamesvr.EpochRewardViewRewardRes.verify|verify} messages.
         * @param message EpochRewardViewRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochRewardViewRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardViewRewardRes message, length delimited. Does not implicitly {@link gamesvr.EpochRewardViewRewardRes.verify|verify} messages.
         * @param message EpochRewardViewRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochRewardViewRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardViewRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardViewRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochRewardViewRewardRes;

        /**
         * Decodes an EpochRewardViewRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardViewRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochRewardViewRewardRes;

        /**
         * Verifies an EpochRewardViewRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardViewRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardViewRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochRewardViewRewardRes;

        /**
         * Creates a plain object from an EpochRewardViewRewardRes message. Also converts values to other types if specified.
         * @param message EpochRewardViewRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochRewardViewRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardViewRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardReceiveRewardReq. */
    interface IEpochRewardReceiveRewardReq {

        /** EpochRewardReceiveRewardReq RankRewardIDList */
        RankRewardIDList?: (number[]|null);
    }

    /** Represents an EpochRewardReceiveRewardReq. */
    class EpochRewardReceiveRewardReq implements IEpochRewardReceiveRewardReq {

        /**
         * Constructs a new EpochRewardReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochRewardReceiveRewardReq);

        /** EpochRewardReceiveRewardReq RankRewardIDList. */
        public RankRewardIDList: number[];

        /**
         * Creates a new EpochRewardReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IEpochRewardReceiveRewardReq): gamesvr.EpochRewardReceiveRewardReq;

        /**
         * Encodes the specified EpochRewardReceiveRewardReq message. Does not implicitly {@link gamesvr.EpochRewardReceiveRewardReq.verify|verify} messages.
         * @param message EpochRewardReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochRewardReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.EpochRewardReceiveRewardReq.verify|verify} messages.
         * @param message EpochRewardReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochRewardReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochRewardReceiveRewardReq;

        /**
         * Decodes an EpochRewardReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochRewardReceiveRewardReq;

        /**
         * Verifies an EpochRewardReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochRewardReceiveRewardReq;

        /**
         * Creates a plain object from an EpochRewardReceiveRewardReq message. Also converts values to other types if specified.
         * @param message EpochRewardReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochRewardReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochRewardReceiveRewardRes. */
    interface IEpochRewardReceiveRewardRes {

        /** EpochRewardReceiveRewardRes RankRewardIDList */
        RankRewardIDList?: (number[]|null);

        /** EpochRewardReceiveRewardRes Exp */
        Exp?: (number|null);

        /** EpochRewardReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** EpochRewardReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an EpochRewardReceiveRewardRes. */
    class EpochRewardReceiveRewardRes implements IEpochRewardReceiveRewardRes {

        /**
         * Constructs a new EpochRewardReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochRewardReceiveRewardRes);

        /** EpochRewardReceiveRewardRes RankRewardIDList. */
        public RankRewardIDList: number[];

        /** EpochRewardReceiveRewardRes Exp. */
        public Exp: number;

        /** EpochRewardReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** EpochRewardReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new EpochRewardReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochRewardReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IEpochRewardReceiveRewardRes): gamesvr.EpochRewardReceiveRewardRes;

        /**
         * Encodes the specified EpochRewardReceiveRewardRes message. Does not implicitly {@link gamesvr.EpochRewardReceiveRewardRes.verify|verify} messages.
         * @param message EpochRewardReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochRewardReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochRewardReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.EpochRewardReceiveRewardRes.verify|verify} messages.
         * @param message EpochRewardReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochRewardReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochRewardReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochRewardReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochRewardReceiveRewardRes;

        /**
         * Decodes an EpochRewardReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochRewardReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochRewardReceiveRewardRes;

        /**
         * Verifies an EpochRewardReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochRewardReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochRewardReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochRewardReceiveRewardRes;

        /**
         * Creates a plain object from an EpochRewardReceiveRewardRes message. Also converts values to other types if specified.
         * @param message EpochRewardReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochRewardReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochRewardReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochStrategyViewStrongDegreeReq. */
    interface IEpochStrategyViewStrongDegreeReq {
    }

    /** Represents an EpochStrategyViewStrongDegreeReq. */
    class EpochStrategyViewStrongDegreeReq implements IEpochStrategyViewStrongDegreeReq {

        /**
         * Constructs a new EpochStrategyViewStrongDegreeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochStrategyViewStrongDegreeReq);

        /**
         * Creates a new EpochStrategyViewStrongDegreeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochStrategyViewStrongDegreeReq instance
         */
        public static create(properties?: gamesvr.IEpochStrategyViewStrongDegreeReq): gamesvr.EpochStrategyViewStrongDegreeReq;

        /**
         * Encodes the specified EpochStrategyViewStrongDegreeReq message. Does not implicitly {@link gamesvr.EpochStrategyViewStrongDegreeReq.verify|verify} messages.
         * @param message EpochStrategyViewStrongDegreeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochStrategyViewStrongDegreeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochStrategyViewStrongDegreeReq message, length delimited. Does not implicitly {@link gamesvr.EpochStrategyViewStrongDegreeReq.verify|verify} messages.
         * @param message EpochStrategyViewStrongDegreeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochStrategyViewStrongDegreeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochStrategyViewStrongDegreeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochStrategyViewStrongDegreeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochStrategyViewStrongDegreeReq;

        /**
         * Decodes an EpochStrategyViewStrongDegreeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochStrategyViewStrongDegreeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochStrategyViewStrongDegreeReq;

        /**
         * Verifies an EpochStrategyViewStrongDegreeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochStrategyViewStrongDegreeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochStrategyViewStrongDegreeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochStrategyViewStrongDegreeReq;

        /**
         * Creates a plain object from an EpochStrategyViewStrongDegreeReq message. Also converts values to other types if specified.
         * @param message EpochStrategyViewStrongDegreeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochStrategyViewStrongDegreeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochStrategyViewStrongDegreeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochStrategyViewStrongDegreeRes. */
    interface IEpochStrategyViewStrongDegreeRes {

        /** EpochStrategyViewStrongDegreeRes DegreeMap */
        DegreeMap?: ({ [k: string]: number }|null);
    }

    /** Represents an EpochStrategyViewStrongDegreeRes. */
    class EpochStrategyViewStrongDegreeRes implements IEpochStrategyViewStrongDegreeRes {

        /**
         * Constructs a new EpochStrategyViewStrongDegreeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochStrategyViewStrongDegreeRes);

        /** EpochStrategyViewStrongDegreeRes DegreeMap. */
        public DegreeMap: { [k: string]: number };

        /**
         * Creates a new EpochStrategyViewStrongDegreeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochStrategyViewStrongDegreeRes instance
         */
        public static create(properties?: gamesvr.IEpochStrategyViewStrongDegreeRes): gamesvr.EpochStrategyViewStrongDegreeRes;

        /**
         * Encodes the specified EpochStrategyViewStrongDegreeRes message. Does not implicitly {@link gamesvr.EpochStrategyViewStrongDegreeRes.verify|verify} messages.
         * @param message EpochStrategyViewStrongDegreeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochStrategyViewStrongDegreeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochStrategyViewStrongDegreeRes message, length delimited. Does not implicitly {@link gamesvr.EpochStrategyViewStrongDegreeRes.verify|verify} messages.
         * @param message EpochStrategyViewStrongDegreeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochStrategyViewStrongDegreeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochStrategyViewStrongDegreeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochStrategyViewStrongDegreeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochStrategyViewStrongDegreeRes;

        /**
         * Decodes an EpochStrategyViewStrongDegreeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochStrategyViewStrongDegreeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochStrategyViewStrongDegreeRes;

        /**
         * Verifies an EpochStrategyViewStrongDegreeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochStrategyViewStrongDegreeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochStrategyViewStrongDegreeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochStrategyViewStrongDegreeRes;

        /**
         * Creates a plain object from an EpochStrategyViewStrongDegreeRes message. Also converts values to other types if specified.
         * @param message EpochStrategyViewStrongDegreeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochStrategyViewStrongDegreeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochStrategyViewStrongDegreeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochStrategyViewHeroDegreeReq. */
    interface IEpochStrategyViewHeroDegreeReq {

        /** EpochStrategyViewHeroDegreeReq HeroID */
        HeroID?: (number|null);
    }

    /** Represents an EpochStrategyViewHeroDegreeReq. */
    class EpochStrategyViewHeroDegreeReq implements IEpochStrategyViewHeroDegreeReq {

        /**
         * Constructs a new EpochStrategyViewHeroDegreeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochStrategyViewHeroDegreeReq);

        /** EpochStrategyViewHeroDegreeReq HeroID. */
        public HeroID: number;

        /**
         * Creates a new EpochStrategyViewHeroDegreeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochStrategyViewHeroDegreeReq instance
         */
        public static create(properties?: gamesvr.IEpochStrategyViewHeroDegreeReq): gamesvr.EpochStrategyViewHeroDegreeReq;

        /**
         * Encodes the specified EpochStrategyViewHeroDegreeReq message. Does not implicitly {@link gamesvr.EpochStrategyViewHeroDegreeReq.verify|verify} messages.
         * @param message EpochStrategyViewHeroDegreeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochStrategyViewHeroDegreeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochStrategyViewHeroDegreeReq message, length delimited. Does not implicitly {@link gamesvr.EpochStrategyViewHeroDegreeReq.verify|verify} messages.
         * @param message EpochStrategyViewHeroDegreeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochStrategyViewHeroDegreeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochStrategyViewHeroDegreeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochStrategyViewHeroDegreeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochStrategyViewHeroDegreeReq;

        /**
         * Decodes an EpochStrategyViewHeroDegreeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochStrategyViewHeroDegreeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochStrategyViewHeroDegreeReq;

        /**
         * Verifies an EpochStrategyViewHeroDegreeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochStrategyViewHeroDegreeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochStrategyViewHeroDegreeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochStrategyViewHeroDegreeReq;

        /**
         * Creates a plain object from an EpochStrategyViewHeroDegreeReq message. Also converts values to other types if specified.
         * @param message EpochStrategyViewHeroDegreeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochStrategyViewHeroDegreeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochStrategyViewHeroDegreeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EpochStrategyViewHeroDegreeRes. */
    interface IEpochStrategyViewHeroDegreeRes {

        /** EpochStrategyViewHeroDegreeRes HeroID */
        HeroID?: (number|null);

        /** EpochStrategyViewHeroDegreeRes EpochStrategyHeroUnit */
        EpochStrategyHeroUnit?: (data.IEpochStrategyHero|null);
    }

    /** Represents an EpochStrategyViewHeroDegreeRes. */
    class EpochStrategyViewHeroDegreeRes implements IEpochStrategyViewHeroDegreeRes {

        /**
         * Constructs a new EpochStrategyViewHeroDegreeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEpochStrategyViewHeroDegreeRes);

        /** EpochStrategyViewHeroDegreeRes HeroID. */
        public HeroID: number;

        /** EpochStrategyViewHeroDegreeRes EpochStrategyHeroUnit. */
        public EpochStrategyHeroUnit?: (data.IEpochStrategyHero|null);

        /**
         * Creates a new EpochStrategyViewHeroDegreeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EpochStrategyViewHeroDegreeRes instance
         */
        public static create(properties?: gamesvr.IEpochStrategyViewHeroDegreeRes): gamesvr.EpochStrategyViewHeroDegreeRes;

        /**
         * Encodes the specified EpochStrategyViewHeroDegreeRes message. Does not implicitly {@link gamesvr.EpochStrategyViewHeroDegreeRes.verify|verify} messages.
         * @param message EpochStrategyViewHeroDegreeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEpochStrategyViewHeroDegreeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EpochStrategyViewHeroDegreeRes message, length delimited. Does not implicitly {@link gamesvr.EpochStrategyViewHeroDegreeRes.verify|verify} messages.
         * @param message EpochStrategyViewHeroDegreeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEpochStrategyViewHeroDegreeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EpochStrategyViewHeroDegreeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EpochStrategyViewHeroDegreeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EpochStrategyViewHeroDegreeRes;

        /**
         * Decodes an EpochStrategyViewHeroDegreeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EpochStrategyViewHeroDegreeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EpochStrategyViewHeroDegreeRes;

        /**
         * Verifies an EpochStrategyViewHeroDegreeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EpochStrategyViewHeroDegreeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EpochStrategyViewHeroDegreeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EpochStrategyViewHeroDegreeRes;

        /**
         * Creates a plain object from an EpochStrategyViewHeroDegreeRes message. Also converts values to other types if specified.
         * @param message EpochStrategyViewHeroDegreeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EpochStrategyViewHeroDegreeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EpochStrategyViewHeroDegreeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnhanceEquipmentReq. */
    interface IEnhanceEquipmentReq {

        /** EnhanceEquipmentReq Seq */
        Seq?: (number|Long|null);

        /** EnhanceEquipmentReq ID */
        ID?: (number|null);

        /** EnhanceEquipmentReq Items */
        Items?: (data.IBagUnit[]|null);
    }

    /** Represents an EnhanceEquipmentReq. */
    class EnhanceEquipmentReq implements IEnhanceEquipmentReq {

        /**
         * Constructs a new EnhanceEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnhanceEquipmentReq);

        /** EnhanceEquipmentReq Seq. */
        public Seq: (number|Long);

        /** EnhanceEquipmentReq ID. */
        public ID: number;

        /** EnhanceEquipmentReq Items. */
        public Items: data.IBagUnit[];

        /**
         * Creates a new EnhanceEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnhanceEquipmentReq instance
         */
        public static create(properties?: gamesvr.IEnhanceEquipmentReq): gamesvr.EnhanceEquipmentReq;

        /**
         * Encodes the specified EnhanceEquipmentReq message. Does not implicitly {@link gamesvr.EnhanceEquipmentReq.verify|verify} messages.
         * @param message EnhanceEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnhanceEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnhanceEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.EnhanceEquipmentReq.verify|verify} messages.
         * @param message EnhanceEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnhanceEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnhanceEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnhanceEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnhanceEquipmentReq;

        /**
         * Decodes an EnhanceEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnhanceEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnhanceEquipmentReq;

        /**
         * Verifies an EnhanceEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnhanceEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnhanceEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnhanceEquipmentReq;

        /**
         * Creates a plain object from an EnhanceEquipmentReq message. Also converts values to other types if specified.
         * @param message EnhanceEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnhanceEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnhanceEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnhanceEquipmentRes. */
    interface IEnhanceEquipmentRes {

        /** EnhanceEquipmentRes Seq */
        Seq?: (number|Long|null);

        /** EnhanceEquipmentRes ID */
        ID?: (number|null);

        /** EnhanceEquipmentRes Exp */
        Exp?: (number|null);
    }

    /** Represents an EnhanceEquipmentRes. */
    class EnhanceEquipmentRes implements IEnhanceEquipmentRes {

        /**
         * Constructs a new EnhanceEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnhanceEquipmentRes);

        /** EnhanceEquipmentRes Seq. */
        public Seq: (number|Long);

        /** EnhanceEquipmentRes ID. */
        public ID: number;

        /** EnhanceEquipmentRes Exp. */
        public Exp: number;

        /**
         * Creates a new EnhanceEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnhanceEquipmentRes instance
         */
        public static create(properties?: gamesvr.IEnhanceEquipmentRes): gamesvr.EnhanceEquipmentRes;

        /**
         * Encodes the specified EnhanceEquipmentRes message. Does not implicitly {@link gamesvr.EnhanceEquipmentRes.verify|verify} messages.
         * @param message EnhanceEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnhanceEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnhanceEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.EnhanceEquipmentRes.verify|verify} messages.
         * @param message EnhanceEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnhanceEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnhanceEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnhanceEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnhanceEquipmentRes;

        /**
         * Decodes an EnhanceEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnhanceEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnhanceEquipmentRes;

        /**
         * Verifies an EnhanceEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnhanceEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnhanceEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnhanceEquipmentRes;

        /**
         * Creates a plain object from an EnhanceEquipmentRes message. Also converts values to other types if specified.
         * @param message EnhanceEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnhanceEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnhanceEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreakEquipmentReq. */
    interface IBreakEquipmentReq {

        /** BreakEquipmentReq Seq */
        Seq?: (number|Long|null);

        /** BreakEquipmentReq ID */
        ID?: (number|null);

        /** BreakEquipmentReq Items */
        Items?: (data.IBagUnit[]|null);
    }

    /** Represents a BreakEquipmentReq. */
    class BreakEquipmentReq implements IBreakEquipmentReq {

        /**
         * Constructs a new BreakEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBreakEquipmentReq);

        /** BreakEquipmentReq Seq. */
        public Seq: (number|Long);

        /** BreakEquipmentReq ID. */
        public ID: number;

        /** BreakEquipmentReq Items. */
        public Items: data.IBagUnit[];

        /**
         * Creates a new BreakEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreakEquipmentReq instance
         */
        public static create(properties?: gamesvr.IBreakEquipmentReq): gamesvr.BreakEquipmentReq;

        /**
         * Encodes the specified BreakEquipmentReq message. Does not implicitly {@link gamesvr.BreakEquipmentReq.verify|verify} messages.
         * @param message BreakEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBreakEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreakEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.BreakEquipmentReq.verify|verify} messages.
         * @param message BreakEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBreakEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreakEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreakEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BreakEquipmentReq;

        /**
         * Decodes a BreakEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreakEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BreakEquipmentReq;

        /**
         * Verifies a BreakEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreakEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreakEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BreakEquipmentReq;

        /**
         * Creates a plain object from a BreakEquipmentReq message. Also converts values to other types if specified.
         * @param message BreakEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BreakEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreakEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BreakEquipmentRes. */
    interface IBreakEquipmentRes {

        /** BreakEquipmentRes Seq */
        Seq?: (number|Long|null);

        /** BreakEquipmentRes ID */
        ID?: (number|null);

        /** BreakEquipmentRes Star */
        Star?: (number|null);

        /** BreakEquipmentRes UseSelfCount */
        UseSelfCount?: (number|null);
    }

    /** Represents a BreakEquipmentRes. */
    class BreakEquipmentRes implements IBreakEquipmentRes {

        /**
         * Constructs a new BreakEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBreakEquipmentRes);

        /** BreakEquipmentRes Seq. */
        public Seq: (number|Long);

        /** BreakEquipmentRes ID. */
        public ID: number;

        /** BreakEquipmentRes Star. */
        public Star: number;

        /** BreakEquipmentRes UseSelfCount. */
        public UseSelfCount: number;

        /**
         * Creates a new BreakEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BreakEquipmentRes instance
         */
        public static create(properties?: gamesvr.IBreakEquipmentRes): gamesvr.BreakEquipmentRes;

        /**
         * Encodes the specified BreakEquipmentRes message. Does not implicitly {@link gamesvr.BreakEquipmentRes.verify|verify} messages.
         * @param message BreakEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBreakEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BreakEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.BreakEquipmentRes.verify|verify} messages.
         * @param message BreakEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBreakEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BreakEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BreakEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BreakEquipmentRes;

        /**
         * Decodes a BreakEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BreakEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BreakEquipmentRes;

        /**
         * Verifies a BreakEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BreakEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BreakEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BreakEquipmentRes;

        /**
         * Creates a plain object from a BreakEquipmentRes message. Also converts values to other types if specified.
         * @param message BreakEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BreakEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BreakEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AssignEquipmentReq. */
    interface IAssignEquipmentReq {
    }

    /** Represents an AssignEquipmentReq. */
    class AssignEquipmentReq implements IAssignEquipmentReq {

        /**
         * Constructs a new AssignEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAssignEquipmentReq);

        /**
         * Creates a new AssignEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AssignEquipmentReq instance
         */
        public static create(properties?: gamesvr.IAssignEquipmentReq): gamesvr.AssignEquipmentReq;

        /**
         * Encodes the specified AssignEquipmentReq message. Does not implicitly {@link gamesvr.AssignEquipmentReq.verify|verify} messages.
         * @param message AssignEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAssignEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AssignEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.AssignEquipmentReq.verify|verify} messages.
         * @param message AssignEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAssignEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AssignEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AssignEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AssignEquipmentReq;

        /**
         * Decodes an AssignEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AssignEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AssignEquipmentReq;

        /**
         * Verifies an AssignEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AssignEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AssignEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AssignEquipmentReq;

        /**
         * Creates a plain object from an AssignEquipmentReq message. Also converts values to other types if specified.
         * @param message AssignEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AssignEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AssignEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AssignEquipmentRes. */
    interface IAssignEquipmentRes {
    }

    /** Represents an AssignEquipmentRes. */
    class AssignEquipmentRes implements IAssignEquipmentRes {

        /**
         * Constructs a new AssignEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAssignEquipmentRes);

        /**
         * Creates a new AssignEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AssignEquipmentRes instance
         */
        public static create(properties?: gamesvr.IAssignEquipmentRes): gamesvr.AssignEquipmentRes;

        /**
         * Encodes the specified AssignEquipmentRes message. Does not implicitly {@link gamesvr.AssignEquipmentRes.verify|verify} messages.
         * @param message AssignEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAssignEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AssignEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.AssignEquipmentRes.verify|verify} messages.
         * @param message AssignEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAssignEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AssignEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AssignEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AssignEquipmentRes;

        /**
         * Decodes an AssignEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AssignEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AssignEquipmentRes;

        /**
         * Verifies an AssignEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AssignEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AssignEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AssignEquipmentRes;

        /**
         * Creates a plain object from an AssignEquipmentRes message. Also converts values to other types if specified.
         * @param message AssignEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AssignEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AssignEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CastSoulFoundEquipmentReq. */
    interface ICastSoulFoundEquipmentReq {

        /** CastSoulFoundEquipmentReq Seq */
        Seq?: (number|Long|null);

        /** CastSoulFoundEquipmentReq ID */
        ID?: (number|null);

        /** CastSoulFoundEquipmentReq ItemID */
        ItemID?: (number|null);
    }

    /** Represents a CastSoulFoundEquipmentReq. */
    class CastSoulFoundEquipmentReq implements ICastSoulFoundEquipmentReq {

        /**
         * Constructs a new CastSoulFoundEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICastSoulFoundEquipmentReq);

        /** CastSoulFoundEquipmentReq Seq. */
        public Seq: (number|Long);

        /** CastSoulFoundEquipmentReq ID. */
        public ID: number;

        /** CastSoulFoundEquipmentReq ItemID. */
        public ItemID: number;

        /**
         * Creates a new CastSoulFoundEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CastSoulFoundEquipmentReq instance
         */
        public static create(properties?: gamesvr.ICastSoulFoundEquipmentReq): gamesvr.CastSoulFoundEquipmentReq;

        /**
         * Encodes the specified CastSoulFoundEquipmentReq message. Does not implicitly {@link gamesvr.CastSoulFoundEquipmentReq.verify|verify} messages.
         * @param message CastSoulFoundEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICastSoulFoundEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CastSoulFoundEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.CastSoulFoundEquipmentReq.verify|verify} messages.
         * @param message CastSoulFoundEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICastSoulFoundEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CastSoulFoundEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CastSoulFoundEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CastSoulFoundEquipmentReq;

        /**
         * Decodes a CastSoulFoundEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CastSoulFoundEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CastSoulFoundEquipmentReq;

        /**
         * Verifies a CastSoulFoundEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CastSoulFoundEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CastSoulFoundEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CastSoulFoundEquipmentReq;

        /**
         * Creates a plain object from a CastSoulFoundEquipmentReq message. Also converts values to other types if specified.
         * @param message CastSoulFoundEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CastSoulFoundEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CastSoulFoundEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CastSoulFoundEquipmentRes. */
    interface ICastSoulFoundEquipmentRes {

        /** CastSoulFoundEquipmentRes Seq */
        Seq?: (number|Long|null);

        /** CastSoulFoundEquipmentRes ID */
        ID?: (number|null);

        /** CastSoulFoundEquipmentRes CastSoulPoolMap */
        CastSoulPoolMap?: ({ [k: string]: number }|null);
    }

    /** Represents a CastSoulFoundEquipmentRes. */
    class CastSoulFoundEquipmentRes implements ICastSoulFoundEquipmentRes {

        /**
         * Constructs a new CastSoulFoundEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICastSoulFoundEquipmentRes);

        /** CastSoulFoundEquipmentRes Seq. */
        public Seq: (number|Long);

        /** CastSoulFoundEquipmentRes ID. */
        public ID: number;

        /** CastSoulFoundEquipmentRes CastSoulPoolMap. */
        public CastSoulPoolMap: { [k: string]: number };

        /**
         * Creates a new CastSoulFoundEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CastSoulFoundEquipmentRes instance
         */
        public static create(properties?: gamesvr.ICastSoulFoundEquipmentRes): gamesvr.CastSoulFoundEquipmentRes;

        /**
         * Encodes the specified CastSoulFoundEquipmentRes message. Does not implicitly {@link gamesvr.CastSoulFoundEquipmentRes.verify|verify} messages.
         * @param message CastSoulFoundEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICastSoulFoundEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CastSoulFoundEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.CastSoulFoundEquipmentRes.verify|verify} messages.
         * @param message CastSoulFoundEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICastSoulFoundEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CastSoulFoundEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CastSoulFoundEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CastSoulFoundEquipmentRes;

        /**
         * Decodes a CastSoulFoundEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CastSoulFoundEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CastSoulFoundEquipmentRes;

        /**
         * Verifies a CastSoulFoundEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CastSoulFoundEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CastSoulFoundEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CastSoulFoundEquipmentRes;

        /**
         * Creates a plain object from a CastSoulFoundEquipmentRes message. Also converts values to other types if specified.
         * @param message CastSoulFoundEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CastSoulFoundEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CastSoulFoundEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CastSoulChooseEquipmentReq. */
    interface ICastSoulChooseEquipmentReq {

        /** CastSoulChooseEquipmentReq Seq */
        Seq?: (number|Long|null);

        /** CastSoulChooseEquipmentReq ID */
        ID?: (number|null);

        /** CastSoulChooseEquipmentReq CastSoulChooseMap */
        CastSoulChooseMap?: ({ [k: string]: number }|null);
    }

    /** Represents a CastSoulChooseEquipmentReq. */
    class CastSoulChooseEquipmentReq implements ICastSoulChooseEquipmentReq {

        /**
         * Constructs a new CastSoulChooseEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICastSoulChooseEquipmentReq);

        /** CastSoulChooseEquipmentReq Seq. */
        public Seq: (number|Long);

        /** CastSoulChooseEquipmentReq ID. */
        public ID: number;

        /** CastSoulChooseEquipmentReq CastSoulChooseMap. */
        public CastSoulChooseMap: { [k: string]: number };

        /**
         * Creates a new CastSoulChooseEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CastSoulChooseEquipmentReq instance
         */
        public static create(properties?: gamesvr.ICastSoulChooseEquipmentReq): gamesvr.CastSoulChooseEquipmentReq;

        /**
         * Encodes the specified CastSoulChooseEquipmentReq message. Does not implicitly {@link gamesvr.CastSoulChooseEquipmentReq.verify|verify} messages.
         * @param message CastSoulChooseEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICastSoulChooseEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CastSoulChooseEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.CastSoulChooseEquipmentReq.verify|verify} messages.
         * @param message CastSoulChooseEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICastSoulChooseEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CastSoulChooseEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CastSoulChooseEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CastSoulChooseEquipmentReq;

        /**
         * Decodes a CastSoulChooseEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CastSoulChooseEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CastSoulChooseEquipmentReq;

        /**
         * Verifies a CastSoulChooseEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CastSoulChooseEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CastSoulChooseEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CastSoulChooseEquipmentReq;

        /**
         * Creates a plain object from a CastSoulChooseEquipmentReq message. Also converts values to other types if specified.
         * @param message CastSoulChooseEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CastSoulChooseEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CastSoulChooseEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CastSoulChooseEquipmentRes. */
    interface ICastSoulChooseEquipmentRes {

        /** CastSoulChooseEquipmentRes Seq */
        Seq?: (number|Long|null);

        /** CastSoulChooseEquipmentRes ID */
        ID?: (number|null);

        /** CastSoulChooseEquipmentRes CastSoulPoolMap */
        CastSoulPoolMap?: ({ [k: string]: number }|null);

        /** CastSoulChooseEquipmentRes CastSoulChooseMap */
        CastSoulChooseMap?: ({ [k: string]: number }|null);
    }

    /** Represents a CastSoulChooseEquipmentRes. */
    class CastSoulChooseEquipmentRes implements ICastSoulChooseEquipmentRes {

        /**
         * Constructs a new CastSoulChooseEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICastSoulChooseEquipmentRes);

        /** CastSoulChooseEquipmentRes Seq. */
        public Seq: (number|Long);

        /** CastSoulChooseEquipmentRes ID. */
        public ID: number;

        /** CastSoulChooseEquipmentRes CastSoulPoolMap. */
        public CastSoulPoolMap: { [k: string]: number };

        /** CastSoulChooseEquipmentRes CastSoulChooseMap. */
        public CastSoulChooseMap: { [k: string]: number };

        /**
         * Creates a new CastSoulChooseEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CastSoulChooseEquipmentRes instance
         */
        public static create(properties?: gamesvr.ICastSoulChooseEquipmentRes): gamesvr.CastSoulChooseEquipmentRes;

        /**
         * Encodes the specified CastSoulChooseEquipmentRes message. Does not implicitly {@link gamesvr.CastSoulChooseEquipmentRes.verify|verify} messages.
         * @param message CastSoulChooseEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICastSoulChooseEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CastSoulChooseEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.CastSoulChooseEquipmentRes.verify|verify} messages.
         * @param message CastSoulChooseEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICastSoulChooseEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CastSoulChooseEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CastSoulChooseEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CastSoulChooseEquipmentRes;

        /**
         * Decodes a CastSoulChooseEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CastSoulChooseEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CastSoulChooseEquipmentRes;

        /**
         * Verifies a CastSoulChooseEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CastSoulChooseEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CastSoulChooseEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CastSoulChooseEquipmentRes;

        /**
         * Creates a plain object from a CastSoulChooseEquipmentRes message. Also converts values to other types if specified.
         * @param message CastSoulChooseEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CastSoulChooseEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CastSoulChooseEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResolveEquipmentReq. */
    interface IResolveEquipmentReq {

        /** ResolveEquipmentReq Items */
        Items?: (data.IBagUnit[]|null);
    }

    /** Represents a ResolveEquipmentReq. */
    class ResolveEquipmentReq implements IResolveEquipmentReq {

        /**
         * Constructs a new ResolveEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IResolveEquipmentReq);

        /** ResolveEquipmentReq Items. */
        public Items: data.IBagUnit[];

        /**
         * Creates a new ResolveEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResolveEquipmentReq instance
         */
        public static create(properties?: gamesvr.IResolveEquipmentReq): gamesvr.ResolveEquipmentReq;

        /**
         * Encodes the specified ResolveEquipmentReq message. Does not implicitly {@link gamesvr.ResolveEquipmentReq.verify|verify} messages.
         * @param message ResolveEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IResolveEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResolveEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.ResolveEquipmentReq.verify|verify} messages.
         * @param message ResolveEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IResolveEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResolveEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResolveEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ResolveEquipmentReq;

        /**
         * Decodes a ResolveEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResolveEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ResolveEquipmentReq;

        /**
         * Verifies a ResolveEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResolveEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResolveEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ResolveEquipmentReq;

        /**
         * Creates a plain object from a ResolveEquipmentReq message. Also converts values to other types if specified.
         * @param message ResolveEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ResolveEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResolveEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ResolveEquipmentRes. */
    interface IResolveEquipmentRes {

        /** ResolveEquipmentRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a ResolveEquipmentRes. */
    class ResolveEquipmentRes implements IResolveEquipmentRes {

        /**
         * Constructs a new ResolveEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IResolveEquipmentRes);

        /** ResolveEquipmentRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ResolveEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ResolveEquipmentRes instance
         */
        public static create(properties?: gamesvr.IResolveEquipmentRes): gamesvr.ResolveEquipmentRes;

        /**
         * Encodes the specified ResolveEquipmentRes message. Does not implicitly {@link gamesvr.ResolveEquipmentRes.verify|verify} messages.
         * @param message ResolveEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IResolveEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ResolveEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.ResolveEquipmentRes.verify|verify} messages.
         * @param message ResolveEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IResolveEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ResolveEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ResolveEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ResolveEquipmentRes;

        /**
         * Decodes a ResolveEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ResolveEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ResolveEquipmentRes;

        /**
         * Verifies a ResolveEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ResolveEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ResolveEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ResolveEquipmentRes;

        /**
         * Creates a plain object from a ResolveEquipmentRes message. Also converts values to other types if specified.
         * @param message ResolveEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ResolveEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ResolveEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeclineEquipmentReq. */
    interface IDeclineEquipmentReq {

        /** DeclineEquipmentReq Seq */
        Seq?: (number|Long|null);

        /** DeclineEquipmentReq ID */
        ID?: (number|null);
    }

    /** Represents a DeclineEquipmentReq. */
    class DeclineEquipmentReq implements IDeclineEquipmentReq {

        /**
         * Constructs a new DeclineEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDeclineEquipmentReq);

        /** DeclineEquipmentReq Seq. */
        public Seq: (number|Long);

        /** DeclineEquipmentReq ID. */
        public ID: number;

        /**
         * Creates a new DeclineEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeclineEquipmentReq instance
         */
        public static create(properties?: gamesvr.IDeclineEquipmentReq): gamesvr.DeclineEquipmentReq;

        /**
         * Encodes the specified DeclineEquipmentReq message. Does not implicitly {@link gamesvr.DeclineEquipmentReq.verify|verify} messages.
         * @param message DeclineEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDeclineEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeclineEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.DeclineEquipmentReq.verify|verify} messages.
         * @param message DeclineEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDeclineEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeclineEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeclineEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DeclineEquipmentReq;

        /**
         * Decodes a DeclineEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeclineEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DeclineEquipmentReq;

        /**
         * Verifies a DeclineEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeclineEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeclineEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DeclineEquipmentReq;

        /**
         * Creates a plain object from a DeclineEquipmentReq message. Also converts values to other types if specified.
         * @param message DeclineEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DeclineEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeclineEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeclineEquipmentRes. */
    interface IDeclineEquipmentRes {

        /** DeclineEquipmentRes equipItem */
        equipItem?: (data.IBagUnit|null);

        /** DeclineEquipmentRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a DeclineEquipmentRes. */
    class DeclineEquipmentRes implements IDeclineEquipmentRes {

        /**
         * Constructs a new DeclineEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDeclineEquipmentRes);

        /** DeclineEquipmentRes equipItem. */
        public equipItem?: (data.IBagUnit|null);

        /** DeclineEquipmentRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new DeclineEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeclineEquipmentRes instance
         */
        public static create(properties?: gamesvr.IDeclineEquipmentRes): gamesvr.DeclineEquipmentRes;

        /**
         * Encodes the specified DeclineEquipmentRes message. Does not implicitly {@link gamesvr.DeclineEquipmentRes.verify|verify} messages.
         * @param message DeclineEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDeclineEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeclineEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.DeclineEquipmentRes.verify|verify} messages.
         * @param message DeclineEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDeclineEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeclineEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeclineEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DeclineEquipmentRes;

        /**
         * Decodes a DeclineEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeclineEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DeclineEquipmentRes;

        /**
         * Verifies a DeclineEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeclineEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeclineEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DeclineEquipmentRes;

        /**
         * Creates a plain object from a DeclineEquipmentRes message. Also converts values to other types if specified.
         * @param message DeclineEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DeclineEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeclineEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnhanceTotalEquipmentInfo. */
    interface IEnhanceTotalEquipmentInfo {

        /** EnhanceTotalEquipmentInfo EquipSeq */
        EquipSeq?: (number|Long|null);

        /** EnhanceTotalEquipmentInfo EquipID */
        EquipID?: (number|null);

        /** EnhanceTotalEquipmentInfo Exp */
        Exp?: (number|null);
    }

    /** Represents an EnhanceTotalEquipmentInfo. */
    class EnhanceTotalEquipmentInfo implements IEnhanceTotalEquipmentInfo {

        /**
         * Constructs a new EnhanceTotalEquipmentInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnhanceTotalEquipmentInfo);

        /** EnhanceTotalEquipmentInfo EquipSeq. */
        public EquipSeq: (number|Long);

        /** EnhanceTotalEquipmentInfo EquipID. */
        public EquipID: number;

        /** EnhanceTotalEquipmentInfo Exp. */
        public Exp: number;

        /**
         * Creates a new EnhanceTotalEquipmentInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnhanceTotalEquipmentInfo instance
         */
        public static create(properties?: gamesvr.IEnhanceTotalEquipmentInfo): gamesvr.EnhanceTotalEquipmentInfo;

        /**
         * Encodes the specified EnhanceTotalEquipmentInfo message. Does not implicitly {@link gamesvr.EnhanceTotalEquipmentInfo.verify|verify} messages.
         * @param message EnhanceTotalEquipmentInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnhanceTotalEquipmentInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnhanceTotalEquipmentInfo message, length delimited. Does not implicitly {@link gamesvr.EnhanceTotalEquipmentInfo.verify|verify} messages.
         * @param message EnhanceTotalEquipmentInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnhanceTotalEquipmentInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnhanceTotalEquipmentInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnhanceTotalEquipmentInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnhanceTotalEquipmentInfo;

        /**
         * Decodes an EnhanceTotalEquipmentInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnhanceTotalEquipmentInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnhanceTotalEquipmentInfo;

        /**
         * Verifies an EnhanceTotalEquipmentInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnhanceTotalEquipmentInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnhanceTotalEquipmentInfo
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnhanceTotalEquipmentInfo;

        /**
         * Creates a plain object from an EnhanceTotalEquipmentInfo message. Also converts values to other types if specified.
         * @param message EnhanceTotalEquipmentInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnhanceTotalEquipmentInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnhanceTotalEquipmentInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnhanceTotalEquipmentReq. */
    interface IEnhanceTotalEquipmentReq {

        /** EnhanceTotalEquipmentReq HeroID */
        HeroID?: (number|null);

        /** EnhanceTotalEquipmentReq EnhanceTotalEquipmentInfoList */
        EnhanceTotalEquipmentInfoList?: (gamesvr.IEnhanceTotalEquipmentInfo[]|null);
    }

    /** Represents an EnhanceTotalEquipmentReq. */
    class EnhanceTotalEquipmentReq implements IEnhanceTotalEquipmentReq {

        /**
         * Constructs a new EnhanceTotalEquipmentReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnhanceTotalEquipmentReq);

        /** EnhanceTotalEquipmentReq HeroID. */
        public HeroID: number;

        /** EnhanceTotalEquipmentReq EnhanceTotalEquipmentInfoList. */
        public EnhanceTotalEquipmentInfoList: gamesvr.IEnhanceTotalEquipmentInfo[];

        /**
         * Creates a new EnhanceTotalEquipmentReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnhanceTotalEquipmentReq instance
         */
        public static create(properties?: gamesvr.IEnhanceTotalEquipmentReq): gamesvr.EnhanceTotalEquipmentReq;

        /**
         * Encodes the specified EnhanceTotalEquipmentReq message. Does not implicitly {@link gamesvr.EnhanceTotalEquipmentReq.verify|verify} messages.
         * @param message EnhanceTotalEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnhanceTotalEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnhanceTotalEquipmentReq message, length delimited. Does not implicitly {@link gamesvr.EnhanceTotalEquipmentReq.verify|verify} messages.
         * @param message EnhanceTotalEquipmentReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnhanceTotalEquipmentReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnhanceTotalEquipmentReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnhanceTotalEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnhanceTotalEquipmentReq;

        /**
         * Decodes an EnhanceTotalEquipmentReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnhanceTotalEquipmentReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnhanceTotalEquipmentReq;

        /**
         * Verifies an EnhanceTotalEquipmentReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnhanceTotalEquipmentReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnhanceTotalEquipmentReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnhanceTotalEquipmentReq;

        /**
         * Creates a plain object from an EnhanceTotalEquipmentReq message. Also converts values to other types if specified.
         * @param message EnhanceTotalEquipmentReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnhanceTotalEquipmentReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnhanceTotalEquipmentReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnhanceTotalEquipmentRes. */
    interface IEnhanceTotalEquipmentRes {

        /** EnhanceTotalEquipmentRes HeroID */
        HeroID?: (number|null);

        /** EnhanceTotalEquipmentRes EnhanceTotalEquipmentInfoList */
        EnhanceTotalEquipmentInfoList?: (gamesvr.IEnhanceTotalEquipmentInfo[]|null);
    }

    /** Represents an EnhanceTotalEquipmentRes. */
    class EnhanceTotalEquipmentRes implements IEnhanceTotalEquipmentRes {

        /**
         * Constructs a new EnhanceTotalEquipmentRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnhanceTotalEquipmentRes);

        /** EnhanceTotalEquipmentRes HeroID. */
        public HeroID: number;

        /** EnhanceTotalEquipmentRes EnhanceTotalEquipmentInfoList. */
        public EnhanceTotalEquipmentInfoList: gamesvr.IEnhanceTotalEquipmentInfo[];

        /**
         * Creates a new EnhanceTotalEquipmentRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnhanceTotalEquipmentRes instance
         */
        public static create(properties?: gamesvr.IEnhanceTotalEquipmentRes): gamesvr.EnhanceTotalEquipmentRes;

        /**
         * Encodes the specified EnhanceTotalEquipmentRes message. Does not implicitly {@link gamesvr.EnhanceTotalEquipmentRes.verify|verify} messages.
         * @param message EnhanceTotalEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnhanceTotalEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnhanceTotalEquipmentRes message, length delimited. Does not implicitly {@link gamesvr.EnhanceTotalEquipmentRes.verify|verify} messages.
         * @param message EnhanceTotalEquipmentRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnhanceTotalEquipmentRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnhanceTotalEquipmentRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnhanceTotalEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnhanceTotalEquipmentRes;

        /**
         * Decodes an EnhanceTotalEquipmentRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnhanceTotalEquipmentRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnhanceTotalEquipmentRes;

        /**
         * Verifies an EnhanceTotalEquipmentRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnhanceTotalEquipmentRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnhanceTotalEquipmentRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnhanceTotalEquipmentRes;

        /**
         * Creates a plain object from an EnhanceTotalEquipmentRes message. Also converts values to other types if specified.
         * @param message EnhanceTotalEquipmentRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnhanceTotalEquipmentRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnhanceTotalEquipmentRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExchangeCodeUseReq. */
    interface IExchangeCodeUseReq {

        /** ExchangeCodeUseReq ExchangeCodeContent */
        ExchangeCodeContent?: (string|null);
    }

    /** Represents an ExchangeCodeUseReq. */
    class ExchangeCodeUseReq implements IExchangeCodeUseReq {

        /**
         * Constructs a new ExchangeCodeUseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IExchangeCodeUseReq);

        /** ExchangeCodeUseReq ExchangeCodeContent. */
        public ExchangeCodeContent: string;

        /**
         * Creates a new ExchangeCodeUseReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeCodeUseReq instance
         */
        public static create(properties?: gamesvr.IExchangeCodeUseReq): gamesvr.ExchangeCodeUseReq;

        /**
         * Encodes the specified ExchangeCodeUseReq message. Does not implicitly {@link gamesvr.ExchangeCodeUseReq.verify|verify} messages.
         * @param message ExchangeCodeUseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IExchangeCodeUseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExchangeCodeUseReq message, length delimited. Does not implicitly {@link gamesvr.ExchangeCodeUseReq.verify|verify} messages.
         * @param message ExchangeCodeUseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IExchangeCodeUseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExchangeCodeUseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeCodeUseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ExchangeCodeUseReq;

        /**
         * Decodes an ExchangeCodeUseReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeCodeUseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ExchangeCodeUseReq;

        /**
         * Verifies an ExchangeCodeUseReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExchangeCodeUseReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExchangeCodeUseReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ExchangeCodeUseReq;

        /**
         * Creates a plain object from an ExchangeCodeUseReq message. Also converts values to other types if specified.
         * @param message ExchangeCodeUseReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ExchangeCodeUseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExchangeCodeUseReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExchangeCodeUseRes. */
    interface IExchangeCodeUseRes {

        /** ExchangeCodeUseRes Exp */
        Exp?: (number|null);

        /** ExchangeCodeUseRes TotalExp */
        TotalExp?: (number|null);

        /** ExchangeCodeUseRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an ExchangeCodeUseRes. */
    class ExchangeCodeUseRes implements IExchangeCodeUseRes {

        /**
         * Constructs a new ExchangeCodeUseRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IExchangeCodeUseRes);

        /** ExchangeCodeUseRes Exp. */
        public Exp: number;

        /** ExchangeCodeUseRes TotalExp. */
        public TotalExp: number;

        /** ExchangeCodeUseRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ExchangeCodeUseRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExchangeCodeUseRes instance
         */
        public static create(properties?: gamesvr.IExchangeCodeUseRes): gamesvr.ExchangeCodeUseRes;

        /**
         * Encodes the specified ExchangeCodeUseRes message. Does not implicitly {@link gamesvr.ExchangeCodeUseRes.verify|verify} messages.
         * @param message ExchangeCodeUseRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IExchangeCodeUseRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExchangeCodeUseRes message, length delimited. Does not implicitly {@link gamesvr.ExchangeCodeUseRes.verify|verify} messages.
         * @param message ExchangeCodeUseRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IExchangeCodeUseRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExchangeCodeUseRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExchangeCodeUseRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ExchangeCodeUseRes;

        /**
         * Decodes an ExchangeCodeUseRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExchangeCodeUseRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ExchangeCodeUseRes;

        /**
         * Verifies an ExchangeCodeUseRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExchangeCodeUseRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExchangeCodeUseRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ExchangeCodeUseRes;

        /**
         * Creates a plain object from an ExchangeCodeUseRes message. Also converts values to other types if specified.
         * @param message ExchangeCodeUseRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ExchangeCodeUseRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExchangeCodeUseRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionGetFactionInfoReq. */
    interface IFactionGetFactionInfoReq {
    }

    /** Represents a FactionGetFactionInfoReq. */
    class FactionGetFactionInfoReq implements IFactionGetFactionInfoReq {

        /**
         * Constructs a new FactionGetFactionInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionGetFactionInfoReq);

        /**
         * Creates a new FactionGetFactionInfoReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionGetFactionInfoReq instance
         */
        public static create(properties?: gamesvr.IFactionGetFactionInfoReq): gamesvr.FactionGetFactionInfoReq;

        /**
         * Encodes the specified FactionGetFactionInfoReq message. Does not implicitly {@link gamesvr.FactionGetFactionInfoReq.verify|verify} messages.
         * @param message FactionGetFactionInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionGetFactionInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionGetFactionInfoReq message, length delimited. Does not implicitly {@link gamesvr.FactionGetFactionInfoReq.verify|verify} messages.
         * @param message FactionGetFactionInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionGetFactionInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionGetFactionInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionGetFactionInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionGetFactionInfoReq;

        /**
         * Decodes a FactionGetFactionInfoReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionGetFactionInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionGetFactionInfoReq;

        /**
         * Verifies a FactionGetFactionInfoReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionGetFactionInfoReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionGetFactionInfoReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionGetFactionInfoReq;

        /**
         * Creates a plain object from a FactionGetFactionInfoReq message. Also converts values to other types if specified.
         * @param message FactionGetFactionInfoReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionGetFactionInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionGetFactionInfoReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionGetFactionInfoRes. */
    interface IFactionGetFactionInfoRes {

        /** FactionGetFactionInfoRes Faction */
        Faction?: (data.IFaction|null);
    }

    /** Represents a FactionGetFactionInfoRes. */
    class FactionGetFactionInfoRes implements IFactionGetFactionInfoRes {

        /**
         * Constructs a new FactionGetFactionInfoRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionGetFactionInfoRes);

        /** FactionGetFactionInfoRes Faction. */
        public Faction?: (data.IFaction|null);

        /**
         * Creates a new FactionGetFactionInfoRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionGetFactionInfoRes instance
         */
        public static create(properties?: gamesvr.IFactionGetFactionInfoRes): gamesvr.FactionGetFactionInfoRes;

        /**
         * Encodes the specified FactionGetFactionInfoRes message. Does not implicitly {@link gamesvr.FactionGetFactionInfoRes.verify|verify} messages.
         * @param message FactionGetFactionInfoRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionGetFactionInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionGetFactionInfoRes message, length delimited. Does not implicitly {@link gamesvr.FactionGetFactionInfoRes.verify|verify} messages.
         * @param message FactionGetFactionInfoRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionGetFactionInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionGetFactionInfoRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionGetFactionInfoRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionGetFactionInfoRes;

        /**
         * Decodes a FactionGetFactionInfoRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionGetFactionInfoRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionGetFactionInfoRes;

        /**
         * Verifies a FactionGetFactionInfoRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionGetFactionInfoRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionGetFactionInfoRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionGetFactionInfoRes;

        /**
         * Creates a plain object from a FactionGetFactionInfoRes message. Also converts values to other types if specified.
         * @param message FactionGetFactionInfoRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionGetFactionInfoRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionGetFactionInfoRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionCreateFactionReq. */
    interface IFactionCreateFactionReq {

        /** FactionCreateFactionReq Name */
        Name?: (string|null);
    }

    /** Represents a FactionCreateFactionReq. */
    class FactionCreateFactionReq implements IFactionCreateFactionReq {

        /**
         * Constructs a new FactionCreateFactionReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionCreateFactionReq);

        /** FactionCreateFactionReq Name. */
        public Name: string;

        /**
         * Creates a new FactionCreateFactionReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionCreateFactionReq instance
         */
        public static create(properties?: gamesvr.IFactionCreateFactionReq): gamesvr.FactionCreateFactionReq;

        /**
         * Encodes the specified FactionCreateFactionReq message. Does not implicitly {@link gamesvr.FactionCreateFactionReq.verify|verify} messages.
         * @param message FactionCreateFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionCreateFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionCreateFactionReq message, length delimited. Does not implicitly {@link gamesvr.FactionCreateFactionReq.verify|verify} messages.
         * @param message FactionCreateFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionCreateFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionCreateFactionReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionCreateFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionCreateFactionReq;

        /**
         * Decodes a FactionCreateFactionReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionCreateFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionCreateFactionReq;

        /**
         * Verifies a FactionCreateFactionReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionCreateFactionReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionCreateFactionReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionCreateFactionReq;

        /**
         * Creates a plain object from a FactionCreateFactionReq message. Also converts values to other types if specified.
         * @param message FactionCreateFactionReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionCreateFactionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionCreateFactionReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionCreateFactionRes. */
    interface IFactionCreateFactionRes {

        /** FactionCreateFactionRes Faction */
        Faction?: (data.IFaction|null);
    }

    /** Represents a FactionCreateFactionRes. */
    class FactionCreateFactionRes implements IFactionCreateFactionRes {

        /**
         * Constructs a new FactionCreateFactionRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionCreateFactionRes);

        /** FactionCreateFactionRes Faction. */
        public Faction?: (data.IFaction|null);

        /**
         * Creates a new FactionCreateFactionRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionCreateFactionRes instance
         */
        public static create(properties?: gamesvr.IFactionCreateFactionRes): gamesvr.FactionCreateFactionRes;

        /**
         * Encodes the specified FactionCreateFactionRes message. Does not implicitly {@link gamesvr.FactionCreateFactionRes.verify|verify} messages.
         * @param message FactionCreateFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionCreateFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionCreateFactionRes message, length delimited. Does not implicitly {@link gamesvr.FactionCreateFactionRes.verify|verify} messages.
         * @param message FactionCreateFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionCreateFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionCreateFactionRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionCreateFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionCreateFactionRes;

        /**
         * Decodes a FactionCreateFactionRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionCreateFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionCreateFactionRes;

        /**
         * Verifies a FactionCreateFactionRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionCreateFactionRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionCreateFactionRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionCreateFactionRes;

        /**
         * Creates a plain object from a FactionCreateFactionRes message. Also converts values to other types if specified.
         * @param message FactionCreateFactionRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionCreateFactionRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionCreateFactionRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSearchInfo. */
    interface IFactionSearchInfo {

        /** FactionSearchInfo FactionID */
        FactionID?: (number|Long|null);

        /** FactionSearchInfo Name */
        Name?: (string|null);

        /** FactionSearchInfo Exp */
        Exp?: (number|Long|null);

        /** FactionSearchInfo MemberCount */
        MemberCount?: (number|null);

        /** FactionSearchInfo President */
        President?: (data.IFactionMember|null);

        /** FactionSearchInfo BulletinID */
        BulletinID?: (number|null);

        /** FactionSearchInfo BulletinLock */
        BulletinLock?: (number|Long|null);

        /** FactionSearchInfo BulletinText */
        BulletinText?: (string|null);

        /** FactionSearchInfo IsAutoAccept */
        IsAutoAccept?: (boolean|null);

        /** FactionSearchInfo IsAlreadyApply */
        IsAlreadyApply?: (boolean|null);
    }

    /** Represents a FactionSearchInfo. */
    class FactionSearchInfo implements IFactionSearchInfo {

        /**
         * Constructs a new FactionSearchInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSearchInfo);

        /** FactionSearchInfo FactionID. */
        public FactionID: (number|Long);

        /** FactionSearchInfo Name. */
        public Name: string;

        /** FactionSearchInfo Exp. */
        public Exp: (number|Long);

        /** FactionSearchInfo MemberCount. */
        public MemberCount: number;

        /** FactionSearchInfo President. */
        public President?: (data.IFactionMember|null);

        /** FactionSearchInfo BulletinID. */
        public BulletinID: number;

        /** FactionSearchInfo BulletinLock. */
        public BulletinLock: (number|Long);

        /** FactionSearchInfo BulletinText. */
        public BulletinText: string;

        /** FactionSearchInfo IsAutoAccept. */
        public IsAutoAccept: boolean;

        /** FactionSearchInfo IsAlreadyApply. */
        public IsAlreadyApply: boolean;

        /**
         * Creates a new FactionSearchInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSearchInfo instance
         */
        public static create(properties?: gamesvr.IFactionSearchInfo): gamesvr.FactionSearchInfo;

        /**
         * Encodes the specified FactionSearchInfo message. Does not implicitly {@link gamesvr.FactionSearchInfo.verify|verify} messages.
         * @param message FactionSearchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSearchInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSearchInfo message, length delimited. Does not implicitly {@link gamesvr.FactionSearchInfo.verify|verify} messages.
         * @param message FactionSearchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSearchInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSearchInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSearchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSearchInfo;

        /**
         * Decodes a FactionSearchInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSearchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSearchInfo;

        /**
         * Verifies a FactionSearchInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSearchInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSearchInfo
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSearchInfo;

        /**
         * Creates a plain object from a FactionSearchInfo message. Also converts values to other types if specified.
         * @param message FactionSearchInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSearchInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSearchInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionGetFactionListReq. */
    interface IFactionGetFactionListReq {

        /** FactionGetFactionListReq Name */
        Name?: (string|null);
    }

    /** Represents a FactionGetFactionListReq. */
    class FactionGetFactionListReq implements IFactionGetFactionListReq {

        /**
         * Constructs a new FactionGetFactionListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionGetFactionListReq);

        /** FactionGetFactionListReq Name. */
        public Name: string;

        /**
         * Creates a new FactionGetFactionListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionGetFactionListReq instance
         */
        public static create(properties?: gamesvr.IFactionGetFactionListReq): gamesvr.FactionGetFactionListReq;

        /**
         * Encodes the specified FactionGetFactionListReq message. Does not implicitly {@link gamesvr.FactionGetFactionListReq.verify|verify} messages.
         * @param message FactionGetFactionListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionGetFactionListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionGetFactionListReq message, length delimited. Does not implicitly {@link gamesvr.FactionGetFactionListReq.verify|verify} messages.
         * @param message FactionGetFactionListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionGetFactionListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionGetFactionListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionGetFactionListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionGetFactionListReq;

        /**
         * Decodes a FactionGetFactionListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionGetFactionListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionGetFactionListReq;

        /**
         * Verifies a FactionGetFactionListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionGetFactionListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionGetFactionListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionGetFactionListReq;

        /**
         * Creates a plain object from a FactionGetFactionListReq message. Also converts values to other types if specified.
         * @param message FactionGetFactionListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionGetFactionListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionGetFactionListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionGetFactionListRes. */
    interface IFactionGetFactionListRes {

        /** FactionGetFactionListRes FactionSearchInfoList */
        FactionSearchInfoList?: (gamesvr.IFactionSearchInfo[]|null);
    }

    /** Represents a FactionGetFactionListRes. */
    class FactionGetFactionListRes implements IFactionGetFactionListRes {

        /**
         * Constructs a new FactionGetFactionListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionGetFactionListRes);

        /** FactionGetFactionListRes FactionSearchInfoList. */
        public FactionSearchInfoList: gamesvr.IFactionSearchInfo[];

        /**
         * Creates a new FactionGetFactionListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionGetFactionListRes instance
         */
        public static create(properties?: gamesvr.IFactionGetFactionListRes): gamesvr.FactionGetFactionListRes;

        /**
         * Encodes the specified FactionGetFactionListRes message. Does not implicitly {@link gamesvr.FactionGetFactionListRes.verify|verify} messages.
         * @param message FactionGetFactionListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionGetFactionListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionGetFactionListRes message, length delimited. Does not implicitly {@link gamesvr.FactionGetFactionListRes.verify|verify} messages.
         * @param message FactionGetFactionListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionGetFactionListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionGetFactionListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionGetFactionListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionGetFactionListRes;

        /**
         * Decodes a FactionGetFactionListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionGetFactionListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionGetFactionListRes;

        /**
         * Verifies a FactionGetFactionListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionGetFactionListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionGetFactionListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionGetFactionListRes;

        /**
         * Creates a plain object from a FactionGetFactionListRes message. Also converts values to other types if specified.
         * @param message FactionGetFactionListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionGetFactionListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionGetFactionListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionApplyJoinFactionReq. */
    interface IFactionApplyJoinFactionReq {

        /** FactionApplyJoinFactionReq FactionID */
        FactionID?: (number|Long|null);
    }

    /** Represents a FactionApplyJoinFactionReq. */
    class FactionApplyJoinFactionReq implements IFactionApplyJoinFactionReq {

        /**
         * Constructs a new FactionApplyJoinFactionReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionApplyJoinFactionReq);

        /** FactionApplyJoinFactionReq FactionID. */
        public FactionID: (number|Long);

        /**
         * Creates a new FactionApplyJoinFactionReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionApplyJoinFactionReq instance
         */
        public static create(properties?: gamesvr.IFactionApplyJoinFactionReq): gamesvr.FactionApplyJoinFactionReq;

        /**
         * Encodes the specified FactionApplyJoinFactionReq message. Does not implicitly {@link gamesvr.FactionApplyJoinFactionReq.verify|verify} messages.
         * @param message FactionApplyJoinFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionApplyJoinFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionApplyJoinFactionReq message, length delimited. Does not implicitly {@link gamesvr.FactionApplyJoinFactionReq.verify|verify} messages.
         * @param message FactionApplyJoinFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionApplyJoinFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionApplyJoinFactionReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionApplyJoinFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionApplyJoinFactionReq;

        /**
         * Decodes a FactionApplyJoinFactionReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionApplyJoinFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionApplyJoinFactionReq;

        /**
         * Verifies a FactionApplyJoinFactionReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionApplyJoinFactionReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionApplyJoinFactionReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionApplyJoinFactionReq;

        /**
         * Creates a plain object from a FactionApplyJoinFactionReq message. Also converts values to other types if specified.
         * @param message FactionApplyJoinFactionReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionApplyJoinFactionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionApplyJoinFactionReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionApplyJoinFactionRes. */
    interface IFactionApplyJoinFactionRes {

        /** FactionApplyJoinFactionRes FactionID */
        FactionID?: (number|Long|null);
    }

    /** Represents a FactionApplyJoinFactionRes. */
    class FactionApplyJoinFactionRes implements IFactionApplyJoinFactionRes {

        /**
         * Constructs a new FactionApplyJoinFactionRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionApplyJoinFactionRes);

        /** FactionApplyJoinFactionRes FactionID. */
        public FactionID: (number|Long);

        /**
         * Creates a new FactionApplyJoinFactionRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionApplyJoinFactionRes instance
         */
        public static create(properties?: gamesvr.IFactionApplyJoinFactionRes): gamesvr.FactionApplyJoinFactionRes;

        /**
         * Encodes the specified FactionApplyJoinFactionRes message. Does not implicitly {@link gamesvr.FactionApplyJoinFactionRes.verify|verify} messages.
         * @param message FactionApplyJoinFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionApplyJoinFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionApplyJoinFactionRes message, length delimited. Does not implicitly {@link gamesvr.FactionApplyJoinFactionRes.verify|verify} messages.
         * @param message FactionApplyJoinFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionApplyJoinFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionApplyJoinFactionRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionApplyJoinFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionApplyJoinFactionRes;

        /**
         * Decodes a FactionApplyJoinFactionRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionApplyJoinFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionApplyJoinFactionRes;

        /**
         * Verifies a FactionApplyJoinFactionRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionApplyJoinFactionRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionApplyJoinFactionRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionApplyJoinFactionRes;

        /**
         * Creates a plain object from a FactionApplyJoinFactionRes message. Also converts values to other types if specified.
         * @param message FactionApplyJoinFactionRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionApplyJoinFactionRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionApplyJoinFactionRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionAddApplicantNotify. */
    interface IFactionAddApplicantNotify {

        /** FactionAddApplicantNotify FactionApplyMemberUnit */
        FactionApplyMemberUnit?: (data.IFactionApplyMember|null);
    }

    /** Represents a FactionAddApplicantNotify. */
    class FactionAddApplicantNotify implements IFactionAddApplicantNotify {

        /**
         * Constructs a new FactionAddApplicantNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionAddApplicantNotify);

        /** FactionAddApplicantNotify FactionApplyMemberUnit. */
        public FactionApplyMemberUnit?: (data.IFactionApplyMember|null);

        /**
         * Creates a new FactionAddApplicantNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionAddApplicantNotify instance
         */
        public static create(properties?: gamesvr.IFactionAddApplicantNotify): gamesvr.FactionAddApplicantNotify;

        /**
         * Encodes the specified FactionAddApplicantNotify message. Does not implicitly {@link gamesvr.FactionAddApplicantNotify.verify|verify} messages.
         * @param message FactionAddApplicantNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionAddApplicantNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionAddApplicantNotify message, length delimited. Does not implicitly {@link gamesvr.FactionAddApplicantNotify.verify|verify} messages.
         * @param message FactionAddApplicantNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionAddApplicantNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionAddApplicantNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionAddApplicantNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionAddApplicantNotify;

        /**
         * Decodes a FactionAddApplicantNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionAddApplicantNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionAddApplicantNotify;

        /**
         * Verifies a FactionAddApplicantNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionAddApplicantNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionAddApplicantNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionAddApplicantNotify;

        /**
         * Creates a plain object from a FactionAddApplicantNotify message. Also converts values to other types if specified.
         * @param message FactionAddApplicantNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionAddApplicantNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionAddApplicantNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionPushApplicantNotify. */
    interface IFactionPushApplicantNotify {

        /** FactionPushApplicantNotify FactionApplyMemberList */
        FactionApplyMemberList?: (data.IFactionApplyMember[]|null);
    }

    /** Represents a FactionPushApplicantNotify. */
    class FactionPushApplicantNotify implements IFactionPushApplicantNotify {

        /**
         * Constructs a new FactionPushApplicantNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionPushApplicantNotify);

        /** FactionPushApplicantNotify FactionApplyMemberList. */
        public FactionApplyMemberList: data.IFactionApplyMember[];

        /**
         * Creates a new FactionPushApplicantNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionPushApplicantNotify instance
         */
        public static create(properties?: gamesvr.IFactionPushApplicantNotify): gamesvr.FactionPushApplicantNotify;

        /**
         * Encodes the specified FactionPushApplicantNotify message. Does not implicitly {@link gamesvr.FactionPushApplicantNotify.verify|verify} messages.
         * @param message FactionPushApplicantNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionPushApplicantNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionPushApplicantNotify message, length delimited. Does not implicitly {@link gamesvr.FactionPushApplicantNotify.verify|verify} messages.
         * @param message FactionPushApplicantNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionPushApplicantNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionPushApplicantNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionPushApplicantNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionPushApplicantNotify;

        /**
         * Decodes a FactionPushApplicantNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionPushApplicantNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionPushApplicantNotify;

        /**
         * Verifies a FactionPushApplicantNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionPushApplicantNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionPushApplicantNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionPushApplicantNotify;

        /**
         * Creates a plain object from a FactionPushApplicantNotify message. Also converts values to other types if specified.
         * @param message FactionPushApplicantNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionPushApplicantNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionPushApplicantNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionFastJoinFactionReq. */
    interface IFactionFastJoinFactionReq {

        /** FactionFastJoinFactionReq FactionIDList */
        FactionIDList?: ((number|Long)[]|null);
    }

    /** Represents a FactionFastJoinFactionReq. */
    class FactionFastJoinFactionReq implements IFactionFastJoinFactionReq {

        /**
         * Constructs a new FactionFastJoinFactionReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionFastJoinFactionReq);

        /** FactionFastJoinFactionReq FactionIDList. */
        public FactionIDList: (number|Long)[];

        /**
         * Creates a new FactionFastJoinFactionReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionFastJoinFactionReq instance
         */
        public static create(properties?: gamesvr.IFactionFastJoinFactionReq): gamesvr.FactionFastJoinFactionReq;

        /**
         * Encodes the specified FactionFastJoinFactionReq message. Does not implicitly {@link gamesvr.FactionFastJoinFactionReq.verify|verify} messages.
         * @param message FactionFastJoinFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionFastJoinFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionFastJoinFactionReq message, length delimited. Does not implicitly {@link gamesvr.FactionFastJoinFactionReq.verify|verify} messages.
         * @param message FactionFastJoinFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionFastJoinFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionFastJoinFactionReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionFastJoinFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionFastJoinFactionReq;

        /**
         * Decodes a FactionFastJoinFactionReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionFastJoinFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionFastJoinFactionReq;

        /**
         * Verifies a FactionFastJoinFactionReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionFastJoinFactionReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionFastJoinFactionReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionFastJoinFactionReq;

        /**
         * Creates a plain object from a FactionFastJoinFactionReq message. Also converts values to other types if specified.
         * @param message FactionFastJoinFactionReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionFastJoinFactionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionFastJoinFactionReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionFastJoinFactionRes. */
    interface IFactionFastJoinFactionRes {
    }

    /** Represents a FactionFastJoinFactionRes. */
    class FactionFastJoinFactionRes implements IFactionFastJoinFactionRes {

        /**
         * Constructs a new FactionFastJoinFactionRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionFastJoinFactionRes);

        /**
         * Creates a new FactionFastJoinFactionRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionFastJoinFactionRes instance
         */
        public static create(properties?: gamesvr.IFactionFastJoinFactionRes): gamesvr.FactionFastJoinFactionRes;

        /**
         * Encodes the specified FactionFastJoinFactionRes message. Does not implicitly {@link gamesvr.FactionFastJoinFactionRes.verify|verify} messages.
         * @param message FactionFastJoinFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionFastJoinFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionFastJoinFactionRes message, length delimited. Does not implicitly {@link gamesvr.FactionFastJoinFactionRes.verify|verify} messages.
         * @param message FactionFastJoinFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionFastJoinFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionFastJoinFactionRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionFastJoinFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionFastJoinFactionRes;

        /**
         * Decodes a FactionFastJoinFactionRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionFastJoinFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionFastJoinFactionRes;

        /**
         * Verifies a FactionFastJoinFactionRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionFastJoinFactionRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionFastJoinFactionRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionFastJoinFactionRes;

        /**
         * Creates a plain object from a FactionFastJoinFactionRes message. Also converts values to other types if specified.
         * @param message FactionFastJoinFactionRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionFastJoinFactionRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionFastJoinFactionRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDisposeApplicantReq. */
    interface IFactionDisposeApplicantReq {

        /** FactionDisposeApplicantReq isAgree */
        isAgree?: (boolean|null);

        /** FactionDisposeApplicantReq ApplyUserID */
        ApplyUserID?: (string|null);
    }

    /** Represents a FactionDisposeApplicantReq. */
    class FactionDisposeApplicantReq implements IFactionDisposeApplicantReq {

        /**
         * Constructs a new FactionDisposeApplicantReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDisposeApplicantReq);

        /** FactionDisposeApplicantReq isAgree. */
        public isAgree: boolean;

        /** FactionDisposeApplicantReq ApplyUserID. */
        public ApplyUserID: string;

        /**
         * Creates a new FactionDisposeApplicantReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDisposeApplicantReq instance
         */
        public static create(properties?: gamesvr.IFactionDisposeApplicantReq): gamesvr.FactionDisposeApplicantReq;

        /**
         * Encodes the specified FactionDisposeApplicantReq message. Does not implicitly {@link gamesvr.FactionDisposeApplicantReq.verify|verify} messages.
         * @param message FactionDisposeApplicantReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDisposeApplicantReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDisposeApplicantReq message, length delimited. Does not implicitly {@link gamesvr.FactionDisposeApplicantReq.verify|verify} messages.
         * @param message FactionDisposeApplicantReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDisposeApplicantReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDisposeApplicantReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDisposeApplicantReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDisposeApplicantReq;

        /**
         * Decodes a FactionDisposeApplicantReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDisposeApplicantReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDisposeApplicantReq;

        /**
         * Verifies a FactionDisposeApplicantReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDisposeApplicantReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDisposeApplicantReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDisposeApplicantReq;

        /**
         * Creates a plain object from a FactionDisposeApplicantReq message. Also converts values to other types if specified.
         * @param message FactionDisposeApplicantReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDisposeApplicantReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDisposeApplicantReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDisposeApplicantRes. */
    interface IFactionDisposeApplicantRes {

        /** FactionDisposeApplicantRes isAgree */
        isAgree?: (boolean|null);

        /** FactionDisposeApplicantRes ApplyUserID */
        ApplyUserID?: (string|null);
    }

    /** Represents a FactionDisposeApplicantRes. */
    class FactionDisposeApplicantRes implements IFactionDisposeApplicantRes {

        /**
         * Constructs a new FactionDisposeApplicantRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDisposeApplicantRes);

        /** FactionDisposeApplicantRes isAgree. */
        public isAgree: boolean;

        /** FactionDisposeApplicantRes ApplyUserID. */
        public ApplyUserID: string;

        /**
         * Creates a new FactionDisposeApplicantRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDisposeApplicantRes instance
         */
        public static create(properties?: gamesvr.IFactionDisposeApplicantRes): gamesvr.FactionDisposeApplicantRes;

        /**
         * Encodes the specified FactionDisposeApplicantRes message. Does not implicitly {@link gamesvr.FactionDisposeApplicantRes.verify|verify} messages.
         * @param message FactionDisposeApplicantRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDisposeApplicantRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDisposeApplicantRes message, length delimited. Does not implicitly {@link gamesvr.FactionDisposeApplicantRes.verify|verify} messages.
         * @param message FactionDisposeApplicantRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDisposeApplicantRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDisposeApplicantRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDisposeApplicantRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDisposeApplicantRes;

        /**
         * Decodes a FactionDisposeApplicantRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDisposeApplicantRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDisposeApplicantRes;

        /**
         * Verifies a FactionDisposeApplicantRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDisposeApplicantRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDisposeApplicantRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDisposeApplicantRes;

        /**
         * Creates a plain object from a FactionDisposeApplicantRes message. Also converts values to other types if specified.
         * @param message FactionDisposeApplicantRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDisposeApplicantRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDisposeApplicantRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDisposeAllApplicantReq. */
    interface IFactionDisposeAllApplicantReq {

        /** FactionDisposeAllApplicantReq isAgree */
        isAgree?: (boolean|null);
    }

    /** Represents a FactionDisposeAllApplicantReq. */
    class FactionDisposeAllApplicantReq implements IFactionDisposeAllApplicantReq {

        /**
         * Constructs a new FactionDisposeAllApplicantReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDisposeAllApplicantReq);

        /** FactionDisposeAllApplicantReq isAgree. */
        public isAgree: boolean;

        /**
         * Creates a new FactionDisposeAllApplicantReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDisposeAllApplicantReq instance
         */
        public static create(properties?: gamesvr.IFactionDisposeAllApplicantReq): gamesvr.FactionDisposeAllApplicantReq;

        /**
         * Encodes the specified FactionDisposeAllApplicantReq message. Does not implicitly {@link gamesvr.FactionDisposeAllApplicantReq.verify|verify} messages.
         * @param message FactionDisposeAllApplicantReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDisposeAllApplicantReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDisposeAllApplicantReq message, length delimited. Does not implicitly {@link gamesvr.FactionDisposeAllApplicantReq.verify|verify} messages.
         * @param message FactionDisposeAllApplicantReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDisposeAllApplicantReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDisposeAllApplicantReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDisposeAllApplicantReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDisposeAllApplicantReq;

        /**
         * Decodes a FactionDisposeAllApplicantReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDisposeAllApplicantReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDisposeAllApplicantReq;

        /**
         * Verifies a FactionDisposeAllApplicantReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDisposeAllApplicantReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDisposeAllApplicantReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDisposeAllApplicantReq;

        /**
         * Creates a plain object from a FactionDisposeAllApplicantReq message. Also converts values to other types if specified.
         * @param message FactionDisposeAllApplicantReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDisposeAllApplicantReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDisposeAllApplicantReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDisposeAllApplicantRes. */
    interface IFactionDisposeAllApplicantRes {

        /** FactionDisposeAllApplicantRes isAgree */
        isAgree?: (boolean|null);
    }

    /** Represents a FactionDisposeAllApplicantRes. */
    class FactionDisposeAllApplicantRes implements IFactionDisposeAllApplicantRes {

        /**
         * Constructs a new FactionDisposeAllApplicantRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDisposeAllApplicantRes);

        /** FactionDisposeAllApplicantRes isAgree. */
        public isAgree: boolean;

        /**
         * Creates a new FactionDisposeAllApplicantRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDisposeAllApplicantRes instance
         */
        public static create(properties?: gamesvr.IFactionDisposeAllApplicantRes): gamesvr.FactionDisposeAllApplicantRes;

        /**
         * Encodes the specified FactionDisposeAllApplicantRes message. Does not implicitly {@link gamesvr.FactionDisposeAllApplicantRes.verify|verify} messages.
         * @param message FactionDisposeAllApplicantRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDisposeAllApplicantRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDisposeAllApplicantRes message, length delimited. Does not implicitly {@link gamesvr.FactionDisposeAllApplicantRes.verify|verify} messages.
         * @param message FactionDisposeAllApplicantRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDisposeAllApplicantRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDisposeAllApplicantRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDisposeAllApplicantRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDisposeAllApplicantRes;

        /**
         * Decodes a FactionDisposeAllApplicantRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDisposeAllApplicantRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDisposeAllApplicantRes;

        /**
         * Verifies a FactionDisposeAllApplicantRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDisposeAllApplicantRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDisposeAllApplicantRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDisposeAllApplicantRes;

        /**
         * Creates a plain object from a FactionDisposeAllApplicantRes message. Also converts values to other types if specified.
         * @param message FactionDisposeAllApplicantRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDisposeAllApplicantRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDisposeAllApplicantRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionJoinFactionNotify. */
    interface IFactionJoinFactionNotify {

        /** FactionJoinFactionNotify Faction */
        Faction?: (data.IFaction|null);
    }

    /** Represents a FactionJoinFactionNotify. */
    class FactionJoinFactionNotify implements IFactionJoinFactionNotify {

        /**
         * Constructs a new FactionJoinFactionNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionJoinFactionNotify);

        /** FactionJoinFactionNotify Faction. */
        public Faction?: (data.IFaction|null);

        /**
         * Creates a new FactionJoinFactionNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionJoinFactionNotify instance
         */
        public static create(properties?: gamesvr.IFactionJoinFactionNotify): gamesvr.FactionJoinFactionNotify;

        /**
         * Encodes the specified FactionJoinFactionNotify message. Does not implicitly {@link gamesvr.FactionJoinFactionNotify.verify|verify} messages.
         * @param message FactionJoinFactionNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionJoinFactionNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionJoinFactionNotify message, length delimited. Does not implicitly {@link gamesvr.FactionJoinFactionNotify.verify|verify} messages.
         * @param message FactionJoinFactionNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionJoinFactionNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionJoinFactionNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionJoinFactionNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionJoinFactionNotify;

        /**
         * Decodes a FactionJoinFactionNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionJoinFactionNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionJoinFactionNotify;

        /**
         * Verifies a FactionJoinFactionNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionJoinFactionNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionJoinFactionNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionJoinFactionNotify;

        /**
         * Creates a plain object from a FactionJoinFactionNotify message. Also converts values to other types if specified.
         * @param message FactionJoinFactionNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionJoinFactionNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionJoinFactionNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionAddMemberNotify. */
    interface IFactionAddMemberNotify {

        /** FactionAddMemberNotify FactionMemberUnit */
        FactionMemberUnit?: (data.IFactionMember|null);
    }

    /** Represents a FactionAddMemberNotify. */
    class FactionAddMemberNotify implements IFactionAddMemberNotify {

        /**
         * Constructs a new FactionAddMemberNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionAddMemberNotify);

        /** FactionAddMemberNotify FactionMemberUnit. */
        public FactionMemberUnit?: (data.IFactionMember|null);

        /**
         * Creates a new FactionAddMemberNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionAddMemberNotify instance
         */
        public static create(properties?: gamesvr.IFactionAddMemberNotify): gamesvr.FactionAddMemberNotify;

        /**
         * Encodes the specified FactionAddMemberNotify message. Does not implicitly {@link gamesvr.FactionAddMemberNotify.verify|verify} messages.
         * @param message FactionAddMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionAddMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionAddMemberNotify message, length delimited. Does not implicitly {@link gamesvr.FactionAddMemberNotify.verify|verify} messages.
         * @param message FactionAddMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionAddMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionAddMemberNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionAddMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionAddMemberNotify;

        /**
         * Decodes a FactionAddMemberNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionAddMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionAddMemberNotify;

        /**
         * Verifies a FactionAddMemberNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionAddMemberNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionAddMemberNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionAddMemberNotify;

        /**
         * Creates a plain object from a FactionAddMemberNotify message. Also converts values to other types if specified.
         * @param message FactionAddMemberNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionAddMemberNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionAddMemberNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSetApplyReq. */
    interface IFactionSetApplyReq {

        /** FactionSetApplyReq IsApply */
        IsApply?: (boolean|null);
    }

    /** Represents a FactionSetApplyReq. */
    class FactionSetApplyReq implements IFactionSetApplyReq {

        /**
         * Constructs a new FactionSetApplyReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSetApplyReq);

        /** FactionSetApplyReq IsApply. */
        public IsApply: boolean;

        /**
         * Creates a new FactionSetApplyReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSetApplyReq instance
         */
        public static create(properties?: gamesvr.IFactionSetApplyReq): gamesvr.FactionSetApplyReq;

        /**
         * Encodes the specified FactionSetApplyReq message. Does not implicitly {@link gamesvr.FactionSetApplyReq.verify|verify} messages.
         * @param message FactionSetApplyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSetApplyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSetApplyReq message, length delimited. Does not implicitly {@link gamesvr.FactionSetApplyReq.verify|verify} messages.
         * @param message FactionSetApplyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSetApplyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSetApplyReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSetApplyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSetApplyReq;

        /**
         * Decodes a FactionSetApplyReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSetApplyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSetApplyReq;

        /**
         * Verifies a FactionSetApplyReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSetApplyReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSetApplyReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSetApplyReq;

        /**
         * Creates a plain object from a FactionSetApplyReq message. Also converts values to other types if specified.
         * @param message FactionSetApplyReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSetApplyReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSetApplyReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSetApplyRes. */
    interface IFactionSetApplyRes {

        /** FactionSetApplyRes IsApply */
        IsApply?: (boolean|null);
    }

    /** Represents a FactionSetApplyRes. */
    class FactionSetApplyRes implements IFactionSetApplyRes {

        /**
         * Constructs a new FactionSetApplyRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSetApplyRes);

        /** FactionSetApplyRes IsApply. */
        public IsApply: boolean;

        /**
         * Creates a new FactionSetApplyRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSetApplyRes instance
         */
        public static create(properties?: gamesvr.IFactionSetApplyRes): gamesvr.FactionSetApplyRes;

        /**
         * Encodes the specified FactionSetApplyRes message. Does not implicitly {@link gamesvr.FactionSetApplyRes.verify|verify} messages.
         * @param message FactionSetApplyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSetApplyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSetApplyRes message, length delimited. Does not implicitly {@link gamesvr.FactionSetApplyRes.verify|verify} messages.
         * @param message FactionSetApplyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSetApplyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSetApplyRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSetApplyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSetApplyRes;

        /**
         * Decodes a FactionSetApplyRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSetApplyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSetApplyRes;

        /**
         * Verifies a FactionSetApplyRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSetApplyRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSetApplyRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSetApplyRes;

        /**
         * Creates a plain object from a FactionSetApplyRes message. Also converts values to other types if specified.
         * @param message FactionSetApplyRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSetApplyRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSetApplyRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionChangeSetApplyNotify. */
    interface IFactionChangeSetApplyNotify {

        /** FactionChangeSetApplyNotify IsApply */
        IsApply?: (boolean|null);
    }

    /** Represents a FactionChangeSetApplyNotify. */
    class FactionChangeSetApplyNotify implements IFactionChangeSetApplyNotify {

        /**
         * Constructs a new FactionChangeSetApplyNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionChangeSetApplyNotify);

        /** FactionChangeSetApplyNotify IsApply. */
        public IsApply: boolean;

        /**
         * Creates a new FactionChangeSetApplyNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionChangeSetApplyNotify instance
         */
        public static create(properties?: gamesvr.IFactionChangeSetApplyNotify): gamesvr.FactionChangeSetApplyNotify;

        /**
         * Encodes the specified FactionChangeSetApplyNotify message. Does not implicitly {@link gamesvr.FactionChangeSetApplyNotify.verify|verify} messages.
         * @param message FactionChangeSetApplyNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionChangeSetApplyNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionChangeSetApplyNotify message, length delimited. Does not implicitly {@link gamesvr.FactionChangeSetApplyNotify.verify|verify} messages.
         * @param message FactionChangeSetApplyNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionChangeSetApplyNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionChangeSetApplyNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionChangeSetApplyNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionChangeSetApplyNotify;

        /**
         * Decodes a FactionChangeSetApplyNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionChangeSetApplyNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionChangeSetApplyNotify;

        /**
         * Verifies a FactionChangeSetApplyNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionChangeSetApplyNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionChangeSetApplyNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionChangeSetApplyNotify;

        /**
         * Creates a plain object from a FactionChangeSetApplyNotify message. Also converts values to other types if specified.
         * @param message FactionChangeSetApplyNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionChangeSetApplyNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionChangeSetApplyNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSetAutoAcceptReq. */
    interface IFactionSetAutoAcceptReq {

        /** FactionSetAutoAcceptReq IsAutoAccept */
        IsAutoAccept?: (boolean|null);

        /** FactionSetAutoAcceptReq AutoAcceptLevel */
        AutoAcceptLevel?: (number|null);
    }

    /** Represents a FactionSetAutoAcceptReq. */
    class FactionSetAutoAcceptReq implements IFactionSetAutoAcceptReq {

        /**
         * Constructs a new FactionSetAutoAcceptReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSetAutoAcceptReq);

        /** FactionSetAutoAcceptReq IsAutoAccept. */
        public IsAutoAccept: boolean;

        /** FactionSetAutoAcceptReq AutoAcceptLevel. */
        public AutoAcceptLevel: number;

        /**
         * Creates a new FactionSetAutoAcceptReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSetAutoAcceptReq instance
         */
        public static create(properties?: gamesvr.IFactionSetAutoAcceptReq): gamesvr.FactionSetAutoAcceptReq;

        /**
         * Encodes the specified FactionSetAutoAcceptReq message. Does not implicitly {@link gamesvr.FactionSetAutoAcceptReq.verify|verify} messages.
         * @param message FactionSetAutoAcceptReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSetAutoAcceptReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSetAutoAcceptReq message, length delimited. Does not implicitly {@link gamesvr.FactionSetAutoAcceptReq.verify|verify} messages.
         * @param message FactionSetAutoAcceptReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSetAutoAcceptReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSetAutoAcceptReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSetAutoAcceptReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSetAutoAcceptReq;

        /**
         * Decodes a FactionSetAutoAcceptReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSetAutoAcceptReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSetAutoAcceptReq;

        /**
         * Verifies a FactionSetAutoAcceptReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSetAutoAcceptReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSetAutoAcceptReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSetAutoAcceptReq;

        /**
         * Creates a plain object from a FactionSetAutoAcceptReq message. Also converts values to other types if specified.
         * @param message FactionSetAutoAcceptReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSetAutoAcceptReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSetAutoAcceptReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSetAutoAcceptRes. */
    interface IFactionSetAutoAcceptRes {

        /** FactionSetAutoAcceptRes IsAutoAccept */
        IsAutoAccept?: (boolean|null);

        /** FactionSetAutoAcceptRes AutoAcceptLevel */
        AutoAcceptLevel?: (number|null);
    }

    /** Represents a FactionSetAutoAcceptRes. */
    class FactionSetAutoAcceptRes implements IFactionSetAutoAcceptRes {

        /**
         * Constructs a new FactionSetAutoAcceptRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSetAutoAcceptRes);

        /** FactionSetAutoAcceptRes IsAutoAccept. */
        public IsAutoAccept: boolean;

        /** FactionSetAutoAcceptRes AutoAcceptLevel. */
        public AutoAcceptLevel: number;

        /**
         * Creates a new FactionSetAutoAcceptRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSetAutoAcceptRes instance
         */
        public static create(properties?: gamesvr.IFactionSetAutoAcceptRes): gamesvr.FactionSetAutoAcceptRes;

        /**
         * Encodes the specified FactionSetAutoAcceptRes message. Does not implicitly {@link gamesvr.FactionSetAutoAcceptRes.verify|verify} messages.
         * @param message FactionSetAutoAcceptRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSetAutoAcceptRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSetAutoAcceptRes message, length delimited. Does not implicitly {@link gamesvr.FactionSetAutoAcceptRes.verify|verify} messages.
         * @param message FactionSetAutoAcceptRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSetAutoAcceptRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSetAutoAcceptRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSetAutoAcceptRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSetAutoAcceptRes;

        /**
         * Decodes a FactionSetAutoAcceptRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSetAutoAcceptRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSetAutoAcceptRes;

        /**
         * Verifies a FactionSetAutoAcceptRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSetAutoAcceptRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSetAutoAcceptRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSetAutoAcceptRes;

        /**
         * Creates a plain object from a FactionSetAutoAcceptRes message. Also converts values to other types if specified.
         * @param message FactionSetAutoAcceptRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSetAutoAcceptRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSetAutoAcceptRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionChangeSetAutoAcceptNotify. */
    interface IFactionChangeSetAutoAcceptNotify {

        /** FactionChangeSetAutoAcceptNotify IsAutoAccept */
        IsAutoAccept?: (boolean|null);

        /** FactionChangeSetAutoAcceptNotify AutoAcceptLevel */
        AutoAcceptLevel?: (number|null);
    }

    /** Represents a FactionChangeSetAutoAcceptNotify. */
    class FactionChangeSetAutoAcceptNotify implements IFactionChangeSetAutoAcceptNotify {

        /**
         * Constructs a new FactionChangeSetAutoAcceptNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionChangeSetAutoAcceptNotify);

        /** FactionChangeSetAutoAcceptNotify IsAutoAccept. */
        public IsAutoAccept: boolean;

        /** FactionChangeSetAutoAcceptNotify AutoAcceptLevel. */
        public AutoAcceptLevel: number;

        /**
         * Creates a new FactionChangeSetAutoAcceptNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionChangeSetAutoAcceptNotify instance
         */
        public static create(properties?: gamesvr.IFactionChangeSetAutoAcceptNotify): gamesvr.FactionChangeSetAutoAcceptNotify;

        /**
         * Encodes the specified FactionChangeSetAutoAcceptNotify message. Does not implicitly {@link gamesvr.FactionChangeSetAutoAcceptNotify.verify|verify} messages.
         * @param message FactionChangeSetAutoAcceptNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionChangeSetAutoAcceptNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionChangeSetAutoAcceptNotify message, length delimited. Does not implicitly {@link gamesvr.FactionChangeSetAutoAcceptNotify.verify|verify} messages.
         * @param message FactionChangeSetAutoAcceptNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionChangeSetAutoAcceptNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionChangeSetAutoAcceptNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionChangeSetAutoAcceptNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionChangeSetAutoAcceptNotify;

        /**
         * Decodes a FactionChangeSetAutoAcceptNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionChangeSetAutoAcceptNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionChangeSetAutoAcceptNotify;

        /**
         * Verifies a FactionChangeSetAutoAcceptNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionChangeSetAutoAcceptNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionChangeSetAutoAcceptNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionChangeSetAutoAcceptNotify;

        /**
         * Creates a plain object from a FactionChangeSetAutoAcceptNotify message. Also converts values to other types if specified.
         * @param message FactionChangeSetAutoAcceptNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionChangeSetAutoAcceptNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionChangeSetAutoAcceptNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionChangeNameReq. */
    interface IFactionChangeNameReq {

        /** FactionChangeNameReq Name */
        Name?: (string|null);
    }

    /** Represents a FactionChangeNameReq. */
    class FactionChangeNameReq implements IFactionChangeNameReq {

        /**
         * Constructs a new FactionChangeNameReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionChangeNameReq);

        /** FactionChangeNameReq Name. */
        public Name: string;

        /**
         * Creates a new FactionChangeNameReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionChangeNameReq instance
         */
        public static create(properties?: gamesvr.IFactionChangeNameReq): gamesvr.FactionChangeNameReq;

        /**
         * Encodes the specified FactionChangeNameReq message. Does not implicitly {@link gamesvr.FactionChangeNameReq.verify|verify} messages.
         * @param message FactionChangeNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionChangeNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionChangeNameReq message, length delimited. Does not implicitly {@link gamesvr.FactionChangeNameReq.verify|verify} messages.
         * @param message FactionChangeNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionChangeNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionChangeNameReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionChangeNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionChangeNameReq;

        /**
         * Decodes a FactionChangeNameReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionChangeNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionChangeNameReq;

        /**
         * Verifies a FactionChangeNameReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionChangeNameReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionChangeNameReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionChangeNameReq;

        /**
         * Creates a plain object from a FactionChangeNameReq message. Also converts values to other types if specified.
         * @param message FactionChangeNameReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionChangeNameReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionChangeNameReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionChangeNameRes. */
    interface IFactionChangeNameRes {

        /** FactionChangeNameRes Name */
        Name?: (string|null);
    }

    /** Represents a FactionChangeNameRes. */
    class FactionChangeNameRes implements IFactionChangeNameRes {

        /**
         * Constructs a new FactionChangeNameRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionChangeNameRes);

        /** FactionChangeNameRes Name. */
        public Name: string;

        /**
         * Creates a new FactionChangeNameRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionChangeNameRes instance
         */
        public static create(properties?: gamesvr.IFactionChangeNameRes): gamesvr.FactionChangeNameRes;

        /**
         * Encodes the specified FactionChangeNameRes message. Does not implicitly {@link gamesvr.FactionChangeNameRes.verify|verify} messages.
         * @param message FactionChangeNameRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionChangeNameRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionChangeNameRes message, length delimited. Does not implicitly {@link gamesvr.FactionChangeNameRes.verify|verify} messages.
         * @param message FactionChangeNameRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionChangeNameRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionChangeNameRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionChangeNameRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionChangeNameRes;

        /**
         * Decodes a FactionChangeNameRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionChangeNameRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionChangeNameRes;

        /**
         * Verifies a FactionChangeNameRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionChangeNameRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionChangeNameRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionChangeNameRes;

        /**
         * Creates a plain object from a FactionChangeNameRes message. Also converts values to other types if specified.
         * @param message FactionChangeNameRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionChangeNameRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionChangeNameRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionChangeBulletinReq. */
    interface IFactionChangeBulletinReq {

        /** FactionChangeBulletinReq BulletinText */
        BulletinText?: (string|null);
    }

    /** Represents a FactionChangeBulletinReq. */
    class FactionChangeBulletinReq implements IFactionChangeBulletinReq {

        /**
         * Constructs a new FactionChangeBulletinReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionChangeBulletinReq);

        /** FactionChangeBulletinReq BulletinText. */
        public BulletinText: string;

        /**
         * Creates a new FactionChangeBulletinReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionChangeBulletinReq instance
         */
        public static create(properties?: gamesvr.IFactionChangeBulletinReq): gamesvr.FactionChangeBulletinReq;

        /**
         * Encodes the specified FactionChangeBulletinReq message. Does not implicitly {@link gamesvr.FactionChangeBulletinReq.verify|verify} messages.
         * @param message FactionChangeBulletinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionChangeBulletinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionChangeBulletinReq message, length delimited. Does not implicitly {@link gamesvr.FactionChangeBulletinReq.verify|verify} messages.
         * @param message FactionChangeBulletinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionChangeBulletinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionChangeBulletinReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionChangeBulletinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionChangeBulletinReq;

        /**
         * Decodes a FactionChangeBulletinReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionChangeBulletinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionChangeBulletinReq;

        /**
         * Verifies a FactionChangeBulletinReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionChangeBulletinReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionChangeBulletinReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionChangeBulletinReq;

        /**
         * Creates a plain object from a FactionChangeBulletinReq message. Also converts values to other types if specified.
         * @param message FactionChangeBulletinReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionChangeBulletinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionChangeBulletinReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionChangeBulletinRes. */
    interface IFactionChangeBulletinRes {

        /** FactionChangeBulletinRes BulletinText */
        BulletinText?: (string|null);
    }

    /** Represents a FactionChangeBulletinRes. */
    class FactionChangeBulletinRes implements IFactionChangeBulletinRes {

        /**
         * Constructs a new FactionChangeBulletinRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionChangeBulletinRes);

        /** FactionChangeBulletinRes BulletinText. */
        public BulletinText: string;

        /**
         * Creates a new FactionChangeBulletinRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionChangeBulletinRes instance
         */
        public static create(properties?: gamesvr.IFactionChangeBulletinRes): gamesvr.FactionChangeBulletinRes;

        /**
         * Encodes the specified FactionChangeBulletinRes message. Does not implicitly {@link gamesvr.FactionChangeBulletinRes.verify|verify} messages.
         * @param message FactionChangeBulletinRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionChangeBulletinRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionChangeBulletinRes message, length delimited. Does not implicitly {@link gamesvr.FactionChangeBulletinRes.verify|verify} messages.
         * @param message FactionChangeBulletinRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionChangeBulletinRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionChangeBulletinRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionChangeBulletinRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionChangeBulletinRes;

        /**
         * Decodes a FactionChangeBulletinRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionChangeBulletinRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionChangeBulletinRes;

        /**
         * Verifies a FactionChangeBulletinRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionChangeBulletinRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionChangeBulletinRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionChangeBulletinRes;

        /**
         * Creates a plain object from a FactionChangeBulletinRes message. Also converts values to other types if specified.
         * @param message FactionChangeBulletinRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionChangeBulletinRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionChangeBulletinRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionOnlineMemberNotify. */
    interface IFactionOnlineMemberNotify {

        /** FactionOnlineMemberNotify userID */
        userID?: (string|null);

        /** FactionOnlineMemberNotify LastOnlineTime */
        LastOnlineTime?: (number|Long|null);
    }

    /** Represents a FactionOnlineMemberNotify. */
    class FactionOnlineMemberNotify implements IFactionOnlineMemberNotify {

        /**
         * Constructs a new FactionOnlineMemberNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionOnlineMemberNotify);

        /** FactionOnlineMemberNotify userID. */
        public userID: string;

        /** FactionOnlineMemberNotify LastOnlineTime. */
        public LastOnlineTime: (number|Long);

        /**
         * Creates a new FactionOnlineMemberNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionOnlineMemberNotify instance
         */
        public static create(properties?: gamesvr.IFactionOnlineMemberNotify): gamesvr.FactionOnlineMemberNotify;

        /**
         * Encodes the specified FactionOnlineMemberNotify message. Does not implicitly {@link gamesvr.FactionOnlineMemberNotify.verify|verify} messages.
         * @param message FactionOnlineMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionOnlineMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionOnlineMemberNotify message, length delimited. Does not implicitly {@link gamesvr.FactionOnlineMemberNotify.verify|verify} messages.
         * @param message FactionOnlineMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionOnlineMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionOnlineMemberNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionOnlineMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionOnlineMemberNotify;

        /**
         * Decodes a FactionOnlineMemberNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionOnlineMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionOnlineMemberNotify;

        /**
         * Verifies a FactionOnlineMemberNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionOnlineMemberNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionOnlineMemberNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionOnlineMemberNotify;

        /**
         * Creates a plain object from a FactionOnlineMemberNotify message. Also converts values to other types if specified.
         * @param message FactionOnlineMemberNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionOnlineMemberNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionOnlineMemberNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionOfflineMemberNotify. */
    interface IFactionOfflineMemberNotify {

        /** FactionOfflineMemberNotify userID */
        userID?: (string|null);

        /** FactionOfflineMemberNotify LastOnlineTime */
        LastOnlineTime?: (number|Long|null);
    }

    /** Represents a FactionOfflineMemberNotify. */
    class FactionOfflineMemberNotify implements IFactionOfflineMemberNotify {

        /**
         * Constructs a new FactionOfflineMemberNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionOfflineMemberNotify);

        /** FactionOfflineMemberNotify userID. */
        public userID: string;

        /** FactionOfflineMemberNotify LastOnlineTime. */
        public LastOnlineTime: (number|Long);

        /**
         * Creates a new FactionOfflineMemberNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionOfflineMemberNotify instance
         */
        public static create(properties?: gamesvr.IFactionOfflineMemberNotify): gamesvr.FactionOfflineMemberNotify;

        /**
         * Encodes the specified FactionOfflineMemberNotify message. Does not implicitly {@link gamesvr.FactionOfflineMemberNotify.verify|verify} messages.
         * @param message FactionOfflineMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionOfflineMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionOfflineMemberNotify message, length delimited. Does not implicitly {@link gamesvr.FactionOfflineMemberNotify.verify|verify} messages.
         * @param message FactionOfflineMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionOfflineMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionOfflineMemberNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionOfflineMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionOfflineMemberNotify;

        /**
         * Decodes a FactionOfflineMemberNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionOfflineMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionOfflineMemberNotify;

        /**
         * Verifies a FactionOfflineMemberNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionOfflineMemberNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionOfflineMemberNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionOfflineMemberNotify;

        /**
         * Creates a plain object from a FactionOfflineMemberNotify message. Also converts values to other types if specified.
         * @param message FactionOfflineMemberNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionOfflineMemberNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionOfflineMemberNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionNominateMemberReq. */
    interface IFactionNominateMemberReq {

        /** FactionNominateMemberReq OtherUserID */
        OtherUserID?: (string|null);

        /** FactionNominateMemberReq OtherFactionMemberType */
        OtherFactionMemberType?: (number|null);
    }

    /** Represents a FactionNominateMemberReq. */
    class FactionNominateMemberReq implements IFactionNominateMemberReq {

        /**
         * Constructs a new FactionNominateMemberReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionNominateMemberReq);

        /** FactionNominateMemberReq OtherUserID. */
        public OtherUserID: string;

        /** FactionNominateMemberReq OtherFactionMemberType. */
        public OtherFactionMemberType: number;

        /**
         * Creates a new FactionNominateMemberReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionNominateMemberReq instance
         */
        public static create(properties?: gamesvr.IFactionNominateMemberReq): gamesvr.FactionNominateMemberReq;

        /**
         * Encodes the specified FactionNominateMemberReq message. Does not implicitly {@link gamesvr.FactionNominateMemberReq.verify|verify} messages.
         * @param message FactionNominateMemberReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionNominateMemberReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionNominateMemberReq message, length delimited. Does not implicitly {@link gamesvr.FactionNominateMemberReq.verify|verify} messages.
         * @param message FactionNominateMemberReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionNominateMemberReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionNominateMemberReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionNominateMemberReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionNominateMemberReq;

        /**
         * Decodes a FactionNominateMemberReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionNominateMemberReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionNominateMemberReq;

        /**
         * Verifies a FactionNominateMemberReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionNominateMemberReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionNominateMemberReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionNominateMemberReq;

        /**
         * Creates a plain object from a FactionNominateMemberReq message. Also converts values to other types if specified.
         * @param message FactionNominateMemberReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionNominateMemberReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionNominateMemberReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionNominateMemberRes. */
    interface IFactionNominateMemberRes {
    }

    /** Represents a FactionNominateMemberRes. */
    class FactionNominateMemberRes implements IFactionNominateMemberRes {

        /**
         * Constructs a new FactionNominateMemberRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionNominateMemberRes);

        /**
         * Creates a new FactionNominateMemberRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionNominateMemberRes instance
         */
        public static create(properties?: gamesvr.IFactionNominateMemberRes): gamesvr.FactionNominateMemberRes;

        /**
         * Encodes the specified FactionNominateMemberRes message. Does not implicitly {@link gamesvr.FactionNominateMemberRes.verify|verify} messages.
         * @param message FactionNominateMemberRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionNominateMemberRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionNominateMemberRes message, length delimited. Does not implicitly {@link gamesvr.FactionNominateMemberRes.verify|verify} messages.
         * @param message FactionNominateMemberRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionNominateMemberRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionNominateMemberRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionNominateMemberRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionNominateMemberRes;

        /**
         * Decodes a FactionNominateMemberRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionNominateMemberRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionNominateMemberRes;

        /**
         * Verifies a FactionNominateMemberRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionNominateMemberRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionNominateMemberRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionNominateMemberRes;

        /**
         * Creates a plain object from a FactionNominateMemberRes message. Also converts values to other types if specified.
         * @param message FactionNominateMemberRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionNominateMemberRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionNominateMemberRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionNominateMemberNotify. */
    interface IFactionNominateMemberNotify {

        /** FactionNominateMemberNotify UserID */
        UserID?: (string|null);

        /** FactionNominateMemberNotify FactionMemberType */
        FactionMemberType?: (number|null);
    }

    /** Represents a FactionNominateMemberNotify. */
    class FactionNominateMemberNotify implements IFactionNominateMemberNotify {

        /**
         * Constructs a new FactionNominateMemberNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionNominateMemberNotify);

        /** FactionNominateMemberNotify UserID. */
        public UserID: string;

        /** FactionNominateMemberNotify FactionMemberType. */
        public FactionMemberType: number;

        /**
         * Creates a new FactionNominateMemberNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionNominateMemberNotify instance
         */
        public static create(properties?: gamesvr.IFactionNominateMemberNotify): gamesvr.FactionNominateMemberNotify;

        /**
         * Encodes the specified FactionNominateMemberNotify message. Does not implicitly {@link gamesvr.FactionNominateMemberNotify.verify|verify} messages.
         * @param message FactionNominateMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionNominateMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionNominateMemberNotify message, length delimited. Does not implicitly {@link gamesvr.FactionNominateMemberNotify.verify|verify} messages.
         * @param message FactionNominateMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionNominateMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionNominateMemberNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionNominateMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionNominateMemberNotify;

        /**
         * Decodes a FactionNominateMemberNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionNominateMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionNominateMemberNotify;

        /**
         * Verifies a FactionNominateMemberNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionNominateMemberNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionNominateMemberNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionNominateMemberNotify;

        /**
         * Creates a plain object from a FactionNominateMemberNotify message. Also converts values to other types if specified.
         * @param message FactionNominateMemberNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionNominateMemberNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionNominateMemberNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionKickOutMemberReq. */
    interface IFactionKickOutMemberReq {

        /** FactionKickOutMemberReq KickOutUserID */
        KickOutUserID?: (string|null);

        /** FactionKickOutMemberReq KickOutReasonList */
        KickOutReasonList?: (number[]|null);

        /** FactionKickOutMemberReq KickOutReasonList2 */
        KickOutReasonList2?: (string[]|null);
    }

    /** Represents a FactionKickOutMemberReq. */
    class FactionKickOutMemberReq implements IFactionKickOutMemberReq {

        /**
         * Constructs a new FactionKickOutMemberReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionKickOutMemberReq);

        /** FactionKickOutMemberReq KickOutUserID. */
        public KickOutUserID: string;

        /** FactionKickOutMemberReq KickOutReasonList. */
        public KickOutReasonList: number[];

        /** FactionKickOutMemberReq KickOutReasonList2. */
        public KickOutReasonList2: string[];

        /**
         * Creates a new FactionKickOutMemberReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionKickOutMemberReq instance
         */
        public static create(properties?: gamesvr.IFactionKickOutMemberReq): gamesvr.FactionKickOutMemberReq;

        /**
         * Encodes the specified FactionKickOutMemberReq message. Does not implicitly {@link gamesvr.FactionKickOutMemberReq.verify|verify} messages.
         * @param message FactionKickOutMemberReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionKickOutMemberReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionKickOutMemberReq message, length delimited. Does not implicitly {@link gamesvr.FactionKickOutMemberReq.verify|verify} messages.
         * @param message FactionKickOutMemberReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionKickOutMemberReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionKickOutMemberReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionKickOutMemberReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionKickOutMemberReq;

        /**
         * Decodes a FactionKickOutMemberReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionKickOutMemberReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionKickOutMemberReq;

        /**
         * Verifies a FactionKickOutMemberReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionKickOutMemberReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionKickOutMemberReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionKickOutMemberReq;

        /**
         * Creates a plain object from a FactionKickOutMemberReq message. Also converts values to other types if specified.
         * @param message FactionKickOutMemberReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionKickOutMemberReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionKickOutMemberReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionKickOutMemberRes. */
    interface IFactionKickOutMemberRes {
    }

    /** Represents a FactionKickOutMemberRes. */
    class FactionKickOutMemberRes implements IFactionKickOutMemberRes {

        /**
         * Constructs a new FactionKickOutMemberRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionKickOutMemberRes);

        /**
         * Creates a new FactionKickOutMemberRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionKickOutMemberRes instance
         */
        public static create(properties?: gamesvr.IFactionKickOutMemberRes): gamesvr.FactionKickOutMemberRes;

        /**
         * Encodes the specified FactionKickOutMemberRes message. Does not implicitly {@link gamesvr.FactionKickOutMemberRes.verify|verify} messages.
         * @param message FactionKickOutMemberRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionKickOutMemberRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionKickOutMemberRes message, length delimited. Does not implicitly {@link gamesvr.FactionKickOutMemberRes.verify|verify} messages.
         * @param message FactionKickOutMemberRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionKickOutMemberRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionKickOutMemberRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionKickOutMemberRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionKickOutMemberRes;

        /**
         * Decodes a FactionKickOutMemberRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionKickOutMemberRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionKickOutMemberRes;

        /**
         * Verifies a FactionKickOutMemberRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionKickOutMemberRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionKickOutMemberRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionKickOutMemberRes;

        /**
         * Creates a plain object from a FactionKickOutMemberRes message. Also converts values to other types if specified.
         * @param message FactionKickOutMemberRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionKickOutMemberRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionKickOutMemberRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionKickOutMemberNotify. */
    interface IFactionKickOutMemberNotify {

        /** FactionKickOutMemberNotify KickOutUserID */
        KickOutUserID?: (string|null);

        /** FactionKickOutMemberNotify KickOutReasonList */
        KickOutReasonList?: (number[]|null);

        /** FactionKickOutMemberNotify AllowApplyTime */
        AllowApplyTime?: (number|Long|null);
    }

    /** Represents a FactionKickOutMemberNotify. */
    class FactionKickOutMemberNotify implements IFactionKickOutMemberNotify {

        /**
         * Constructs a new FactionKickOutMemberNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionKickOutMemberNotify);

        /** FactionKickOutMemberNotify KickOutUserID. */
        public KickOutUserID: string;

        /** FactionKickOutMemberNotify KickOutReasonList. */
        public KickOutReasonList: number[];

        /** FactionKickOutMemberNotify AllowApplyTime. */
        public AllowApplyTime: (number|Long);

        /**
         * Creates a new FactionKickOutMemberNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionKickOutMemberNotify instance
         */
        public static create(properties?: gamesvr.IFactionKickOutMemberNotify): gamesvr.FactionKickOutMemberNotify;

        /**
         * Encodes the specified FactionKickOutMemberNotify message. Does not implicitly {@link gamesvr.FactionKickOutMemberNotify.verify|verify} messages.
         * @param message FactionKickOutMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionKickOutMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionKickOutMemberNotify message, length delimited. Does not implicitly {@link gamesvr.FactionKickOutMemberNotify.verify|verify} messages.
         * @param message FactionKickOutMemberNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionKickOutMemberNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionKickOutMemberNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionKickOutMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionKickOutMemberNotify;

        /**
         * Decodes a FactionKickOutMemberNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionKickOutMemberNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionKickOutMemberNotify;

        /**
         * Verifies a FactionKickOutMemberNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionKickOutMemberNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionKickOutMemberNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionKickOutMemberNotify;

        /**
         * Creates a plain object from a FactionKickOutMemberNotify message. Also converts values to other types if specified.
         * @param message FactionKickOutMemberNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionKickOutMemberNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionKickOutMemberNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExitFactionReq. */
    interface IFactionExitFactionReq {
    }

    /** Represents a FactionExitFactionReq. */
    class FactionExitFactionReq implements IFactionExitFactionReq {

        /**
         * Constructs a new FactionExitFactionReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExitFactionReq);

        /**
         * Creates a new FactionExitFactionReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExitFactionReq instance
         */
        public static create(properties?: gamesvr.IFactionExitFactionReq): gamesvr.FactionExitFactionReq;

        /**
         * Encodes the specified FactionExitFactionReq message. Does not implicitly {@link gamesvr.FactionExitFactionReq.verify|verify} messages.
         * @param message FactionExitFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExitFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExitFactionReq message, length delimited. Does not implicitly {@link gamesvr.FactionExitFactionReq.verify|verify} messages.
         * @param message FactionExitFactionReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExitFactionReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExitFactionReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExitFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExitFactionReq;

        /**
         * Decodes a FactionExitFactionReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExitFactionReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExitFactionReq;

        /**
         * Verifies a FactionExitFactionReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExitFactionReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExitFactionReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExitFactionReq;

        /**
         * Creates a plain object from a FactionExitFactionReq message. Also converts values to other types if specified.
         * @param message FactionExitFactionReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExitFactionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExitFactionReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExitFactionRes. */
    interface IFactionExitFactionRes {
    }

    /** Represents a FactionExitFactionRes. */
    class FactionExitFactionRes implements IFactionExitFactionRes {

        /**
         * Constructs a new FactionExitFactionRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExitFactionRes);

        /**
         * Creates a new FactionExitFactionRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExitFactionRes instance
         */
        public static create(properties?: gamesvr.IFactionExitFactionRes): gamesvr.FactionExitFactionRes;

        /**
         * Encodes the specified FactionExitFactionRes message. Does not implicitly {@link gamesvr.FactionExitFactionRes.verify|verify} messages.
         * @param message FactionExitFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExitFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExitFactionRes message, length delimited. Does not implicitly {@link gamesvr.FactionExitFactionRes.verify|verify} messages.
         * @param message FactionExitFactionRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExitFactionRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExitFactionRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExitFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExitFactionRes;

        /**
         * Decodes a FactionExitFactionRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExitFactionRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExitFactionRes;

        /**
         * Verifies a FactionExitFactionRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExitFactionRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExitFactionRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExitFactionRes;

        /**
         * Creates a plain object from a FactionExitFactionRes message. Also converts values to other types if specified.
         * @param message FactionExitFactionRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExitFactionRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExitFactionRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExitFactionNotify. */
    interface IFactionExitFactionNotify {

        /** FactionExitFactionNotify UserID */
        UserID?: (string|null);

        /** FactionExitFactionNotify AllowApplyTime */
        AllowApplyTime?: (number|Long|null);
    }

    /** Represents a FactionExitFactionNotify. */
    class FactionExitFactionNotify implements IFactionExitFactionNotify {

        /**
         * Constructs a new FactionExitFactionNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExitFactionNotify);

        /** FactionExitFactionNotify UserID. */
        public UserID: string;

        /** FactionExitFactionNotify AllowApplyTime. */
        public AllowApplyTime: (number|Long);

        /**
         * Creates a new FactionExitFactionNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExitFactionNotify instance
         */
        public static create(properties?: gamesvr.IFactionExitFactionNotify): gamesvr.FactionExitFactionNotify;

        /**
         * Encodes the specified FactionExitFactionNotify message. Does not implicitly {@link gamesvr.FactionExitFactionNotify.verify|verify} messages.
         * @param message FactionExitFactionNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExitFactionNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExitFactionNotify message, length delimited. Does not implicitly {@link gamesvr.FactionExitFactionNotify.verify|verify} messages.
         * @param message FactionExitFactionNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExitFactionNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExitFactionNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExitFactionNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExitFactionNotify;

        /**
         * Decodes a FactionExitFactionNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExitFactionNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExitFactionNotify;

        /**
         * Verifies a FactionExitFactionNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExitFactionNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExitFactionNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExitFactionNotify;

        /**
         * Creates a plain object from a FactionExitFactionNotify message. Also converts values to other types if specified.
         * @param message FactionExitFactionNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExitFactionNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExitFactionNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDissolveFactionNotify. */
    interface IFactionDissolveFactionNotify {

        /** FactionDissolveFactionNotify AllowApplyTime */
        AllowApplyTime?: (number|Long|null);
    }

    /** Represents a FactionDissolveFactionNotify. */
    class FactionDissolveFactionNotify implements IFactionDissolveFactionNotify {

        /**
         * Constructs a new FactionDissolveFactionNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDissolveFactionNotify);

        /** FactionDissolveFactionNotify AllowApplyTime. */
        public AllowApplyTime: (number|Long);

        /**
         * Creates a new FactionDissolveFactionNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDissolveFactionNotify instance
         */
        public static create(properties?: gamesvr.IFactionDissolveFactionNotify): gamesvr.FactionDissolveFactionNotify;

        /**
         * Encodes the specified FactionDissolveFactionNotify message. Does not implicitly {@link gamesvr.FactionDissolveFactionNotify.verify|verify} messages.
         * @param message FactionDissolveFactionNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDissolveFactionNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDissolveFactionNotify message, length delimited. Does not implicitly {@link gamesvr.FactionDissolveFactionNotify.verify|verify} messages.
         * @param message FactionDissolveFactionNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDissolveFactionNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDissolveFactionNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDissolveFactionNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDissolveFactionNotify;

        /**
         * Decodes a FactionDissolveFactionNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDissolveFactionNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDissolveFactionNotify;

        /**
         * Verifies a FactionDissolveFactionNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDissolveFactionNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDissolveFactionNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDissolveFactionNotify;

        /**
         * Creates a plain object from a FactionDissolveFactionNotify message. Also converts values to other types if specified.
         * @param message FactionDissolveFactionNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDissolveFactionNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDissolveFactionNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionAddNewsFeedNotify. */
    interface IFactionAddNewsFeedNotify {

        /** FactionAddNewsFeedNotify NewsFeedUnit */
        NewsFeedUnit?: (data.INewsFeed|null);
    }

    /** Represents a FactionAddNewsFeedNotify. */
    class FactionAddNewsFeedNotify implements IFactionAddNewsFeedNotify {

        /**
         * Constructs a new FactionAddNewsFeedNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionAddNewsFeedNotify);

        /** FactionAddNewsFeedNotify NewsFeedUnit. */
        public NewsFeedUnit?: (data.INewsFeed|null);

        /**
         * Creates a new FactionAddNewsFeedNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionAddNewsFeedNotify instance
         */
        public static create(properties?: gamesvr.IFactionAddNewsFeedNotify): gamesvr.FactionAddNewsFeedNotify;

        /**
         * Encodes the specified FactionAddNewsFeedNotify message. Does not implicitly {@link gamesvr.FactionAddNewsFeedNotify.verify|verify} messages.
         * @param message FactionAddNewsFeedNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionAddNewsFeedNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionAddNewsFeedNotify message, length delimited. Does not implicitly {@link gamesvr.FactionAddNewsFeedNotify.verify|verify} messages.
         * @param message FactionAddNewsFeedNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionAddNewsFeedNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionAddNewsFeedNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionAddNewsFeedNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionAddNewsFeedNotify;

        /**
         * Decodes a FactionAddNewsFeedNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionAddNewsFeedNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionAddNewsFeedNotify;

        /**
         * Verifies a FactionAddNewsFeedNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionAddNewsFeedNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionAddNewsFeedNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionAddNewsFeedNotify;

        /**
         * Creates a plain object from a FactionAddNewsFeedNotify message. Also converts values to other types if specified.
         * @param message FactionAddNewsFeedNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionAddNewsFeedNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionAddNewsFeedNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionJoinReq. */
    interface IFactionExpeditionJoinReq {

        /** FactionExpeditionJoinReq ChallengeOrder */
        ChallengeOrder?: (number|null);

        /** FactionExpeditionJoinReq HeroIDList */
        HeroIDList?: (number[]|null);
    }

    /** Represents a FactionExpeditionJoinReq. */
    class FactionExpeditionJoinReq implements IFactionExpeditionJoinReq {

        /**
         * Constructs a new FactionExpeditionJoinReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionJoinReq);

        /** FactionExpeditionJoinReq ChallengeOrder. */
        public ChallengeOrder: number;

        /** FactionExpeditionJoinReq HeroIDList. */
        public HeroIDList: number[];

        /**
         * Creates a new FactionExpeditionJoinReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionJoinReq instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionJoinReq): gamesvr.FactionExpeditionJoinReq;

        /**
         * Encodes the specified FactionExpeditionJoinReq message. Does not implicitly {@link gamesvr.FactionExpeditionJoinReq.verify|verify} messages.
         * @param message FactionExpeditionJoinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionJoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionJoinReq message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionJoinReq.verify|verify} messages.
         * @param message FactionExpeditionJoinReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionJoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionJoinReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionJoinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionJoinReq;

        /**
         * Decodes a FactionExpeditionJoinReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionJoinReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionJoinReq;

        /**
         * Verifies a FactionExpeditionJoinReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionJoinReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionJoinReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionJoinReq;

        /**
         * Creates a plain object from a FactionExpeditionJoinReq message. Also converts values to other types if specified.
         * @param message FactionExpeditionJoinReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionJoinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionJoinReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionJoinRes. */
    interface IFactionExpeditionJoinRes {

        /** FactionExpeditionJoinRes HeroIDList */
        HeroIDList?: (number[]|null);

        /** FactionExpeditionJoinRes FactionExpeditionHeroList */
        FactionExpeditionHeroList?: ({ [k: string]: data.IFactionExpeditionHero }|null);
    }

    /** Represents a FactionExpeditionJoinRes. */
    class FactionExpeditionJoinRes implements IFactionExpeditionJoinRes {

        /**
         * Constructs a new FactionExpeditionJoinRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionJoinRes);

        /** FactionExpeditionJoinRes HeroIDList. */
        public HeroIDList: number[];

        /** FactionExpeditionJoinRes FactionExpeditionHeroList. */
        public FactionExpeditionHeroList: { [k: string]: data.IFactionExpeditionHero };

        /**
         * Creates a new FactionExpeditionJoinRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionJoinRes instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionJoinRes): gamesvr.FactionExpeditionJoinRes;

        /**
         * Encodes the specified FactionExpeditionJoinRes message. Does not implicitly {@link gamesvr.FactionExpeditionJoinRes.verify|verify} messages.
         * @param message FactionExpeditionJoinRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionJoinRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionJoinRes message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionJoinRes.verify|verify} messages.
         * @param message FactionExpeditionJoinRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionJoinRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionJoinRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionJoinRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionJoinRes;

        /**
         * Decodes a FactionExpeditionJoinRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionJoinRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionJoinRes;

        /**
         * Verifies a FactionExpeditionJoinRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionJoinRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionJoinRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionJoinRes;

        /**
         * Creates a plain object from a FactionExpeditionJoinRes message. Also converts values to other types if specified.
         * @param message FactionExpeditionJoinRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionJoinRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionJoinRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionUrgeReq. */
    interface IFactionExpeditionUrgeReq {
    }

    /** Represents a FactionExpeditionUrgeReq. */
    class FactionExpeditionUrgeReq implements IFactionExpeditionUrgeReq {

        /**
         * Constructs a new FactionExpeditionUrgeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionUrgeReq);

        /**
         * Creates a new FactionExpeditionUrgeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionUrgeReq instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionUrgeReq): gamesvr.FactionExpeditionUrgeReq;

        /**
         * Encodes the specified FactionExpeditionUrgeReq message. Does not implicitly {@link gamesvr.FactionExpeditionUrgeReq.verify|verify} messages.
         * @param message FactionExpeditionUrgeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionUrgeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionUrgeReq message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionUrgeReq.verify|verify} messages.
         * @param message FactionExpeditionUrgeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionUrgeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionUrgeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionUrgeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionUrgeReq;

        /**
         * Decodes a FactionExpeditionUrgeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionUrgeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionUrgeReq;

        /**
         * Verifies a FactionExpeditionUrgeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionUrgeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionUrgeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionUrgeReq;

        /**
         * Creates a plain object from a FactionExpeditionUrgeReq message. Also converts values to other types if specified.
         * @param message FactionExpeditionUrgeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionUrgeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionUrgeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionUrgeRes. */
    interface IFactionExpeditionUrgeRes {

        /** FactionExpeditionUrgeRes FactionExpeditionHeroList */
        FactionExpeditionHeroList?: ({ [k: string]: data.IFactionExpeditionHero }|null);

        /** FactionExpeditionUrgeRes ExpeditionFreeUrgeCount */
        ExpeditionFreeUrgeCount?: (number|null);
    }

    /** Represents a FactionExpeditionUrgeRes. */
    class FactionExpeditionUrgeRes implements IFactionExpeditionUrgeRes {

        /**
         * Constructs a new FactionExpeditionUrgeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionUrgeRes);

        /** FactionExpeditionUrgeRes FactionExpeditionHeroList. */
        public FactionExpeditionHeroList: { [k: string]: data.IFactionExpeditionHero };

        /** FactionExpeditionUrgeRes ExpeditionFreeUrgeCount. */
        public ExpeditionFreeUrgeCount: number;

        /**
         * Creates a new FactionExpeditionUrgeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionUrgeRes instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionUrgeRes): gamesvr.FactionExpeditionUrgeRes;

        /**
         * Encodes the specified FactionExpeditionUrgeRes message. Does not implicitly {@link gamesvr.FactionExpeditionUrgeRes.verify|verify} messages.
         * @param message FactionExpeditionUrgeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionUrgeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionUrgeRes message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionUrgeRes.verify|verify} messages.
         * @param message FactionExpeditionUrgeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionUrgeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionUrgeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionUrgeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionUrgeRes;

        /**
         * Decodes a FactionExpeditionUrgeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionUrgeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionUrgeRes;

        /**
         * Verifies a FactionExpeditionUrgeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionUrgeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionUrgeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionUrgeRes;

        /**
         * Creates a plain object from a FactionExpeditionUrgeRes message. Also converts values to other types if specified.
         * @param message FactionExpeditionUrgeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionUrgeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionUrgeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionOrderResultNotify. */
    interface IFactionExpeditionOrderResultNotify {

        /** FactionExpeditionOrderResultNotify Level */
        Level?: (number|null);

        /** FactionExpeditionOrderResultNotify Order */
        Order?: (number|null);

        /** FactionExpeditionOrderResultNotify FactionExpeditionOrderInfoUnit */
        FactionExpeditionOrderInfoUnit?: (data.IFactionExpeditionOrderInfo|null);
    }

    /** Represents a FactionExpeditionOrderResultNotify. */
    class FactionExpeditionOrderResultNotify implements IFactionExpeditionOrderResultNotify {

        /**
         * Constructs a new FactionExpeditionOrderResultNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionOrderResultNotify);

        /** FactionExpeditionOrderResultNotify Level. */
        public Level: number;

        /** FactionExpeditionOrderResultNotify Order. */
        public Order: number;

        /** FactionExpeditionOrderResultNotify FactionExpeditionOrderInfoUnit. */
        public FactionExpeditionOrderInfoUnit?: (data.IFactionExpeditionOrderInfo|null);

        /**
         * Creates a new FactionExpeditionOrderResultNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionOrderResultNotify instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionOrderResultNotify): gamesvr.FactionExpeditionOrderResultNotify;

        /**
         * Encodes the specified FactionExpeditionOrderResultNotify message. Does not implicitly {@link gamesvr.FactionExpeditionOrderResultNotify.verify|verify} messages.
         * @param message FactionExpeditionOrderResultNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionOrderResultNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionOrderResultNotify message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionOrderResultNotify.verify|verify} messages.
         * @param message FactionExpeditionOrderResultNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionOrderResultNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionOrderResultNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionOrderResultNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionOrderResultNotify;

        /**
         * Decodes a FactionExpeditionOrderResultNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionOrderResultNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionOrderResultNotify;

        /**
         * Verifies a FactionExpeditionOrderResultNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionOrderResultNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionOrderResultNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionOrderResultNotify;

        /**
         * Creates a plain object from a FactionExpeditionOrderResultNotify message. Also converts values to other types if specified.
         * @param message FactionExpeditionOrderResultNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionOrderResultNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionOrderResultNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionReceiveJoinRewardReq. */
    interface IFactionExpeditionReceiveJoinRewardReq {

        /** FactionExpeditionReceiveJoinRewardReq Order */
        Order?: (number|null);
    }

    /** Represents a FactionExpeditionReceiveJoinRewardReq. */
    class FactionExpeditionReceiveJoinRewardReq implements IFactionExpeditionReceiveJoinRewardReq {

        /**
         * Constructs a new FactionExpeditionReceiveJoinRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionReceiveJoinRewardReq);

        /** FactionExpeditionReceiveJoinRewardReq Order. */
        public Order: number;

        /**
         * Creates a new FactionExpeditionReceiveJoinRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionReceiveJoinRewardReq instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionReceiveJoinRewardReq): gamesvr.FactionExpeditionReceiveJoinRewardReq;

        /**
         * Encodes the specified FactionExpeditionReceiveJoinRewardReq message. Does not implicitly {@link gamesvr.FactionExpeditionReceiveJoinRewardReq.verify|verify} messages.
         * @param message FactionExpeditionReceiveJoinRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionReceiveJoinRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionReceiveJoinRewardReq message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionReceiveJoinRewardReq.verify|verify} messages.
         * @param message FactionExpeditionReceiveJoinRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionReceiveJoinRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionReceiveJoinRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionReceiveJoinRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionReceiveJoinRewardReq;

        /**
         * Decodes a FactionExpeditionReceiveJoinRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionReceiveJoinRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionReceiveJoinRewardReq;

        /**
         * Verifies a FactionExpeditionReceiveJoinRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionReceiveJoinRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionReceiveJoinRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionReceiveJoinRewardReq;

        /**
         * Creates a plain object from a FactionExpeditionReceiveJoinRewardReq message. Also converts values to other types if specified.
         * @param message FactionExpeditionReceiveJoinRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionReceiveJoinRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionReceiveJoinRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionReceiveJoinRewardRes. */
    interface IFactionExpeditionReceiveJoinRewardRes {

        /** FactionExpeditionReceiveJoinRewardRes Order */
        Order?: (number|null);

        /** FactionExpeditionReceiveJoinRewardRes Exp */
        Exp?: (number|null);

        /** FactionExpeditionReceiveJoinRewardRes TotalExp */
        TotalExp?: (number|null);

        /** FactionExpeditionReceiveJoinRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a FactionExpeditionReceiveJoinRewardRes. */
    class FactionExpeditionReceiveJoinRewardRes implements IFactionExpeditionReceiveJoinRewardRes {

        /**
         * Constructs a new FactionExpeditionReceiveJoinRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionReceiveJoinRewardRes);

        /** FactionExpeditionReceiveJoinRewardRes Order. */
        public Order: number;

        /** FactionExpeditionReceiveJoinRewardRes Exp. */
        public Exp: number;

        /** FactionExpeditionReceiveJoinRewardRes TotalExp. */
        public TotalExp: number;

        /** FactionExpeditionReceiveJoinRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new FactionExpeditionReceiveJoinRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionReceiveJoinRewardRes instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionReceiveJoinRewardRes): gamesvr.FactionExpeditionReceiveJoinRewardRes;

        /**
         * Encodes the specified FactionExpeditionReceiveJoinRewardRes message. Does not implicitly {@link gamesvr.FactionExpeditionReceiveJoinRewardRes.verify|verify} messages.
         * @param message FactionExpeditionReceiveJoinRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionReceiveJoinRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionReceiveJoinRewardRes message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionReceiveJoinRewardRes.verify|verify} messages.
         * @param message FactionExpeditionReceiveJoinRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionReceiveJoinRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionReceiveJoinRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionReceiveJoinRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionReceiveJoinRewardRes;

        /**
         * Decodes a FactionExpeditionReceiveJoinRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionReceiveJoinRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionReceiveJoinRewardRes;

        /**
         * Verifies a FactionExpeditionReceiveJoinRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionReceiveJoinRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionReceiveJoinRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionReceiveJoinRewardRes;

        /**
         * Creates a plain object from a FactionExpeditionReceiveJoinRewardRes message. Also converts values to other types if specified.
         * @param message FactionExpeditionReceiveJoinRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionReceiveJoinRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionReceiveJoinRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionReceiveWinRewardReq. */
    interface IFactionExpeditionReceiveWinRewardReq {

        /** FactionExpeditionReceiveWinRewardReq Order */
        Order?: (number|null);
    }

    /** Represents a FactionExpeditionReceiveWinRewardReq. */
    class FactionExpeditionReceiveWinRewardReq implements IFactionExpeditionReceiveWinRewardReq {

        /**
         * Constructs a new FactionExpeditionReceiveWinRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionReceiveWinRewardReq);

        /** FactionExpeditionReceiveWinRewardReq Order. */
        public Order: number;

        /**
         * Creates a new FactionExpeditionReceiveWinRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionReceiveWinRewardReq instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionReceiveWinRewardReq): gamesvr.FactionExpeditionReceiveWinRewardReq;

        /**
         * Encodes the specified FactionExpeditionReceiveWinRewardReq message. Does not implicitly {@link gamesvr.FactionExpeditionReceiveWinRewardReq.verify|verify} messages.
         * @param message FactionExpeditionReceiveWinRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionReceiveWinRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionReceiveWinRewardReq message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionReceiveWinRewardReq.verify|verify} messages.
         * @param message FactionExpeditionReceiveWinRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionReceiveWinRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionReceiveWinRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionReceiveWinRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionReceiveWinRewardReq;

        /**
         * Decodes a FactionExpeditionReceiveWinRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionReceiveWinRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionReceiveWinRewardReq;

        /**
         * Verifies a FactionExpeditionReceiveWinRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionReceiveWinRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionReceiveWinRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionReceiveWinRewardReq;

        /**
         * Creates a plain object from a FactionExpeditionReceiveWinRewardReq message. Also converts values to other types if specified.
         * @param message FactionExpeditionReceiveWinRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionReceiveWinRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionReceiveWinRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionReceiveWinRewardRes. */
    interface IFactionExpeditionReceiveWinRewardRes {

        /** FactionExpeditionReceiveWinRewardRes Order */
        Order?: (number|null);

        /** FactionExpeditionReceiveWinRewardRes Exp */
        Exp?: (number|null);

        /** FactionExpeditionReceiveWinRewardRes TotalExp */
        TotalExp?: (number|null);

        /** FactionExpeditionReceiveWinRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a FactionExpeditionReceiveWinRewardRes. */
    class FactionExpeditionReceiveWinRewardRes implements IFactionExpeditionReceiveWinRewardRes {

        /**
         * Constructs a new FactionExpeditionReceiveWinRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionReceiveWinRewardRes);

        /** FactionExpeditionReceiveWinRewardRes Order. */
        public Order: number;

        /** FactionExpeditionReceiveWinRewardRes Exp. */
        public Exp: number;

        /** FactionExpeditionReceiveWinRewardRes TotalExp. */
        public TotalExp: number;

        /** FactionExpeditionReceiveWinRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new FactionExpeditionReceiveWinRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionReceiveWinRewardRes instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionReceiveWinRewardRes): gamesvr.FactionExpeditionReceiveWinRewardRes;

        /**
         * Encodes the specified FactionExpeditionReceiveWinRewardRes message. Does not implicitly {@link gamesvr.FactionExpeditionReceiveWinRewardRes.verify|verify} messages.
         * @param message FactionExpeditionReceiveWinRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionReceiveWinRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionReceiveWinRewardRes message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionReceiveWinRewardRes.verify|verify} messages.
         * @param message FactionExpeditionReceiveWinRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionReceiveWinRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionReceiveWinRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionReceiveWinRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionReceiveWinRewardRes;

        /**
         * Decodes a FactionExpeditionReceiveWinRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionReceiveWinRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionReceiveWinRewardRes;

        /**
         * Verifies a FactionExpeditionReceiveWinRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionReceiveWinRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionReceiveWinRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionReceiveWinRewardRes;

        /**
         * Creates a plain object from a FactionExpeditionReceiveWinRewardRes message. Also converts values to other types if specified.
         * @param message FactionExpeditionReceiveWinRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionReceiveWinRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionReceiveWinRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionExpeditionLevelRefreshNotify. */
    interface IFactionExpeditionLevelRefreshNotify {

        /** FactionExpeditionLevelRefreshNotify Level */
        Level?: (number|null);

        /** FactionExpeditionLevelRefreshNotify Order */
        Order?: (number|null);
    }

    /** Represents a FactionExpeditionLevelRefreshNotify. */
    class FactionExpeditionLevelRefreshNotify implements IFactionExpeditionLevelRefreshNotify {

        /**
         * Constructs a new FactionExpeditionLevelRefreshNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionExpeditionLevelRefreshNotify);

        /** FactionExpeditionLevelRefreshNotify Level. */
        public Level: number;

        /** FactionExpeditionLevelRefreshNotify Order. */
        public Order: number;

        /**
         * Creates a new FactionExpeditionLevelRefreshNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionExpeditionLevelRefreshNotify instance
         */
        public static create(properties?: gamesvr.IFactionExpeditionLevelRefreshNotify): gamesvr.FactionExpeditionLevelRefreshNotify;

        /**
         * Encodes the specified FactionExpeditionLevelRefreshNotify message. Does not implicitly {@link gamesvr.FactionExpeditionLevelRefreshNotify.verify|verify} messages.
         * @param message FactionExpeditionLevelRefreshNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionExpeditionLevelRefreshNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionExpeditionLevelRefreshNotify message, length delimited. Does not implicitly {@link gamesvr.FactionExpeditionLevelRefreshNotify.verify|verify} messages.
         * @param message FactionExpeditionLevelRefreshNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionExpeditionLevelRefreshNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionExpeditionLevelRefreshNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionExpeditionLevelRefreshNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionExpeditionLevelRefreshNotify;

        /**
         * Decodes a FactionExpeditionLevelRefreshNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionExpeditionLevelRefreshNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionExpeditionLevelRefreshNotify;

        /**
         * Verifies a FactionExpeditionLevelRefreshNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionExpeditionLevelRefreshNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionExpeditionLevelRefreshNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionExpeditionLevelRefreshNotify;

        /**
         * Creates a plain object from a FactionExpeditionLevelRefreshNotify message. Also converts values to other types if specified.
         * @param message FactionExpeditionLevelRefreshNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionExpeditionLevelRefreshNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionExpeditionLevelRefreshNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSignInReq. */
    interface IFactionSignInReq {
    }

    /** Represents a FactionSignInReq. */
    class FactionSignInReq implements IFactionSignInReq {

        /**
         * Constructs a new FactionSignInReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSignInReq);

        /**
         * Creates a new FactionSignInReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSignInReq instance
         */
        public static create(properties?: gamesvr.IFactionSignInReq): gamesvr.FactionSignInReq;

        /**
         * Encodes the specified FactionSignInReq message. Does not implicitly {@link gamesvr.FactionSignInReq.verify|verify} messages.
         * @param message FactionSignInReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSignInReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSignInReq message, length delimited. Does not implicitly {@link gamesvr.FactionSignInReq.verify|verify} messages.
         * @param message FactionSignInReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSignInReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSignInReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSignInReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSignInReq;

        /**
         * Decodes a FactionSignInReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSignInReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSignInReq;

        /**
         * Verifies a FactionSignInReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSignInReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSignInReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSignInReq;

        /**
         * Creates a plain object from a FactionSignInReq message. Also converts values to other types if specified.
         * @param message FactionSignInReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSignInReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSignInReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionSignInRes. */
    interface IFactionSignInRes {

        /** FactionSignInRes IsSignIn */
        IsSignIn?: (boolean|null);

        /** FactionSignInRes Exp */
        Exp?: (number|null);

        /** FactionSignInRes TotalExp */
        TotalExp?: (number|null);

        /** FactionSignInRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a FactionSignInRes. */
    class FactionSignInRes implements IFactionSignInRes {

        /**
         * Constructs a new FactionSignInRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionSignInRes);

        /** FactionSignInRes IsSignIn. */
        public IsSignIn: boolean;

        /** FactionSignInRes Exp. */
        public Exp: number;

        /** FactionSignInRes TotalExp. */
        public TotalExp: number;

        /** FactionSignInRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new FactionSignInRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionSignInRes instance
         */
        public static create(properties?: gamesvr.IFactionSignInRes): gamesvr.FactionSignInRes;

        /**
         * Encodes the specified FactionSignInRes message. Does not implicitly {@link gamesvr.FactionSignInRes.verify|verify} messages.
         * @param message FactionSignInRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionSignInRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionSignInRes message, length delimited. Does not implicitly {@link gamesvr.FactionSignInRes.verify|verify} messages.
         * @param message FactionSignInRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionSignInRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionSignInRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionSignInRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionSignInRes;

        /**
         * Decodes a FactionSignInRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionSignInRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionSignInRes;

        /**
         * Verifies a FactionSignInRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionSignInRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionSignInRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionSignInRes;

        /**
         * Creates a plain object from a FactionSignInRes message. Also converts values to other types if specified.
         * @param message FactionSignInRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionSignInRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionSignInRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDonateReq. */
    interface IFactionDonateReq {

        /** FactionDonateReq DonateID */
        DonateID?: (number|null);
    }

    /** Represents a FactionDonateReq. */
    class FactionDonateReq implements IFactionDonateReq {

        /**
         * Constructs a new FactionDonateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDonateReq);

        /** FactionDonateReq DonateID. */
        public DonateID: number;

        /**
         * Creates a new FactionDonateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDonateReq instance
         */
        public static create(properties?: gamesvr.IFactionDonateReq): gamesvr.FactionDonateReq;

        /**
         * Encodes the specified FactionDonateReq message. Does not implicitly {@link gamesvr.FactionDonateReq.verify|verify} messages.
         * @param message FactionDonateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDonateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDonateReq message, length delimited. Does not implicitly {@link gamesvr.FactionDonateReq.verify|verify} messages.
         * @param message FactionDonateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDonateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDonateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDonateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDonateReq;

        /**
         * Decodes a FactionDonateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDonateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDonateReq;

        /**
         * Verifies a FactionDonateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDonateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDonateReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDonateReq;

        /**
         * Creates a plain object from a FactionDonateReq message. Also converts values to other types if specified.
         * @param message FactionDonateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDonateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDonateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FactionDonateRes. */
    interface IFactionDonateRes {

        /** FactionDonateRes DonateCount */
        DonateCount?: (number|null);

        /** FactionDonateRes Exp */
        Exp?: (number|null);

        /** FactionDonateRes TotalExp */
        TotalExp?: (number|null);

        /** FactionDonateRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a FactionDonateRes. */
    class FactionDonateRes implements IFactionDonateRes {

        /**
         * Constructs a new FactionDonateRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFactionDonateRes);

        /** FactionDonateRes DonateCount. */
        public DonateCount: number;

        /** FactionDonateRes Exp. */
        public Exp: number;

        /** FactionDonateRes TotalExp. */
        public TotalExp: number;

        /** FactionDonateRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new FactionDonateRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FactionDonateRes instance
         */
        public static create(properties?: gamesvr.IFactionDonateRes): gamesvr.FactionDonateRes;

        /**
         * Encodes the specified FactionDonateRes message. Does not implicitly {@link gamesvr.FactionDonateRes.verify|verify} messages.
         * @param message FactionDonateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFactionDonateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FactionDonateRes message, length delimited. Does not implicitly {@link gamesvr.FactionDonateRes.verify|verify} messages.
         * @param message FactionDonateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFactionDonateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FactionDonateRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FactionDonateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FactionDonateRes;

        /**
         * Decodes a FactionDonateRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FactionDonateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FactionDonateRes;

        /**
         * Verifies a FactionDonateRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FactionDonateRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FactionDonateRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FactionDonateRes;

        /**
         * Creates a plain object from a FactionDonateRes message. Also converts values to other types if specified.
         * @param message FactionDonateRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FactionDonateRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FactionDonateRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GachaCardReq. */
    interface IGachaCardReq {

        /** GachaCardReq GachaID */
        GachaID?: (number|null);

        /** GachaCardReq GachaCount */
        GachaCount?: (number|null);
    }

    /** Represents a GachaCardReq. */
    class GachaCardReq implements IGachaCardReq {

        /**
         * Constructs a new GachaCardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGachaCardReq);

        /** GachaCardReq GachaID. */
        public GachaID: number;

        /** GachaCardReq GachaCount. */
        public GachaCount: number;

        /**
         * Creates a new GachaCardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GachaCardReq instance
         */
        public static create(properties?: gamesvr.IGachaCardReq): gamesvr.GachaCardReq;

        /**
         * Encodes the specified GachaCardReq message. Does not implicitly {@link gamesvr.GachaCardReq.verify|verify} messages.
         * @param message GachaCardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGachaCardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GachaCardReq message, length delimited. Does not implicitly {@link gamesvr.GachaCardReq.verify|verify} messages.
         * @param message GachaCardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGachaCardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GachaCardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GachaCardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GachaCardReq;

        /**
         * Decodes a GachaCardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GachaCardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GachaCardReq;

        /**
         * Verifies a GachaCardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GachaCardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GachaCardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GachaCardReq;

        /**
         * Creates a plain object from a GachaCardReq message. Also converts values to other types if specified.
         * @param message GachaCardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GachaCardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GachaCardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GachaCardRes. */
    interface IGachaCardRes {

        /** GachaCardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** GachaCardRes GachaID */
        GachaID?: (number|null);

        /** GachaCardRes GachaRecord */
        GachaRecord?: (data.ICardPoolRecord|null);
    }

    /** Represents a GachaCardRes. */
    class GachaCardRes implements IGachaCardRes {

        /**
         * Constructs a new GachaCardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGachaCardRes);

        /** GachaCardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** GachaCardRes GachaID. */
        public GachaID: number;

        /** GachaCardRes GachaRecord. */
        public GachaRecord?: (data.ICardPoolRecord|null);

        /**
         * Creates a new GachaCardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GachaCardRes instance
         */
        public static create(properties?: gamesvr.IGachaCardRes): gamesvr.GachaCardRes;

        /**
         * Encodes the specified GachaCardRes message. Does not implicitly {@link gamesvr.GachaCardRes.verify|verify} messages.
         * @param message GachaCardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGachaCardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GachaCardRes message, length delimited. Does not implicitly {@link gamesvr.GachaCardRes.verify|verify} messages.
         * @param message GachaCardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGachaCardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GachaCardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GachaCardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GachaCardRes;

        /**
         * Decodes a GachaCardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GachaCardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GachaCardRes;

        /**
         * Verifies a GachaCardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GachaCardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GachaCardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GachaCardRes;

        /**
         * Creates a plain object from a GachaCardRes message. Also converts values to other types if specified.
         * @param message GachaCardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GachaCardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GachaCardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GachaSimulateReq. */
    interface IGachaSimulateReq {

        /** GachaSimulateReq GachaID */
        GachaID?: (number|null);
    }

    /** Represents a GachaSimulateReq. */
    class GachaSimulateReq implements IGachaSimulateReq {

        /**
         * Constructs a new GachaSimulateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGachaSimulateReq);

        /** GachaSimulateReq GachaID. */
        public GachaID: number;

        /**
         * Creates a new GachaSimulateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GachaSimulateReq instance
         */
        public static create(properties?: gamesvr.IGachaSimulateReq): gamesvr.GachaSimulateReq;

        /**
         * Encodes the specified GachaSimulateReq message. Does not implicitly {@link gamesvr.GachaSimulateReq.verify|verify} messages.
         * @param message GachaSimulateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGachaSimulateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GachaSimulateReq message, length delimited. Does not implicitly {@link gamesvr.GachaSimulateReq.verify|verify} messages.
         * @param message GachaSimulateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGachaSimulateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GachaSimulateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GachaSimulateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GachaSimulateReq;

        /**
         * Decodes a GachaSimulateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GachaSimulateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GachaSimulateReq;

        /**
         * Verifies a GachaSimulateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GachaSimulateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GachaSimulateReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GachaSimulateReq;

        /**
         * Creates a plain object from a GachaSimulateReq message. Also converts values to other types if specified.
         * @param message GachaSimulateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GachaSimulateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GachaSimulateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GachaSimulateRes. */
    interface IGachaSimulateRes {

        /** GachaSimulateRes GachaID */
        GachaID?: (number|null);

        /** GachaSimulateRes GachaRecord */
        GachaRecord?: (data.ICardPoolRecord|null);
    }

    /** Represents a GachaSimulateRes. */
    class GachaSimulateRes implements IGachaSimulateRes {

        /**
         * Constructs a new GachaSimulateRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGachaSimulateRes);

        /** GachaSimulateRes GachaID. */
        public GachaID: number;

        /** GachaSimulateRes GachaRecord. */
        public GachaRecord?: (data.ICardPoolRecord|null);

        /**
         * Creates a new GachaSimulateRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GachaSimulateRes instance
         */
        public static create(properties?: gamesvr.IGachaSimulateRes): gamesvr.GachaSimulateRes;

        /**
         * Encodes the specified GachaSimulateRes message. Does not implicitly {@link gamesvr.GachaSimulateRes.verify|verify} messages.
         * @param message GachaSimulateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGachaSimulateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GachaSimulateRes message, length delimited. Does not implicitly {@link gamesvr.GachaSimulateRes.verify|verify} messages.
         * @param message GachaSimulateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGachaSimulateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GachaSimulateRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GachaSimulateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GachaSimulateRes;

        /**
         * Decodes a GachaSimulateRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GachaSimulateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GachaSimulateRes;

        /**
         * Verifies a GachaSimulateRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GachaSimulateRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GachaSimulateRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GachaSimulateRes;

        /**
         * Creates a plain object from a GachaSimulateRes message. Also converts values to other types if specified.
         * @param message GachaSimulateRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GachaSimulateRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GachaSimulateRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SaveSimulateReq. */
    interface ISaveSimulateReq {

        /** SaveSimulateReq Seq */
        Seq?: (number|null);

        /** SaveSimulateReq GachaID */
        GachaID?: (number|null);
    }

    /** Represents a SaveSimulateReq. */
    class SaveSimulateReq implements ISaveSimulateReq {

        /**
         * Constructs a new SaveSimulateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISaveSimulateReq);

        /** SaveSimulateReq Seq. */
        public Seq: number;

        /** SaveSimulateReq GachaID. */
        public GachaID: number;

        /**
         * Creates a new SaveSimulateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SaveSimulateReq instance
         */
        public static create(properties?: gamesvr.ISaveSimulateReq): gamesvr.SaveSimulateReq;

        /**
         * Encodes the specified SaveSimulateReq message. Does not implicitly {@link gamesvr.SaveSimulateReq.verify|verify} messages.
         * @param message SaveSimulateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISaveSimulateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SaveSimulateReq message, length delimited. Does not implicitly {@link gamesvr.SaveSimulateReq.verify|verify} messages.
         * @param message SaveSimulateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISaveSimulateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SaveSimulateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SaveSimulateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SaveSimulateReq;

        /**
         * Decodes a SaveSimulateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SaveSimulateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SaveSimulateReq;

        /**
         * Verifies a SaveSimulateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SaveSimulateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SaveSimulateReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SaveSimulateReq;

        /**
         * Creates a plain object from a SaveSimulateReq message. Also converts values to other types if specified.
         * @param message SaveSimulateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SaveSimulateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SaveSimulateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SaveSimulateRes. */
    interface ISaveSimulateRes {

        /** SaveSimulateRes GachaID */
        GachaID?: (number|null);

        /** SaveSimulateRes SimulateRecord */
        SimulateRecord?: (data.ISimulateRecord|null);
    }

    /** Represents a SaveSimulateRes. */
    class SaveSimulateRes implements ISaveSimulateRes {

        /**
         * Constructs a new SaveSimulateRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISaveSimulateRes);

        /** SaveSimulateRes GachaID. */
        public GachaID: number;

        /** SaveSimulateRes SimulateRecord. */
        public SimulateRecord?: (data.ISimulateRecord|null);

        /**
         * Creates a new SaveSimulateRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SaveSimulateRes instance
         */
        public static create(properties?: gamesvr.ISaveSimulateRes): gamesvr.SaveSimulateRes;

        /**
         * Encodes the specified SaveSimulateRes message. Does not implicitly {@link gamesvr.SaveSimulateRes.verify|verify} messages.
         * @param message SaveSimulateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISaveSimulateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SaveSimulateRes message, length delimited. Does not implicitly {@link gamesvr.SaveSimulateRes.verify|verify} messages.
         * @param message SaveSimulateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISaveSimulateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SaveSimulateRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SaveSimulateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SaveSimulateRes;

        /**
         * Decodes a SaveSimulateRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SaveSimulateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SaveSimulateRes;

        /**
         * Verifies a SaveSimulateRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SaveSimulateRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SaveSimulateRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SaveSimulateRes;

        /**
         * Creates a plain object from a SaveSimulateRes message. Also converts values to other types if specified.
         * @param message SaveSimulateRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SaveSimulateRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SaveSimulateRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SelectSimulateReq. */
    interface ISelectSimulateReq {

        /** SelectSimulateReq Seq */
        Seq?: (number|null);

        /** SelectSimulateReq GachaID */
        GachaID?: (number|null);
    }

    /** Represents a SelectSimulateReq. */
    class SelectSimulateReq implements ISelectSimulateReq {

        /**
         * Constructs a new SelectSimulateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISelectSimulateReq);

        /** SelectSimulateReq Seq. */
        public Seq: number;

        /** SelectSimulateReq GachaID. */
        public GachaID: number;

        /**
         * Creates a new SelectSimulateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SelectSimulateReq instance
         */
        public static create(properties?: gamesvr.ISelectSimulateReq): gamesvr.SelectSimulateReq;

        /**
         * Encodes the specified SelectSimulateReq message. Does not implicitly {@link gamesvr.SelectSimulateReq.verify|verify} messages.
         * @param message SelectSimulateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISelectSimulateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SelectSimulateReq message, length delimited. Does not implicitly {@link gamesvr.SelectSimulateReq.verify|verify} messages.
         * @param message SelectSimulateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISelectSimulateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SelectSimulateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SelectSimulateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SelectSimulateReq;

        /**
         * Decodes a SelectSimulateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SelectSimulateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SelectSimulateReq;

        /**
         * Verifies a SelectSimulateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SelectSimulateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SelectSimulateReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SelectSimulateReq;

        /**
         * Creates a plain object from a SelectSimulateReq message. Also converts values to other types if specified.
         * @param message SelectSimulateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SelectSimulateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SelectSimulateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SelectSimulateRes. */
    interface ISelectSimulateRes {

        /** SelectSimulateRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** SelectSimulateRes GachaID */
        GachaID?: (number|null);

        /** SelectSimulateRes GachaRecord */
        GachaRecord?: (data.ICardPoolRecord|null);
    }

    /** Represents a SelectSimulateRes. */
    class SelectSimulateRes implements ISelectSimulateRes {

        /**
         * Constructs a new SelectSimulateRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISelectSimulateRes);

        /** SelectSimulateRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** SelectSimulateRes GachaID. */
        public GachaID: number;

        /** SelectSimulateRes GachaRecord. */
        public GachaRecord?: (data.ICardPoolRecord|null);

        /**
         * Creates a new SelectSimulateRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SelectSimulateRes instance
         */
        public static create(properties?: gamesvr.ISelectSimulateRes): gamesvr.SelectSimulateRes;

        /**
         * Encodes the specified SelectSimulateRes message. Does not implicitly {@link gamesvr.SelectSimulateRes.verify|verify} messages.
         * @param message SelectSimulateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISelectSimulateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SelectSimulateRes message, length delimited. Does not implicitly {@link gamesvr.SelectSimulateRes.verify|verify} messages.
         * @param message SelectSimulateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISelectSimulateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SelectSimulateRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SelectSimulateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SelectSimulateRes;

        /**
         * Decodes a SelectSimulateRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SelectSimulateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SelectSimulateRes;

        /**
         * Verifies a SelectSimulateRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SelectSimulateRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SelectSimulateRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SelectSimulateRes;

        /**
         * Creates a plain object from a SelectSimulateRes message. Also converts values to other types if specified.
         * @param message SelectSimulateRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SelectSimulateRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SelectSimulateRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CardPoolStatusNotify. */
    interface ICardPoolStatusNotify {

        /** CardPoolStatusNotify GachaID */
        GachaID?: (number|null);

        /** CardPoolStatusNotify GachaRecord */
        GachaRecord?: (data.ICardPoolRecord|null);
    }

    /** Represents a CardPoolStatusNotify. */
    class CardPoolStatusNotify implements ICardPoolStatusNotify {

        /**
         * Constructs a new CardPoolStatusNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICardPoolStatusNotify);

        /** CardPoolStatusNotify GachaID. */
        public GachaID: number;

        /** CardPoolStatusNotify GachaRecord. */
        public GachaRecord?: (data.ICardPoolRecord|null);

        /**
         * Creates a new CardPoolStatusNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CardPoolStatusNotify instance
         */
        public static create(properties?: gamesvr.ICardPoolStatusNotify): gamesvr.CardPoolStatusNotify;

        /**
         * Encodes the specified CardPoolStatusNotify message. Does not implicitly {@link gamesvr.CardPoolStatusNotify.verify|verify} messages.
         * @param message CardPoolStatusNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICardPoolStatusNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CardPoolStatusNotify message, length delimited. Does not implicitly {@link gamesvr.CardPoolStatusNotify.verify|verify} messages.
         * @param message CardPoolStatusNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICardPoolStatusNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CardPoolStatusNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CardPoolStatusNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CardPoolStatusNotify;

        /**
         * Decodes a CardPoolStatusNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CardPoolStatusNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CardPoolStatusNotify;

        /**
         * Verifies a CardPoolStatusNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CardPoolStatusNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CardPoolStatusNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CardPoolStatusNotify;

        /**
         * Creates a plain object from a CardPoolStatusNotify message. Also converts values to other types if specified.
         * @param message CardPoolStatusNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CardPoolStatusNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CardPoolStatusNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SummonCardCountNotify. */
    interface ISummonCardCountNotify {

        /** SummonCardCountNotify GachaID */
        GachaID?: (number|null);

        /** SummonCardCountNotify GachaCount */
        GachaCount?: (number|null);
    }

    /** Represents a SummonCardCountNotify. */
    class SummonCardCountNotify implements ISummonCardCountNotify {

        /**
         * Constructs a new SummonCardCountNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISummonCardCountNotify);

        /** SummonCardCountNotify GachaID. */
        public GachaID: number;

        /** SummonCardCountNotify GachaCount. */
        public GachaCount: number;

        /**
         * Creates a new SummonCardCountNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SummonCardCountNotify instance
         */
        public static create(properties?: gamesvr.ISummonCardCountNotify): gamesvr.SummonCardCountNotify;

        /**
         * Encodes the specified SummonCardCountNotify message. Does not implicitly {@link gamesvr.SummonCardCountNotify.verify|verify} messages.
         * @param message SummonCardCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISummonCardCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SummonCardCountNotify message, length delimited. Does not implicitly {@link gamesvr.SummonCardCountNotify.verify|verify} messages.
         * @param message SummonCardCountNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISummonCardCountNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SummonCardCountNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SummonCardCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SummonCardCountNotify;

        /**
         * Decodes a SummonCardCountNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SummonCardCountNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SummonCardCountNotify;

        /**
         * Verifies a SummonCardCountNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SummonCardCountNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SummonCardCountNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SummonCardCountNotify;

        /**
         * Creates a plain object from a SummonCardCountNotify message. Also converts values to other types if specified.
         * @param message SummonCardCountNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SummonCardCountNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SummonCardCountNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FinishGuideReq. */
    interface IFinishGuideReq {

        /** FinishGuideReq GuideId */
        GuideId?: (number|null);
    }

    /** Represents a FinishGuideReq. */
    class FinishGuideReq implements IFinishGuideReq {

        /**
         * Constructs a new FinishGuideReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFinishGuideReq);

        /** FinishGuideReq GuideId. */
        public GuideId: number;

        /**
         * Creates a new FinishGuideReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinishGuideReq instance
         */
        public static create(properties?: gamesvr.IFinishGuideReq): gamesvr.FinishGuideReq;

        /**
         * Encodes the specified FinishGuideReq message. Does not implicitly {@link gamesvr.FinishGuideReq.verify|verify} messages.
         * @param message FinishGuideReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFinishGuideReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FinishGuideReq message, length delimited. Does not implicitly {@link gamesvr.FinishGuideReq.verify|verify} messages.
         * @param message FinishGuideReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFinishGuideReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FinishGuideReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinishGuideReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FinishGuideReq;

        /**
         * Decodes a FinishGuideReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinishGuideReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FinishGuideReq;

        /**
         * Verifies a FinishGuideReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FinishGuideReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FinishGuideReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FinishGuideReq;

        /**
         * Creates a plain object from a FinishGuideReq message. Also converts values to other types if specified.
         * @param message FinishGuideReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FinishGuideReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FinishGuideReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FinishGuideRes. */
    interface IFinishGuideRes {

        /** FinishGuideRes GuideId */
        GuideId?: (number|null);
    }

    /** Represents a FinishGuideRes. */
    class FinishGuideRes implements IFinishGuideRes {

        /**
         * Constructs a new FinishGuideRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFinishGuideRes);

        /** FinishGuideRes GuideId. */
        public GuideId: number;

        /**
         * Creates a new FinishGuideRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinishGuideRes instance
         */
        public static create(properties?: gamesvr.IFinishGuideRes): gamesvr.FinishGuideRes;

        /**
         * Encodes the specified FinishGuideRes message. Does not implicitly {@link gamesvr.FinishGuideRes.verify|verify} messages.
         * @param message FinishGuideRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFinishGuideRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FinishGuideRes message, length delimited. Does not implicitly {@link gamesvr.FinishGuideRes.verify|verify} messages.
         * @param message FinishGuideRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFinishGuideRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FinishGuideRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinishGuideRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FinishGuideRes;

        /**
         * Decodes a FinishGuideRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinishGuideRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FinishGuideRes;

        /**
         * Verifies a FinishGuideRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FinishGuideRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FinishGuideRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FinishGuideRes;

        /**
         * Creates a plain object from a FinishGuideRes message. Also converts values to other types if specified.
         * @param message FinishGuideRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FinishGuideRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FinishGuideRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComposeHeroReq. */
    interface IComposeHeroReq {

        /** ComposeHeroReq HeroID */
        HeroID?: (number|null);
    }

    /** Represents a ComposeHeroReq. */
    class ComposeHeroReq implements IComposeHeroReq {

        /**
         * Constructs a new ComposeHeroReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IComposeHeroReq);

        /** ComposeHeroReq HeroID. */
        public HeroID: number;

        /**
         * Creates a new ComposeHeroReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComposeHeroReq instance
         */
        public static create(properties?: gamesvr.IComposeHeroReq): gamesvr.ComposeHeroReq;

        /**
         * Encodes the specified ComposeHeroReq message. Does not implicitly {@link gamesvr.ComposeHeroReq.verify|verify} messages.
         * @param message ComposeHeroReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IComposeHeroReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComposeHeroReq message, length delimited. Does not implicitly {@link gamesvr.ComposeHeroReq.verify|verify} messages.
         * @param message ComposeHeroReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IComposeHeroReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComposeHeroReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComposeHeroReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ComposeHeroReq;

        /**
         * Decodes a ComposeHeroReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComposeHeroReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ComposeHeroReq;

        /**
         * Verifies a ComposeHeroReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComposeHeroReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComposeHeroReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ComposeHeroReq;

        /**
         * Creates a plain object from a ComposeHeroReq message. Also converts values to other types if specified.
         * @param message ComposeHeroReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ComposeHeroReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComposeHeroReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ComposeHeroRes. */
    interface IComposeHeroRes {

        /** ComposeHeroRes HeroID */
        HeroID?: (number|null);
    }

    /** Represents a ComposeHeroRes. */
    class ComposeHeroRes implements IComposeHeroRes {

        /**
         * Constructs a new ComposeHeroRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IComposeHeroRes);

        /** ComposeHeroRes HeroID. */
        public HeroID: number;

        /**
         * Creates a new ComposeHeroRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ComposeHeroRes instance
         */
        public static create(properties?: gamesvr.IComposeHeroRes): gamesvr.ComposeHeroRes;

        /**
         * Encodes the specified ComposeHeroRes message. Does not implicitly {@link gamesvr.ComposeHeroRes.verify|verify} messages.
         * @param message ComposeHeroRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IComposeHeroRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ComposeHeroRes message, length delimited. Does not implicitly {@link gamesvr.ComposeHeroRes.verify|verify} messages.
         * @param message ComposeHeroRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IComposeHeroRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ComposeHeroRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ComposeHeroRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ComposeHeroRes;

        /**
         * Decodes a ComposeHeroRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ComposeHeroRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ComposeHeroRes;

        /**
         * Verifies a ComposeHeroRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ComposeHeroRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ComposeHeroRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ComposeHeroRes;

        /**
         * Creates a plain object from a ComposeHeroRes message. Also converts values to other types if specified.
         * @param message ComposeHeroRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ComposeHeroRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ComposeHeroRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddHeroStarReq. */
    interface IAddHeroStarReq {

        /** AddHeroStarReq HeroID */
        HeroID?: (number|null);
    }

    /** Represents an AddHeroStarReq. */
    class AddHeroStarReq implements IAddHeroStarReq {

        /**
         * Constructs a new AddHeroStarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAddHeroStarReq);

        /** AddHeroStarReq HeroID. */
        public HeroID: number;

        /**
         * Creates a new AddHeroStarReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddHeroStarReq instance
         */
        public static create(properties?: gamesvr.IAddHeroStarReq): gamesvr.AddHeroStarReq;

        /**
         * Encodes the specified AddHeroStarReq message. Does not implicitly {@link gamesvr.AddHeroStarReq.verify|verify} messages.
         * @param message AddHeroStarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAddHeroStarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddHeroStarReq message, length delimited. Does not implicitly {@link gamesvr.AddHeroStarReq.verify|verify} messages.
         * @param message AddHeroStarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAddHeroStarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddHeroStarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddHeroStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AddHeroStarReq;

        /**
         * Decodes an AddHeroStarReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddHeroStarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AddHeroStarReq;

        /**
         * Verifies an AddHeroStarReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddHeroStarReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddHeroStarReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AddHeroStarReq;

        /**
         * Creates a plain object from an AddHeroStarReq message. Also converts values to other types if specified.
         * @param message AddHeroStarReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AddHeroStarReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddHeroStarReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddHeroStarRes. */
    interface IAddHeroStarRes {

        /** AddHeroStarRes HeroID */
        HeroID?: (number|null);

        /** AddHeroStarRes Star */
        Star?: (number|null);
    }

    /** Represents an AddHeroStarRes. */
    class AddHeroStarRes implements IAddHeroStarRes {

        /**
         * Constructs a new AddHeroStarRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAddHeroStarRes);

        /** AddHeroStarRes HeroID. */
        public HeroID: number;

        /** AddHeroStarRes Star. */
        public Star: number;

        /**
         * Creates a new AddHeroStarRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddHeroStarRes instance
         */
        public static create(properties?: gamesvr.IAddHeroStarRes): gamesvr.AddHeroStarRes;

        /**
         * Encodes the specified AddHeroStarRes message. Does not implicitly {@link gamesvr.AddHeroStarRes.verify|verify} messages.
         * @param message AddHeroStarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAddHeroStarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddHeroStarRes message, length delimited. Does not implicitly {@link gamesvr.AddHeroStarRes.verify|verify} messages.
         * @param message AddHeroStarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAddHeroStarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddHeroStarRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddHeroStarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AddHeroStarRes;

        /**
         * Decodes an AddHeroStarRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddHeroStarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AddHeroStarRes;

        /**
         * Verifies an AddHeroStarRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddHeroStarRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddHeroStarRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AddHeroStarRes;

        /**
         * Creates a plain object from an AddHeroStarRes message. Also converts values to other types if specified.
         * @param message AddHeroStarRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AddHeroStarRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddHeroStarRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EquipInfo. */
    interface IEquipInfo {

        /** EquipInfo Seq */
        Seq?: (number|Long|null);

        /** EquipInfo ID */
        ID?: (number|null);
    }

    /** Represents an EquipInfo. */
    class EquipInfo implements IEquipInfo {

        /**
         * Constructs a new EquipInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEquipInfo);

        /** EquipInfo Seq. */
        public Seq: (number|Long);

        /** EquipInfo ID. */
        public ID: number;

        /**
         * Creates a new EquipInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EquipInfo instance
         */
        public static create(properties?: gamesvr.IEquipInfo): gamesvr.EquipInfo;

        /**
         * Encodes the specified EquipInfo message. Does not implicitly {@link gamesvr.EquipInfo.verify|verify} messages.
         * @param message EquipInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEquipInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EquipInfo message, length delimited. Does not implicitly {@link gamesvr.EquipInfo.verify|verify} messages.
         * @param message EquipInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEquipInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EquipInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EquipInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EquipInfo;

        /**
         * Decodes an EquipInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EquipInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EquipInfo;

        /**
         * Verifies an EquipInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EquipInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EquipInfo
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EquipInfo;

        /**
         * Creates a plain object from an EquipInfo message. Also converts values to other types if specified.
         * @param message EquipInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EquipInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EquipInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroEquipReq. */
    interface IHeroEquipReq {

        /** HeroEquipReq HeroID */
        HeroID?: (number|null);

        /** HeroEquipReq Positon */
        Positon?: (number|null);

        /** HeroEquipReq EquipSeq */
        EquipSeq?: (number|Long|null);

        /** HeroEquipReq EquipID */
        EquipID?: (number|null);
    }

    /** Represents a HeroEquipReq. */
    class HeroEquipReq implements IHeroEquipReq {

        /**
         * Constructs a new HeroEquipReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeroEquipReq);

        /** HeroEquipReq HeroID. */
        public HeroID: number;

        /** HeroEquipReq Positon. */
        public Positon: number;

        /** HeroEquipReq EquipSeq. */
        public EquipSeq: (number|Long);

        /** HeroEquipReq EquipID. */
        public EquipID: number;

        /**
         * Creates a new HeroEquipReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroEquipReq instance
         */
        public static create(properties?: gamesvr.IHeroEquipReq): gamesvr.HeroEquipReq;

        /**
         * Encodes the specified HeroEquipReq message. Does not implicitly {@link gamesvr.HeroEquipReq.verify|verify} messages.
         * @param message HeroEquipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeroEquipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroEquipReq message, length delimited. Does not implicitly {@link gamesvr.HeroEquipReq.verify|verify} messages.
         * @param message HeroEquipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeroEquipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroEquipReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeroEquipReq;

        /**
         * Decodes a HeroEquipReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeroEquipReq;

        /**
         * Verifies a HeroEquipReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroEquipReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroEquipReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeroEquipReq;

        /**
         * Creates a plain object from a HeroEquipReq message. Also converts values to other types if specified.
         * @param message HeroEquipReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeroEquipReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroEquipReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroEquipRes. */
    interface IHeroEquipRes {

        /** HeroEquipRes HeroID */
        HeroID?: (number|null);

        /** HeroEquipRes Positon */
        Positon?: (number|null);

        /** HeroEquipRes EquipSeq */
        EquipSeq?: (number|Long|null);

        /** HeroEquipRes EquipID */
        EquipID?: (number|null);
    }

    /** Represents a HeroEquipRes. */
    class HeroEquipRes implements IHeroEquipRes {

        /**
         * Constructs a new HeroEquipRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeroEquipRes);

        /** HeroEquipRes HeroID. */
        public HeroID: number;

        /** HeroEquipRes Positon. */
        public Positon: number;

        /** HeroEquipRes EquipSeq. */
        public EquipSeq: (number|Long);

        /** HeroEquipRes EquipID. */
        public EquipID: number;

        /**
         * Creates a new HeroEquipRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroEquipRes instance
         */
        public static create(properties?: gamesvr.IHeroEquipRes): gamesvr.HeroEquipRes;

        /**
         * Encodes the specified HeroEquipRes message. Does not implicitly {@link gamesvr.HeroEquipRes.verify|verify} messages.
         * @param message HeroEquipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeroEquipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroEquipRes message, length delimited. Does not implicitly {@link gamesvr.HeroEquipRes.verify|verify} messages.
         * @param message HeroEquipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeroEquipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroEquipRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroEquipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeroEquipRes;

        /**
         * Decodes a HeroEquipRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroEquipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeroEquipRes;

        /**
         * Verifies a HeroEquipRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroEquipRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroEquipRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeroEquipRes;

        /**
         * Creates a plain object from a HeroEquipRes message. Also converts values to other types if specified.
         * @param message HeroEquipRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeroEquipRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroEquipRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroUnequipReq. */
    interface IHeroUnequipReq {

        /** HeroUnequipReq HeroID */
        HeroID?: (number|null);

        /** HeroUnequipReq Positon */
        Positon?: (number|null);
    }

    /** Represents a HeroUnequipReq. */
    class HeroUnequipReq implements IHeroUnequipReq {

        /**
         * Constructs a new HeroUnequipReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeroUnequipReq);

        /** HeroUnequipReq HeroID. */
        public HeroID: number;

        /** HeroUnequipReq Positon. */
        public Positon: number;

        /**
         * Creates a new HeroUnequipReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroUnequipReq instance
         */
        public static create(properties?: gamesvr.IHeroUnequipReq): gamesvr.HeroUnequipReq;

        /**
         * Encodes the specified HeroUnequipReq message. Does not implicitly {@link gamesvr.HeroUnequipReq.verify|verify} messages.
         * @param message HeroUnequipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeroUnequipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroUnequipReq message, length delimited. Does not implicitly {@link gamesvr.HeroUnequipReq.verify|verify} messages.
         * @param message HeroUnequipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeroUnequipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroUnequipReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroUnequipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeroUnequipReq;

        /**
         * Decodes a HeroUnequipReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroUnequipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeroUnequipReq;

        /**
         * Verifies a HeroUnequipReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroUnequipReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroUnequipReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeroUnequipReq;

        /**
         * Creates a plain object from a HeroUnequipReq message. Also converts values to other types if specified.
         * @param message HeroUnequipReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeroUnequipReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroUnequipReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroUnequipRes. */
    interface IHeroUnequipRes {

        /** HeroUnequipRes HeroID */
        HeroID?: (number|null);

        /** HeroUnequipRes Positon */
        Positon?: (number|null);
    }

    /** Represents a HeroUnequipRes. */
    class HeroUnequipRes implements IHeroUnequipRes {

        /**
         * Constructs a new HeroUnequipRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeroUnequipRes);

        /** HeroUnequipRes HeroID. */
        public HeroID: number;

        /** HeroUnequipRes Positon. */
        public Positon: number;

        /**
         * Creates a new HeroUnequipRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroUnequipRes instance
         */
        public static create(properties?: gamesvr.IHeroUnequipRes): gamesvr.HeroUnequipRes;

        /**
         * Encodes the specified HeroUnequipRes message. Does not implicitly {@link gamesvr.HeroUnequipRes.verify|verify} messages.
         * @param message HeroUnequipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeroUnequipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroUnequipRes message, length delimited. Does not implicitly {@link gamesvr.HeroUnequipRes.verify|verify} messages.
         * @param message HeroUnequipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeroUnequipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroUnequipRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroUnequipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeroUnequipRes;

        /**
         * Decodes a HeroUnequipRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroUnequipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeroUnequipRes;

        /**
         * Verifies a HeroUnequipRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroUnequipRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroUnequipRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeroUnequipRes;

        /**
         * Creates a plain object from a HeroUnequipRes message. Also converts values to other types if specified.
         * @param message HeroUnequipRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeroUnequipRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroUnequipRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OnceEquipReq. */
    interface IOnceEquipReq {

        /** OnceEquipReq HeroID */
        HeroID?: (number|null);

        /** OnceEquipReq Equips */
        Equips?: ({ [k: string]: gamesvr.IEquipInfo }|null);
    }

    /** Represents an OnceEquipReq. */
    class OnceEquipReq implements IOnceEquipReq {

        /**
         * Constructs a new OnceEquipReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IOnceEquipReq);

        /** OnceEquipReq HeroID. */
        public HeroID: number;

        /** OnceEquipReq Equips. */
        public Equips: { [k: string]: gamesvr.IEquipInfo };

        /**
         * Creates a new OnceEquipReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OnceEquipReq instance
         */
        public static create(properties?: gamesvr.IOnceEquipReq): gamesvr.OnceEquipReq;

        /**
         * Encodes the specified OnceEquipReq message. Does not implicitly {@link gamesvr.OnceEquipReq.verify|verify} messages.
         * @param message OnceEquipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IOnceEquipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OnceEquipReq message, length delimited. Does not implicitly {@link gamesvr.OnceEquipReq.verify|verify} messages.
         * @param message OnceEquipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IOnceEquipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OnceEquipReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OnceEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.OnceEquipReq;

        /**
         * Decodes an OnceEquipReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OnceEquipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.OnceEquipReq;

        /**
         * Verifies an OnceEquipReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OnceEquipReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OnceEquipReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.OnceEquipReq;

        /**
         * Creates a plain object from an OnceEquipReq message. Also converts values to other types if specified.
         * @param message OnceEquipReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.OnceEquipReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OnceEquipReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OnceEquipRes. */
    interface IOnceEquipRes {
    }

    /** Represents an OnceEquipRes. */
    class OnceEquipRes implements IOnceEquipRes {

        /**
         * Constructs a new OnceEquipRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IOnceEquipRes);

        /**
         * Creates a new OnceEquipRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OnceEquipRes instance
         */
        public static create(properties?: gamesvr.IOnceEquipRes): gamesvr.OnceEquipRes;

        /**
         * Encodes the specified OnceEquipRes message. Does not implicitly {@link gamesvr.OnceEquipRes.verify|verify} messages.
         * @param message OnceEquipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IOnceEquipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OnceEquipRes message, length delimited. Does not implicitly {@link gamesvr.OnceEquipRes.verify|verify} messages.
         * @param message OnceEquipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IOnceEquipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OnceEquipRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OnceEquipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.OnceEquipRes;

        /**
         * Decodes an OnceEquipRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OnceEquipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.OnceEquipRes;

        /**
         * Verifies an OnceEquipRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OnceEquipRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OnceEquipRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.OnceEquipRes;

        /**
         * Creates a plain object from an OnceEquipRes message. Also converts values to other types if specified.
         * @param message OnceEquipRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.OnceEquipRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OnceEquipRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OnceUnequipReq. */
    interface IOnceUnequipReq {

        /** OnceUnequipReq HeroID */
        HeroID?: (number|null);
    }

    /** Represents an OnceUnequipReq. */
    class OnceUnequipReq implements IOnceUnequipReq {

        /**
         * Constructs a new OnceUnequipReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IOnceUnequipReq);

        /** OnceUnequipReq HeroID. */
        public HeroID: number;

        /**
         * Creates a new OnceUnequipReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OnceUnequipReq instance
         */
        public static create(properties?: gamesvr.IOnceUnequipReq): gamesvr.OnceUnequipReq;

        /**
         * Encodes the specified OnceUnequipReq message. Does not implicitly {@link gamesvr.OnceUnequipReq.verify|verify} messages.
         * @param message OnceUnequipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IOnceUnequipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OnceUnequipReq message, length delimited. Does not implicitly {@link gamesvr.OnceUnequipReq.verify|verify} messages.
         * @param message OnceUnequipReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IOnceUnequipReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OnceUnequipReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OnceUnequipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.OnceUnequipReq;

        /**
         * Decodes an OnceUnequipReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OnceUnequipReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.OnceUnequipReq;

        /**
         * Verifies an OnceUnequipReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OnceUnequipReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OnceUnequipReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.OnceUnequipReq;

        /**
         * Creates a plain object from an OnceUnequipReq message. Also converts values to other types if specified.
         * @param message OnceUnequipReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.OnceUnequipReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OnceUnequipReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OnceUnequipRes. */
    interface IOnceUnequipRes {
    }

    /** Represents an OnceUnequipRes. */
    class OnceUnequipRes implements IOnceUnequipRes {

        /**
         * Constructs a new OnceUnequipRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IOnceUnequipRes);

        /**
         * Creates a new OnceUnequipRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OnceUnequipRes instance
         */
        public static create(properties?: gamesvr.IOnceUnequipRes): gamesvr.OnceUnequipRes;

        /**
         * Encodes the specified OnceUnequipRes message. Does not implicitly {@link gamesvr.OnceUnequipRes.verify|verify} messages.
         * @param message OnceUnequipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IOnceUnequipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OnceUnequipRes message, length delimited. Does not implicitly {@link gamesvr.OnceUnequipRes.verify|verify} messages.
         * @param message OnceUnequipRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IOnceUnequipRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OnceUnequipRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OnceUnequipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.OnceUnequipRes;

        /**
         * Decodes an OnceUnequipRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OnceUnequipRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.OnceUnequipRes;

        /**
         * Verifies an OnceUnequipRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OnceUnequipRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OnceUnequipRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.OnceUnequipRes;

        /**
         * Creates a plain object from an OnceUnequipRes message. Also converts values to other types if specified.
         * @param message OnceUnequipRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.OnceUnequipRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OnceUnequipRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GainGiftReq. */
    interface IGainGiftReq {

        /** GainGiftReq HeroID */
        HeroID?: (number|null);

        /** GainGiftReq GiftID */
        GiftID?: (number|null);

        /** GainGiftReq SkillID */
        SkillID?: (number|null);
    }

    /** Represents a GainGiftReq. */
    class GainGiftReq implements IGainGiftReq {

        /**
         * Constructs a new GainGiftReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGainGiftReq);

        /** GainGiftReq HeroID. */
        public HeroID: number;

        /** GainGiftReq GiftID. */
        public GiftID: number;

        /** GainGiftReq SkillID. */
        public SkillID: number;

        /**
         * Creates a new GainGiftReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GainGiftReq instance
         */
        public static create(properties?: gamesvr.IGainGiftReq): gamesvr.GainGiftReq;

        /**
         * Encodes the specified GainGiftReq message. Does not implicitly {@link gamesvr.GainGiftReq.verify|verify} messages.
         * @param message GainGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGainGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GainGiftReq message, length delimited. Does not implicitly {@link gamesvr.GainGiftReq.verify|verify} messages.
         * @param message GainGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGainGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GainGiftReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GainGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GainGiftReq;

        /**
         * Decodes a GainGiftReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GainGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GainGiftReq;

        /**
         * Verifies a GainGiftReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GainGiftReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GainGiftReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GainGiftReq;

        /**
         * Creates a plain object from a GainGiftReq message. Also converts values to other types if specified.
         * @param message GainGiftReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GainGiftReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GainGiftReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GainGiftRes. */
    interface IGainGiftRes {

        /** GainGiftRes HeroID */
        HeroID?: (number|null);

        /** GainGiftRes GiftID */
        GiftID?: (number|null);

        /** GainGiftRes SkillID */
        SkillID?: (number|null);
    }

    /** Represents a GainGiftRes. */
    class GainGiftRes implements IGainGiftRes {

        /**
         * Constructs a new GainGiftRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGainGiftRes);

        /** GainGiftRes HeroID. */
        public HeroID: number;

        /** GainGiftRes GiftID. */
        public GiftID: number;

        /** GainGiftRes SkillID. */
        public SkillID: number;

        /**
         * Creates a new GainGiftRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GainGiftRes instance
         */
        public static create(properties?: gamesvr.IGainGiftRes): gamesvr.GainGiftRes;

        /**
         * Encodes the specified GainGiftRes message. Does not implicitly {@link gamesvr.GainGiftRes.verify|verify} messages.
         * @param message GainGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGainGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GainGiftRes message, length delimited. Does not implicitly {@link gamesvr.GainGiftRes.verify|verify} messages.
         * @param message GainGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGainGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GainGiftRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GainGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GainGiftRes;

        /**
         * Decodes a GainGiftRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GainGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GainGiftRes;

        /**
         * Verifies a GainGiftRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GainGiftRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GainGiftRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GainGiftRes;

        /**
         * Creates a plain object from a GainGiftRes message. Also converts values to other types if specified.
         * @param message GainGiftRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GainGiftRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GainGiftRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SelectGiftSkillReq. */
    interface ISelectGiftSkillReq {

        /** SelectGiftSkillReq HeroID */
        HeroID?: (number|null);

        /** SelectGiftSkillReq GiftID */
        GiftID?: (number|null);

        /** SelectGiftSkillReq SkillID */
        SkillID?: (number|null);
    }

    /** Represents a SelectGiftSkillReq. */
    class SelectGiftSkillReq implements ISelectGiftSkillReq {

        /**
         * Constructs a new SelectGiftSkillReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISelectGiftSkillReq);

        /** SelectGiftSkillReq HeroID. */
        public HeroID: number;

        /** SelectGiftSkillReq GiftID. */
        public GiftID: number;

        /** SelectGiftSkillReq SkillID. */
        public SkillID: number;

        /**
         * Creates a new SelectGiftSkillReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SelectGiftSkillReq instance
         */
        public static create(properties?: gamesvr.ISelectGiftSkillReq): gamesvr.SelectGiftSkillReq;

        /**
         * Encodes the specified SelectGiftSkillReq message. Does not implicitly {@link gamesvr.SelectGiftSkillReq.verify|verify} messages.
         * @param message SelectGiftSkillReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISelectGiftSkillReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SelectGiftSkillReq message, length delimited. Does not implicitly {@link gamesvr.SelectGiftSkillReq.verify|verify} messages.
         * @param message SelectGiftSkillReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISelectGiftSkillReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SelectGiftSkillReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SelectGiftSkillReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SelectGiftSkillReq;

        /**
         * Decodes a SelectGiftSkillReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SelectGiftSkillReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SelectGiftSkillReq;

        /**
         * Verifies a SelectGiftSkillReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SelectGiftSkillReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SelectGiftSkillReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SelectGiftSkillReq;

        /**
         * Creates a plain object from a SelectGiftSkillReq message. Also converts values to other types if specified.
         * @param message SelectGiftSkillReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SelectGiftSkillReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SelectGiftSkillReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SelectGiftSkillRes. */
    interface ISelectGiftSkillRes {

        /** SelectGiftSkillRes HeroID */
        HeroID?: (number|null);

        /** SelectGiftSkillRes GiftID */
        GiftID?: (number|null);

        /** SelectGiftSkillRes SkillID */
        SkillID?: (number|null);
    }

    /** Represents a SelectGiftSkillRes. */
    class SelectGiftSkillRes implements ISelectGiftSkillRes {

        /**
         * Constructs a new SelectGiftSkillRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISelectGiftSkillRes);

        /** SelectGiftSkillRes HeroID. */
        public HeroID: number;

        /** SelectGiftSkillRes GiftID. */
        public GiftID: number;

        /** SelectGiftSkillRes SkillID. */
        public SkillID: number;

        /**
         * Creates a new SelectGiftSkillRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SelectGiftSkillRes instance
         */
        public static create(properties?: gamesvr.ISelectGiftSkillRes): gamesvr.SelectGiftSkillRes;

        /**
         * Encodes the specified SelectGiftSkillRes message. Does not implicitly {@link gamesvr.SelectGiftSkillRes.verify|verify} messages.
         * @param message SelectGiftSkillRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISelectGiftSkillRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SelectGiftSkillRes message, length delimited. Does not implicitly {@link gamesvr.SelectGiftSkillRes.verify|verify} messages.
         * @param message SelectGiftSkillRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISelectGiftSkillRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SelectGiftSkillRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SelectGiftSkillRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SelectGiftSkillRes;

        /**
         * Decodes a SelectGiftSkillRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SelectGiftSkillRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SelectGiftSkillRes;

        /**
         * Verifies a SelectGiftSkillRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SelectGiftSkillRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SelectGiftSkillRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SelectGiftSkillRes;

        /**
         * Creates a plain object from a SelectGiftSkillRes message. Also converts values to other types if specified.
         * @param message SelectGiftSkillRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SelectGiftSkillRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SelectGiftSkillRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetItemReq. */
    interface IGetItemReq {

        /** GetItemReq ID */
        ID?: (number|null);

        /** GetItemReq Count */
        Count?: (number|Long|null);
    }

    /** Represents a GetItemReq. */
    class GetItemReq implements IGetItemReq {

        /**
         * Constructs a new GetItemReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetItemReq);

        /** GetItemReq ID. */
        public ID: number;

        /** GetItemReq Count. */
        public Count: (number|Long);

        /**
         * Creates a new GetItemReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetItemReq instance
         */
        public static create(properties?: gamesvr.IGetItemReq): gamesvr.GetItemReq;

        /**
         * Encodes the specified GetItemReq message. Does not implicitly {@link gamesvr.GetItemReq.verify|verify} messages.
         * @param message GetItemReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetItemReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetItemReq message, length delimited. Does not implicitly {@link gamesvr.GetItemReq.verify|verify} messages.
         * @param message GetItemReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetItemReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetItemReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetItemReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetItemReq;

        /**
         * Decodes a GetItemReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetItemReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetItemReq;

        /**
         * Verifies a GetItemReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetItemReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetItemReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetItemReq;

        /**
         * Creates a plain object from a GetItemReq message. Also converts values to other types if specified.
         * @param message GetItemReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetItemReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetItemReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetItemRes. */
    interface IGetItemRes {
    }

    /** Represents a GetItemRes. */
    class GetItemRes implements IGetItemRes {

        /**
         * Constructs a new GetItemRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetItemRes);

        /**
         * Creates a new GetItemRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetItemRes instance
         */
        public static create(properties?: gamesvr.IGetItemRes): gamesvr.GetItemRes;

        /**
         * Encodes the specified GetItemRes message. Does not implicitly {@link gamesvr.GetItemRes.verify|verify} messages.
         * @param message GetItemRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetItemRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetItemRes message, length delimited. Does not implicitly {@link gamesvr.GetItemRes.verify|verify} messages.
         * @param message GetItemRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetItemRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetItemRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetItemRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetItemRes;

        /**
         * Decodes a GetItemRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetItemRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetItemRes;

        /**
         * Verifies a GetItemRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetItemRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetItemRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetItemRes;

        /**
         * Creates a plain object from a GetItemRes message. Also converts values to other types if specified.
         * @param message GetItemRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetItemRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetItemRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ItemChangeNotify. */
    interface IItemChangeNotify {

        /** ItemChangeNotify Units */
        Units?: (data.IBagUnit[]|null);
    }

    /** Represents an ItemChangeNotify. */
    class ItemChangeNotify implements IItemChangeNotify {

        /**
         * Constructs a new ItemChangeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IItemChangeNotify);

        /** ItemChangeNotify Units. */
        public Units: data.IBagUnit[];

        /**
         * Creates a new ItemChangeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ItemChangeNotify instance
         */
        public static create(properties?: gamesvr.IItemChangeNotify): gamesvr.ItemChangeNotify;

        /**
         * Encodes the specified ItemChangeNotify message. Does not implicitly {@link gamesvr.ItemChangeNotify.verify|verify} messages.
         * @param message ItemChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IItemChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ItemChangeNotify message, length delimited. Does not implicitly {@link gamesvr.ItemChangeNotify.verify|verify} messages.
         * @param message ItemChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IItemChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ItemChangeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ItemChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ItemChangeNotify;

        /**
         * Decodes an ItemChangeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ItemChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ItemChangeNotify;

        /**
         * Verifies an ItemChangeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ItemChangeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ItemChangeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ItemChangeNotify;

        /**
         * Creates a plain object from an ItemChangeNotify message. Also converts values to other types if specified.
         * @param message ItemChangeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ItemChangeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ItemChangeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UseItemReq. */
    interface IUseItemReq {

        /** UseItemReq ID */
        ID?: (number|null);

        /** UseItemReq Seq */
        Seq?: (number|Long|null);

        /** UseItemReq Count */
        Count?: (number|Long|null);

        /** UseItemReq SelectGiftIndex */
        SelectGiftIndex?: (number[]|null);
    }

    /** Represents a UseItemReq. */
    class UseItemReq implements IUseItemReq {

        /**
         * Constructs a new UseItemReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUseItemReq);

        /** UseItemReq ID. */
        public ID: number;

        /** UseItemReq Seq. */
        public Seq: (number|Long);

        /** UseItemReq Count. */
        public Count: (number|Long);

        /** UseItemReq SelectGiftIndex. */
        public SelectGiftIndex: number[];

        /**
         * Creates a new UseItemReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UseItemReq instance
         */
        public static create(properties?: gamesvr.IUseItemReq): gamesvr.UseItemReq;

        /**
         * Encodes the specified UseItemReq message. Does not implicitly {@link gamesvr.UseItemReq.verify|verify} messages.
         * @param message UseItemReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUseItemReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UseItemReq message, length delimited. Does not implicitly {@link gamesvr.UseItemReq.verify|verify} messages.
         * @param message UseItemReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUseItemReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UseItemReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UseItemReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UseItemReq;

        /**
         * Decodes a UseItemReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UseItemReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UseItemReq;

        /**
         * Verifies a UseItemReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UseItemReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UseItemReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UseItemReq;

        /**
         * Creates a plain object from a UseItemReq message. Also converts values to other types if specified.
         * @param message UseItemReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UseItemReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UseItemReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UseItemRes. */
    interface IUseItemRes {

        /** UseItemRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** UseItemRes Exp */
        Exp?: (number|null);

        /** UseItemRes TotalExp */
        TotalExp?: (number|null);
    }

    /** Represents a UseItemRes. */
    class UseItemRes implements IUseItemRes {

        /**
         * Constructs a new UseItemRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUseItemRes);

        /** UseItemRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** UseItemRes Exp. */
        public Exp: number;

        /** UseItemRes TotalExp. */
        public TotalExp: number;

        /**
         * Creates a new UseItemRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UseItemRes instance
         */
        public static create(properties?: gamesvr.IUseItemRes): gamesvr.UseItemRes;

        /**
         * Encodes the specified UseItemRes message. Does not implicitly {@link gamesvr.UseItemRes.verify|verify} messages.
         * @param message UseItemRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUseItemRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UseItemRes message, length delimited. Does not implicitly {@link gamesvr.UseItemRes.verify|verify} messages.
         * @param message UseItemRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUseItemRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UseItemRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UseItemRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UseItemRes;

        /**
         * Decodes a UseItemRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UseItemRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UseItemRes;

        /**
         * Verifies a UseItemRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UseItemRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UseItemRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UseItemRes;

        /**
         * Creates a plain object from a UseItemRes message. Also converts values to other types if specified.
         * @param message UseItemRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UseItemRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UseItemRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ItemReplaceNotify. */
    interface IItemReplaceNotify {

        /** ItemReplaceNotify ID */
        ID?: (number|null);

        /** ItemReplaceNotify Count */
        Count?: (number|Long|null);
    }

    /** Represents an ItemReplaceNotify. */
    class ItemReplaceNotify implements IItemReplaceNotify {

        /**
         * Constructs a new ItemReplaceNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IItemReplaceNotify);

        /** ItemReplaceNotify ID. */
        public ID: number;

        /** ItemReplaceNotify Count. */
        public Count: (number|Long);

        /**
         * Creates a new ItemReplaceNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ItemReplaceNotify instance
         */
        public static create(properties?: gamesvr.IItemReplaceNotify): gamesvr.ItemReplaceNotify;

        /**
         * Encodes the specified ItemReplaceNotify message. Does not implicitly {@link gamesvr.ItemReplaceNotify.verify|verify} messages.
         * @param message ItemReplaceNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IItemReplaceNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ItemReplaceNotify message, length delimited. Does not implicitly {@link gamesvr.ItemReplaceNotify.verify|verify} messages.
         * @param message ItemReplaceNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IItemReplaceNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ItemReplaceNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ItemReplaceNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ItemReplaceNotify;

        /**
         * Decodes an ItemReplaceNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ItemReplaceNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ItemReplaceNotify;

        /**
         * Verifies an ItemReplaceNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ItemReplaceNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ItemReplaceNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ItemReplaceNotify;

        /**
         * Creates a plain object from an ItemReplaceNotify message. Also converts values to other types if specified.
         * @param message ItemReplaceNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ItemReplaceNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ItemReplaceNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadSkillUpgradeReq. */
    interface ILeadSkillUpgradeReq {

        /** LeadSkillUpgradeReq GroupID */
        GroupID?: (number|null);

        /** LeadSkillUpgradeReq Level */
        Level?: (number|null);
    }

    /** Represents a LeadSkillUpgradeReq. */
    class LeadSkillUpgradeReq implements ILeadSkillUpgradeReq {

        /**
         * Constructs a new LeadSkillUpgradeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILeadSkillUpgradeReq);

        /** LeadSkillUpgradeReq GroupID. */
        public GroupID: number;

        /** LeadSkillUpgradeReq Level. */
        public Level: number;

        /**
         * Creates a new LeadSkillUpgradeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadSkillUpgradeReq instance
         */
        public static create(properties?: gamesvr.ILeadSkillUpgradeReq): gamesvr.LeadSkillUpgradeReq;

        /**
         * Encodes the specified LeadSkillUpgradeReq message. Does not implicitly {@link gamesvr.LeadSkillUpgradeReq.verify|verify} messages.
         * @param message LeadSkillUpgradeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILeadSkillUpgradeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadSkillUpgradeReq message, length delimited. Does not implicitly {@link gamesvr.LeadSkillUpgradeReq.verify|verify} messages.
         * @param message LeadSkillUpgradeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILeadSkillUpgradeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadSkillUpgradeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadSkillUpgradeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LeadSkillUpgradeReq;

        /**
         * Decodes a LeadSkillUpgradeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadSkillUpgradeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LeadSkillUpgradeReq;

        /**
         * Verifies a LeadSkillUpgradeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadSkillUpgradeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadSkillUpgradeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LeadSkillUpgradeReq;

        /**
         * Creates a plain object from a LeadSkillUpgradeReq message. Also converts values to other types if specified.
         * @param message LeadSkillUpgradeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LeadSkillUpgradeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadSkillUpgradeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadSkillUpgradeRes. */
    interface ILeadSkillUpgradeRes {

        /** LeadSkillUpgradeRes GroupID */
        GroupID?: (number|null);

        /** LeadSkillUpgradeRes Level */
        Level?: (number|null);
    }

    /** Represents a LeadSkillUpgradeRes. */
    class LeadSkillUpgradeRes implements ILeadSkillUpgradeRes {

        /**
         * Constructs a new LeadSkillUpgradeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILeadSkillUpgradeRes);

        /** LeadSkillUpgradeRes GroupID. */
        public GroupID: number;

        /** LeadSkillUpgradeRes Level. */
        public Level: number;

        /**
         * Creates a new LeadSkillUpgradeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadSkillUpgradeRes instance
         */
        public static create(properties?: gamesvr.ILeadSkillUpgradeRes): gamesvr.LeadSkillUpgradeRes;

        /**
         * Encodes the specified LeadSkillUpgradeRes message. Does not implicitly {@link gamesvr.LeadSkillUpgradeRes.verify|verify} messages.
         * @param message LeadSkillUpgradeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILeadSkillUpgradeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadSkillUpgradeRes message, length delimited. Does not implicitly {@link gamesvr.LeadSkillUpgradeRes.verify|verify} messages.
         * @param message LeadSkillUpgradeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILeadSkillUpgradeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadSkillUpgradeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadSkillUpgradeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LeadSkillUpgradeRes;

        /**
         * Decodes a LeadSkillUpgradeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadSkillUpgradeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LeadSkillUpgradeRes;

        /**
         * Verifies a LeadSkillUpgradeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadSkillUpgradeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadSkillUpgradeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LeadSkillUpgradeRes;

        /**
         * Creates a plain object from a LeadSkillUpgradeRes message. Also converts values to other types if specified.
         * @param message LeadSkillUpgradeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LeadSkillUpgradeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadSkillUpgradeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadSkillResetReq. */
    interface ILeadSkillResetReq {
    }

    /** Represents a LeadSkillResetReq. */
    class LeadSkillResetReq implements ILeadSkillResetReq {

        /**
         * Constructs a new LeadSkillResetReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILeadSkillResetReq);

        /**
         * Creates a new LeadSkillResetReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadSkillResetReq instance
         */
        public static create(properties?: gamesvr.ILeadSkillResetReq): gamesvr.LeadSkillResetReq;

        /**
         * Encodes the specified LeadSkillResetReq message. Does not implicitly {@link gamesvr.LeadSkillResetReq.verify|verify} messages.
         * @param message LeadSkillResetReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILeadSkillResetReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadSkillResetReq message, length delimited. Does not implicitly {@link gamesvr.LeadSkillResetReq.verify|verify} messages.
         * @param message LeadSkillResetReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILeadSkillResetReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadSkillResetReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadSkillResetReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LeadSkillResetReq;

        /**
         * Decodes a LeadSkillResetReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadSkillResetReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LeadSkillResetReq;

        /**
         * Verifies a LeadSkillResetReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadSkillResetReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadSkillResetReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LeadSkillResetReq;

        /**
         * Creates a plain object from a LeadSkillResetReq message. Also converts values to other types if specified.
         * @param message LeadSkillResetReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LeadSkillResetReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadSkillResetReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadSkillResetRes. */
    interface ILeadSkillResetRes {

        /** LeadSkillResetRes LevelMap */
        LevelMap?: ({ [k: string]: number }|null);
    }

    /** Represents a LeadSkillResetRes. */
    class LeadSkillResetRes implements ILeadSkillResetRes {

        /**
         * Constructs a new LeadSkillResetRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILeadSkillResetRes);

        /** LeadSkillResetRes LevelMap. */
        public LevelMap: { [k: string]: number };

        /**
         * Creates a new LeadSkillResetRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadSkillResetRes instance
         */
        public static create(properties?: gamesvr.ILeadSkillResetRes): gamesvr.LeadSkillResetRes;

        /**
         * Encodes the specified LeadSkillResetRes message. Does not implicitly {@link gamesvr.LeadSkillResetRes.verify|verify} messages.
         * @param message LeadSkillResetRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILeadSkillResetRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadSkillResetRes message, length delimited. Does not implicitly {@link gamesvr.LeadSkillResetRes.verify|verify} messages.
         * @param message LeadSkillResetRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILeadSkillResetRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadSkillResetRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadSkillResetRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LeadSkillResetRes;

        /**
         * Decodes a LeadSkillResetRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadSkillResetRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LeadSkillResetRes;

        /**
         * Verifies a LeadSkillResetRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadSkillResetRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadSkillResetRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LeadSkillResetRes;

        /**
         * Creates a plain object from a LeadSkillResetRes message. Also converts values to other types if specified.
         * @param message LeadSkillResetRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LeadSkillResetRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadSkillResetRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadGraspFeedReq. */
    interface ILeadGraspFeedReq {

        /** LeadGraspFeedReq GroupID */
        GroupID?: (number|null);

        /** LeadGraspFeedReq FeedCount */
        FeedCount?: (number|null);
    }

    /** Represents a LeadGraspFeedReq. */
    class LeadGraspFeedReq implements ILeadGraspFeedReq {

        /**
         * Constructs a new LeadGraspFeedReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILeadGraspFeedReq);

        /** LeadGraspFeedReq GroupID. */
        public GroupID: number;

        /** LeadGraspFeedReq FeedCount. */
        public FeedCount: number;

        /**
         * Creates a new LeadGraspFeedReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadGraspFeedReq instance
         */
        public static create(properties?: gamesvr.ILeadGraspFeedReq): gamesvr.LeadGraspFeedReq;

        /**
         * Encodes the specified LeadGraspFeedReq message. Does not implicitly {@link gamesvr.LeadGraspFeedReq.verify|verify} messages.
         * @param message LeadGraspFeedReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILeadGraspFeedReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadGraspFeedReq message, length delimited. Does not implicitly {@link gamesvr.LeadGraspFeedReq.verify|verify} messages.
         * @param message LeadGraspFeedReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILeadGraspFeedReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadGraspFeedReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadGraspFeedReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LeadGraspFeedReq;

        /**
         * Decodes a LeadGraspFeedReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadGraspFeedReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LeadGraspFeedReq;

        /**
         * Verifies a LeadGraspFeedReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadGraspFeedReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadGraspFeedReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LeadGraspFeedReq;

        /**
         * Creates a plain object from a LeadGraspFeedReq message. Also converts values to other types if specified.
         * @param message LeadGraspFeedReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LeadGraspFeedReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadGraspFeedReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LeadGraspFeedRes. */
    interface ILeadGraspFeedRes {

        /** LeadGraspFeedRes GroupID */
        GroupID?: (number|null);

        /** LeadGraspFeedRes Level */
        Level?: (number|null);

        /** LeadGraspFeedRes CurCount */
        CurCount?: (number|null);
    }

    /** Represents a LeadGraspFeedRes. */
    class LeadGraspFeedRes implements ILeadGraspFeedRes {

        /**
         * Constructs a new LeadGraspFeedRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILeadGraspFeedRes);

        /** LeadGraspFeedRes GroupID. */
        public GroupID: number;

        /** LeadGraspFeedRes Level. */
        public Level: number;

        /** LeadGraspFeedRes CurCount. */
        public CurCount: number;

        /**
         * Creates a new LeadGraspFeedRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LeadGraspFeedRes instance
         */
        public static create(properties?: gamesvr.ILeadGraspFeedRes): gamesvr.LeadGraspFeedRes;

        /**
         * Encodes the specified LeadGraspFeedRes message. Does not implicitly {@link gamesvr.LeadGraspFeedRes.verify|verify} messages.
         * @param message LeadGraspFeedRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILeadGraspFeedRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LeadGraspFeedRes message, length delimited. Does not implicitly {@link gamesvr.LeadGraspFeedRes.verify|verify} messages.
         * @param message LeadGraspFeedRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILeadGraspFeedRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LeadGraspFeedRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LeadGraspFeedRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LeadGraspFeedRes;

        /**
         * Decodes a LeadGraspFeedRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LeadGraspFeedRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LeadGraspFeedRes;

        /**
         * Verifies a LeadGraspFeedRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LeadGraspFeedRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LeadGraspFeedRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LeadGraspFeedRes;

        /**
         * Creates a plain object from a LeadGraspFeedRes message. Also converts values to other types if specified.
         * @param message LeadGraspFeedRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LeadGraspFeedRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LeadGraspFeedRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginReq. */
    interface ILoginReq {

        /** LoginReq UserID */
        UserID?: (string|null);

        /** LoginReq Session */
        Session?: (string|null);

        /** LoginReq Platform */
        Platform?: (string|null);

        /** LoginReq Token */
        Token?: (string|null);
    }

    /** Represents a LoginReq. */
    class LoginReq implements ILoginReq {

        /**
         * Constructs a new LoginReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILoginReq);

        /** LoginReq UserID. */
        public UserID: string;

        /** LoginReq Session. */
        public Session: string;

        /** LoginReq Platform. */
        public Platform: string;

        /** LoginReq Token. */
        public Token: string;

        /**
         * Creates a new LoginReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginReq instance
         */
        public static create(properties?: gamesvr.ILoginReq): gamesvr.LoginReq;

        /**
         * Encodes the specified LoginReq message. Does not implicitly {@link gamesvr.LoginReq.verify|verify} messages.
         * @param message LoginReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILoginReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginReq message, length delimited. Does not implicitly {@link gamesvr.LoginReq.verify|verify} messages.
         * @param message LoginReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILoginReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LoginReq;

        /**
         * Decodes a LoginReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LoginReq;

        /**
         * Verifies a LoginReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LoginReq;

        /**
         * Creates a plain object from a LoginReq message. Also converts values to other types if specified.
         * @param message LoginReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LoginReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginRes. */
    interface ILoginRes {

        /** LoginRes UserData */
        UserData?: (data.IUserData|null);

        /** LoginRes ServerTime */
        ServerTime?: (number|Long|null);

        /** LoginRes OpenServerTime */
        OpenServerTime?: (number|Long|null);
    }

    /** Represents a LoginRes. */
    class LoginRes implements ILoginRes {

        /**
         * Constructs a new LoginRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ILoginRes);

        /** LoginRes UserData. */
        public UserData?: (data.IUserData|null);

        /** LoginRes ServerTime. */
        public ServerTime: (number|Long);

        /** LoginRes OpenServerTime. */
        public OpenServerTime: (number|Long);

        /**
         * Creates a new LoginRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginRes instance
         */
        public static create(properties?: gamesvr.ILoginRes): gamesvr.LoginRes;

        /**
         * Encodes the specified LoginRes message. Does not implicitly {@link gamesvr.LoginRes.verify|verify} messages.
         * @param message LoginRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ILoginRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginRes message, length delimited. Does not implicitly {@link gamesvr.LoginRes.verify|verify} messages.
         * @param message LoginRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ILoginRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.LoginRes;

        /**
         * Decodes a LoginRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.LoginRes;

        /**
         * Verifies a LoginRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.LoginRes;

        /**
         * Creates a plain object from a LoginRes message. Also converts values to other types if specified.
         * @param message LoginRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.LoginRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeartBeatReq. */
    interface IHeartBeatReq {
    }

    /** Represents a HeartBeatReq. */
    class HeartBeatReq implements IHeartBeatReq {

        /**
         * Constructs a new HeartBeatReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeartBeatReq);

        /**
         * Creates a new HeartBeatReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeartBeatReq instance
         */
        public static create(properties?: gamesvr.IHeartBeatReq): gamesvr.HeartBeatReq;

        /**
         * Encodes the specified HeartBeatReq message. Does not implicitly {@link gamesvr.HeartBeatReq.verify|verify} messages.
         * @param message HeartBeatReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeartBeatReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeartBeatReq message, length delimited. Does not implicitly {@link gamesvr.HeartBeatReq.verify|verify} messages.
         * @param message HeartBeatReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeartBeatReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeartBeatReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeartBeatReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeartBeatReq;

        /**
         * Decodes a HeartBeatReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeartBeatReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeartBeatReq;

        /**
         * Verifies a HeartBeatReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeartBeatReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeartBeatReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeartBeatReq;

        /**
         * Creates a plain object from a HeartBeatReq message. Also converts values to other types if specified.
         * @param message HeartBeatReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeartBeatReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeartBeatReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeartBeatRes. */
    interface IHeartBeatRes {

        /** HeartBeatRes ServerTime */
        ServerTime?: (number|Long|null);
    }

    /** Represents a HeartBeatRes. */
    class HeartBeatRes implements IHeartBeatRes {

        /**
         * Constructs a new HeartBeatRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeartBeatRes);

        /** HeartBeatRes ServerTime. */
        public ServerTime: (number|Long);

        /**
         * Creates a new HeartBeatRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeartBeatRes instance
         */
        public static create(properties?: gamesvr.IHeartBeatRes): gamesvr.HeartBeatRes;

        /**
         * Encodes the specified HeartBeatRes message. Does not implicitly {@link gamesvr.HeartBeatRes.verify|verify} messages.
         * @param message HeartBeatRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeartBeatRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeartBeatRes message, length delimited. Does not implicitly {@link gamesvr.HeartBeatRes.verify|verify} messages.
         * @param message HeartBeatRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeartBeatRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeartBeatRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeartBeatRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeartBeatRes;

        /**
         * Decodes a HeartBeatRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeartBeatRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeartBeatRes;

        /**
         * Verifies a HeartBeatRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeartBeatRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeartBeatRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeartBeatRes;

        /**
         * Creates a plain object from a HeartBeatRes message. Also converts values to other types if specified.
         * @param message HeartBeatRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeartBeatRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeartBeatRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeNameReq. */
    interface IChangeNameReq {

        /** ChangeNameReq Name */
        Name?: (string|null);
    }

    /** Represents a ChangeNameReq. */
    class ChangeNameReq implements IChangeNameReq {

        /**
         * Constructs a new ChangeNameReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChangeNameReq);

        /** ChangeNameReq Name. */
        public Name: string;

        /**
         * Creates a new ChangeNameReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeNameReq instance
         */
        public static create(properties?: gamesvr.IChangeNameReq): gamesvr.ChangeNameReq;

        /**
         * Encodes the specified ChangeNameReq message. Does not implicitly {@link gamesvr.ChangeNameReq.verify|verify} messages.
         * @param message ChangeNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChangeNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeNameReq message, length delimited. Does not implicitly {@link gamesvr.ChangeNameReq.verify|verify} messages.
         * @param message ChangeNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChangeNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeNameReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChangeNameReq;

        /**
         * Decodes a ChangeNameReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChangeNameReq;

        /**
         * Verifies a ChangeNameReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeNameReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeNameReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChangeNameReq;

        /**
         * Creates a plain object from a ChangeNameReq message. Also converts values to other types if specified.
         * @param message ChangeNameReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChangeNameReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeNameReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeNameRes. */
    interface IChangeNameRes {

        /** ChangeNameRes Name */
        Name?: (string|null);
    }

    /** Represents a ChangeNameRes. */
    class ChangeNameRes implements IChangeNameRes {

        /**
         * Constructs a new ChangeNameRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChangeNameRes);

        /** ChangeNameRes Name. */
        public Name: string;

        /**
         * Creates a new ChangeNameRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeNameRes instance
         */
        public static create(properties?: gamesvr.IChangeNameRes): gamesvr.ChangeNameRes;

        /**
         * Encodes the specified ChangeNameRes message. Does not implicitly {@link gamesvr.ChangeNameRes.verify|verify} messages.
         * @param message ChangeNameRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChangeNameRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeNameRes message, length delimited. Does not implicitly {@link gamesvr.ChangeNameRes.verify|verify} messages.
         * @param message ChangeNameRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChangeNameRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeNameRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeNameRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChangeNameRes;

        /**
         * Decodes a ChangeNameRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeNameRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChangeNameRes;

        /**
         * Verifies a ChangeNameRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeNameRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeNameRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChangeNameRes;

        /**
         * Creates a plain object from a ChangeNameRes message. Also converts values to other types if specified.
         * @param message ChangeNameRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChangeNameRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeNameRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeHeadReq. */
    interface IChangeHeadReq {

        /** ChangeHeadReq HeadID */
        HeadID?: (number|null);

        /** ChangeHeadReq HeadFrameID */
        HeadFrameID?: (number|null);
    }

    /** Represents a ChangeHeadReq. */
    class ChangeHeadReq implements IChangeHeadReq {

        /**
         * Constructs a new ChangeHeadReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChangeHeadReq);

        /** ChangeHeadReq HeadID. */
        public HeadID: number;

        /** ChangeHeadReq HeadFrameID. */
        public HeadFrameID: number;

        /**
         * Creates a new ChangeHeadReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeHeadReq instance
         */
        public static create(properties?: gamesvr.IChangeHeadReq): gamesvr.ChangeHeadReq;

        /**
         * Encodes the specified ChangeHeadReq message. Does not implicitly {@link gamesvr.ChangeHeadReq.verify|verify} messages.
         * @param message ChangeHeadReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChangeHeadReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeHeadReq message, length delimited. Does not implicitly {@link gamesvr.ChangeHeadReq.verify|verify} messages.
         * @param message ChangeHeadReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChangeHeadReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeHeadReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeHeadReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChangeHeadReq;

        /**
         * Decodes a ChangeHeadReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeHeadReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChangeHeadReq;

        /**
         * Verifies a ChangeHeadReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeHeadReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeHeadReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChangeHeadReq;

        /**
         * Creates a plain object from a ChangeHeadReq message. Also converts values to other types if specified.
         * @param message ChangeHeadReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChangeHeadReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeHeadReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeHeadRes. */
    interface IChangeHeadRes {

        /** ChangeHeadRes HeadID */
        HeadID?: (number|null);

        /** ChangeHeadRes HeadFrameID */
        HeadFrameID?: (number|null);
    }

    /** Represents a ChangeHeadRes. */
    class ChangeHeadRes implements IChangeHeadRes {

        /**
         * Constructs a new ChangeHeadRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChangeHeadRes);

        /** ChangeHeadRes HeadID. */
        public HeadID: number;

        /** ChangeHeadRes HeadFrameID. */
        public HeadFrameID: number;

        /**
         * Creates a new ChangeHeadRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeHeadRes instance
         */
        public static create(properties?: gamesvr.IChangeHeadRes): gamesvr.ChangeHeadRes;

        /**
         * Encodes the specified ChangeHeadRes message. Does not implicitly {@link gamesvr.ChangeHeadRes.verify|verify} messages.
         * @param message ChangeHeadRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChangeHeadRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChangeHeadRes message, length delimited. Does not implicitly {@link gamesvr.ChangeHeadRes.verify|verify} messages.
         * @param message ChangeHeadRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChangeHeadRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChangeHeadRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeHeadRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChangeHeadRes;

        /**
         * Decodes a ChangeHeadRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeHeadRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChangeHeadRes;

        /**
         * Verifies a ChangeHeadRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeHeadRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeHeadRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChangeHeadRes;

        /**
         * Creates a plain object from a ChangeHeadRes message. Also converts values to other types if specified.
         * @param message ChangeHeadRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChangeHeadRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeHeadRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RandomNameReq. */
    interface IRandomNameReq {
    }

    /** Represents a RandomNameReq. */
    class RandomNameReq implements IRandomNameReq {

        /**
         * Constructs a new RandomNameReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRandomNameReq);

        /**
         * Creates a new RandomNameReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RandomNameReq instance
         */
        public static create(properties?: gamesvr.IRandomNameReq): gamesvr.RandomNameReq;

        /**
         * Encodes the specified RandomNameReq message. Does not implicitly {@link gamesvr.RandomNameReq.verify|verify} messages.
         * @param message RandomNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRandomNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RandomNameReq message, length delimited. Does not implicitly {@link gamesvr.RandomNameReq.verify|verify} messages.
         * @param message RandomNameReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRandomNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RandomNameReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RandomNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RandomNameReq;

        /**
         * Decodes a RandomNameReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RandomNameReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RandomNameReq;

        /**
         * Verifies a RandomNameReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RandomNameReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RandomNameReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RandomNameReq;

        /**
         * Creates a plain object from a RandomNameReq message. Also converts values to other types if specified.
         * @param message RandomNameReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RandomNameReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RandomNameReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RandomNameRes. */
    interface IRandomNameRes {

        /** RandomNameRes Name */
        Name?: (string|null);
    }

    /** Represents a RandomNameRes. */
    class RandomNameRes implements IRandomNameRes {

        /**
         * Constructs a new RandomNameRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRandomNameRes);

        /** RandomNameRes Name. */
        public Name: string;

        /**
         * Creates a new RandomNameRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RandomNameRes instance
         */
        public static create(properties?: gamesvr.IRandomNameRes): gamesvr.RandomNameRes;

        /**
         * Encodes the specified RandomNameRes message. Does not implicitly {@link gamesvr.RandomNameRes.verify|verify} messages.
         * @param message RandomNameRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRandomNameRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RandomNameRes message, length delimited. Does not implicitly {@link gamesvr.RandomNameRes.verify|verify} messages.
         * @param message RandomNameRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRandomNameRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RandomNameRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RandomNameRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RandomNameRes;

        /**
         * Decodes a RandomNameRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RandomNameRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RandomNameRes;

        /**
         * Verifies a RandomNameRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RandomNameRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RandomNameRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RandomNameRes;

        /**
         * Creates a plain object from a RandomNameRes message. Also converts values to other types if specified.
         * @param message RandomNameRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RandomNameRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RandomNameRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DiffLoginNotify. */
    interface IDiffLoginNotify {
    }

    /** Represents a DiffLoginNotify. */
    class DiffLoginNotify implements IDiffLoginNotify {

        /**
         * Constructs a new DiffLoginNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IDiffLoginNotify);

        /**
         * Creates a new DiffLoginNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DiffLoginNotify instance
         */
        public static create(properties?: gamesvr.IDiffLoginNotify): gamesvr.DiffLoginNotify;

        /**
         * Encodes the specified DiffLoginNotify message. Does not implicitly {@link gamesvr.DiffLoginNotify.verify|verify} messages.
         * @param message DiffLoginNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IDiffLoginNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DiffLoginNotify message, length delimited. Does not implicitly {@link gamesvr.DiffLoginNotify.verify|verify} messages.
         * @param message DiffLoginNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IDiffLoginNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DiffLoginNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DiffLoginNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.DiffLoginNotify;

        /**
         * Decodes a DiffLoginNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DiffLoginNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.DiffLoginNotify;

        /**
         * Verifies a DiffLoginNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DiffLoginNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DiffLoginNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.DiffLoginNotify;

        /**
         * Creates a plain object from a DiffLoginNotify message. Also converts values to other types if specified.
         * @param message DiffLoginNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.DiffLoginNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DiffLoginNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddMailReq. */
    interface IAddMailReq {

        /** AddMailReq Tag */
        Tag?: (number|null);

        /** AddMailReq Title */
        Title?: (string|null);

        /** AddMailReq Desc */
        Desc?: (string|null);

        /** AddMailReq Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an AddMailReq. */
    class AddMailReq implements IAddMailReq {

        /**
         * Constructs a new AddMailReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAddMailReq);

        /** AddMailReq Tag. */
        public Tag: number;

        /** AddMailReq Title. */
        public Title: string;

        /** AddMailReq Desc. */
        public Desc: string;

        /** AddMailReq Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new AddMailReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddMailReq instance
         */
        public static create(properties?: gamesvr.IAddMailReq): gamesvr.AddMailReq;

        /**
         * Encodes the specified AddMailReq message. Does not implicitly {@link gamesvr.AddMailReq.verify|verify} messages.
         * @param message AddMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAddMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddMailReq message, length delimited. Does not implicitly {@link gamesvr.AddMailReq.verify|verify} messages.
         * @param message AddMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAddMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddMailReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AddMailReq;

        /**
         * Decodes an AddMailReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AddMailReq;

        /**
         * Verifies an AddMailReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddMailReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddMailReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AddMailReq;

        /**
         * Creates a plain object from an AddMailReq message. Also converts values to other types if specified.
         * @param message AddMailReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AddMailReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddMailReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AddMailRes. */
    interface IAddMailRes {
    }

    /** Represents an AddMailRes. */
    class AddMailRes implements IAddMailRes {

        /**
         * Constructs a new AddMailRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAddMailRes);

        /**
         * Creates a new AddMailRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddMailRes instance
         */
        public static create(properties?: gamesvr.IAddMailRes): gamesvr.AddMailRes;

        /**
         * Encodes the specified AddMailRes message. Does not implicitly {@link gamesvr.AddMailRes.verify|verify} messages.
         * @param message AddMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAddMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddMailRes message, length delimited. Does not implicitly {@link gamesvr.AddMailRes.verify|verify} messages.
         * @param message AddMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAddMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddMailRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AddMailRes;

        /**
         * Decodes an AddMailRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AddMailRes;

        /**
         * Verifies an AddMailRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddMailRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddMailRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AddMailRes;

        /**
         * Creates a plain object from an AddMailRes message. Also converts values to other types if specified.
         * @param message AddMailRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AddMailRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddMailRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReadMailReq. */
    interface IReadMailReq {

        /** ReadMailReq Seq */
        Seq?: (number|Long|null);
    }

    /** Represents a ReadMailReq. */
    class ReadMailReq implements IReadMailReq {

        /**
         * Constructs a new ReadMailReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IReadMailReq);

        /** ReadMailReq Seq. */
        public Seq: (number|Long);

        /**
         * Creates a new ReadMailReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReadMailReq instance
         */
        public static create(properties?: gamesvr.IReadMailReq): gamesvr.ReadMailReq;

        /**
         * Encodes the specified ReadMailReq message. Does not implicitly {@link gamesvr.ReadMailReq.verify|verify} messages.
         * @param message ReadMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IReadMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReadMailReq message, length delimited. Does not implicitly {@link gamesvr.ReadMailReq.verify|verify} messages.
         * @param message ReadMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IReadMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReadMailReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReadMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ReadMailReq;

        /**
         * Decodes a ReadMailReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReadMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ReadMailReq;

        /**
         * Verifies a ReadMailReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReadMailReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReadMailReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ReadMailReq;

        /**
         * Creates a plain object from a ReadMailReq message. Also converts values to other types if specified.
         * @param message ReadMailReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ReadMailReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReadMailReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReadMailRes. */
    interface IReadMailRes {

        /** ReadMailRes Seq */
        Seq?: (number|Long|null);
    }

    /** Represents a ReadMailRes. */
    class ReadMailRes implements IReadMailRes {

        /**
         * Constructs a new ReadMailRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IReadMailRes);

        /** ReadMailRes Seq. */
        public Seq: (number|Long);

        /**
         * Creates a new ReadMailRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReadMailRes instance
         */
        public static create(properties?: gamesvr.IReadMailRes): gamesvr.ReadMailRes;

        /**
         * Encodes the specified ReadMailRes message. Does not implicitly {@link gamesvr.ReadMailRes.verify|verify} messages.
         * @param message ReadMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IReadMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReadMailRes message, length delimited. Does not implicitly {@link gamesvr.ReadMailRes.verify|verify} messages.
         * @param message ReadMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IReadMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReadMailRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReadMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ReadMailRes;

        /**
         * Decodes a ReadMailRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReadMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ReadMailRes;

        /**
         * Verifies a ReadMailRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReadMailRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReadMailRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ReadMailRes;

        /**
         * Creates a plain object from a ReadMailRes message. Also converts values to other types if specified.
         * @param message ReadMailRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ReadMailRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReadMailRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TakeMailReq. */
    interface ITakeMailReq {

        /** TakeMailReq Seq */
        Seq?: (number|Long|null);
    }

    /** Represents a TakeMailReq. */
    class TakeMailReq implements ITakeMailReq {

        /**
         * Constructs a new TakeMailReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITakeMailReq);

        /** TakeMailReq Seq. */
        public Seq: (number|Long);

        /**
         * Creates a new TakeMailReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TakeMailReq instance
         */
        public static create(properties?: gamesvr.ITakeMailReq): gamesvr.TakeMailReq;

        /**
         * Encodes the specified TakeMailReq message. Does not implicitly {@link gamesvr.TakeMailReq.verify|verify} messages.
         * @param message TakeMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITakeMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TakeMailReq message, length delimited. Does not implicitly {@link gamesvr.TakeMailReq.verify|verify} messages.
         * @param message TakeMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITakeMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TakeMailReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TakeMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TakeMailReq;

        /**
         * Decodes a TakeMailReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TakeMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TakeMailReq;

        /**
         * Verifies a TakeMailReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TakeMailReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TakeMailReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TakeMailReq;

        /**
         * Creates a plain object from a TakeMailReq message. Also converts values to other types if specified.
         * @param message TakeMailReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TakeMailReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TakeMailReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TakeMailRes. */
    interface ITakeMailRes {

        /** TakeMailRes Mail */
        Mail?: (data.IMailItem|null);
    }

    /** Represents a TakeMailRes. */
    class TakeMailRes implements ITakeMailRes {

        /**
         * Constructs a new TakeMailRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITakeMailRes);

        /** TakeMailRes Mail. */
        public Mail?: (data.IMailItem|null);

        /**
         * Creates a new TakeMailRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TakeMailRes instance
         */
        public static create(properties?: gamesvr.ITakeMailRes): gamesvr.TakeMailRes;

        /**
         * Encodes the specified TakeMailRes message. Does not implicitly {@link gamesvr.TakeMailRes.verify|verify} messages.
         * @param message TakeMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITakeMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TakeMailRes message, length delimited. Does not implicitly {@link gamesvr.TakeMailRes.verify|verify} messages.
         * @param message TakeMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITakeMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TakeMailRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TakeMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TakeMailRes;

        /**
         * Decodes a TakeMailRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TakeMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TakeMailRes;

        /**
         * Verifies a TakeMailRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TakeMailRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TakeMailRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TakeMailRes;

        /**
         * Creates a plain object from a TakeMailRes message. Also converts values to other types if specified.
         * @param message TakeMailRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TakeMailRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TakeMailRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TakeAllMailReq. */
    interface ITakeAllMailReq {
    }

    /** Represents a TakeAllMailReq. */
    class TakeAllMailReq implements ITakeAllMailReq {

        /**
         * Constructs a new TakeAllMailReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITakeAllMailReq);

        /**
         * Creates a new TakeAllMailReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TakeAllMailReq instance
         */
        public static create(properties?: gamesvr.ITakeAllMailReq): gamesvr.TakeAllMailReq;

        /**
         * Encodes the specified TakeAllMailReq message. Does not implicitly {@link gamesvr.TakeAllMailReq.verify|verify} messages.
         * @param message TakeAllMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITakeAllMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TakeAllMailReq message, length delimited. Does not implicitly {@link gamesvr.TakeAllMailReq.verify|verify} messages.
         * @param message TakeAllMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITakeAllMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TakeAllMailReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TakeAllMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TakeAllMailReq;

        /**
         * Decodes a TakeAllMailReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TakeAllMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TakeAllMailReq;

        /**
         * Verifies a TakeAllMailReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TakeAllMailReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TakeAllMailReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TakeAllMailReq;

        /**
         * Creates a plain object from a TakeAllMailReq message. Also converts values to other types if specified.
         * @param message TakeAllMailReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TakeAllMailReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TakeAllMailReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TakeAllMailRes. */
    interface ITakeAllMailRes {

        /** TakeAllMailRes Mails */
        Mails?: (data.IMailItem[]|null);
    }

    /** Represents a TakeAllMailRes. */
    class TakeAllMailRes implements ITakeAllMailRes {

        /**
         * Constructs a new TakeAllMailRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITakeAllMailRes);

        /** TakeAllMailRes Mails. */
        public Mails: data.IMailItem[];

        /**
         * Creates a new TakeAllMailRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TakeAllMailRes instance
         */
        public static create(properties?: gamesvr.ITakeAllMailRes): gamesvr.TakeAllMailRes;

        /**
         * Encodes the specified TakeAllMailRes message. Does not implicitly {@link gamesvr.TakeAllMailRes.verify|verify} messages.
         * @param message TakeAllMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITakeAllMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TakeAllMailRes message, length delimited. Does not implicitly {@link gamesvr.TakeAllMailRes.verify|verify} messages.
         * @param message TakeAllMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITakeAllMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TakeAllMailRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TakeAllMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TakeAllMailRes;

        /**
         * Decodes a TakeAllMailRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TakeAllMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TakeAllMailRes;

        /**
         * Verifies a TakeAllMailRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TakeAllMailRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TakeAllMailRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TakeAllMailRes;

        /**
         * Creates a plain object from a TakeAllMailRes message. Also converts values to other types if specified.
         * @param message TakeAllMailRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TakeAllMailRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TakeAllMailRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AutoClearMailReq. */
    interface IAutoClearMailReq {
    }

    /** Represents an AutoClearMailReq. */
    class AutoClearMailReq implements IAutoClearMailReq {

        /**
         * Constructs a new AutoClearMailReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAutoClearMailReq);

        /**
         * Creates a new AutoClearMailReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutoClearMailReq instance
         */
        public static create(properties?: gamesvr.IAutoClearMailReq): gamesvr.AutoClearMailReq;

        /**
         * Encodes the specified AutoClearMailReq message. Does not implicitly {@link gamesvr.AutoClearMailReq.verify|verify} messages.
         * @param message AutoClearMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAutoClearMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutoClearMailReq message, length delimited. Does not implicitly {@link gamesvr.AutoClearMailReq.verify|verify} messages.
         * @param message AutoClearMailReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAutoClearMailReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutoClearMailReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutoClearMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AutoClearMailReq;

        /**
         * Decodes an AutoClearMailReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutoClearMailReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AutoClearMailReq;

        /**
         * Verifies an AutoClearMailReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutoClearMailReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutoClearMailReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AutoClearMailReq;

        /**
         * Creates a plain object from an AutoClearMailReq message. Also converts values to other types if specified.
         * @param message AutoClearMailReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AutoClearMailReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutoClearMailReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AutoClearMailRes. */
    interface IAutoClearMailRes {

        /** AutoClearMailRes Seqs */
        Seqs?: ((number|Long)[]|null);
    }

    /** Represents an AutoClearMailRes. */
    class AutoClearMailRes implements IAutoClearMailRes {

        /**
         * Constructs a new AutoClearMailRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IAutoClearMailRes);

        /** AutoClearMailRes Seqs. */
        public Seqs: (number|Long)[];

        /**
         * Creates a new AutoClearMailRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AutoClearMailRes instance
         */
        public static create(properties?: gamesvr.IAutoClearMailRes): gamesvr.AutoClearMailRes;

        /**
         * Encodes the specified AutoClearMailRes message. Does not implicitly {@link gamesvr.AutoClearMailRes.verify|verify} messages.
         * @param message AutoClearMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IAutoClearMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AutoClearMailRes message, length delimited. Does not implicitly {@link gamesvr.AutoClearMailRes.verify|verify} messages.
         * @param message AutoClearMailRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IAutoClearMailRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AutoClearMailRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AutoClearMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.AutoClearMailRes;

        /**
         * Decodes an AutoClearMailRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AutoClearMailRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.AutoClearMailRes;

        /**
         * Verifies an AutoClearMailRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AutoClearMailRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AutoClearMailRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.AutoClearMailRes;

        /**
         * Creates a plain object from an AutoClearMailRes message. Also converts values to other types if specified.
         * @param message AutoClearMailRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.AutoClearMailRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AutoClearMailRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReceiveMailNotify. */
    interface IReceiveMailNotify {

        /** ReceiveMailNotify Mail */
        Mail?: (data.IMailItem|null);
    }

    /** Represents a ReceiveMailNotify. */
    class ReceiveMailNotify implements IReceiveMailNotify {

        /**
         * Constructs a new ReceiveMailNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IReceiveMailNotify);

        /** ReceiveMailNotify Mail. */
        public Mail?: (data.IMailItem|null);

        /**
         * Creates a new ReceiveMailNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReceiveMailNotify instance
         */
        public static create(properties?: gamesvr.IReceiveMailNotify): gamesvr.ReceiveMailNotify;

        /**
         * Encodes the specified ReceiveMailNotify message. Does not implicitly {@link gamesvr.ReceiveMailNotify.verify|verify} messages.
         * @param message ReceiveMailNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IReceiveMailNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ReceiveMailNotify message, length delimited. Does not implicitly {@link gamesvr.ReceiveMailNotify.verify|verify} messages.
         * @param message ReceiveMailNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IReceiveMailNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ReceiveMailNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReceiveMailNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ReceiveMailNotify;

        /**
         * Decodes a ReceiveMailNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReceiveMailNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ReceiveMailNotify;

        /**
         * Verifies a ReceiveMailNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReceiveMailNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReceiveMailNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ReceiveMailNotify;

        /**
         * Creates a plain object from a ReceiveMailNotify message. Also converts values to other types if specified.
         * @param message ReceiveMailNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ReceiveMailNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReceiveMailNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MessageType enum. */
    enum MessageType {
        TypeInvalid = 0,
        TypeSystem = 1,
        TypeUser = 2
    }

    /** EventType enum. */
    enum EventType {
        ETInvalid = 0,
        ETGotSSRHero = 1,
        ETGotSSREquip = 2,
        ETGotRankFirstInZJFS = 3,
        ETGotRankFirstInLDXX = 4
    }

    /** Properties of a GotSSRHero. */
    interface IGotSSRHero {

        /** GotSSRHero HeroID */
        HeroID?: (number|null);

        /** GotSSRHero CardPool */
        CardPool?: (number|null);

        /** GotSSRHero BoxID */
        BoxID?: (number|null);
    }

    /** Represents a GotSSRHero. */
    class GotSSRHero implements IGotSSRHero {

        /**
         * Constructs a new GotSSRHero.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGotSSRHero);

        /** GotSSRHero HeroID. */
        public HeroID: number;

        /** GotSSRHero CardPool. */
        public CardPool: number;

        /** GotSSRHero BoxID. */
        public BoxID: number;

        /**
         * Creates a new GotSSRHero instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GotSSRHero instance
         */
        public static create(properties?: gamesvr.IGotSSRHero): gamesvr.GotSSRHero;

        /**
         * Encodes the specified GotSSRHero message. Does not implicitly {@link gamesvr.GotSSRHero.verify|verify} messages.
         * @param message GotSSRHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGotSSRHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GotSSRHero message, length delimited. Does not implicitly {@link gamesvr.GotSSRHero.verify|verify} messages.
         * @param message GotSSRHero message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGotSSRHero, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GotSSRHero message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GotSSRHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GotSSRHero;

        /**
         * Decodes a GotSSRHero message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GotSSRHero
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GotSSRHero;

        /**
         * Verifies a GotSSRHero message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GotSSRHero message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GotSSRHero
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GotSSRHero;

        /**
         * Creates a plain object from a GotSSRHero message. Also converts values to other types if specified.
         * @param message GotSSRHero
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GotSSRHero, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GotSSRHero to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GotSSREquip. */
    interface IGotSSREquip {

        /** GotSSREquip EquipmentID */
        EquipmentID?: (number|null);

        /** GotSSREquip CardPool */
        CardPool?: (number|null);

        /** GotSSREquip BoxID */
        BoxID?: (number|null);
    }

    /** Represents a GotSSREquip. */
    class GotSSREquip implements IGotSSREquip {

        /**
         * Constructs a new GotSSREquip.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGotSSREquip);

        /** GotSSREquip EquipmentID. */
        public EquipmentID: number;

        /** GotSSREquip CardPool. */
        public CardPool: number;

        /** GotSSREquip BoxID. */
        public BoxID: number;

        /**
         * Creates a new GotSSREquip instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GotSSREquip instance
         */
        public static create(properties?: gamesvr.IGotSSREquip): gamesvr.GotSSREquip;

        /**
         * Encodes the specified GotSSREquip message. Does not implicitly {@link gamesvr.GotSSREquip.verify|verify} messages.
         * @param message GotSSREquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGotSSREquip, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GotSSREquip message, length delimited. Does not implicitly {@link gamesvr.GotSSREquip.verify|verify} messages.
         * @param message GotSSREquip message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGotSSREquip, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GotSSREquip message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GotSSREquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GotSSREquip;

        /**
         * Decodes a GotSSREquip message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GotSSREquip
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GotSSREquip;

        /**
         * Verifies a GotSSREquip message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GotSSREquip message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GotSSREquip
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GotSSREquip;

        /**
         * Creates a plain object from a GotSSREquip message. Also converts values to other types if specified.
         * @param message GotSSREquip
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GotSSREquip, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GotSSREquip to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GotRankFirstInZJFS. */
    interface IGotRankFirstInZJFS {

        /** GotRankFirstInZJFS EnemyName */
        EnemyName?: (string|null);
    }

    /** Represents a GotRankFirstInZJFS. */
    class GotRankFirstInZJFS implements IGotRankFirstInZJFS {

        /**
         * Constructs a new GotRankFirstInZJFS.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGotRankFirstInZJFS);

        /** GotRankFirstInZJFS EnemyName. */
        public EnemyName: string;

        /**
         * Creates a new GotRankFirstInZJFS instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GotRankFirstInZJFS instance
         */
        public static create(properties?: gamesvr.IGotRankFirstInZJFS): gamesvr.GotRankFirstInZJFS;

        /**
         * Encodes the specified GotRankFirstInZJFS message. Does not implicitly {@link gamesvr.GotRankFirstInZJFS.verify|verify} messages.
         * @param message GotRankFirstInZJFS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGotRankFirstInZJFS, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GotRankFirstInZJFS message, length delimited. Does not implicitly {@link gamesvr.GotRankFirstInZJFS.verify|verify} messages.
         * @param message GotRankFirstInZJFS message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGotRankFirstInZJFS, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GotRankFirstInZJFS message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GotRankFirstInZJFS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GotRankFirstInZJFS;

        /**
         * Decodes a GotRankFirstInZJFS message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GotRankFirstInZJFS
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GotRankFirstInZJFS;

        /**
         * Verifies a GotRankFirstInZJFS message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GotRankFirstInZJFS message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GotRankFirstInZJFS
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GotRankFirstInZJFS;

        /**
         * Creates a plain object from a GotRankFirstInZJFS message. Also converts values to other types if specified.
         * @param message GotRankFirstInZJFS
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GotRankFirstInZJFS, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GotRankFirstInZJFS to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GotRankFirstInLDXX. */
    interface IGotRankFirstInLDXX {
    }

    /** Represents a GotRankFirstInLDXX. */
    class GotRankFirstInLDXX implements IGotRankFirstInLDXX {

        /**
         * Constructs a new GotRankFirstInLDXX.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGotRankFirstInLDXX);

        /**
         * Creates a new GotRankFirstInLDXX instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GotRankFirstInLDXX instance
         */
        public static create(properties?: gamesvr.IGotRankFirstInLDXX): gamesvr.GotRankFirstInLDXX;

        /**
         * Encodes the specified GotRankFirstInLDXX message. Does not implicitly {@link gamesvr.GotRankFirstInLDXX.verify|verify} messages.
         * @param message GotRankFirstInLDXX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGotRankFirstInLDXX, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GotRankFirstInLDXX message, length delimited. Does not implicitly {@link gamesvr.GotRankFirstInLDXX.verify|verify} messages.
         * @param message GotRankFirstInLDXX message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGotRankFirstInLDXX, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GotRankFirstInLDXX message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GotRankFirstInLDXX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GotRankFirstInLDXX;

        /**
         * Decodes a GotRankFirstInLDXX message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GotRankFirstInLDXX
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GotRankFirstInLDXX;

        /**
         * Verifies a GotRankFirstInLDXX message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GotRankFirstInLDXX message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GotRankFirstInLDXX
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GotRankFirstInLDXX;

        /**
         * Creates a plain object from a GotRankFirstInLDXX message. Also converts values to other types if specified.
         * @param message GotRankFirstInLDXX
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GotRankFirstInLDXX, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GotRankFirstInLDXX to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SystemNotice. */
    interface ISystemNotice {

        /** SystemNotice Start */
        Start?: (number|Long|null);

        /** SystemNotice Duration */
        Duration?: (number|null);
    }

    /** Represents a SystemNotice. */
    class SystemNotice implements ISystemNotice {

        /**
         * Constructs a new SystemNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISystemNotice);

        /** SystemNotice Start. */
        public Start: (number|Long);

        /** SystemNotice Duration. */
        public Duration: number;

        /**
         * Creates a new SystemNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SystemNotice instance
         */
        public static create(properties?: gamesvr.ISystemNotice): gamesvr.SystemNotice;

        /**
         * Encodes the specified SystemNotice message. Does not implicitly {@link gamesvr.SystemNotice.verify|verify} messages.
         * @param message SystemNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISystemNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SystemNotice message, length delimited. Does not implicitly {@link gamesvr.SystemNotice.verify|verify} messages.
         * @param message SystemNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISystemNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SystemNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SystemNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SystemNotice;

        /**
         * Decodes a SystemNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SystemNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SystemNotice;

        /**
         * Verifies a SystemNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SystemNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SystemNotice
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SystemNotice;

        /**
         * Creates a plain object from a SystemNotice message. Also converts values to other types if specified.
         * @param message SystemNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SystemNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SystemNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserMessageData. */
    interface IUserMessageData {

        /** UserMessageData MessageID */
        MessageID?: (number|null);

        /** UserMessageData EventType */
        EventType?: (gamesvr.EventType|null);

        /** UserMessageData UserID */
        UserID?: (string|null);

        /** UserMessageData UserName */
        UserName?: (string|null);

        /** UserMessageData GotSSRHero */
        GotSSRHero?: (gamesvr.IGotSSRHero|null);

        /** UserMessageData GotSSREquip */
        GotSSREquip?: (gamesvr.IGotSSREquip|null);

        /** UserMessageData GotRankFirstInZJFS */
        GotRankFirstInZJFS?: (gamesvr.IGotRankFirstInZJFS|null);

        /** UserMessageData GotRankFirstInLDXX */
        GotRankFirstInLDXX?: (gamesvr.IGotRankFirstInLDXX|null);
    }

    /** Represents a UserMessageData. */
    class UserMessageData implements IUserMessageData {

        /**
         * Constructs a new UserMessageData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUserMessageData);

        /** UserMessageData MessageID. */
        public MessageID: number;

        /** UserMessageData EventType. */
        public EventType: gamesvr.EventType;

        /** UserMessageData UserID. */
        public UserID: string;

        /** UserMessageData UserName. */
        public UserName: string;

        /** UserMessageData GotSSRHero. */
        public GotSSRHero?: (gamesvr.IGotSSRHero|null);

        /** UserMessageData GotSSREquip. */
        public GotSSREquip?: (gamesvr.IGotSSREquip|null);

        /** UserMessageData GotRankFirstInZJFS. */
        public GotRankFirstInZJFS?: (gamesvr.IGotRankFirstInZJFS|null);

        /** UserMessageData GotRankFirstInLDXX. */
        public GotRankFirstInLDXX?: (gamesvr.IGotRankFirstInLDXX|null);

        /**
         * Creates a new UserMessageData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserMessageData instance
         */
        public static create(properties?: gamesvr.IUserMessageData): gamesvr.UserMessageData;

        /**
         * Encodes the specified UserMessageData message. Does not implicitly {@link gamesvr.UserMessageData.verify|verify} messages.
         * @param message UserMessageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUserMessageData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserMessageData message, length delimited. Does not implicitly {@link gamesvr.UserMessageData.verify|verify} messages.
         * @param message UserMessageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUserMessageData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserMessageData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserMessageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UserMessageData;

        /**
         * Decodes a UserMessageData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserMessageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UserMessageData;

        /**
         * Verifies a UserMessageData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserMessageData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserMessageData
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UserMessageData;

        /**
         * Creates a plain object from a UserMessageData message. Also converts values to other types if specified.
         * @param message UserMessageData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UserMessageData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserMessageData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SystemMessageData. */
    interface ISystemMessageData {

        /** SystemMessageData Content */
        Content?: (string|null);

        /** SystemMessageData SystemNotice */
        SystemNotice?: (gamesvr.ISystemNotice|null);
    }

    /** Represents a SystemMessageData. */
    class SystemMessageData implements ISystemMessageData {

        /**
         * Constructs a new SystemMessageData.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISystemMessageData);

        /** SystemMessageData Content. */
        public Content: string;

        /** SystemMessageData SystemNotice. */
        public SystemNotice?: (gamesvr.ISystemNotice|null);

        /**
         * Creates a new SystemMessageData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SystemMessageData instance
         */
        public static create(properties?: gamesvr.ISystemMessageData): gamesvr.SystemMessageData;

        /**
         * Encodes the specified SystemMessageData message. Does not implicitly {@link gamesvr.SystemMessageData.verify|verify} messages.
         * @param message SystemMessageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISystemMessageData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SystemMessageData message, length delimited. Does not implicitly {@link gamesvr.SystemMessageData.verify|verify} messages.
         * @param message SystemMessageData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISystemMessageData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SystemMessageData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SystemMessageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SystemMessageData;

        /**
         * Decodes a SystemMessageData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SystemMessageData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SystemMessageData;

        /**
         * Verifies a SystemMessageData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SystemMessageData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SystemMessageData
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SystemMessageData;

        /**
         * Creates a plain object from a SystemMessageData message. Also converts values to other types if specified.
         * @param message SystemMessageData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SystemMessageData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SystemMessageData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SystemMessageNotify. */
    interface ISystemMessageNotify {

        /** SystemMessageNotify Type */
        Type?: (gamesvr.MessageType|null);

        /** SystemMessageNotify UserMessage */
        UserMessage?: (gamesvr.IUserMessageData|null);

        /** SystemMessageNotify SystemMessage */
        SystemMessage?: (gamesvr.ISystemMessageData|null);
    }

    /** Represents a SystemMessageNotify. */
    class SystemMessageNotify implements ISystemMessageNotify {

        /**
         * Constructs a new SystemMessageNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISystemMessageNotify);

        /** SystemMessageNotify Type. */
        public Type: gamesvr.MessageType;

        /** SystemMessageNotify UserMessage. */
        public UserMessage?: (gamesvr.IUserMessageData|null);

        /** SystemMessageNotify SystemMessage. */
        public SystemMessage?: (gamesvr.ISystemMessageData|null);

        /**
         * Creates a new SystemMessageNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SystemMessageNotify instance
         */
        public static create(properties?: gamesvr.ISystemMessageNotify): gamesvr.SystemMessageNotify;

        /**
         * Encodes the specified SystemMessageNotify message. Does not implicitly {@link gamesvr.SystemMessageNotify.verify|verify} messages.
         * @param message SystemMessageNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISystemMessageNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SystemMessageNotify message, length delimited. Does not implicitly {@link gamesvr.SystemMessageNotify.verify|verify} messages.
         * @param message SystemMessageNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISystemMessageNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SystemMessageNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SystemMessageNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SystemMessageNotify;

        /**
         * Decodes a SystemMessageNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SystemMessageNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SystemMessageNotify;

        /**
         * Verifies a SystemMessageNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SystemMessageNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SystemMessageNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SystemMessageNotify;

        /**
         * Creates a plain object from a SystemMessageNotify message. Also converts values to other types if specified.
         * @param message SystemMessageNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SystemMessageNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SystemMessageNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ClientHotupdateNotify. */
    interface IClientHotupdateNotify {

        /** ClientHotupdateNotify Message */
        Message?: (string|null);
    }

    /** Represents a ClientHotupdateNotify. */
    class ClientHotupdateNotify implements IClientHotupdateNotify {

        /**
         * Constructs a new ClientHotupdateNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IClientHotupdateNotify);

        /** ClientHotupdateNotify Message. */
        public Message: string;

        /**
         * Creates a new ClientHotupdateNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ClientHotupdateNotify instance
         */
        public static create(properties?: gamesvr.IClientHotupdateNotify): gamesvr.ClientHotupdateNotify;

        /**
         * Encodes the specified ClientHotupdateNotify message. Does not implicitly {@link gamesvr.ClientHotupdateNotify.verify|verify} messages.
         * @param message ClientHotupdateNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IClientHotupdateNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ClientHotupdateNotify message, length delimited. Does not implicitly {@link gamesvr.ClientHotupdateNotify.verify|verify} messages.
         * @param message ClientHotupdateNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IClientHotupdateNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ClientHotupdateNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ClientHotupdateNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ClientHotupdateNotify;

        /**
         * Decodes a ClientHotupdateNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ClientHotupdateNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ClientHotupdateNotify;

        /**
         * Verifies a ClientHotupdateNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ClientHotupdateNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ClientHotupdateNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ClientHotupdateNotify;

        /**
         * Creates a plain object from a ClientHotupdateNotify message. Also converts values to other types if specified.
         * @param message ClientHotupdateNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ClientHotupdateNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ClientHotupdateNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HeroPowerNotify. */
    interface IHeroPowerNotify {

        /** HeroPowerNotify HeroID */
        HeroID?: (number|null);

        /** HeroPowerNotify Power */
        Power?: (number|Long|null);
    }

    /** Represents a HeroPowerNotify. */
    class HeroPowerNotify implements IHeroPowerNotify {

        /**
         * Constructs a new HeroPowerNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IHeroPowerNotify);

        /** HeroPowerNotify HeroID. */
        public HeroID: number;

        /** HeroPowerNotify Power. */
        public Power: (number|Long);

        /**
         * Creates a new HeroPowerNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HeroPowerNotify instance
         */
        public static create(properties?: gamesvr.IHeroPowerNotify): gamesvr.HeroPowerNotify;

        /**
         * Encodes the specified HeroPowerNotify message. Does not implicitly {@link gamesvr.HeroPowerNotify.verify|verify} messages.
         * @param message HeroPowerNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IHeroPowerNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HeroPowerNotify message, length delimited. Does not implicitly {@link gamesvr.HeroPowerNotify.verify|verify} messages.
         * @param message HeroPowerNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IHeroPowerNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HeroPowerNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HeroPowerNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.HeroPowerNotify;

        /**
         * Decodes a HeroPowerNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HeroPowerNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.HeroPowerNotify;

        /**
         * Verifies a HeroPowerNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HeroPowerNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HeroPowerNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.HeroPowerNotify;

        /**
         * Creates a plain object from a HeroPowerNotify message. Also converts values to other types if specified.
         * @param message HeroPowerNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.HeroPowerNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HeroPowerNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TeamPowerNotify. */
    interface ITeamPowerNotify {

        /** TeamPowerNotify TeamIndex */
        TeamIndex?: (number|null);

        /** TeamPowerNotify Power */
        Power?: (number|Long|null);
    }

    /** Represents a TeamPowerNotify. */
    class TeamPowerNotify implements ITeamPowerNotify {

        /**
         * Constructs a new TeamPowerNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITeamPowerNotify);

        /** TeamPowerNotify TeamIndex. */
        public TeamIndex: number;

        /** TeamPowerNotify Power. */
        public Power: (number|Long);

        /**
         * Creates a new TeamPowerNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TeamPowerNotify instance
         */
        public static create(properties?: gamesvr.ITeamPowerNotify): gamesvr.TeamPowerNotify;

        /**
         * Encodes the specified TeamPowerNotify message. Does not implicitly {@link gamesvr.TeamPowerNotify.verify|verify} messages.
         * @param message TeamPowerNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITeamPowerNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TeamPowerNotify message, length delimited. Does not implicitly {@link gamesvr.TeamPowerNotify.verify|verify} messages.
         * @param message TeamPowerNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITeamPowerNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TeamPowerNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TeamPowerNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TeamPowerNotify;

        /**
         * Decodes a TeamPowerNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TeamPowerNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TeamPowerNotify;

        /**
         * Verifies a TeamPowerNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TeamPowerNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TeamPowerNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TeamPowerNotify;

        /**
         * Creates a plain object from a TeamPowerNotify message. Also converts values to other types if specified.
         * @param message TeamPowerNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TeamPowerNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TeamPowerNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TotalPowerNotify. */
    interface ITotalPowerNotify {

        /** TotalPowerNotify Power */
        Power?: (number|Long|null);
    }

    /** Represents a TotalPowerNotify. */
    class TotalPowerNotify implements ITotalPowerNotify {

        /**
         * Constructs a new TotalPowerNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITotalPowerNotify);

        /** TotalPowerNotify Power. */
        public Power: (number|Long);

        /**
         * Creates a new TotalPowerNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TotalPowerNotify instance
         */
        public static create(properties?: gamesvr.ITotalPowerNotify): gamesvr.TotalPowerNotify;

        /**
         * Encodes the specified TotalPowerNotify message. Does not implicitly {@link gamesvr.TotalPowerNotify.verify|verify} messages.
         * @param message TotalPowerNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITotalPowerNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TotalPowerNotify message, length delimited. Does not implicitly {@link gamesvr.TotalPowerNotify.verify|verify} messages.
         * @param message TotalPowerNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITotalPowerNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TotalPowerNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TotalPowerNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TotalPowerNotify;

        /**
         * Decodes a TotalPowerNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TotalPowerNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TotalPowerNotify;

        /**
         * Verifies a TotalPowerNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TotalPowerNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TotalPowerNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TotalPowerNotify;

        /**
         * Creates a plain object from a TotalPowerNotify message. Also converts values to other types if specified.
         * @param message TotalPowerNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TotalPowerNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TotalPowerNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PveReport. */
    interface IPveReport {

        /** PveReport Heroes */
        Heroes?: (number[]|null);

        /** PveReport GainGold */
        GainGold?: (number|null);
    }

    /** Represents a PveReport. */
    class PveReport implements IPveReport {

        /**
         * Constructs a new PveReport.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPveReport);

        /** PveReport Heroes. */
        public Heroes: number[];

        /** PveReport GainGold. */
        public GainGold: number;

        /**
         * Creates a new PveReport instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PveReport instance
         */
        public static create(properties?: gamesvr.IPveReport): gamesvr.PveReport;

        /**
         * Encodes the specified PveReport message. Does not implicitly {@link gamesvr.PveReport.verify|verify} messages.
         * @param message PveReport message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPveReport, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PveReport message, length delimited. Does not implicitly {@link gamesvr.PveReport.verify|verify} messages.
         * @param message PveReport message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPveReport, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PveReport message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PveReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PveReport;

        /**
         * Decodes a PveReport message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PveReport
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PveReport;

        /**
         * Verifies a PveReport message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PveReport message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PveReport
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PveReport;

        /**
         * Creates a plain object from a PveReport message. Also converts values to other types if specified.
         * @param message PveReport
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PveReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PveReport to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterPveReq. */
    interface IEnterPveReq {

        /** EnterPveReq LessonID */
        LessonID?: (number|null);

        /** EnterPveReq DoubleDrop */
        DoubleDrop?: (boolean|null);

        /** EnterPveReq Heroes */
        Heroes?: (number[]|null);

        /** EnterPveReq TypeMainMonsterGroupIndex */
        TypeMainMonsterGroupIndex?: (number|null);

        /** EnterPveReq TypeMainUseHeroMap */
        TypeMainUseHeroMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an EnterPveReq. */
    class EnterPveReq implements IEnterPveReq {

        /**
         * Constructs a new EnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnterPveReq);

        /** EnterPveReq LessonID. */
        public LessonID: number;

        /** EnterPveReq DoubleDrop. */
        public DoubleDrop: boolean;

        /** EnterPveReq Heroes. */
        public Heroes: number[];

        /** EnterPveReq TypeMainMonsterGroupIndex. */
        public TypeMainMonsterGroupIndex: number;

        /** EnterPveReq TypeMainUseHeroMap. */
        public TypeMainUseHeroMap: { [k: string]: boolean };

        /**
         * Creates a new EnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterPveReq instance
         */
        public static create(properties?: gamesvr.IEnterPveReq): gamesvr.EnterPveReq;

        /**
         * Encodes the specified EnterPveReq message. Does not implicitly {@link gamesvr.EnterPveReq.verify|verify} messages.
         * @param message EnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterPveReq message, length delimited. Does not implicitly {@link gamesvr.EnterPveReq.verify|verify} messages.
         * @param message EnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnterPveReq;

        /**
         * Decodes an EnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnterPveReq;

        /**
         * Verifies an EnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnterPveReq;

        /**
         * Creates a plain object from an EnterPveReq message. Also converts values to other types if specified.
         * @param message EnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EnterPveRes. */
    interface IEnterPveRes {

        /** EnterPveRes LessonID */
        LessonID?: (number|null);

        /** EnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** EnterPveRes TypeMainMonsterGroupIndex */
        TypeMainMonsterGroupIndex?: (number|null);

        /** EnterPveRes TypeMainUseHeroMap */
        TypeMainUseHeroMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents an EnterPveRes. */
    class EnterPveRes implements IEnterPveRes {

        /**
         * Constructs a new EnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IEnterPveRes);

        /** EnterPveRes LessonID. */
        public LessonID: number;

        /** EnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** EnterPveRes TypeMainMonsterGroupIndex. */
        public TypeMainMonsterGroupIndex: number;

        /** EnterPveRes TypeMainUseHeroMap. */
        public TypeMainUseHeroMap: { [k: string]: boolean };

        /**
         * Creates a new EnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnterPveRes instance
         */
        public static create(properties?: gamesvr.IEnterPveRes): gamesvr.EnterPveRes;

        /**
         * Encodes the specified EnterPveRes message. Does not implicitly {@link gamesvr.EnterPveRes.verify|verify} messages.
         * @param message EnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnterPveRes message, length delimited. Does not implicitly {@link gamesvr.EnterPveRes.verify|verify} messages.
         * @param message EnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.EnterPveRes;

        /**
         * Decodes an EnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.EnterPveRes;

        /**
         * Verifies an EnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.EnterPveRes;

        /**
         * Creates a plain object from an EnterPveRes message. Also converts values to other types if specified.
         * @param message EnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.EnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FinishPveReq. */
    interface IFinishPveReq {

        /** FinishPveReq LessonID */
        LessonID?: (number|null);

        /** FinishPveReq Past */
        Past?: (boolean|null);

        /** FinishPveReq DoubleDrop */
        DoubleDrop?: (boolean|null);

        /** FinishPveReq PveReport */
        PveReport?: (gamesvr.IPveReport|null);
    }

    /** Represents a FinishPveReq. */
    class FinishPveReq implements IFinishPveReq {

        /**
         * Constructs a new FinishPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFinishPveReq);

        /** FinishPveReq LessonID. */
        public LessonID: number;

        /** FinishPveReq Past. */
        public Past: boolean;

        /** FinishPveReq DoubleDrop. */
        public DoubleDrop: boolean;

        /** FinishPveReq PveReport. */
        public PveReport?: (gamesvr.IPveReport|null);

        /**
         * Creates a new FinishPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinishPveReq instance
         */
        public static create(properties?: gamesvr.IFinishPveReq): gamesvr.FinishPveReq;

        /**
         * Encodes the specified FinishPveReq message. Does not implicitly {@link gamesvr.FinishPveReq.verify|verify} messages.
         * @param message FinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FinishPveReq message, length delimited. Does not implicitly {@link gamesvr.FinishPveReq.verify|verify} messages.
         * @param message FinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FinishPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FinishPveReq;

        /**
         * Decodes a FinishPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FinishPveReq;

        /**
         * Verifies a FinishPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FinishPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FinishPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FinishPveReq;

        /**
         * Creates a plain object from a FinishPveReq message. Also converts values to other types if specified.
         * @param message FinishPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FinishPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FinishPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FinishPveRes. */
    interface IFinishPveRes {

        /** FinishPveRes LessonID */
        LessonID?: (number|null);

        /** FinishPveRes Past */
        Past?: (boolean|null);

        /** FinishPveRes Exp */
        Exp?: (number|null);

        /** FinishPveRes TotalExp */
        TotalExp?: (number|null);

        /** FinishPveRes Record */
        Record?: (data.ILessonRecord|null);

        /** FinishPveRes DreamCount */
        DreamCount?: (data.IFightCount|null);

        /** FinishPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a FinishPveRes. */
    class FinishPveRes implements IFinishPveRes {

        /**
         * Constructs a new FinishPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IFinishPveRes);

        /** FinishPveRes LessonID. */
        public LessonID: number;

        /** FinishPveRes Past. */
        public Past: boolean;

        /** FinishPveRes Exp. */
        public Exp: number;

        /** FinishPveRes TotalExp. */
        public TotalExp: number;

        /** FinishPveRes Record. */
        public Record?: (data.ILessonRecord|null);

        /** FinishPveRes DreamCount. */
        public DreamCount?: (data.IFightCount|null);

        /** FinishPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new FinishPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FinishPveRes instance
         */
        public static create(properties?: gamesvr.IFinishPveRes): gamesvr.FinishPveRes;

        /**
         * Encodes the specified FinishPveRes message. Does not implicitly {@link gamesvr.FinishPveRes.verify|verify} messages.
         * @param message FinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FinishPveRes message, length delimited. Does not implicitly {@link gamesvr.FinishPveRes.verify|verify} messages.
         * @param message FinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FinishPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.FinishPveRes;

        /**
         * Decodes a FinishPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.FinishPveRes;

        /**
         * Verifies a FinishPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FinishPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FinishPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.FinishPveRes;

        /**
         * Creates a plain object from a FinishPveRes message. Also converts values to other types if specified.
         * @param message FinishPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.FinishPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FinishPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SweepPveReq. */
    interface ISweepPveReq {

        /** SweepPveReq LessonID */
        LessonID?: (number|null);

        /** SweepPveReq DoubleDrop */
        DoubleDrop?: (boolean|null);

        /** SweepPveReq Count */
        Count?: (number|null);
    }

    /** Represents a SweepPveReq. */
    class SweepPveReq implements ISweepPveReq {

        /**
         * Constructs a new SweepPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISweepPveReq);

        /** SweepPveReq LessonID. */
        public LessonID: number;

        /** SweepPveReq DoubleDrop. */
        public DoubleDrop: boolean;

        /** SweepPveReq Count. */
        public Count: number;

        /**
         * Creates a new SweepPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SweepPveReq instance
         */
        public static create(properties?: gamesvr.ISweepPveReq): gamesvr.SweepPveReq;

        /**
         * Encodes the specified SweepPveReq message. Does not implicitly {@link gamesvr.SweepPveReq.verify|verify} messages.
         * @param message SweepPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISweepPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SweepPveReq message, length delimited. Does not implicitly {@link gamesvr.SweepPveReq.verify|verify} messages.
         * @param message SweepPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISweepPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SweepPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SweepPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SweepPveReq;

        /**
         * Decodes a SweepPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SweepPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SweepPveReq;

        /**
         * Verifies a SweepPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SweepPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SweepPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SweepPveReq;

        /**
         * Creates a plain object from a SweepPveReq message. Also converts values to other types if specified.
         * @param message SweepPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SweepPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SweepPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SweepPveRes. */
    interface ISweepPveRes {

        /** SweepPveRes LessonID */
        LessonID?: (number|null);

        /** SweepPveRes Count */
        Count?: (number|null);

        /** SweepPveRes Exp */
        Exp?: (number|null);

        /** SweepPveRes TotalExp */
        TotalExp?: (number|null);

        /** SweepPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a SweepPveRes. */
    class SweepPveRes implements ISweepPveRes {

        /**
         * Constructs a new SweepPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISweepPveRes);

        /** SweepPveRes LessonID. */
        public LessonID: number;

        /** SweepPveRes Count. */
        public Count: number;

        /** SweepPveRes Exp. */
        public Exp: number;

        /** SweepPveRes TotalExp. */
        public TotalExp: number;

        /** SweepPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new SweepPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SweepPveRes instance
         */
        public static create(properties?: gamesvr.ISweepPveRes): gamesvr.SweepPveRes;

        /**
         * Encodes the specified SweepPveRes message. Does not implicitly {@link gamesvr.SweepPveRes.verify|verify} messages.
         * @param message SweepPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISweepPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SweepPveRes message, length delimited. Does not implicitly {@link gamesvr.SweepPveRes.verify|verify} messages.
         * @param message SweepPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISweepPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SweepPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SweepPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SweepPveRes;

        /**
         * Decodes a SweepPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SweepPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SweepPveRes;

        /**
         * Verifies a SweepPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SweepPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SweepPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SweepPveRes;

        /**
         * Creates a plain object from a SweepPveRes message. Also converts values to other types if specified.
         * @param message SweepPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SweepPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SweepPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreSetTeamReq. */
    interface IPreSetTeamReq {

        /** PreSetTeamReq TeamInfo */
        TeamInfo?: (data.ITeamInfo|null);
    }

    /** Represents a PreSetTeamReq. */
    class PreSetTeamReq implements IPreSetTeamReq {

        /**
         * Constructs a new PreSetTeamReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPreSetTeamReq);

        /** PreSetTeamReq TeamInfo. */
        public TeamInfo?: (data.ITeamInfo|null);

        /**
         * Creates a new PreSetTeamReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreSetTeamReq instance
         */
        public static create(properties?: gamesvr.IPreSetTeamReq): gamesvr.PreSetTeamReq;

        /**
         * Encodes the specified PreSetTeamReq message. Does not implicitly {@link gamesvr.PreSetTeamReq.verify|verify} messages.
         * @param message PreSetTeamReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPreSetTeamReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreSetTeamReq message, length delimited. Does not implicitly {@link gamesvr.PreSetTeamReq.verify|verify} messages.
         * @param message PreSetTeamReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPreSetTeamReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreSetTeamReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreSetTeamReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PreSetTeamReq;

        /**
         * Decodes a PreSetTeamReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreSetTeamReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PreSetTeamReq;

        /**
         * Verifies a PreSetTeamReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreSetTeamReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreSetTeamReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PreSetTeamReq;

        /**
         * Creates a plain object from a PreSetTeamReq message. Also converts values to other types if specified.
         * @param message PreSetTeamReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PreSetTeamReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreSetTeamReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PreSetTeamRes. */
    interface IPreSetTeamRes {

        /** PreSetTeamRes TeamInfo */
        TeamInfo?: (data.ITeamInfo|null);
    }

    /** Represents a PreSetTeamRes. */
    class PreSetTeamRes implements IPreSetTeamRes {

        /**
         * Constructs a new PreSetTeamRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPreSetTeamRes);

        /** PreSetTeamRes TeamInfo. */
        public TeamInfo?: (data.ITeamInfo|null);

        /**
         * Creates a new PreSetTeamRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PreSetTeamRes instance
         */
        public static create(properties?: gamesvr.IPreSetTeamRes): gamesvr.PreSetTeamRes;

        /**
         * Encodes the specified PreSetTeamRes message. Does not implicitly {@link gamesvr.PreSetTeamRes.verify|verify} messages.
         * @param message PreSetTeamRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPreSetTeamRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PreSetTeamRes message, length delimited. Does not implicitly {@link gamesvr.PreSetTeamRes.verify|verify} messages.
         * @param message PreSetTeamRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPreSetTeamRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PreSetTeamRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PreSetTeamRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PreSetTeamRes;

        /**
         * Decodes a PreSetTeamRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PreSetTeamRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PreSetTeamRes;

        /**
         * Verifies a PreSetTeamRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PreSetTeamRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PreSetTeamRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PreSetTeamRes;

        /**
         * Creates a plain object from a PreSetTeamRes message. Also converts values to other types if specified.
         * @param message PreSetTeamRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PreSetTeamRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PreSetTeamRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChapterRewardReq. */
    interface IChapterRewardReq {

        /** ChapterRewardReq ChapterID */
        ChapterID?: (number|null);
    }

    /** Represents a ChapterRewardReq. */
    class ChapterRewardReq implements IChapterRewardReq {

        /**
         * Constructs a new ChapterRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChapterRewardReq);

        /** ChapterRewardReq ChapterID. */
        public ChapterID: number;

        /**
         * Creates a new ChapterRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChapterRewardReq instance
         */
        public static create(properties?: gamesvr.IChapterRewardReq): gamesvr.ChapterRewardReq;

        /**
         * Encodes the specified ChapterRewardReq message. Does not implicitly {@link gamesvr.ChapterRewardReq.verify|verify} messages.
         * @param message ChapterRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChapterRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChapterRewardReq message, length delimited. Does not implicitly {@link gamesvr.ChapterRewardReq.verify|verify} messages.
         * @param message ChapterRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChapterRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChapterRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChapterRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChapterRewardReq;

        /**
         * Decodes a ChapterRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChapterRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChapterRewardReq;

        /**
         * Verifies a ChapterRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChapterRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChapterRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChapterRewardReq;

        /**
         * Creates a plain object from a ChapterRewardReq message. Also converts values to other types if specified.
         * @param message ChapterRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChapterRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChapterRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChapterRewardRes. */
    interface IChapterRewardRes {

        /** ChapterRewardRes ChapterID */
        ChapterID?: (number|null);

        /** ChapterRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a ChapterRewardRes. */
    class ChapterRewardRes implements IChapterRewardRes {

        /**
         * Constructs a new ChapterRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IChapterRewardRes);

        /** ChapterRewardRes ChapterID. */
        public ChapterID: number;

        /** ChapterRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ChapterRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChapterRewardRes instance
         */
        public static create(properties?: gamesvr.IChapterRewardRes): gamesvr.ChapterRewardRes;

        /**
         * Encodes the specified ChapterRewardRes message. Does not implicitly {@link gamesvr.ChapterRewardRes.verify|verify} messages.
         * @param message ChapterRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IChapterRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChapterRewardRes message, length delimited. Does not implicitly {@link gamesvr.ChapterRewardRes.verify|verify} messages.
         * @param message ChapterRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IChapterRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChapterRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChapterRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ChapterRewardRes;

        /**
         * Decodes a ChapterRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChapterRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ChapterRewardRes;

        /**
         * Verifies a ChapterRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChapterRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChapterRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ChapterRewardRes;

        /**
         * Creates a plain object from a ChapterRewardRes message. Also converts values to other types if specified.
         * @param message ChapterRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ChapterRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChapterRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PveMainReceiveSectionRewardReq. */
    interface IPveMainReceiveSectionRewardReq {

        /** PveMainReceiveSectionRewardReq LessonID */
        LessonID?: (number|null);
    }

    /** Represents a PveMainReceiveSectionRewardReq. */
    class PveMainReceiveSectionRewardReq implements IPveMainReceiveSectionRewardReq {

        /**
         * Constructs a new PveMainReceiveSectionRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPveMainReceiveSectionRewardReq);

        /** PveMainReceiveSectionRewardReq LessonID. */
        public LessonID: number;

        /**
         * Creates a new PveMainReceiveSectionRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PveMainReceiveSectionRewardReq instance
         */
        public static create(properties?: gamesvr.IPveMainReceiveSectionRewardReq): gamesvr.PveMainReceiveSectionRewardReq;

        /**
         * Encodes the specified PveMainReceiveSectionRewardReq message. Does not implicitly {@link gamesvr.PveMainReceiveSectionRewardReq.verify|verify} messages.
         * @param message PveMainReceiveSectionRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPveMainReceiveSectionRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PveMainReceiveSectionRewardReq message, length delimited. Does not implicitly {@link gamesvr.PveMainReceiveSectionRewardReq.verify|verify} messages.
         * @param message PveMainReceiveSectionRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPveMainReceiveSectionRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PveMainReceiveSectionRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PveMainReceiveSectionRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PveMainReceiveSectionRewardReq;

        /**
         * Decodes a PveMainReceiveSectionRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PveMainReceiveSectionRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PveMainReceiveSectionRewardReq;

        /**
         * Verifies a PveMainReceiveSectionRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PveMainReceiveSectionRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PveMainReceiveSectionRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PveMainReceiveSectionRewardReq;

        /**
         * Creates a plain object from a PveMainReceiveSectionRewardReq message. Also converts values to other types if specified.
         * @param message PveMainReceiveSectionRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PveMainReceiveSectionRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PveMainReceiveSectionRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PveMainReceiveSectionRewardRes. */
    interface IPveMainReceiveSectionRewardRes {

        /** PveMainReceiveSectionRewardRes LessonID */
        LessonID?: (number|null);

        /** PveMainReceiveSectionRewardRes Exp */
        Exp?: (number|null);

        /** PveMainReceiveSectionRewardRes TotalExp */
        TotalExp?: (number|null);

        /** PveMainReceiveSectionRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a PveMainReceiveSectionRewardRes. */
    class PveMainReceiveSectionRewardRes implements IPveMainReceiveSectionRewardRes {

        /**
         * Constructs a new PveMainReceiveSectionRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPveMainReceiveSectionRewardRes);

        /** PveMainReceiveSectionRewardRes LessonID. */
        public LessonID: number;

        /** PveMainReceiveSectionRewardRes Exp. */
        public Exp: number;

        /** PveMainReceiveSectionRewardRes TotalExp. */
        public TotalExp: number;

        /** PveMainReceiveSectionRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new PveMainReceiveSectionRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PveMainReceiveSectionRewardRes instance
         */
        public static create(properties?: gamesvr.IPveMainReceiveSectionRewardRes): gamesvr.PveMainReceiveSectionRewardRes;

        /**
         * Encodes the specified PveMainReceiveSectionRewardRes message. Does not implicitly {@link gamesvr.PveMainReceiveSectionRewardRes.verify|verify} messages.
         * @param message PveMainReceiveSectionRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPveMainReceiveSectionRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PveMainReceiveSectionRewardRes message, length delimited. Does not implicitly {@link gamesvr.PveMainReceiveSectionRewardRes.verify|verify} messages.
         * @param message PveMainReceiveSectionRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPveMainReceiveSectionRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PveMainReceiveSectionRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PveMainReceiveSectionRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PveMainReceiveSectionRewardRes;

        /**
         * Decodes a PveMainReceiveSectionRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PveMainReceiveSectionRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PveMainReceiveSectionRewardRes;

        /**
         * Verifies a PveMainReceiveSectionRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PveMainReceiveSectionRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PveMainReceiveSectionRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PveMainReceiveSectionRewardRes;

        /**
         * Creates a plain object from a PveMainReceiveSectionRewardRes message. Also converts values to other types if specified.
         * @param message PveMainReceiveSectionRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PveMainReceiveSectionRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PveMainReceiveSectionRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PveMainReceiveChapterRewardReq. */
    interface IPveMainReceiveChapterRewardReq {

        /** PveMainReceiveChapterRewardReq ChapterID */
        ChapterID?: (number|null);
    }

    /** Represents a PveMainReceiveChapterRewardReq. */
    class PveMainReceiveChapterRewardReq implements IPveMainReceiveChapterRewardReq {

        /**
         * Constructs a new PveMainReceiveChapterRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPveMainReceiveChapterRewardReq);

        /** PveMainReceiveChapterRewardReq ChapterID. */
        public ChapterID: number;

        /**
         * Creates a new PveMainReceiveChapterRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PveMainReceiveChapterRewardReq instance
         */
        public static create(properties?: gamesvr.IPveMainReceiveChapterRewardReq): gamesvr.PveMainReceiveChapterRewardReq;

        /**
         * Encodes the specified PveMainReceiveChapterRewardReq message. Does not implicitly {@link gamesvr.PveMainReceiveChapterRewardReq.verify|verify} messages.
         * @param message PveMainReceiveChapterRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPveMainReceiveChapterRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PveMainReceiveChapterRewardReq message, length delimited. Does not implicitly {@link gamesvr.PveMainReceiveChapterRewardReq.verify|verify} messages.
         * @param message PveMainReceiveChapterRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPveMainReceiveChapterRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PveMainReceiveChapterRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PveMainReceiveChapterRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PveMainReceiveChapterRewardReq;

        /**
         * Decodes a PveMainReceiveChapterRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PveMainReceiveChapterRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PveMainReceiveChapterRewardReq;

        /**
         * Verifies a PveMainReceiveChapterRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PveMainReceiveChapterRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PveMainReceiveChapterRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PveMainReceiveChapterRewardReq;

        /**
         * Creates a plain object from a PveMainReceiveChapterRewardReq message. Also converts values to other types if specified.
         * @param message PveMainReceiveChapterRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PveMainReceiveChapterRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PveMainReceiveChapterRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PveMainReceiveChapterRewardRes. */
    interface IPveMainReceiveChapterRewardRes {

        /** PveMainReceiveChapterRewardRes ChapterID */
        ChapterID?: (number|null);

        /** PveMainReceiveChapterRewardRes Exp */
        Exp?: (number|null);

        /** PveMainReceiveChapterRewardRes TotalExp */
        TotalExp?: (number|null);

        /** PveMainReceiveChapterRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a PveMainReceiveChapterRewardRes. */
    class PveMainReceiveChapterRewardRes implements IPveMainReceiveChapterRewardRes {

        /**
         * Constructs a new PveMainReceiveChapterRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPveMainReceiveChapterRewardRes);

        /** PveMainReceiveChapterRewardRes ChapterID. */
        public ChapterID: number;

        /** PveMainReceiveChapterRewardRes Exp. */
        public Exp: number;

        /** PveMainReceiveChapterRewardRes TotalExp. */
        public TotalExp: number;

        /** PveMainReceiveChapterRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new PveMainReceiveChapterRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PveMainReceiveChapterRewardRes instance
         */
        public static create(properties?: gamesvr.IPveMainReceiveChapterRewardRes): gamesvr.PveMainReceiveChapterRewardRes;

        /**
         * Encodes the specified PveMainReceiveChapterRewardRes message. Does not implicitly {@link gamesvr.PveMainReceiveChapterRewardRes.verify|verify} messages.
         * @param message PveMainReceiveChapterRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPveMainReceiveChapterRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PveMainReceiveChapterRewardRes message, length delimited. Does not implicitly {@link gamesvr.PveMainReceiveChapterRewardRes.verify|verify} messages.
         * @param message PveMainReceiveChapterRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPveMainReceiveChapterRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PveMainReceiveChapterRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PveMainReceiveChapterRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PveMainReceiveChapterRewardRes;

        /**
         * Decodes a PveMainReceiveChapterRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PveMainReceiveChapterRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PveMainReceiveChapterRewardRes;

        /**
         * Verifies a PveMainReceiveChapterRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PveMainReceiveChapterRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PveMainReceiveChapterRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PveMainReceiveChapterRewardRes;

        /**
         * Creates a plain object from a PveMainReceiveChapterRewardRes message. Also converts values to other types if specified.
         * @param message PveMainReceiveChapterRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PveMainReceiveChapterRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PveMainReceiveChapterRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheatFinishPveReq. */
    interface ICheatFinishPveReq {

        /** CheatFinishPveReq LessonID */
        LessonID?: (number|null);
    }

    /** Represents a CheatFinishPveReq. */
    class CheatFinishPveReq implements ICheatFinishPveReq {

        /**
         * Constructs a new CheatFinishPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICheatFinishPveReq);

        /** CheatFinishPveReq LessonID. */
        public LessonID: number;

        /**
         * Creates a new CheatFinishPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheatFinishPveReq instance
         */
        public static create(properties?: gamesvr.ICheatFinishPveReq): gamesvr.CheatFinishPveReq;

        /**
         * Encodes the specified CheatFinishPveReq message. Does not implicitly {@link gamesvr.CheatFinishPveReq.verify|verify} messages.
         * @param message CheatFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICheatFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheatFinishPveReq message, length delimited. Does not implicitly {@link gamesvr.CheatFinishPveReq.verify|verify} messages.
         * @param message CheatFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICheatFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheatFinishPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheatFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CheatFinishPveReq;

        /**
         * Decodes a CheatFinishPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheatFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CheatFinishPveReq;

        /**
         * Verifies a CheatFinishPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheatFinishPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheatFinishPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CheatFinishPveReq;

        /**
         * Creates a plain object from a CheatFinishPveReq message. Also converts values to other types if specified.
         * @param message CheatFinishPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CheatFinishPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheatFinishPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheatFinishPveRes. */
    interface ICheatFinishPveRes {

        /** CheatFinishPveRes LessonID */
        LessonID?: (number[]|null);

        /** CheatFinishPveRes Exp */
        Exp?: (number|null);

        /** CheatFinishPveRes TotalExp */
        TotalExp?: (number|null);

        /** CheatFinishPveRes Record */
        Record?: (data.ILessonRecord[]|null);

        /** CheatFinishPveRes DreamCount */
        DreamCount?: (data.IFightCount|null);

        /** CheatFinishPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a CheatFinishPveRes. */
    class CheatFinishPveRes implements ICheatFinishPveRes {

        /**
         * Constructs a new CheatFinishPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICheatFinishPveRes);

        /** CheatFinishPveRes LessonID. */
        public LessonID: number[];

        /** CheatFinishPveRes Exp. */
        public Exp: number;

        /** CheatFinishPveRes TotalExp. */
        public TotalExp: number;

        /** CheatFinishPveRes Record. */
        public Record: data.ILessonRecord[];

        /** CheatFinishPveRes DreamCount. */
        public DreamCount?: (data.IFightCount|null);

        /** CheatFinishPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new CheatFinishPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheatFinishPveRes instance
         */
        public static create(properties?: gamesvr.ICheatFinishPveRes): gamesvr.CheatFinishPveRes;

        /**
         * Encodes the specified CheatFinishPveRes message. Does not implicitly {@link gamesvr.CheatFinishPveRes.verify|verify} messages.
         * @param message CheatFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICheatFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheatFinishPveRes message, length delimited. Does not implicitly {@link gamesvr.CheatFinishPveRes.verify|verify} messages.
         * @param message CheatFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICheatFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheatFinishPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheatFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CheatFinishPveRes;

        /**
         * Decodes a CheatFinishPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheatFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CheatFinishPveRes;

        /**
         * Verifies a CheatFinishPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheatFinishPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheatFinishPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CheatFinishPveRes;

        /**
         * Creates a plain object from a CheatFinishPveRes message. Also converts values to other types if specified.
         * @param message CheatFinishPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CheatFinishPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheatFinishPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritEnterReq. */
    interface IPvpSpiritEnterReq {

        /** PvpSpiritEnterReq EnemySerial */
        EnemySerial?: (number|null);

        /** PvpSpiritEnterReq Heroes */
        Heroes?: (number[]|null);

        /** PvpSpiritEnterReq EnemyUserID */
        EnemyUserID?: (string|null);

        /** PvpSpiritEnterReq EnemyHeroes */
        EnemyHeroes?: ({ [k: string]: number }|null);
    }

    /** Represents a PvpSpiritEnterReq. */
    class PvpSpiritEnterReq implements IPvpSpiritEnterReq {

        /**
         * Constructs a new PvpSpiritEnterReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritEnterReq);

        /** PvpSpiritEnterReq EnemySerial. */
        public EnemySerial: number;

        /** PvpSpiritEnterReq Heroes. */
        public Heroes: number[];

        /** PvpSpiritEnterReq EnemyUserID. */
        public EnemyUserID: string;

        /** PvpSpiritEnterReq EnemyHeroes. */
        public EnemyHeroes: { [k: string]: number };

        /**
         * Creates a new PvpSpiritEnterReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritEnterReq instance
         */
        public static create(properties?: gamesvr.IPvpSpiritEnterReq): gamesvr.PvpSpiritEnterReq;

        /**
         * Encodes the specified PvpSpiritEnterReq message. Does not implicitly {@link gamesvr.PvpSpiritEnterReq.verify|verify} messages.
         * @param message PvpSpiritEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritEnterReq message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritEnterReq.verify|verify} messages.
         * @param message PvpSpiritEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritEnterReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritEnterReq;

        /**
         * Decodes a PvpSpiritEnterReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritEnterReq;

        /**
         * Verifies a PvpSpiritEnterReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritEnterReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritEnterReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritEnterReq;

        /**
         * Creates a plain object from a PvpSpiritEnterReq message. Also converts values to other types if specified.
         * @param message PvpSpiritEnterReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritEnterReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritEnterReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritEnterRes. */
    interface IPvpSpiritEnterRes {

        /** PvpSpiritEnterRes Past */
        Past?: (boolean|null);

        /** PvpSpiritEnterRes Exp */
        Exp?: (number|null);

        /** PvpSpiritEnterRes TotalExp */
        TotalExp?: (number|null);

        /** PvpSpiritEnterRes ChangeRank */
        ChangeRank?: (number|null);

        /** PvpSpiritEnterRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** PvpSpiritEnterRes EnemyInfoList */
        EnemyInfoList?: (data.IPVPSpiritEnemy[]|null);

        /** PvpSpiritEnterRes DefensiveHeroMap */
        DefensiveHeroMap?: ({ [k: string]: number }|null);

        /** PvpSpiritEnterRes Prizes1 */
        Prizes1?: (data.IItemInfo[]|null);

        /** PvpSpiritEnterRes Prizes2 */
        Prizes2?: (data.IItemInfo[]|null);
    }

    /** Represents a PvpSpiritEnterRes. */
    class PvpSpiritEnterRes implements IPvpSpiritEnterRes {

        /**
         * Constructs a new PvpSpiritEnterRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritEnterRes);

        /** PvpSpiritEnterRes Past. */
        public Past: boolean;

        /** PvpSpiritEnterRes Exp. */
        public Exp: number;

        /** PvpSpiritEnterRes TotalExp. */
        public TotalExp: number;

        /** PvpSpiritEnterRes ChangeRank. */
        public ChangeRank: number;

        /** PvpSpiritEnterRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** PvpSpiritEnterRes EnemyInfoList. */
        public EnemyInfoList: data.IPVPSpiritEnemy[];

        /** PvpSpiritEnterRes DefensiveHeroMap. */
        public DefensiveHeroMap: { [k: string]: number };

        /** PvpSpiritEnterRes Prizes1. */
        public Prizes1: data.IItemInfo[];

        /** PvpSpiritEnterRes Prizes2. */
        public Prizes2: data.IItemInfo[];

        /**
         * Creates a new PvpSpiritEnterRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritEnterRes instance
         */
        public static create(properties?: gamesvr.IPvpSpiritEnterRes): gamesvr.PvpSpiritEnterRes;

        /**
         * Encodes the specified PvpSpiritEnterRes message. Does not implicitly {@link gamesvr.PvpSpiritEnterRes.verify|verify} messages.
         * @param message PvpSpiritEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritEnterRes message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritEnterRes.verify|verify} messages.
         * @param message PvpSpiritEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritEnterRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritEnterRes;

        /**
         * Decodes a PvpSpiritEnterRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritEnterRes;

        /**
         * Verifies a PvpSpiritEnterRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritEnterRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritEnterRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritEnterRes;

        /**
         * Creates a plain object from a PvpSpiritEnterRes message. Also converts values to other types if specified.
         * @param message PvpSpiritEnterRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritEnterRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritEnterRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritChangeEnemyNotify. */
    interface IPvpSpiritChangeEnemyNotify {

        /** PvpSpiritChangeEnemyNotify EnemyInfoList */
        EnemyInfoList?: (data.IPVPSpiritEnemy[]|null);
    }

    /** Represents a PvpSpiritChangeEnemyNotify. */
    class PvpSpiritChangeEnemyNotify implements IPvpSpiritChangeEnemyNotify {

        /**
         * Constructs a new PvpSpiritChangeEnemyNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritChangeEnemyNotify);

        /** PvpSpiritChangeEnemyNotify EnemyInfoList. */
        public EnemyInfoList: data.IPVPSpiritEnemy[];

        /**
         * Creates a new PvpSpiritChangeEnemyNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritChangeEnemyNotify instance
         */
        public static create(properties?: gamesvr.IPvpSpiritChangeEnemyNotify): gamesvr.PvpSpiritChangeEnemyNotify;

        /**
         * Encodes the specified PvpSpiritChangeEnemyNotify message. Does not implicitly {@link gamesvr.PvpSpiritChangeEnemyNotify.verify|verify} messages.
         * @param message PvpSpiritChangeEnemyNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritChangeEnemyNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritChangeEnemyNotify message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritChangeEnemyNotify.verify|verify} messages.
         * @param message PvpSpiritChangeEnemyNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritChangeEnemyNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritChangeEnemyNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritChangeEnemyNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritChangeEnemyNotify;

        /**
         * Decodes a PvpSpiritChangeEnemyNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritChangeEnemyNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritChangeEnemyNotify;

        /**
         * Verifies a PvpSpiritChangeEnemyNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritChangeEnemyNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritChangeEnemyNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritChangeEnemyNotify;

        /**
         * Creates a plain object from a PvpSpiritChangeEnemyNotify message. Also converts values to other types if specified.
         * @param message PvpSpiritChangeEnemyNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritChangeEnemyNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritChangeEnemyNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritTradeEnemyReq. */
    interface IPvpSpiritTradeEnemyReq {
    }

    /** Represents a PvpSpiritTradeEnemyReq. */
    class PvpSpiritTradeEnemyReq implements IPvpSpiritTradeEnemyReq {

        /**
         * Constructs a new PvpSpiritTradeEnemyReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritTradeEnemyReq);

        /**
         * Creates a new PvpSpiritTradeEnemyReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritTradeEnemyReq instance
         */
        public static create(properties?: gamesvr.IPvpSpiritTradeEnemyReq): gamesvr.PvpSpiritTradeEnemyReq;

        /**
         * Encodes the specified PvpSpiritTradeEnemyReq message. Does not implicitly {@link gamesvr.PvpSpiritTradeEnemyReq.verify|verify} messages.
         * @param message PvpSpiritTradeEnemyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritTradeEnemyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritTradeEnemyReq message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritTradeEnemyReq.verify|verify} messages.
         * @param message PvpSpiritTradeEnemyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritTradeEnemyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritTradeEnemyReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritTradeEnemyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritTradeEnemyReq;

        /**
         * Decodes a PvpSpiritTradeEnemyReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritTradeEnemyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritTradeEnemyReq;

        /**
         * Verifies a PvpSpiritTradeEnemyReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritTradeEnemyReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritTradeEnemyReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritTradeEnemyReq;

        /**
         * Creates a plain object from a PvpSpiritTradeEnemyReq message. Also converts values to other types if specified.
         * @param message PvpSpiritTradeEnemyReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritTradeEnemyReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritTradeEnemyReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritTradeEnemyRes. */
    interface IPvpSpiritTradeEnemyRes {

        /** PvpSpiritTradeEnemyRes LastTradeTime */
        LastTradeTime?: (number|Long|null);

        /** PvpSpiritTradeEnemyRes EnemyInfoList */
        EnemyInfoList?: (data.IPVPSpiritEnemy[]|null);
    }

    /** Represents a PvpSpiritTradeEnemyRes. */
    class PvpSpiritTradeEnemyRes implements IPvpSpiritTradeEnemyRes {

        /**
         * Constructs a new PvpSpiritTradeEnemyRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritTradeEnemyRes);

        /** PvpSpiritTradeEnemyRes LastTradeTime. */
        public LastTradeTime: (number|Long);

        /** PvpSpiritTradeEnemyRes EnemyInfoList. */
        public EnemyInfoList: data.IPVPSpiritEnemy[];

        /**
         * Creates a new PvpSpiritTradeEnemyRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritTradeEnemyRes instance
         */
        public static create(properties?: gamesvr.IPvpSpiritTradeEnemyRes): gamesvr.PvpSpiritTradeEnemyRes;

        /**
         * Encodes the specified PvpSpiritTradeEnemyRes message. Does not implicitly {@link gamesvr.PvpSpiritTradeEnemyRes.verify|verify} messages.
         * @param message PvpSpiritTradeEnemyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritTradeEnemyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritTradeEnemyRes message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritTradeEnemyRes.verify|verify} messages.
         * @param message PvpSpiritTradeEnemyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritTradeEnemyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritTradeEnemyRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritTradeEnemyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritTradeEnemyRes;

        /**
         * Decodes a PvpSpiritTradeEnemyRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritTradeEnemyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritTradeEnemyRes;

        /**
         * Verifies a PvpSpiritTradeEnemyRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritTradeEnemyRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritTradeEnemyRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritTradeEnemyRes;

        /**
         * Creates a plain object from a PvpSpiritTradeEnemyRes message. Also converts values to other types if specified.
         * @param message PvpSpiritTradeEnemyRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritTradeEnemyRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritTradeEnemyRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritTradeDefensiveLineupReq. */
    interface IPvpSpiritTradeDefensiveLineupReq {

        /** PvpSpiritTradeDefensiveLineupReq DefensiveHeroMap */
        DefensiveHeroMap?: ({ [k: string]: number }|null);
    }

    /** Represents a PvpSpiritTradeDefensiveLineupReq. */
    class PvpSpiritTradeDefensiveLineupReq implements IPvpSpiritTradeDefensiveLineupReq {

        /**
         * Constructs a new PvpSpiritTradeDefensiveLineupReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritTradeDefensiveLineupReq);

        /** PvpSpiritTradeDefensiveLineupReq DefensiveHeroMap. */
        public DefensiveHeroMap: { [k: string]: number };

        /**
         * Creates a new PvpSpiritTradeDefensiveLineupReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritTradeDefensiveLineupReq instance
         */
        public static create(properties?: gamesvr.IPvpSpiritTradeDefensiveLineupReq): gamesvr.PvpSpiritTradeDefensiveLineupReq;

        /**
         * Encodes the specified PvpSpiritTradeDefensiveLineupReq message. Does not implicitly {@link gamesvr.PvpSpiritTradeDefensiveLineupReq.verify|verify} messages.
         * @param message PvpSpiritTradeDefensiveLineupReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritTradeDefensiveLineupReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritTradeDefensiveLineupReq message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritTradeDefensiveLineupReq.verify|verify} messages.
         * @param message PvpSpiritTradeDefensiveLineupReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritTradeDefensiveLineupReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritTradeDefensiveLineupReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritTradeDefensiveLineupReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritTradeDefensiveLineupReq;

        /**
         * Decodes a PvpSpiritTradeDefensiveLineupReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritTradeDefensiveLineupReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritTradeDefensiveLineupReq;

        /**
         * Verifies a PvpSpiritTradeDefensiveLineupReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritTradeDefensiveLineupReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritTradeDefensiveLineupReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritTradeDefensiveLineupReq;

        /**
         * Creates a plain object from a PvpSpiritTradeDefensiveLineupReq message. Also converts values to other types if specified.
         * @param message PvpSpiritTradeDefensiveLineupReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritTradeDefensiveLineupReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritTradeDefensiveLineupReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritTradeDefensiveLineupRes. */
    interface IPvpSpiritTradeDefensiveLineupRes {

        /** PvpSpiritTradeDefensiveLineupRes DefensiveHeroMap */
        DefensiveHeroMap?: ({ [k: string]: number }|null);
    }

    /** Represents a PvpSpiritTradeDefensiveLineupRes. */
    class PvpSpiritTradeDefensiveLineupRes implements IPvpSpiritTradeDefensiveLineupRes {

        /**
         * Constructs a new PvpSpiritTradeDefensiveLineupRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritTradeDefensiveLineupRes);

        /** PvpSpiritTradeDefensiveLineupRes DefensiveHeroMap. */
        public DefensiveHeroMap: { [k: string]: number };

        /**
         * Creates a new PvpSpiritTradeDefensiveLineupRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritTradeDefensiveLineupRes instance
         */
        public static create(properties?: gamesvr.IPvpSpiritTradeDefensiveLineupRes): gamesvr.PvpSpiritTradeDefensiveLineupRes;

        /**
         * Encodes the specified PvpSpiritTradeDefensiveLineupRes message. Does not implicitly {@link gamesvr.PvpSpiritTradeDefensiveLineupRes.verify|verify} messages.
         * @param message PvpSpiritTradeDefensiveLineupRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritTradeDefensiveLineupRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritTradeDefensiveLineupRes message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritTradeDefensiveLineupRes.verify|verify} messages.
         * @param message PvpSpiritTradeDefensiveLineupRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritTradeDefensiveLineupRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritTradeDefensiveLineupRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritTradeDefensiveLineupRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritTradeDefensiveLineupRes;

        /**
         * Decodes a PvpSpiritTradeDefensiveLineupRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritTradeDefensiveLineupRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritTradeDefensiveLineupRes;

        /**
         * Verifies a PvpSpiritTradeDefensiveLineupRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritTradeDefensiveLineupRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritTradeDefensiveLineupRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritTradeDefensiveLineupRes;

        /**
         * Creates a plain object from a PvpSpiritTradeDefensiveLineupRes message. Also converts values to other types if specified.
         * @param message PvpSpiritTradeDefensiveLineupRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritTradeDefensiveLineupRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritTradeDefensiveLineupRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritChangeRankNotify. */
    interface IPvpSpiritChangeRankNotify {

        /** PvpSpiritChangeRankNotify Rank */
        Rank?: (number|null);

        /** PvpSpiritChangeRankNotify EnemyInfoList */
        EnemyInfoList?: (data.IPVPSpiritEnemy[]|null);
    }

    /** Represents a PvpSpiritChangeRankNotify. */
    class PvpSpiritChangeRankNotify implements IPvpSpiritChangeRankNotify {

        /**
         * Constructs a new PvpSpiritChangeRankNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritChangeRankNotify);

        /** PvpSpiritChangeRankNotify Rank. */
        public Rank: number;

        /** PvpSpiritChangeRankNotify EnemyInfoList. */
        public EnemyInfoList: data.IPVPSpiritEnemy[];

        /**
         * Creates a new PvpSpiritChangeRankNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritChangeRankNotify instance
         */
        public static create(properties?: gamesvr.IPvpSpiritChangeRankNotify): gamesvr.PvpSpiritChangeRankNotify;

        /**
         * Encodes the specified PvpSpiritChangeRankNotify message. Does not implicitly {@link gamesvr.PvpSpiritChangeRankNotify.verify|verify} messages.
         * @param message PvpSpiritChangeRankNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritChangeRankNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritChangeRankNotify message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritChangeRankNotify.verify|verify} messages.
         * @param message PvpSpiritChangeRankNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritChangeRankNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritChangeRankNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritChangeRankNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritChangeRankNotify;

        /**
         * Decodes a PvpSpiritChangeRankNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritChangeRankNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritChangeRankNotify;

        /**
         * Verifies a PvpSpiritChangeRankNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritChangeRankNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritChangeRankNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritChangeRankNotify;

        /**
         * Creates a plain object from a PvpSpiritChangeRankNotify message. Also converts values to other types if specified.
         * @param message PvpSpiritChangeRankNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritChangeRankNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritChangeRankNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritChangeRecordFightNotify. */
    interface IPvpSpiritChangeRecordFightNotify {

        /** PvpSpiritChangeRecordFightNotify FightUnit */
        FightUnit?: (data.IPVPSpiritFight|null);
    }

    /** Represents a PvpSpiritChangeRecordFightNotify. */
    class PvpSpiritChangeRecordFightNotify implements IPvpSpiritChangeRecordFightNotify {

        /**
         * Constructs a new PvpSpiritChangeRecordFightNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritChangeRecordFightNotify);

        /** PvpSpiritChangeRecordFightNotify FightUnit. */
        public FightUnit?: (data.IPVPSpiritFight|null);

        /**
         * Creates a new PvpSpiritChangeRecordFightNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritChangeRecordFightNotify instance
         */
        public static create(properties?: gamesvr.IPvpSpiritChangeRecordFightNotify): gamesvr.PvpSpiritChangeRecordFightNotify;

        /**
         * Encodes the specified PvpSpiritChangeRecordFightNotify message. Does not implicitly {@link gamesvr.PvpSpiritChangeRecordFightNotify.verify|verify} messages.
         * @param message PvpSpiritChangeRecordFightNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritChangeRecordFightNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritChangeRecordFightNotify message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritChangeRecordFightNotify.verify|verify} messages.
         * @param message PvpSpiritChangeRecordFightNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritChangeRecordFightNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritChangeRecordFightNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritChangeRecordFightNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritChangeRecordFightNotify;

        /**
         * Decodes a PvpSpiritChangeRecordFightNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritChangeRecordFightNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritChangeRecordFightNotify;

        /**
         * Verifies a PvpSpiritChangeRecordFightNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritChangeRecordFightNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritChangeRecordFightNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritChangeRecordFightNotify;

        /**
         * Creates a plain object from a PvpSpiritChangeRecordFightNotify message. Also converts values to other types if specified.
         * @param message PvpSpiritChangeRecordFightNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritChangeRecordFightNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritChangeRecordFightNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritObtainEnemyInfoReq. */
    interface IPvpSpiritObtainEnemyInfoReq {
    }

    /** Represents a PvpSpiritObtainEnemyInfoReq. */
    class PvpSpiritObtainEnemyInfoReq implements IPvpSpiritObtainEnemyInfoReq {

        /**
         * Constructs a new PvpSpiritObtainEnemyInfoReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritObtainEnemyInfoReq);

        /**
         * Creates a new PvpSpiritObtainEnemyInfoReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritObtainEnemyInfoReq instance
         */
        public static create(properties?: gamesvr.IPvpSpiritObtainEnemyInfoReq): gamesvr.PvpSpiritObtainEnemyInfoReq;

        /**
         * Encodes the specified PvpSpiritObtainEnemyInfoReq message. Does not implicitly {@link gamesvr.PvpSpiritObtainEnemyInfoReq.verify|verify} messages.
         * @param message PvpSpiritObtainEnemyInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritObtainEnemyInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritObtainEnemyInfoReq message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritObtainEnemyInfoReq.verify|verify} messages.
         * @param message PvpSpiritObtainEnemyInfoReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritObtainEnemyInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritObtainEnemyInfoReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritObtainEnemyInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritObtainEnemyInfoReq;

        /**
         * Decodes a PvpSpiritObtainEnemyInfoReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritObtainEnemyInfoReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritObtainEnemyInfoReq;

        /**
         * Verifies a PvpSpiritObtainEnemyInfoReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritObtainEnemyInfoReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritObtainEnemyInfoReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritObtainEnemyInfoReq;

        /**
         * Creates a plain object from a PvpSpiritObtainEnemyInfoReq message. Also converts values to other types if specified.
         * @param message PvpSpiritObtainEnemyInfoReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritObtainEnemyInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritObtainEnemyInfoReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpSpiritObtainEnemyInfoRes. */
    interface IPvpSpiritObtainEnemyInfoRes {

        /** PvpSpiritObtainEnemyInfoRes EnemyInfoList */
        EnemyInfoList?: (data.IPVPSpiritEnemy[]|null);
    }

    /** Represents a PvpSpiritObtainEnemyInfoRes. */
    class PvpSpiritObtainEnemyInfoRes implements IPvpSpiritObtainEnemyInfoRes {

        /**
         * Constructs a new PvpSpiritObtainEnemyInfoRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpSpiritObtainEnemyInfoRes);

        /** PvpSpiritObtainEnemyInfoRes EnemyInfoList. */
        public EnemyInfoList: data.IPVPSpiritEnemy[];

        /**
         * Creates a new PvpSpiritObtainEnemyInfoRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpSpiritObtainEnemyInfoRes instance
         */
        public static create(properties?: gamesvr.IPvpSpiritObtainEnemyInfoRes): gamesvr.PvpSpiritObtainEnemyInfoRes;

        /**
         * Encodes the specified PvpSpiritObtainEnemyInfoRes message. Does not implicitly {@link gamesvr.PvpSpiritObtainEnemyInfoRes.verify|verify} messages.
         * @param message PvpSpiritObtainEnemyInfoRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpSpiritObtainEnemyInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpSpiritObtainEnemyInfoRes message, length delimited. Does not implicitly {@link gamesvr.PvpSpiritObtainEnemyInfoRes.verify|verify} messages.
         * @param message PvpSpiritObtainEnemyInfoRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpSpiritObtainEnemyInfoRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpSpiritObtainEnemyInfoRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpSpiritObtainEnemyInfoRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpSpiritObtainEnemyInfoRes;

        /**
         * Decodes a PvpSpiritObtainEnemyInfoRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpSpiritObtainEnemyInfoRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpSpiritObtainEnemyInfoRes;

        /**
         * Verifies a PvpSpiritObtainEnemyInfoRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpSpiritObtainEnemyInfoRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpSpiritObtainEnemyInfoRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpSpiritObtainEnemyInfoRes;

        /**
         * Creates a plain object from a PvpSpiritObtainEnemyInfoRes message. Also converts values to other types if specified.
         * @param message PvpSpiritObtainEnemyInfoRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpSpiritObtainEnemyInfoRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpSpiritObtainEnemyInfoRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpFairyBuyChallengeTimesReq. */
    interface IPvpFairyBuyChallengeTimesReq {
    }

    /** Represents a PvpFairyBuyChallengeTimesReq. */
    class PvpFairyBuyChallengeTimesReq implements IPvpFairyBuyChallengeTimesReq {

        /**
         * Constructs a new PvpFairyBuyChallengeTimesReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpFairyBuyChallengeTimesReq);

        /**
         * Creates a new PvpFairyBuyChallengeTimesReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpFairyBuyChallengeTimesReq instance
         */
        public static create(properties?: gamesvr.IPvpFairyBuyChallengeTimesReq): gamesvr.PvpFairyBuyChallengeTimesReq;

        /**
         * Encodes the specified PvpFairyBuyChallengeTimesReq message. Does not implicitly {@link gamesvr.PvpFairyBuyChallengeTimesReq.verify|verify} messages.
         * @param message PvpFairyBuyChallengeTimesReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpFairyBuyChallengeTimesReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpFairyBuyChallengeTimesReq message, length delimited. Does not implicitly {@link gamesvr.PvpFairyBuyChallengeTimesReq.verify|verify} messages.
         * @param message PvpFairyBuyChallengeTimesReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpFairyBuyChallengeTimesReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpFairyBuyChallengeTimesReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpFairyBuyChallengeTimesReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpFairyBuyChallengeTimesReq;

        /**
         * Decodes a PvpFairyBuyChallengeTimesReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpFairyBuyChallengeTimesReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpFairyBuyChallengeTimesReq;

        /**
         * Verifies a PvpFairyBuyChallengeTimesReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpFairyBuyChallengeTimesReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpFairyBuyChallengeTimesReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpFairyBuyChallengeTimesReq;

        /**
         * Creates a plain object from a PvpFairyBuyChallengeTimesReq message. Also converts values to other types if specified.
         * @param message PvpFairyBuyChallengeTimesReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpFairyBuyChallengeTimesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpFairyBuyChallengeTimesReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpFairyBuyChallengeTimesRes. */
    interface IPvpFairyBuyChallengeTimesRes {

        /** PvpFairyBuyChallengeTimesRes ChallengeTimes */
        ChallengeTimes?: (number|null);

        /** PvpFairyBuyChallengeTimesRes FightUserList */
        FightUserList?: (data.IPVPFairyFightUser[]|null);
    }

    /** Represents a PvpFairyBuyChallengeTimesRes. */
    class PvpFairyBuyChallengeTimesRes implements IPvpFairyBuyChallengeTimesRes {

        /**
         * Constructs a new PvpFairyBuyChallengeTimesRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpFairyBuyChallengeTimesRes);

        /** PvpFairyBuyChallengeTimesRes ChallengeTimes. */
        public ChallengeTimes: number;

        /** PvpFairyBuyChallengeTimesRes FightUserList. */
        public FightUserList: data.IPVPFairyFightUser[];

        /**
         * Creates a new PvpFairyBuyChallengeTimesRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpFairyBuyChallengeTimesRes instance
         */
        public static create(properties?: gamesvr.IPvpFairyBuyChallengeTimesRes): gamesvr.PvpFairyBuyChallengeTimesRes;

        /**
         * Encodes the specified PvpFairyBuyChallengeTimesRes message. Does not implicitly {@link gamesvr.PvpFairyBuyChallengeTimesRes.verify|verify} messages.
         * @param message PvpFairyBuyChallengeTimesRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpFairyBuyChallengeTimesRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpFairyBuyChallengeTimesRes message, length delimited. Does not implicitly {@link gamesvr.PvpFairyBuyChallengeTimesRes.verify|verify} messages.
         * @param message PvpFairyBuyChallengeTimesRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpFairyBuyChallengeTimesRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpFairyBuyChallengeTimesRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpFairyBuyChallengeTimesRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpFairyBuyChallengeTimesRes;

        /**
         * Decodes a PvpFairyBuyChallengeTimesRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpFairyBuyChallengeTimesRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpFairyBuyChallengeTimesRes;

        /**
         * Verifies a PvpFairyBuyChallengeTimesRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpFairyBuyChallengeTimesRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpFairyBuyChallengeTimesRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpFairyBuyChallengeTimesRes;

        /**
         * Creates a plain object from a PvpFairyBuyChallengeTimesRes message. Also converts values to other types if specified.
         * @param message PvpFairyBuyChallengeTimesRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpFairyBuyChallengeTimesRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpFairyBuyChallengeTimesRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpFairyEnterReq. */
    interface IPvpFairyEnterReq {

        /** PvpFairyEnterReq FightUserIndex */
        FightUserIndex?: (number|null);

        /** PvpFairyEnterReq Heroes */
        Heroes?: (number[]|null);

        /** PvpFairyEnterReq GainBuffIndexList */
        GainBuffIndexList?: (number[]|null);
    }

    /** Represents a PvpFairyEnterReq. */
    class PvpFairyEnterReq implements IPvpFairyEnterReq {

        /**
         * Constructs a new PvpFairyEnterReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpFairyEnterReq);

        /** PvpFairyEnterReq FightUserIndex. */
        public FightUserIndex: number;

        /** PvpFairyEnterReq Heroes. */
        public Heroes: number[];

        /** PvpFairyEnterReq GainBuffIndexList. */
        public GainBuffIndexList: number[];

        /**
         * Creates a new PvpFairyEnterReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpFairyEnterReq instance
         */
        public static create(properties?: gamesvr.IPvpFairyEnterReq): gamesvr.PvpFairyEnterReq;

        /**
         * Encodes the specified PvpFairyEnterReq message. Does not implicitly {@link gamesvr.PvpFairyEnterReq.verify|verify} messages.
         * @param message PvpFairyEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpFairyEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpFairyEnterReq message, length delimited. Does not implicitly {@link gamesvr.PvpFairyEnterReq.verify|verify} messages.
         * @param message PvpFairyEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpFairyEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpFairyEnterReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpFairyEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpFairyEnterReq;

        /**
         * Decodes a PvpFairyEnterReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpFairyEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpFairyEnterReq;

        /**
         * Verifies a PvpFairyEnterReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpFairyEnterReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpFairyEnterReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpFairyEnterReq;

        /**
         * Creates a plain object from a PvpFairyEnterReq message. Also converts values to other types if specified.
         * @param message PvpFairyEnterReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpFairyEnterReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpFairyEnterReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpFairyEnterRes. */
    interface IPvpFairyEnterRes {

        /** PvpFairyEnterRes Past */
        Past?: (boolean|null);

        /** PvpFairyEnterRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** PvpFairyEnterRes Integral */
        Integral?: (number|null);

        /** PvpFairyEnterRes ChallengeTimes */
        ChallengeTimes?: (number|null);

        /** PvpFairyEnterRes WinTimes */
        WinTimes?: (number|null);

        /** PvpFairyEnterRes FightUserList */
        FightUserList?: (data.IPVPFairyFightUser[]|null);
    }

    /** Represents a PvpFairyEnterRes. */
    class PvpFairyEnterRes implements IPvpFairyEnterRes {

        /**
         * Constructs a new PvpFairyEnterRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpFairyEnterRes);

        /** PvpFairyEnterRes Past. */
        public Past: boolean;

        /** PvpFairyEnterRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** PvpFairyEnterRes Integral. */
        public Integral: number;

        /** PvpFairyEnterRes ChallengeTimes. */
        public ChallengeTimes: number;

        /** PvpFairyEnterRes WinTimes. */
        public WinTimes: number;

        /** PvpFairyEnterRes FightUserList. */
        public FightUserList: data.IPVPFairyFightUser[];

        /**
         * Creates a new PvpFairyEnterRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpFairyEnterRes instance
         */
        public static create(properties?: gamesvr.IPvpFairyEnterRes): gamesvr.PvpFairyEnterRes;

        /**
         * Encodes the specified PvpFairyEnterRes message. Does not implicitly {@link gamesvr.PvpFairyEnterRes.verify|verify} messages.
         * @param message PvpFairyEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpFairyEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpFairyEnterRes message, length delimited. Does not implicitly {@link gamesvr.PvpFairyEnterRes.verify|verify} messages.
         * @param message PvpFairyEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpFairyEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpFairyEnterRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpFairyEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpFairyEnterRes;

        /**
         * Decodes a PvpFairyEnterRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpFairyEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpFairyEnterRes;

        /**
         * Verifies a PvpFairyEnterRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpFairyEnterRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpFairyEnterRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpFairyEnterRes;

        /**
         * Creates a plain object from a PvpFairyEnterRes message. Also converts values to other types if specified.
         * @param message PvpFairyEnterRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpFairyEnterRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpFairyEnterRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelEnterReq. */
    interface IPvpPeakDuelEnterReq {

        /** PvpPeakDuelEnterReq EnemyIndex */
        EnemyIndex?: (number|null);

        /** PvpPeakDuelEnterReq ChallengerHeroListHeroList */
        ChallengerHeroListHeroList?: (data.IPvpPeakDuelDefensiveLineupHero[]|null);
    }

    /** Represents a PvpPeakDuelEnterReq. */
    class PvpPeakDuelEnterReq implements IPvpPeakDuelEnterReq {

        /**
         * Constructs a new PvpPeakDuelEnterReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelEnterReq);

        /** PvpPeakDuelEnterReq EnemyIndex. */
        public EnemyIndex: number;

        /** PvpPeakDuelEnterReq ChallengerHeroListHeroList. */
        public ChallengerHeroListHeroList: data.IPvpPeakDuelDefensiveLineupHero[];

        /**
         * Creates a new PvpPeakDuelEnterReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelEnterReq instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelEnterReq): gamesvr.PvpPeakDuelEnterReq;

        /**
         * Encodes the specified PvpPeakDuelEnterReq message. Does not implicitly {@link gamesvr.PvpPeakDuelEnterReq.verify|verify} messages.
         * @param message PvpPeakDuelEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelEnterReq message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelEnterReq.verify|verify} messages.
         * @param message PvpPeakDuelEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelEnterReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelEnterReq;

        /**
         * Decodes a PvpPeakDuelEnterReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelEnterReq;

        /**
         * Verifies a PvpPeakDuelEnterReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelEnterReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelEnterReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelEnterReq;

        /**
         * Creates a plain object from a PvpPeakDuelEnterReq message. Also converts values to other types if specified.
         * @param message PvpPeakDuelEnterReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelEnterReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelEnterReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelEnterRes. */
    interface IPvpPeakDuelEnterRes {

        /** PvpPeakDuelEnterRes Past */
        Past?: (boolean|null);

        /** PvpPeakDuelEnterRes Integral */
        Integral?: (number|null);

        /** PvpPeakDuelEnterRes EnterBattleResultList */
        EnterBattleResultList?: (gamesvr.IEnterBattleResult[]|null);

        /** PvpPeakDuelEnterRes Exp */
        Exp?: (number|null);

        /** PvpPeakDuelEnterRes TotalExp */
        TotalExp?: (number|null);

        /** PvpPeakDuelEnterRes Prizes1 */
        Prizes1?: (data.IItemInfo[]|null);
    }

    /** Represents a PvpPeakDuelEnterRes. */
    class PvpPeakDuelEnterRes implements IPvpPeakDuelEnterRes {

        /**
         * Constructs a new PvpPeakDuelEnterRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelEnterRes);

        /** PvpPeakDuelEnterRes Past. */
        public Past: boolean;

        /** PvpPeakDuelEnterRes Integral. */
        public Integral: number;

        /** PvpPeakDuelEnterRes EnterBattleResultList. */
        public EnterBattleResultList: gamesvr.IEnterBattleResult[];

        /** PvpPeakDuelEnterRes Exp. */
        public Exp: number;

        /** PvpPeakDuelEnterRes TotalExp. */
        public TotalExp: number;

        /** PvpPeakDuelEnterRes Prizes1. */
        public Prizes1: data.IItemInfo[];

        /**
         * Creates a new PvpPeakDuelEnterRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelEnterRes instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelEnterRes): gamesvr.PvpPeakDuelEnterRes;

        /**
         * Encodes the specified PvpPeakDuelEnterRes message. Does not implicitly {@link gamesvr.PvpPeakDuelEnterRes.verify|verify} messages.
         * @param message PvpPeakDuelEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelEnterRes message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelEnterRes.verify|verify} messages.
         * @param message PvpPeakDuelEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelEnterRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelEnterRes;

        /**
         * Decodes a PvpPeakDuelEnterRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelEnterRes;

        /**
         * Verifies a PvpPeakDuelEnterRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelEnterRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelEnterRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelEnterRes;

        /**
         * Creates a plain object from a PvpPeakDuelEnterRes message. Also converts values to other types if specified.
         * @param message PvpPeakDuelEnterRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelEnterRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelEnterRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelTradeEnemyReq. */
    interface IPvpPeakDuelTradeEnemyReq {
    }

    /** Represents a PvpPeakDuelTradeEnemyReq. */
    class PvpPeakDuelTradeEnemyReq implements IPvpPeakDuelTradeEnemyReq {

        /**
         * Constructs a new PvpPeakDuelTradeEnemyReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelTradeEnemyReq);

        /**
         * Creates a new PvpPeakDuelTradeEnemyReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelTradeEnemyReq instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelTradeEnemyReq): gamesvr.PvpPeakDuelTradeEnemyReq;

        /**
         * Encodes the specified PvpPeakDuelTradeEnemyReq message. Does not implicitly {@link gamesvr.PvpPeakDuelTradeEnemyReq.verify|verify} messages.
         * @param message PvpPeakDuelTradeEnemyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelTradeEnemyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelTradeEnemyReq message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelTradeEnemyReq.verify|verify} messages.
         * @param message PvpPeakDuelTradeEnemyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelTradeEnemyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelTradeEnemyReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelTradeEnemyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelTradeEnemyReq;

        /**
         * Decodes a PvpPeakDuelTradeEnemyReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelTradeEnemyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelTradeEnemyReq;

        /**
         * Verifies a PvpPeakDuelTradeEnemyReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelTradeEnemyReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelTradeEnemyReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelTradeEnemyReq;

        /**
         * Creates a plain object from a PvpPeakDuelTradeEnemyReq message. Also converts values to other types if specified.
         * @param message PvpPeakDuelTradeEnemyReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelTradeEnemyReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelTradeEnemyReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelTradeEnemyRes. */
    interface IPvpPeakDuelTradeEnemyRes {

        /** PvpPeakDuelTradeEnemyRes LastTradeTime */
        LastTradeTime?: (number|Long|null);

        /** PvpPeakDuelTradeEnemyRes EnemyInfoList */
        EnemyInfoList?: (data.IPVPPeakDuelIntegral[]|null);
    }

    /** Represents a PvpPeakDuelTradeEnemyRes. */
    class PvpPeakDuelTradeEnemyRes implements IPvpPeakDuelTradeEnemyRes {

        /**
         * Constructs a new PvpPeakDuelTradeEnemyRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelTradeEnemyRes);

        /** PvpPeakDuelTradeEnemyRes LastTradeTime. */
        public LastTradeTime: (number|Long);

        /** PvpPeakDuelTradeEnemyRes EnemyInfoList. */
        public EnemyInfoList: data.IPVPPeakDuelIntegral[];

        /**
         * Creates a new PvpPeakDuelTradeEnemyRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelTradeEnemyRes instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelTradeEnemyRes): gamesvr.PvpPeakDuelTradeEnemyRes;

        /**
         * Encodes the specified PvpPeakDuelTradeEnemyRes message. Does not implicitly {@link gamesvr.PvpPeakDuelTradeEnemyRes.verify|verify} messages.
         * @param message PvpPeakDuelTradeEnemyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelTradeEnemyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelTradeEnemyRes message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelTradeEnemyRes.verify|verify} messages.
         * @param message PvpPeakDuelTradeEnemyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelTradeEnemyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelTradeEnemyRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelTradeEnemyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelTradeEnemyRes;

        /**
         * Decodes a PvpPeakDuelTradeEnemyRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelTradeEnemyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelTradeEnemyRes;

        /**
         * Verifies a PvpPeakDuelTradeEnemyRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelTradeEnemyRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelTradeEnemyRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelTradeEnemyRes;

        /**
         * Creates a plain object from a PvpPeakDuelTradeEnemyRes message. Also converts values to other types if specified.
         * @param message PvpPeakDuelTradeEnemyRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelTradeEnemyRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelTradeEnemyRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelChangeIntegralNotify. */
    interface IPvpPeakDuelChangeIntegralNotify {

        /** PvpPeakDuelChangeIntegralNotify Integral */
        Integral?: (number|null);
    }

    /** Represents a PvpPeakDuelChangeIntegralNotify. */
    class PvpPeakDuelChangeIntegralNotify implements IPvpPeakDuelChangeIntegralNotify {

        /**
         * Constructs a new PvpPeakDuelChangeIntegralNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelChangeIntegralNotify);

        /** PvpPeakDuelChangeIntegralNotify Integral. */
        public Integral: number;

        /**
         * Creates a new PvpPeakDuelChangeIntegralNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelChangeIntegralNotify instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelChangeIntegralNotify): gamesvr.PvpPeakDuelChangeIntegralNotify;

        /**
         * Encodes the specified PvpPeakDuelChangeIntegralNotify message. Does not implicitly {@link gamesvr.PvpPeakDuelChangeIntegralNotify.verify|verify} messages.
         * @param message PvpPeakDuelChangeIntegralNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelChangeIntegralNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelChangeIntegralNotify message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelChangeIntegralNotify.verify|verify} messages.
         * @param message PvpPeakDuelChangeIntegralNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelChangeIntegralNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelChangeIntegralNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelChangeIntegralNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelChangeIntegralNotify;

        /**
         * Decodes a PvpPeakDuelChangeIntegralNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelChangeIntegralNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelChangeIntegralNotify;

        /**
         * Verifies a PvpPeakDuelChangeIntegralNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelChangeIntegralNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelChangeIntegralNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelChangeIntegralNotify;

        /**
         * Creates a plain object from a PvpPeakDuelChangeIntegralNotify message. Also converts values to other types if specified.
         * @param message PvpPeakDuelChangeIntegralNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelChangeIntegralNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelChangeIntegralNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelChangeRecordFightNotify. */
    interface IPvpPeakDuelChangeRecordFightNotify {

        /** PvpPeakDuelChangeRecordFightNotify FightUnit */
        FightUnit?: (data.IPVPPeakDuelFight|null);
    }

    /** Represents a PvpPeakDuelChangeRecordFightNotify. */
    class PvpPeakDuelChangeRecordFightNotify implements IPvpPeakDuelChangeRecordFightNotify {

        /**
         * Constructs a new PvpPeakDuelChangeRecordFightNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelChangeRecordFightNotify);

        /** PvpPeakDuelChangeRecordFightNotify FightUnit. */
        public FightUnit?: (data.IPVPPeakDuelFight|null);

        /**
         * Creates a new PvpPeakDuelChangeRecordFightNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelChangeRecordFightNotify instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelChangeRecordFightNotify): gamesvr.PvpPeakDuelChangeRecordFightNotify;

        /**
         * Encodes the specified PvpPeakDuelChangeRecordFightNotify message. Does not implicitly {@link gamesvr.PvpPeakDuelChangeRecordFightNotify.verify|verify} messages.
         * @param message PvpPeakDuelChangeRecordFightNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelChangeRecordFightNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelChangeRecordFightNotify message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelChangeRecordFightNotify.verify|verify} messages.
         * @param message PvpPeakDuelChangeRecordFightNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelChangeRecordFightNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelChangeRecordFightNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelChangeRecordFightNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelChangeRecordFightNotify;

        /**
         * Decodes a PvpPeakDuelChangeRecordFightNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelChangeRecordFightNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelChangeRecordFightNotify;

        /**
         * Verifies a PvpPeakDuelChangeRecordFightNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelChangeRecordFightNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelChangeRecordFightNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelChangeRecordFightNotify;

        /**
         * Creates a plain object from a PvpPeakDuelChangeRecordFightNotify message. Also converts values to other types if specified.
         * @param message PvpPeakDuelChangeRecordFightNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelChangeRecordFightNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelChangeRecordFightNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelTradeDefensiveLineupReq. */
    interface IPvpPeakDuelTradeDefensiveLineupReq {

        /** PvpPeakDuelTradeDefensiveLineupReq PvpPeakDuelDefensiveLineupHeroList */
        PvpPeakDuelDefensiveLineupHeroList?: (data.IPvpPeakDuelDefensiveLineupHero[]|null);
    }

    /** Represents a PvpPeakDuelTradeDefensiveLineupReq. */
    class PvpPeakDuelTradeDefensiveLineupReq implements IPvpPeakDuelTradeDefensiveLineupReq {

        /**
         * Constructs a new PvpPeakDuelTradeDefensiveLineupReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelTradeDefensiveLineupReq);

        /** PvpPeakDuelTradeDefensiveLineupReq PvpPeakDuelDefensiveLineupHeroList. */
        public PvpPeakDuelDefensiveLineupHeroList: data.IPvpPeakDuelDefensiveLineupHero[];

        /**
         * Creates a new PvpPeakDuelTradeDefensiveLineupReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelTradeDefensiveLineupReq instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelTradeDefensiveLineupReq): gamesvr.PvpPeakDuelTradeDefensiveLineupReq;

        /**
         * Encodes the specified PvpPeakDuelTradeDefensiveLineupReq message. Does not implicitly {@link gamesvr.PvpPeakDuelTradeDefensiveLineupReq.verify|verify} messages.
         * @param message PvpPeakDuelTradeDefensiveLineupReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelTradeDefensiveLineupReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelTradeDefensiveLineupReq message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelTradeDefensiveLineupReq.verify|verify} messages.
         * @param message PvpPeakDuelTradeDefensiveLineupReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelTradeDefensiveLineupReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelTradeDefensiveLineupReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelTradeDefensiveLineupReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelTradeDefensiveLineupReq;

        /**
         * Decodes a PvpPeakDuelTradeDefensiveLineupReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelTradeDefensiveLineupReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelTradeDefensiveLineupReq;

        /**
         * Verifies a PvpPeakDuelTradeDefensiveLineupReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelTradeDefensiveLineupReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelTradeDefensiveLineupReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelTradeDefensiveLineupReq;

        /**
         * Creates a plain object from a PvpPeakDuelTradeDefensiveLineupReq message. Also converts values to other types if specified.
         * @param message PvpPeakDuelTradeDefensiveLineupReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelTradeDefensiveLineupReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelTradeDefensiveLineupReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PvpPeakDuelTradeDefensiveLineupRes. */
    interface IPvpPeakDuelTradeDefensiveLineupRes {

        /** PvpPeakDuelTradeDefensiveLineupRes PvpPeakDuelDefensiveLineupHeroList */
        PvpPeakDuelDefensiveLineupHeroList?: (data.IPvpPeakDuelDefensiveLineupHero[]|null);
    }

    /** Represents a PvpPeakDuelTradeDefensiveLineupRes. */
    class PvpPeakDuelTradeDefensiveLineupRes implements IPvpPeakDuelTradeDefensiveLineupRes {

        /**
         * Constructs a new PvpPeakDuelTradeDefensiveLineupRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPvpPeakDuelTradeDefensiveLineupRes);

        /** PvpPeakDuelTradeDefensiveLineupRes PvpPeakDuelDefensiveLineupHeroList. */
        public PvpPeakDuelDefensiveLineupHeroList: data.IPvpPeakDuelDefensiveLineupHero[];

        /**
         * Creates a new PvpPeakDuelTradeDefensiveLineupRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PvpPeakDuelTradeDefensiveLineupRes instance
         */
        public static create(properties?: gamesvr.IPvpPeakDuelTradeDefensiveLineupRes): gamesvr.PvpPeakDuelTradeDefensiveLineupRes;

        /**
         * Encodes the specified PvpPeakDuelTradeDefensiveLineupRes message. Does not implicitly {@link gamesvr.PvpPeakDuelTradeDefensiveLineupRes.verify|verify} messages.
         * @param message PvpPeakDuelTradeDefensiveLineupRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPvpPeakDuelTradeDefensiveLineupRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PvpPeakDuelTradeDefensiveLineupRes message, length delimited. Does not implicitly {@link gamesvr.PvpPeakDuelTradeDefensiveLineupRes.verify|verify} messages.
         * @param message PvpPeakDuelTradeDefensiveLineupRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPvpPeakDuelTradeDefensiveLineupRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PvpPeakDuelTradeDefensiveLineupRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PvpPeakDuelTradeDefensiveLineupRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PvpPeakDuelTradeDefensiveLineupRes;

        /**
         * Decodes a PvpPeakDuelTradeDefensiveLineupRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PvpPeakDuelTradeDefensiveLineupRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PvpPeakDuelTradeDefensiveLineupRes;

        /**
         * Verifies a PvpPeakDuelTradeDefensiveLineupRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PvpPeakDuelTradeDefensiveLineupRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PvpPeakDuelTradeDefensiveLineupRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PvpPeakDuelTradeDefensiveLineupRes;

        /**
         * Creates a plain object from a PvpPeakDuelTradeDefensiveLineupRes message. Also converts values to other types if specified.
         * @param message PvpPeakDuelTradeDefensiveLineupRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PvpPeakDuelTradeDefensiveLineupRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PvpPeakDuelTradeDefensiveLineupRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPowerFiveHeroGetListReq. */
    interface IRankPowerFiveHeroGetListReq {
    }

    /** Represents a RankPowerFiveHeroGetListReq. */
    class RankPowerFiveHeroGetListReq implements IRankPowerFiveHeroGetListReq {

        /**
         * Constructs a new RankPowerFiveHeroGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPowerFiveHeroGetListReq);

        /**
         * Creates a new RankPowerFiveHeroGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPowerFiveHeroGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPowerFiveHeroGetListReq): gamesvr.RankPowerFiveHeroGetListReq;

        /**
         * Encodes the specified RankPowerFiveHeroGetListReq message. Does not implicitly {@link gamesvr.RankPowerFiveHeroGetListReq.verify|verify} messages.
         * @param message RankPowerFiveHeroGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPowerFiveHeroGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPowerFiveHeroGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPowerFiveHeroGetListReq.verify|verify} messages.
         * @param message RankPowerFiveHeroGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPowerFiveHeroGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPowerFiveHeroGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPowerFiveHeroGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPowerFiveHeroGetListReq;

        /**
         * Decodes a RankPowerFiveHeroGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPowerFiveHeroGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPowerFiveHeroGetListReq;

        /**
         * Verifies a RankPowerFiveHeroGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPowerFiveHeroGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPowerFiveHeroGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPowerFiveHeroGetListReq;

        /**
         * Creates a plain object from a RankPowerFiveHeroGetListReq message. Also converts values to other types if specified.
         * @param message RankPowerFiveHeroGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPowerFiveHeroGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPowerFiveHeroGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPowerFiveHeroGetListRes. */
    interface IRankPowerFiveHeroGetListRes {

        /** RankPowerFiveHeroGetListRes PowerFiveHeroList */
        PowerFiveHeroList?: (data.IPowerFiveHero[]|null);
    }

    /** Represents a RankPowerFiveHeroGetListRes. */
    class RankPowerFiveHeroGetListRes implements IRankPowerFiveHeroGetListRes {

        /**
         * Constructs a new RankPowerFiveHeroGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPowerFiveHeroGetListRes);

        /** RankPowerFiveHeroGetListRes PowerFiveHeroList. */
        public PowerFiveHeroList: data.IPowerFiveHero[];

        /**
         * Creates a new RankPowerFiveHeroGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPowerFiveHeroGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPowerFiveHeroGetListRes): gamesvr.RankPowerFiveHeroGetListRes;

        /**
         * Encodes the specified RankPowerFiveHeroGetListRes message. Does not implicitly {@link gamesvr.RankPowerFiveHeroGetListRes.verify|verify} messages.
         * @param message RankPowerFiveHeroGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPowerFiveHeroGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPowerFiveHeroGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPowerFiveHeroGetListRes.verify|verify} messages.
         * @param message RankPowerFiveHeroGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPowerFiveHeroGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPowerFiveHeroGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPowerFiveHeroGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPowerFiveHeroGetListRes;

        /**
         * Decodes a RankPowerFiveHeroGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPowerFiveHeroGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPowerFiveHeroGetListRes;

        /**
         * Verifies a RankPowerFiveHeroGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPowerFiveHeroGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPowerFiveHeroGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPowerFiveHeroGetListRes;

        /**
         * Creates a plain object from a RankPowerFiveHeroGetListRes message. Also converts values to other types if specified.
         * @param message RankPowerFiveHeroGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPowerFiveHeroGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPowerFiveHeroGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPowerOneHeroGetListReq. */
    interface IRankPowerOneHeroGetListReq {
    }

    /** Represents a RankPowerOneHeroGetListReq. */
    class RankPowerOneHeroGetListReq implements IRankPowerOneHeroGetListReq {

        /**
         * Constructs a new RankPowerOneHeroGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPowerOneHeroGetListReq);

        /**
         * Creates a new RankPowerOneHeroGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPowerOneHeroGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPowerOneHeroGetListReq): gamesvr.RankPowerOneHeroGetListReq;

        /**
         * Encodes the specified RankPowerOneHeroGetListReq message. Does not implicitly {@link gamesvr.RankPowerOneHeroGetListReq.verify|verify} messages.
         * @param message RankPowerOneHeroGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPowerOneHeroGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPowerOneHeroGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPowerOneHeroGetListReq.verify|verify} messages.
         * @param message RankPowerOneHeroGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPowerOneHeroGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPowerOneHeroGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPowerOneHeroGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPowerOneHeroGetListReq;

        /**
         * Decodes a RankPowerOneHeroGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPowerOneHeroGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPowerOneHeroGetListReq;

        /**
         * Verifies a RankPowerOneHeroGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPowerOneHeroGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPowerOneHeroGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPowerOneHeroGetListReq;

        /**
         * Creates a plain object from a RankPowerOneHeroGetListReq message. Also converts values to other types if specified.
         * @param message RankPowerOneHeroGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPowerOneHeroGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPowerOneHeroGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPowerOneHeroGetListRes. */
    interface IRankPowerOneHeroGetListRes {

        /** RankPowerOneHeroGetListRes PowerOneHeroList */
        PowerOneHeroList?: (data.IPowerOneHero[]|null);
    }

    /** Represents a RankPowerOneHeroGetListRes. */
    class RankPowerOneHeroGetListRes implements IRankPowerOneHeroGetListRes {

        /**
         * Constructs a new RankPowerOneHeroGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPowerOneHeroGetListRes);

        /** RankPowerOneHeroGetListRes PowerOneHeroList. */
        public PowerOneHeroList: data.IPowerOneHero[];

        /**
         * Creates a new RankPowerOneHeroGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPowerOneHeroGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPowerOneHeroGetListRes): gamesvr.RankPowerOneHeroGetListRes;

        /**
         * Encodes the specified RankPowerOneHeroGetListRes message. Does not implicitly {@link gamesvr.RankPowerOneHeroGetListRes.verify|verify} messages.
         * @param message RankPowerOneHeroGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPowerOneHeroGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPowerOneHeroGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPowerOneHeroGetListRes.verify|verify} messages.
         * @param message RankPowerOneHeroGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPowerOneHeroGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPowerOneHeroGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPowerOneHeroGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPowerOneHeroGetListRes;

        /**
         * Decodes a RankPowerOneHeroGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPowerOneHeroGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPowerOneHeroGetListRes;

        /**
         * Verifies a RankPowerOneHeroGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPowerOneHeroGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPowerOneHeroGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPowerOneHeroGetListRes;

        /**
         * Creates a plain object from a RankPowerOneHeroGetListRes message. Also converts values to other types if specified.
         * @param message RankPowerOneHeroGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPowerOneHeroGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPowerOneHeroGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPowerTotalHeroGetListReq. */
    interface IRankPowerTotalHeroGetListReq {
    }

    /** Represents a RankPowerTotalHeroGetListReq. */
    class RankPowerTotalHeroGetListReq implements IRankPowerTotalHeroGetListReq {

        /**
         * Constructs a new RankPowerTotalHeroGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPowerTotalHeroGetListReq);

        /**
         * Creates a new RankPowerTotalHeroGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPowerTotalHeroGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPowerTotalHeroGetListReq): gamesvr.RankPowerTotalHeroGetListReq;

        /**
         * Encodes the specified RankPowerTotalHeroGetListReq message. Does not implicitly {@link gamesvr.RankPowerTotalHeroGetListReq.verify|verify} messages.
         * @param message RankPowerTotalHeroGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPowerTotalHeroGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPowerTotalHeroGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPowerTotalHeroGetListReq.verify|verify} messages.
         * @param message RankPowerTotalHeroGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPowerTotalHeroGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPowerTotalHeroGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPowerTotalHeroGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPowerTotalHeroGetListReq;

        /**
         * Decodes a RankPowerTotalHeroGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPowerTotalHeroGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPowerTotalHeroGetListReq;

        /**
         * Verifies a RankPowerTotalHeroGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPowerTotalHeroGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPowerTotalHeroGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPowerTotalHeroGetListReq;

        /**
         * Creates a plain object from a RankPowerTotalHeroGetListReq message. Also converts values to other types if specified.
         * @param message RankPowerTotalHeroGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPowerTotalHeroGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPowerTotalHeroGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPowerTotalHeroGetListRes. */
    interface IRankPowerTotalHeroGetListRes {

        /** RankPowerTotalHeroGetListRes PowerTotalHeroList */
        PowerTotalHeroList?: (data.IPowerTotalHero[]|null);
    }

    /** Represents a RankPowerTotalHeroGetListRes. */
    class RankPowerTotalHeroGetListRes implements IRankPowerTotalHeroGetListRes {

        /**
         * Constructs a new RankPowerTotalHeroGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPowerTotalHeroGetListRes);

        /** RankPowerTotalHeroGetListRes PowerTotalHeroList. */
        public PowerTotalHeroList: data.IPowerTotalHero[];

        /**
         * Creates a new RankPowerTotalHeroGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPowerTotalHeroGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPowerTotalHeroGetListRes): gamesvr.RankPowerTotalHeroGetListRes;

        /**
         * Encodes the specified RankPowerTotalHeroGetListRes message. Does not implicitly {@link gamesvr.RankPowerTotalHeroGetListRes.verify|verify} messages.
         * @param message RankPowerTotalHeroGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPowerTotalHeroGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPowerTotalHeroGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPowerTotalHeroGetListRes.verify|verify} messages.
         * @param message RankPowerTotalHeroGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPowerTotalHeroGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPowerTotalHeroGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPowerTotalHeroGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPowerTotalHeroGetListRes;

        /**
         * Decodes a RankPowerTotalHeroGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPowerTotalHeroGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPowerTotalHeroGetListRes;

        /**
         * Verifies a RankPowerTotalHeroGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPowerTotalHeroGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPowerTotalHeroGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPowerTotalHeroGetListRes;

        /**
         * Creates a plain object from a RankPowerTotalHeroGetListRes message. Also converts values to other types if specified.
         * @param message RankPowerTotalHeroGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPowerTotalHeroGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPowerTotalHeroGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPvpFairyIntegralGetListReq. */
    interface IRankPvpFairyIntegralGetListReq {
    }

    /** Represents a RankPvpFairyIntegralGetListReq. */
    class RankPvpFairyIntegralGetListReq implements IRankPvpFairyIntegralGetListReq {

        /**
         * Constructs a new RankPvpFairyIntegralGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPvpFairyIntegralGetListReq);

        /**
         * Creates a new RankPvpFairyIntegralGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPvpFairyIntegralGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPvpFairyIntegralGetListReq): gamesvr.RankPvpFairyIntegralGetListReq;

        /**
         * Encodes the specified RankPvpFairyIntegralGetListReq message. Does not implicitly {@link gamesvr.RankPvpFairyIntegralGetListReq.verify|verify} messages.
         * @param message RankPvpFairyIntegralGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPvpFairyIntegralGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPvpFairyIntegralGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPvpFairyIntegralGetListReq.verify|verify} messages.
         * @param message RankPvpFairyIntegralGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPvpFairyIntegralGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPvpFairyIntegralGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPvpFairyIntegralGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPvpFairyIntegralGetListReq;

        /**
         * Decodes a RankPvpFairyIntegralGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPvpFairyIntegralGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPvpFairyIntegralGetListReq;

        /**
         * Verifies a RankPvpFairyIntegralGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPvpFairyIntegralGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPvpFairyIntegralGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPvpFairyIntegralGetListReq;

        /**
         * Creates a plain object from a RankPvpFairyIntegralGetListReq message. Also converts values to other types if specified.
         * @param message RankPvpFairyIntegralGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPvpFairyIntegralGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPvpFairyIntegralGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPvpFairyIntegralGetListRes. */
    interface IRankPvpFairyIntegralGetListRes {

        /** RankPvpFairyIntegralGetListRes PVPFairyIntegralList */
        PVPFairyIntegralList?: (data.IPVPFairyIntegral[]|null);
    }

    /** Represents a RankPvpFairyIntegralGetListRes. */
    class RankPvpFairyIntegralGetListRes implements IRankPvpFairyIntegralGetListRes {

        /**
         * Constructs a new RankPvpFairyIntegralGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPvpFairyIntegralGetListRes);

        /** RankPvpFairyIntegralGetListRes PVPFairyIntegralList. */
        public PVPFairyIntegralList: data.IPVPFairyIntegral[];

        /**
         * Creates a new RankPvpFairyIntegralGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPvpFairyIntegralGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPvpFairyIntegralGetListRes): gamesvr.RankPvpFairyIntegralGetListRes;

        /**
         * Encodes the specified RankPvpFairyIntegralGetListRes message. Does not implicitly {@link gamesvr.RankPvpFairyIntegralGetListRes.verify|verify} messages.
         * @param message RankPvpFairyIntegralGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPvpFairyIntegralGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPvpFairyIntegralGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPvpFairyIntegralGetListRes.verify|verify} messages.
         * @param message RankPvpFairyIntegralGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPvpFairyIntegralGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPvpFairyIntegralGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPvpFairyIntegralGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPvpFairyIntegralGetListRes;

        /**
         * Decodes a RankPvpFairyIntegralGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPvpFairyIntegralGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPvpFairyIntegralGetListRes;

        /**
         * Verifies a RankPvpFairyIntegralGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPvpFairyIntegralGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPvpFairyIntegralGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPvpFairyIntegralGetListRes;

        /**
         * Creates a plain object from a RankPvpFairyIntegralGetListRes message. Also converts values to other types if specified.
         * @param message RankPvpFairyIntegralGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPvpFairyIntegralGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPvpFairyIntegralGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPveAdventureScaleGetListReq. */
    interface IRankPveAdventureScaleGetListReq {
    }

    /** Represents a RankPveAdventureScaleGetListReq. */
    class RankPveAdventureScaleGetListReq implements IRankPveAdventureScaleGetListReq {

        /**
         * Constructs a new RankPveAdventureScaleGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPveAdventureScaleGetListReq);

        /**
         * Creates a new RankPveAdventureScaleGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPveAdventureScaleGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPveAdventureScaleGetListReq): gamesvr.RankPveAdventureScaleGetListReq;

        /**
         * Encodes the specified RankPveAdventureScaleGetListReq message. Does not implicitly {@link gamesvr.RankPveAdventureScaleGetListReq.verify|verify} messages.
         * @param message RankPveAdventureScaleGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPveAdventureScaleGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPveAdventureScaleGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPveAdventureScaleGetListReq.verify|verify} messages.
         * @param message RankPveAdventureScaleGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPveAdventureScaleGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPveAdventureScaleGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPveAdventureScaleGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPveAdventureScaleGetListReq;

        /**
         * Decodes a RankPveAdventureScaleGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPveAdventureScaleGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPveAdventureScaleGetListReq;

        /**
         * Verifies a RankPveAdventureScaleGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPveAdventureScaleGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPveAdventureScaleGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPveAdventureScaleGetListReq;

        /**
         * Creates a plain object from a RankPveAdventureScaleGetListReq message. Also converts values to other types if specified.
         * @param message RankPveAdventureScaleGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPveAdventureScaleGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPveAdventureScaleGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPveAdventureScaleGetListRes. */
    interface IRankPveAdventureScaleGetListRes {

        /** RankPveAdventureScaleGetListRes PVEAdventureScaleList */
        PVEAdventureScaleList?: (data.IPVEAdventureScale[]|null);
    }

    /** Represents a RankPveAdventureScaleGetListRes. */
    class RankPveAdventureScaleGetListRes implements IRankPveAdventureScaleGetListRes {

        /**
         * Constructs a new RankPveAdventureScaleGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPveAdventureScaleGetListRes);

        /** RankPveAdventureScaleGetListRes PVEAdventureScaleList. */
        public PVEAdventureScaleList: data.IPVEAdventureScale[];

        /**
         * Creates a new RankPveAdventureScaleGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPveAdventureScaleGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPveAdventureScaleGetListRes): gamesvr.RankPveAdventureScaleGetListRes;

        /**
         * Encodes the specified RankPveAdventureScaleGetListRes message. Does not implicitly {@link gamesvr.RankPveAdventureScaleGetListRes.verify|verify} messages.
         * @param message RankPveAdventureScaleGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPveAdventureScaleGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPveAdventureScaleGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPveAdventureScaleGetListRes.verify|verify} messages.
         * @param message RankPveAdventureScaleGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPveAdventureScaleGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPveAdventureScaleGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPveAdventureScaleGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPveAdventureScaleGetListRes;

        /**
         * Decodes a RankPveAdventureScaleGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPveAdventureScaleGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPveAdventureScaleGetListRes;

        /**
         * Verifies a RankPveAdventureScaleGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPveAdventureScaleGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPveAdventureScaleGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPveAdventureScaleGetListRes;

        /**
         * Creates a plain object from a RankPveAdventureScaleGetListRes message. Also converts values to other types if specified.
         * @param message RankPveAdventureScaleGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPveAdventureScaleGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPveAdventureScaleGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPveDreamScaleGetListReq. */
    interface IRankPveDreamScaleGetListReq {
    }

    /** Represents a RankPveDreamScaleGetListReq. */
    class RankPveDreamScaleGetListReq implements IRankPveDreamScaleGetListReq {

        /**
         * Constructs a new RankPveDreamScaleGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPveDreamScaleGetListReq);

        /**
         * Creates a new RankPveDreamScaleGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPveDreamScaleGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPveDreamScaleGetListReq): gamesvr.RankPveDreamScaleGetListReq;

        /**
         * Encodes the specified RankPveDreamScaleGetListReq message. Does not implicitly {@link gamesvr.RankPveDreamScaleGetListReq.verify|verify} messages.
         * @param message RankPveDreamScaleGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPveDreamScaleGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPveDreamScaleGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPveDreamScaleGetListReq.verify|verify} messages.
         * @param message RankPveDreamScaleGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPveDreamScaleGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPveDreamScaleGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPveDreamScaleGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPveDreamScaleGetListReq;

        /**
         * Decodes a RankPveDreamScaleGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPveDreamScaleGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPveDreamScaleGetListReq;

        /**
         * Verifies a RankPveDreamScaleGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPveDreamScaleGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPveDreamScaleGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPveDreamScaleGetListReq;

        /**
         * Creates a plain object from a RankPveDreamScaleGetListReq message. Also converts values to other types if specified.
         * @param message RankPveDreamScaleGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPveDreamScaleGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPveDreamScaleGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPveDreamScaleGetListRes. */
    interface IRankPveDreamScaleGetListRes {

        /** RankPveDreamScaleGetListRes PVEDreamScaleList */
        PVEDreamScaleList?: (data.IPVEDreamScale[]|null);
    }

    /** Represents a RankPveDreamScaleGetListRes. */
    class RankPveDreamScaleGetListRes implements IRankPveDreamScaleGetListRes {

        /**
         * Constructs a new RankPveDreamScaleGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPveDreamScaleGetListRes);

        /** RankPveDreamScaleGetListRes PVEDreamScaleList. */
        public PVEDreamScaleList: data.IPVEDreamScale[];

        /**
         * Creates a new RankPveDreamScaleGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPveDreamScaleGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPveDreamScaleGetListRes): gamesvr.RankPveDreamScaleGetListRes;

        /**
         * Encodes the specified RankPveDreamScaleGetListRes message. Does not implicitly {@link gamesvr.RankPveDreamScaleGetListRes.verify|verify} messages.
         * @param message RankPveDreamScaleGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPveDreamScaleGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPveDreamScaleGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPveDreamScaleGetListRes.verify|verify} messages.
         * @param message RankPveDreamScaleGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPveDreamScaleGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPveDreamScaleGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPveDreamScaleGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPveDreamScaleGetListRes;

        /**
         * Decodes a RankPveDreamScaleGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPveDreamScaleGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPveDreamScaleGetListRes;

        /**
         * Verifies a RankPveDreamScaleGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPveDreamScaleGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPveDreamScaleGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPveDreamScaleGetListRes;

        /**
         * Creates a plain object from a RankPveDreamScaleGetListRes message. Also converts values to other types if specified.
         * @param message RankPveDreamScaleGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPveDreamScaleGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPveDreamScaleGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankTrialDevilDamageGetListReq. */
    interface IRankTrialDevilDamageGetListReq {

        /** RankTrialDevilDamageGetListReq SelfRankFlag */
        SelfRankFlag?: (boolean|null);
    }

    /** Represents a RankTrialDevilDamageGetListReq. */
    class RankTrialDevilDamageGetListReq implements IRankTrialDevilDamageGetListReq {

        /**
         * Constructs a new RankTrialDevilDamageGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankTrialDevilDamageGetListReq);

        /** RankTrialDevilDamageGetListReq SelfRankFlag. */
        public SelfRankFlag: boolean;

        /**
         * Creates a new RankTrialDevilDamageGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankTrialDevilDamageGetListReq instance
         */
        public static create(properties?: gamesvr.IRankTrialDevilDamageGetListReq): gamesvr.RankTrialDevilDamageGetListReq;

        /**
         * Encodes the specified RankTrialDevilDamageGetListReq message. Does not implicitly {@link gamesvr.RankTrialDevilDamageGetListReq.verify|verify} messages.
         * @param message RankTrialDevilDamageGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankTrialDevilDamageGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankTrialDevilDamageGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankTrialDevilDamageGetListReq.verify|verify} messages.
         * @param message RankTrialDevilDamageGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankTrialDevilDamageGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankTrialDevilDamageGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankTrialDevilDamageGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankTrialDevilDamageGetListReq;

        /**
         * Decodes a RankTrialDevilDamageGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankTrialDevilDamageGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankTrialDevilDamageGetListReq;

        /**
         * Verifies a RankTrialDevilDamageGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankTrialDevilDamageGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankTrialDevilDamageGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankTrialDevilDamageGetListReq;

        /**
         * Creates a plain object from a RankTrialDevilDamageGetListReq message. Also converts values to other types if specified.
         * @param message RankTrialDevilDamageGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankTrialDevilDamageGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankTrialDevilDamageGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankTrialDevilDamageGetListRes. */
    interface IRankTrialDevilDamageGetListRes {

        /** RankTrialDevilDamageGetListRes SelfRankFlag */
        SelfRankFlag?: (boolean|null);

        /** RankTrialDevilDamageGetListRes RankIndex */
        RankIndex?: (number|null);

        /** RankTrialDevilDamageGetListRes TrialDevilDamageList */
        TrialDevilDamageList?: (data.ITrialDevilDamage[]|null);
    }

    /** Represents a RankTrialDevilDamageGetListRes. */
    class RankTrialDevilDamageGetListRes implements IRankTrialDevilDamageGetListRes {

        /**
         * Constructs a new RankTrialDevilDamageGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankTrialDevilDamageGetListRes);

        /** RankTrialDevilDamageGetListRes SelfRankFlag. */
        public SelfRankFlag: boolean;

        /** RankTrialDevilDamageGetListRes RankIndex. */
        public RankIndex: number;

        /** RankTrialDevilDamageGetListRes TrialDevilDamageList. */
        public TrialDevilDamageList: data.ITrialDevilDamage[];

        /**
         * Creates a new RankTrialDevilDamageGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankTrialDevilDamageGetListRes instance
         */
        public static create(properties?: gamesvr.IRankTrialDevilDamageGetListRes): gamesvr.RankTrialDevilDamageGetListRes;

        /**
         * Encodes the specified RankTrialDevilDamageGetListRes message. Does not implicitly {@link gamesvr.RankTrialDevilDamageGetListRes.verify|verify} messages.
         * @param message RankTrialDevilDamageGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankTrialDevilDamageGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankTrialDevilDamageGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankTrialDevilDamageGetListRes.verify|verify} messages.
         * @param message RankTrialDevilDamageGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankTrialDevilDamageGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankTrialDevilDamageGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankTrialDevilDamageGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankTrialDevilDamageGetListRes;

        /**
         * Decodes a RankTrialDevilDamageGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankTrialDevilDamageGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankTrialDevilDamageGetListRes;

        /**
         * Verifies a RankTrialDevilDamageGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankTrialDevilDamageGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankTrialDevilDamageGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankTrialDevilDamageGetListRes;

        /**
         * Creates a plain object from a RankTrialDevilDamageGetListRes message. Also converts values to other types if specified.
         * @param message RankTrialDevilDamageGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankTrialDevilDamageGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankTrialDevilDamageGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankTrialPurgatoryScaleGetListReq. */
    interface IRankTrialPurgatoryScaleGetListReq {
    }

    /** Represents a RankTrialPurgatoryScaleGetListReq. */
    class RankTrialPurgatoryScaleGetListReq implements IRankTrialPurgatoryScaleGetListReq {

        /**
         * Constructs a new RankTrialPurgatoryScaleGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankTrialPurgatoryScaleGetListReq);

        /**
         * Creates a new RankTrialPurgatoryScaleGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankTrialPurgatoryScaleGetListReq instance
         */
        public static create(properties?: gamesvr.IRankTrialPurgatoryScaleGetListReq): gamesvr.RankTrialPurgatoryScaleGetListReq;

        /**
         * Encodes the specified RankTrialPurgatoryScaleGetListReq message. Does not implicitly {@link gamesvr.RankTrialPurgatoryScaleGetListReq.verify|verify} messages.
         * @param message RankTrialPurgatoryScaleGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankTrialPurgatoryScaleGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankTrialPurgatoryScaleGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankTrialPurgatoryScaleGetListReq.verify|verify} messages.
         * @param message RankTrialPurgatoryScaleGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankTrialPurgatoryScaleGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankTrialPurgatoryScaleGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankTrialPurgatoryScaleGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankTrialPurgatoryScaleGetListReq;

        /**
         * Decodes a RankTrialPurgatoryScaleGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankTrialPurgatoryScaleGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankTrialPurgatoryScaleGetListReq;

        /**
         * Verifies a RankTrialPurgatoryScaleGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankTrialPurgatoryScaleGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankTrialPurgatoryScaleGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankTrialPurgatoryScaleGetListReq;

        /**
         * Creates a plain object from a RankTrialPurgatoryScaleGetListReq message. Also converts values to other types if specified.
         * @param message RankTrialPurgatoryScaleGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankTrialPurgatoryScaleGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankTrialPurgatoryScaleGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankTrialPurgatoryScaleGetListRes. */
    interface IRankTrialPurgatoryScaleGetListRes {

        /** RankTrialPurgatoryScaleGetListRes TrialPurgatoryScaleList */
        TrialPurgatoryScaleList?: (data.ITrialPurgatoryScale[]|null);
    }

    /** Represents a RankTrialPurgatoryScaleGetListRes. */
    class RankTrialPurgatoryScaleGetListRes implements IRankTrialPurgatoryScaleGetListRes {

        /**
         * Constructs a new RankTrialPurgatoryScaleGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankTrialPurgatoryScaleGetListRes);

        /** RankTrialPurgatoryScaleGetListRes TrialPurgatoryScaleList. */
        public TrialPurgatoryScaleList: data.ITrialPurgatoryScale[];

        /**
         * Creates a new RankTrialPurgatoryScaleGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankTrialPurgatoryScaleGetListRes instance
         */
        public static create(properties?: gamesvr.IRankTrialPurgatoryScaleGetListRes): gamesvr.RankTrialPurgatoryScaleGetListRes;

        /**
         * Encodes the specified RankTrialPurgatoryScaleGetListRes message. Does not implicitly {@link gamesvr.RankTrialPurgatoryScaleGetListRes.verify|verify} messages.
         * @param message RankTrialPurgatoryScaleGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankTrialPurgatoryScaleGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankTrialPurgatoryScaleGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankTrialPurgatoryScaleGetListRes.verify|verify} messages.
         * @param message RankTrialPurgatoryScaleGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankTrialPurgatoryScaleGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankTrialPurgatoryScaleGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankTrialPurgatoryScaleGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankTrialPurgatoryScaleGetListRes;

        /**
         * Decodes a RankTrialPurgatoryScaleGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankTrialPurgatoryScaleGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankTrialPurgatoryScaleGetListRes;

        /**
         * Verifies a RankTrialPurgatoryScaleGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankTrialPurgatoryScaleGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankTrialPurgatoryScaleGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankTrialPurgatoryScaleGetListRes;

        /**
         * Creates a plain object from a RankTrialPurgatoryScaleGetListRes message. Also converts values to other types if specified.
         * @param message RankTrialPurgatoryScaleGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankTrialPurgatoryScaleGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankTrialPurgatoryScaleGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPvpPeakDuelGetListReq. */
    interface IRankPvpPeakDuelGetListReq {
    }

    /** Represents a RankPvpPeakDuelGetListReq. */
    class RankPvpPeakDuelGetListReq implements IRankPvpPeakDuelGetListReq {

        /**
         * Constructs a new RankPvpPeakDuelGetListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPvpPeakDuelGetListReq);

        /**
         * Creates a new RankPvpPeakDuelGetListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPvpPeakDuelGetListReq instance
         */
        public static create(properties?: gamesvr.IRankPvpPeakDuelGetListReq): gamesvr.RankPvpPeakDuelGetListReq;

        /**
         * Encodes the specified RankPvpPeakDuelGetListReq message. Does not implicitly {@link gamesvr.RankPvpPeakDuelGetListReq.verify|verify} messages.
         * @param message RankPvpPeakDuelGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPvpPeakDuelGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPvpPeakDuelGetListReq message, length delimited. Does not implicitly {@link gamesvr.RankPvpPeakDuelGetListReq.verify|verify} messages.
         * @param message RankPvpPeakDuelGetListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPvpPeakDuelGetListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPvpPeakDuelGetListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPvpPeakDuelGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPvpPeakDuelGetListReq;

        /**
         * Decodes a RankPvpPeakDuelGetListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPvpPeakDuelGetListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPvpPeakDuelGetListReq;

        /**
         * Verifies a RankPvpPeakDuelGetListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPvpPeakDuelGetListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPvpPeakDuelGetListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPvpPeakDuelGetListReq;

        /**
         * Creates a plain object from a RankPvpPeakDuelGetListReq message. Also converts values to other types if specified.
         * @param message RankPvpPeakDuelGetListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPvpPeakDuelGetListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPvpPeakDuelGetListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankPvpPeakDuelGetListRes. */
    interface IRankPvpPeakDuelGetListRes {

        /** RankPvpPeakDuelGetListRes PVPPeakDuelIntegralList */
        PVPPeakDuelIntegralList?: (data.IPVPPeakDuelIntegral[]|null);

        /** RankPvpPeakDuelGetListRes PVPPeakDuelIntegralUnit */
        PVPPeakDuelIntegralUnit?: (data.IPVPPeakDuelIntegral|null);

        /** RankPvpPeakDuelGetListRes userFactionNameMap */
        userFactionNameMap?: ({ [k: string]: string }|null);
    }

    /** Represents a RankPvpPeakDuelGetListRes. */
    class RankPvpPeakDuelGetListRes implements IRankPvpPeakDuelGetListRes {

        /**
         * Constructs a new RankPvpPeakDuelGetListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankPvpPeakDuelGetListRes);

        /** RankPvpPeakDuelGetListRes PVPPeakDuelIntegralList. */
        public PVPPeakDuelIntegralList: data.IPVPPeakDuelIntegral[];

        /** RankPvpPeakDuelGetListRes PVPPeakDuelIntegralUnit. */
        public PVPPeakDuelIntegralUnit?: (data.IPVPPeakDuelIntegral|null);

        /** RankPvpPeakDuelGetListRes userFactionNameMap. */
        public userFactionNameMap: { [k: string]: string };

        /**
         * Creates a new RankPvpPeakDuelGetListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankPvpPeakDuelGetListRes instance
         */
        public static create(properties?: gamesvr.IRankPvpPeakDuelGetListRes): gamesvr.RankPvpPeakDuelGetListRes;

        /**
         * Encodes the specified RankPvpPeakDuelGetListRes message. Does not implicitly {@link gamesvr.RankPvpPeakDuelGetListRes.verify|verify} messages.
         * @param message RankPvpPeakDuelGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankPvpPeakDuelGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankPvpPeakDuelGetListRes message, length delimited. Does not implicitly {@link gamesvr.RankPvpPeakDuelGetListRes.verify|verify} messages.
         * @param message RankPvpPeakDuelGetListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankPvpPeakDuelGetListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankPvpPeakDuelGetListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankPvpPeakDuelGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankPvpPeakDuelGetListRes;

        /**
         * Decodes a RankPvpPeakDuelGetListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankPvpPeakDuelGetListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankPvpPeakDuelGetListRes;

        /**
         * Verifies a RankPvpPeakDuelGetListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankPvpPeakDuelGetListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankPvpPeakDuelGetListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankPvpPeakDuelGetListRes;

        /**
         * Creates a plain object from a RankPvpPeakDuelGetListRes message. Also converts values to other types if specified.
         * @param message RankPvpPeakDuelGetListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankPvpPeakDuelGetListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankPvpPeakDuelGetListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankHomePageGetFirstReq. */
    interface IRankHomePageGetFirstReq {
    }

    /** Represents a RankHomePageGetFirstReq. */
    class RankHomePageGetFirstReq implements IRankHomePageGetFirstReq {

        /**
         * Constructs a new RankHomePageGetFirstReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankHomePageGetFirstReq);

        /**
         * Creates a new RankHomePageGetFirstReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankHomePageGetFirstReq instance
         */
        public static create(properties?: gamesvr.IRankHomePageGetFirstReq): gamesvr.RankHomePageGetFirstReq;

        /**
         * Encodes the specified RankHomePageGetFirstReq message. Does not implicitly {@link gamesvr.RankHomePageGetFirstReq.verify|verify} messages.
         * @param message RankHomePageGetFirstReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankHomePageGetFirstReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankHomePageGetFirstReq message, length delimited. Does not implicitly {@link gamesvr.RankHomePageGetFirstReq.verify|verify} messages.
         * @param message RankHomePageGetFirstReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankHomePageGetFirstReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankHomePageGetFirstReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankHomePageGetFirstReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankHomePageGetFirstReq;

        /**
         * Decodes a RankHomePageGetFirstReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankHomePageGetFirstReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankHomePageGetFirstReq;

        /**
         * Verifies a RankHomePageGetFirstReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankHomePageGetFirstReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankHomePageGetFirstReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankHomePageGetFirstReq;

        /**
         * Creates a plain object from a RankHomePageGetFirstReq message. Also converts values to other types if specified.
         * @param message RankHomePageGetFirstReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankHomePageGetFirstReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankHomePageGetFirstReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankHomePageGetFirstRes. */
    interface IRankHomePageGetFirstRes {

        /** RankHomePageGetFirstRes PowerFiveHeroUnit */
        PowerFiveHeroUnit?: (data.IPowerFiveHero|null);

        /** RankHomePageGetFirstRes PVEAdventureUnit */
        PVEAdventureUnit?: (data.IPVEAdventureScale|null);

        /** RankHomePageGetFirstRes PVEDreamScaleUnit */
        PVEDreamScaleUnit?: (data.IPVEDreamScale|null);

        /** RankHomePageGetFirstRes TrialPurgaUnit */
        TrialPurgaUnit?: (data.ITrialPurgatoryScale|null);
    }

    /** Represents a RankHomePageGetFirstRes. */
    class RankHomePageGetFirstRes implements IRankHomePageGetFirstRes {

        /**
         * Constructs a new RankHomePageGetFirstRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IRankHomePageGetFirstRes);

        /** RankHomePageGetFirstRes PowerFiveHeroUnit. */
        public PowerFiveHeroUnit?: (data.IPowerFiveHero|null);

        /** RankHomePageGetFirstRes PVEAdventureUnit. */
        public PVEAdventureUnit?: (data.IPVEAdventureScale|null);

        /** RankHomePageGetFirstRes PVEDreamScaleUnit. */
        public PVEDreamScaleUnit?: (data.IPVEDreamScale|null);

        /** RankHomePageGetFirstRes TrialPurgaUnit. */
        public TrialPurgaUnit?: (data.ITrialPurgatoryScale|null);

        /**
         * Creates a new RankHomePageGetFirstRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankHomePageGetFirstRes instance
         */
        public static create(properties?: gamesvr.IRankHomePageGetFirstRes): gamesvr.RankHomePageGetFirstRes;

        /**
         * Encodes the specified RankHomePageGetFirstRes message. Does not implicitly {@link gamesvr.RankHomePageGetFirstRes.verify|verify} messages.
         * @param message RankHomePageGetFirstRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IRankHomePageGetFirstRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankHomePageGetFirstRes message, length delimited. Does not implicitly {@link gamesvr.RankHomePageGetFirstRes.verify|verify} messages.
         * @param message RankHomePageGetFirstRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IRankHomePageGetFirstRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankHomePageGetFirstRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankHomePageGetFirstRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.RankHomePageGetFirstRes;

        /**
         * Decodes a RankHomePageGetFirstRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankHomePageGetFirstRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.RankHomePageGetFirstRes;

        /**
         * Verifies a RankHomePageGetFirstRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankHomePageGetFirstRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankHomePageGetFirstRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.RankHomePageGetFirstRes;

        /**
         * Creates a plain object from a RankHomePageGetFirstRes message. Also converts values to other types if specified.
         * @param message RankHomePageGetFirstRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.RankHomePageGetFirstRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankHomePageGetFirstRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserdataRefreshNotify. */
    interface IUserdataRefreshNotify {

        /** UserdataRefreshNotify TrialRespectData */
        TrialRespectData?: (data.ITrialRespectData|null);

        /** UserdataRefreshNotify TrialPurgatoryData */
        TrialPurgatoryData?: (data.ITrialPurgatoryData|null);

        /** UserdataRefreshNotify TrialIslandData */
        TrialIslandData?: (data.ITrialIslandData|null);
    }

    /** Represents a UserdataRefreshNotify. */
    class UserdataRefreshNotify implements IUserdataRefreshNotify {

        /**
         * Constructs a new UserdataRefreshNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUserdataRefreshNotify);

        /** UserdataRefreshNotify TrialRespectData. */
        public TrialRespectData?: (data.ITrialRespectData|null);

        /** UserdataRefreshNotify TrialPurgatoryData. */
        public TrialPurgatoryData?: (data.ITrialPurgatoryData|null);

        /** UserdataRefreshNotify TrialIslandData. */
        public TrialIslandData?: (data.ITrialIslandData|null);

        /**
         * Creates a new UserdataRefreshNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserdataRefreshNotify instance
         */
        public static create(properties?: gamesvr.IUserdataRefreshNotify): gamesvr.UserdataRefreshNotify;

        /**
         * Encodes the specified UserdataRefreshNotify message. Does not implicitly {@link gamesvr.UserdataRefreshNotify.verify|verify} messages.
         * @param message UserdataRefreshNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUserdataRefreshNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserdataRefreshNotify message, length delimited. Does not implicitly {@link gamesvr.UserdataRefreshNotify.verify|verify} messages.
         * @param message UserdataRefreshNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUserdataRefreshNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserdataRefreshNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserdataRefreshNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UserdataRefreshNotify;

        /**
         * Decodes a UserdataRefreshNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserdataRefreshNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UserdataRefreshNotify;

        /**
         * Verifies a UserdataRefreshNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserdataRefreshNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserdataRefreshNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UserdataRefreshNotify;

        /**
         * Creates a plain object from a UserdataRefreshNotify message. Also converts values to other types if specified.
         * @param message UserdataRefreshNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UserdataRefreshNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserdataRefreshNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetProductListReq. */
    interface IGetProductListReq {

        /** GetProductListReq ProductType */
        ProductType?: (number|null);
    }

    /** Represents a GetProductListReq. */
    class GetProductListReq implements IGetProductListReq {

        /**
         * Constructs a new GetProductListReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetProductListReq);

        /** GetProductListReq ProductType. */
        public ProductType: number;

        /**
         * Creates a new GetProductListReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetProductListReq instance
         */
        public static create(properties?: gamesvr.IGetProductListReq): gamesvr.GetProductListReq;

        /**
         * Encodes the specified GetProductListReq message. Does not implicitly {@link gamesvr.GetProductListReq.verify|verify} messages.
         * @param message GetProductListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetProductListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetProductListReq message, length delimited. Does not implicitly {@link gamesvr.GetProductListReq.verify|verify} messages.
         * @param message GetProductListReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetProductListReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetProductListReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetProductListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetProductListReq;

        /**
         * Decodes a GetProductListReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetProductListReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetProductListReq;

        /**
         * Verifies a GetProductListReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetProductListReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetProductListReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetProductListReq;

        /**
         * Creates a plain object from a GetProductListReq message. Also converts values to other types if specified.
         * @param message GetProductListReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetProductListReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetProductListReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetProductListRes. */
    interface IGetProductListRes {

        /** GetProductListRes ProductType */
        ProductType?: (number|null);

        /** GetProductListRes ProductList */
        ProductList?: (data.IProduct|null);
    }

    /** Represents a GetProductListRes. */
    class GetProductListRes implements IGetProductListRes {

        /**
         * Constructs a new GetProductListRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetProductListRes);

        /** GetProductListRes ProductType. */
        public ProductType: number;

        /** GetProductListRes ProductList. */
        public ProductList?: (data.IProduct|null);

        /**
         * Creates a new GetProductListRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetProductListRes instance
         */
        public static create(properties?: gamesvr.IGetProductListRes): gamesvr.GetProductListRes;

        /**
         * Encodes the specified GetProductListRes message. Does not implicitly {@link gamesvr.GetProductListRes.verify|verify} messages.
         * @param message GetProductListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetProductListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetProductListRes message, length delimited. Does not implicitly {@link gamesvr.GetProductListRes.verify|verify} messages.
         * @param message GetProductListRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetProductListRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetProductListRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetProductListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetProductListRes;

        /**
         * Decodes a GetProductListRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetProductListRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetProductListRes;

        /**
         * Verifies a GetProductListRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetProductListRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetProductListRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetProductListRes;

        /**
         * Creates a plain object from a GetProductListRes message. Also converts values to other types if specified.
         * @param message GetProductListRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetProductListRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetProductListRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuyProductReq. */
    interface IBuyProductReq {

        /** BuyProductReq ProductID */
        ProductID?: (number|null);

        /** BuyProductReq Quantity */
        Quantity?: (number|null);
    }

    /** Represents a BuyProductReq. */
    class BuyProductReq implements IBuyProductReq {

        /**
         * Constructs a new BuyProductReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuyProductReq);

        /** BuyProductReq ProductID. */
        public ProductID: number;

        /** BuyProductReq Quantity. */
        public Quantity: number;

        /**
         * Creates a new BuyProductReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyProductReq instance
         */
        public static create(properties?: gamesvr.IBuyProductReq): gamesvr.BuyProductReq;

        /**
         * Encodes the specified BuyProductReq message. Does not implicitly {@link gamesvr.BuyProductReq.verify|verify} messages.
         * @param message BuyProductReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuyProductReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuyProductReq message, length delimited. Does not implicitly {@link gamesvr.BuyProductReq.verify|verify} messages.
         * @param message BuyProductReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuyProductReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuyProductReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyProductReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuyProductReq;

        /**
         * Decodes a BuyProductReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyProductReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuyProductReq;

        /**
         * Verifies a BuyProductReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuyProductReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuyProductReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuyProductReq;

        /**
         * Creates a plain object from a BuyProductReq message. Also converts values to other types if specified.
         * @param message BuyProductReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuyProductReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuyProductReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuyProductRes. */
    interface IBuyProductRes {

        /** BuyProductRes Products */
        Products?: (data.IItemInfo[]|null);

        /** BuyProductRes Record */
        Record?: (data.IProductOrderRecord|null);
    }

    /** Represents a BuyProductRes. */
    class BuyProductRes implements IBuyProductRes {

        /**
         * Constructs a new BuyProductRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuyProductRes);

        /** BuyProductRes Products. */
        public Products: data.IItemInfo[];

        /** BuyProductRes Record. */
        public Record?: (data.IProductOrderRecord|null);

        /**
         * Creates a new BuyProductRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyProductRes instance
         */
        public static create(properties?: gamesvr.IBuyProductRes): gamesvr.BuyProductRes;

        /**
         * Encodes the specified BuyProductRes message. Does not implicitly {@link gamesvr.BuyProductRes.verify|verify} messages.
         * @param message BuyProductRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuyProductRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuyProductRes message, length delimited. Does not implicitly {@link gamesvr.BuyProductRes.verify|verify} messages.
         * @param message BuyProductRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuyProductRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuyProductRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyProductRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuyProductRes;

        /**
         * Decodes a BuyProductRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyProductRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuyProductRes;

        /**
         * Verifies a BuyProductRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuyProductRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuyProductRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuyProductRes;

        /**
         * Creates a plain object from a BuyProductRes message. Also converts values to other types if specified.
         * @param message BuyProductRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuyProductRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuyProductRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetPayOrderReq. */
    interface IGetPayOrderReq {

        /** GetPayOrderReq ProductID */
        ProductID?: (number|null);
    }

    /** Represents a GetPayOrderReq. */
    class GetPayOrderReq implements IGetPayOrderReq {

        /**
         * Constructs a new GetPayOrderReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetPayOrderReq);

        /** GetPayOrderReq ProductID. */
        public ProductID: number;

        /**
         * Creates a new GetPayOrderReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetPayOrderReq instance
         */
        public static create(properties?: gamesvr.IGetPayOrderReq): gamesvr.GetPayOrderReq;

        /**
         * Encodes the specified GetPayOrderReq message. Does not implicitly {@link gamesvr.GetPayOrderReq.verify|verify} messages.
         * @param message GetPayOrderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetPayOrderReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetPayOrderReq message, length delimited. Does not implicitly {@link gamesvr.GetPayOrderReq.verify|verify} messages.
         * @param message GetPayOrderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetPayOrderReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetPayOrderReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetPayOrderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetPayOrderReq;

        /**
         * Decodes a GetPayOrderReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetPayOrderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetPayOrderReq;

        /**
         * Verifies a GetPayOrderReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetPayOrderReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetPayOrderReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetPayOrderReq;

        /**
         * Creates a plain object from a GetPayOrderReq message. Also converts values to other types if specified.
         * @param message GetPayOrderReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetPayOrderReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetPayOrderReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetPayOrderRes. */
    interface IGetPayOrderRes {

        /** GetPayOrderRes Order */
        Order?: (string|null);

        /** GetPayOrderRes ProductID */
        ProductID?: (number|null);

        /** GetPayOrderRes PropertyID */
        PropertyID?: (number|null);

        /** GetPayOrderRes PropertyCount */
        PropertyCount?: (number|null);

        /** GetPayOrderRes Price */
        Price?: (number|null);

        /** GetPayOrderRes OrderTime */
        OrderTime?: (number|Long|null);

        /** GetPayOrderRes Sign */
        Sign?: (string|null);

        /** GetPayOrderRes PlatOrderID */
        PlatOrderID?: (string|null);

        /** GetPayOrderRes NoticeUrl */
        NoticeUrl?: (string|null);
    }

    /** Represents a GetPayOrderRes. */
    class GetPayOrderRes implements IGetPayOrderRes {

        /**
         * Constructs a new GetPayOrderRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetPayOrderRes);

        /** GetPayOrderRes Order. */
        public Order: string;

        /** GetPayOrderRes ProductID. */
        public ProductID: number;

        /** GetPayOrderRes PropertyID. */
        public PropertyID: number;

        /** GetPayOrderRes PropertyCount. */
        public PropertyCount: number;

        /** GetPayOrderRes Price. */
        public Price: number;

        /** GetPayOrderRes OrderTime. */
        public OrderTime: (number|Long);

        /** GetPayOrderRes Sign. */
        public Sign: string;

        /** GetPayOrderRes PlatOrderID. */
        public PlatOrderID: string;

        /** GetPayOrderRes NoticeUrl. */
        public NoticeUrl: string;

        /**
         * Creates a new GetPayOrderRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetPayOrderRes instance
         */
        public static create(properties?: gamesvr.IGetPayOrderRes): gamesvr.GetPayOrderRes;

        /**
         * Encodes the specified GetPayOrderRes message. Does not implicitly {@link gamesvr.GetPayOrderRes.verify|verify} messages.
         * @param message GetPayOrderRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetPayOrderRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetPayOrderRes message, length delimited. Does not implicitly {@link gamesvr.GetPayOrderRes.verify|verify} messages.
         * @param message GetPayOrderRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetPayOrderRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetPayOrderRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetPayOrderRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetPayOrderRes;

        /**
         * Decodes a GetPayOrderRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetPayOrderRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetPayOrderRes;

        /**
         * Verifies a GetPayOrderRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetPayOrderRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetPayOrderRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetPayOrderRes;

        /**
         * Creates a plain object from a GetPayOrderRes message. Also converts values to other types if specified.
         * @param message GetPayOrderRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetPayOrderRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetPayOrderRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetGiftOrderReq. */
    interface IGetGiftOrderReq {

        /** GetGiftOrderReq ProductID */
        ProductID?: (number|null);
    }

    /** Represents a GetGiftOrderReq. */
    class GetGiftOrderReq implements IGetGiftOrderReq {

        /**
         * Constructs a new GetGiftOrderReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetGiftOrderReq);

        /** GetGiftOrderReq ProductID. */
        public ProductID: number;

        /**
         * Creates a new GetGiftOrderReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetGiftOrderReq instance
         */
        public static create(properties?: gamesvr.IGetGiftOrderReq): gamesvr.GetGiftOrderReq;

        /**
         * Encodes the specified GetGiftOrderReq message. Does not implicitly {@link gamesvr.GetGiftOrderReq.verify|verify} messages.
         * @param message GetGiftOrderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetGiftOrderReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetGiftOrderReq message, length delimited. Does not implicitly {@link gamesvr.GetGiftOrderReq.verify|verify} messages.
         * @param message GetGiftOrderReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetGiftOrderReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetGiftOrderReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGiftOrderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetGiftOrderReq;

        /**
         * Decodes a GetGiftOrderReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetGiftOrderReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetGiftOrderReq;

        /**
         * Verifies a GetGiftOrderReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetGiftOrderReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetGiftOrderReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetGiftOrderReq;

        /**
         * Creates a plain object from a GetGiftOrderReq message. Also converts values to other types if specified.
         * @param message GetGiftOrderReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetGiftOrderReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetGiftOrderReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GetGiftOrderRes. */
    interface IGetGiftOrderRes {

        /** GetGiftOrderRes Order */
        Order?: (string|null);

        /** GetGiftOrderRes ProductID */
        ProductID?: (number|null);

        /** GetGiftOrderRes Price */
        Price?: (number|null);

        /** GetGiftOrderRes OrderTime */
        OrderTime?: (number|Long|null);

        /** GetGiftOrderRes Sign */
        Sign?: (string|null);

        /** GetGiftOrderRes PlatOrderID */
        PlatOrderID?: (string|null);

        /** GetGiftOrderRes NoticeUrl */
        NoticeUrl?: (string|null);
    }

    /** Represents a GetGiftOrderRes. */
    class GetGiftOrderRes implements IGetGiftOrderRes {

        /**
         * Constructs a new GetGiftOrderRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IGetGiftOrderRes);

        /** GetGiftOrderRes Order. */
        public Order: string;

        /** GetGiftOrderRes ProductID. */
        public ProductID: number;

        /** GetGiftOrderRes Price. */
        public Price: number;

        /** GetGiftOrderRes OrderTime. */
        public OrderTime: (number|Long);

        /** GetGiftOrderRes Sign. */
        public Sign: string;

        /** GetGiftOrderRes PlatOrderID. */
        public PlatOrderID: string;

        /** GetGiftOrderRes NoticeUrl. */
        public NoticeUrl: string;

        /**
         * Creates a new GetGiftOrderRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetGiftOrderRes instance
         */
        public static create(properties?: gamesvr.IGetGiftOrderRes): gamesvr.GetGiftOrderRes;

        /**
         * Encodes the specified GetGiftOrderRes message. Does not implicitly {@link gamesvr.GetGiftOrderRes.verify|verify} messages.
         * @param message GetGiftOrderRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IGetGiftOrderRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetGiftOrderRes message, length delimited. Does not implicitly {@link gamesvr.GetGiftOrderRes.verify|verify} messages.
         * @param message GetGiftOrderRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IGetGiftOrderRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetGiftOrderRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetGiftOrderRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.GetGiftOrderRes;

        /**
         * Decodes a GetGiftOrderRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetGiftOrderRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.GetGiftOrderRes;

        /**
         * Verifies a GetGiftOrderRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetGiftOrderRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetGiftOrderRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.GetGiftOrderRes;

        /**
         * Creates a plain object from a GetGiftOrderRes message. Also converts values to other types if specified.
         * @param message GetGiftOrderRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.GetGiftOrderRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetGiftOrderRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PayResultNotify. */
    interface IPayResultNotify {

        /** PayResultNotify Order */
        Order?: (string|null);

        /** PayResultNotify ProductID */
        ProductID?: (number|null);

        /** PayResultNotify Price */
        Price?: (number|null);

        /** PayResultNotify ChargeOrderRecord */
        ChargeOrderRecord?: (data.IChargeOrderRecord|null);

        /** PayResultNotify ProductRecord */
        ProductRecord?: (data.IProductOrderRecord|null);

        /** PayResultNotify PropertyList */
        PropertyList?: (data.IItemInfo[]|null);

        /** PayResultNotify ExtraPropertyList */
        ExtraPropertyList?: (data.IItemInfo[]|null);
    }

    /** Represents a PayResultNotify. */
    class PayResultNotify implements IPayResultNotify {

        /**
         * Constructs a new PayResultNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IPayResultNotify);

        /** PayResultNotify Order. */
        public Order: string;

        /** PayResultNotify ProductID. */
        public ProductID: number;

        /** PayResultNotify Price. */
        public Price: number;

        /** PayResultNotify ChargeOrderRecord. */
        public ChargeOrderRecord?: (data.IChargeOrderRecord|null);

        /** PayResultNotify ProductRecord. */
        public ProductRecord?: (data.IProductOrderRecord|null);

        /** PayResultNotify PropertyList. */
        public PropertyList: data.IItemInfo[];

        /** PayResultNotify ExtraPropertyList. */
        public ExtraPropertyList: data.IItemInfo[];

        /**
         * Creates a new PayResultNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PayResultNotify instance
         */
        public static create(properties?: gamesvr.IPayResultNotify): gamesvr.PayResultNotify;

        /**
         * Encodes the specified PayResultNotify message. Does not implicitly {@link gamesvr.PayResultNotify.verify|verify} messages.
         * @param message PayResultNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IPayResultNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PayResultNotify message, length delimited. Does not implicitly {@link gamesvr.PayResultNotify.verify|verify} messages.
         * @param message PayResultNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IPayResultNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PayResultNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PayResultNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.PayResultNotify;

        /**
         * Decodes a PayResultNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PayResultNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.PayResultNotify;

        /**
         * Verifies a PayResultNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PayResultNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PayResultNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.PayResultNotify;

        /**
         * Creates a plain object from a PayResultNotify message. Also converts values to other types if specified.
         * @param message PayResultNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.PayResultNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PayResultNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopRandomShopRefreshReq. */
    interface IShopRandomShopRefreshReq {
    }

    /** Represents a ShopRandomShopRefreshReq. */
    class ShopRandomShopRefreshReq implements IShopRandomShopRefreshReq {

        /**
         * Constructs a new ShopRandomShopRefreshReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopRandomShopRefreshReq);

        /**
         * Creates a new ShopRandomShopRefreshReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopRandomShopRefreshReq instance
         */
        public static create(properties?: gamesvr.IShopRandomShopRefreshReq): gamesvr.ShopRandomShopRefreshReq;

        /**
         * Encodes the specified ShopRandomShopRefreshReq message. Does not implicitly {@link gamesvr.ShopRandomShopRefreshReq.verify|verify} messages.
         * @param message ShopRandomShopRefreshReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopRandomShopRefreshReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopRandomShopRefreshReq message, length delimited. Does not implicitly {@link gamesvr.ShopRandomShopRefreshReq.verify|verify} messages.
         * @param message ShopRandomShopRefreshReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopRandomShopRefreshReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopRandomShopRefreshReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopRandomShopRefreshReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopRandomShopRefreshReq;

        /**
         * Decodes a ShopRandomShopRefreshReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopRandomShopRefreshReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopRandomShopRefreshReq;

        /**
         * Verifies a ShopRandomShopRefreshReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopRandomShopRefreshReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopRandomShopRefreshReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopRandomShopRefreshReq;

        /**
         * Creates a plain object from a ShopRandomShopRefreshReq message. Also converts values to other types if specified.
         * @param message ShopRandomShopRefreshReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopRandomShopRefreshReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopRandomShopRefreshReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopRandomShopRefreshRes. */
    interface IShopRandomShopRefreshRes {

        /** ShopRandomShopRefreshRes RandomCount */
        RandomCount?: (number|null);

        /** ShopRandomShopRefreshRes RandomShopCommodityIDMap */
        RandomShopCommodityIDMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a ShopRandomShopRefreshRes. */
    class ShopRandomShopRefreshRes implements IShopRandomShopRefreshRes {

        /**
         * Constructs a new ShopRandomShopRefreshRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopRandomShopRefreshRes);

        /** ShopRandomShopRefreshRes RandomCount. */
        public RandomCount: number;

        /** ShopRandomShopRefreshRes RandomShopCommodityIDMap. */
        public RandomShopCommodityIDMap: { [k: string]: boolean };

        /**
         * Creates a new ShopRandomShopRefreshRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopRandomShopRefreshRes instance
         */
        public static create(properties?: gamesvr.IShopRandomShopRefreshRes): gamesvr.ShopRandomShopRefreshRes;

        /**
         * Encodes the specified ShopRandomShopRefreshRes message. Does not implicitly {@link gamesvr.ShopRandomShopRefreshRes.verify|verify} messages.
         * @param message ShopRandomShopRefreshRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopRandomShopRefreshRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopRandomShopRefreshRes message, length delimited. Does not implicitly {@link gamesvr.ShopRandomShopRefreshRes.verify|verify} messages.
         * @param message ShopRandomShopRefreshRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopRandomShopRefreshRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopRandomShopRefreshRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopRandomShopRefreshRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopRandomShopRefreshRes;

        /**
         * Decodes a ShopRandomShopRefreshRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopRandomShopRefreshRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopRandomShopRefreshRes;

        /**
         * Verifies a ShopRandomShopRefreshRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopRandomShopRefreshRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopRandomShopRefreshRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopRandomShopRefreshRes;

        /**
         * Creates a plain object from a ShopRandomShopRefreshRes message. Also converts values to other types if specified.
         * @param message ShopRandomShopRefreshRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopRandomShopRefreshRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopRandomShopRefreshRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopRandomShopRefreshNotify. */
    interface IShopRandomShopRefreshNotify {

        /** ShopRandomShopRefreshNotify RandomCount */
        RandomCount?: (number|null);

        /** ShopRandomShopRefreshNotify RandomShopCommodityIDMap */
        RandomShopCommodityIDMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a ShopRandomShopRefreshNotify. */
    class ShopRandomShopRefreshNotify implements IShopRandomShopRefreshNotify {

        /**
         * Constructs a new ShopRandomShopRefreshNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopRandomShopRefreshNotify);

        /** ShopRandomShopRefreshNotify RandomCount. */
        public RandomCount: number;

        /** ShopRandomShopRefreshNotify RandomShopCommodityIDMap. */
        public RandomShopCommodityIDMap: { [k: string]: boolean };

        /**
         * Creates a new ShopRandomShopRefreshNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopRandomShopRefreshNotify instance
         */
        public static create(properties?: gamesvr.IShopRandomShopRefreshNotify): gamesvr.ShopRandomShopRefreshNotify;

        /**
         * Encodes the specified ShopRandomShopRefreshNotify message. Does not implicitly {@link gamesvr.ShopRandomShopRefreshNotify.verify|verify} messages.
         * @param message ShopRandomShopRefreshNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopRandomShopRefreshNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopRandomShopRefreshNotify message, length delimited. Does not implicitly {@link gamesvr.ShopRandomShopRefreshNotify.verify|verify} messages.
         * @param message ShopRandomShopRefreshNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopRandomShopRefreshNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopRandomShopRefreshNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopRandomShopRefreshNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopRandomShopRefreshNotify;

        /**
         * Decodes a ShopRandomShopRefreshNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopRandomShopRefreshNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopRandomShopRefreshNotify;

        /**
         * Verifies a ShopRandomShopRefreshNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopRandomShopRefreshNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopRandomShopRefreshNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopRandomShopRefreshNotify;

        /**
         * Creates a plain object from a ShopRandomShopRefreshNotify message. Also converts values to other types if specified.
         * @param message ShopRandomShopRefreshNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopRandomShopRefreshNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopRandomShopRefreshNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopRandomShopBuyReq. */
    interface IShopRandomShopBuyReq {

        /** ShopRandomShopBuyReq RandomShopCommodityID */
        RandomShopCommodityID?: (number|null);
    }

    /** Represents a ShopRandomShopBuyReq. */
    class ShopRandomShopBuyReq implements IShopRandomShopBuyReq {

        /**
         * Constructs a new ShopRandomShopBuyReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopRandomShopBuyReq);

        /** ShopRandomShopBuyReq RandomShopCommodityID. */
        public RandomShopCommodityID: number;

        /**
         * Creates a new ShopRandomShopBuyReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopRandomShopBuyReq instance
         */
        public static create(properties?: gamesvr.IShopRandomShopBuyReq): gamesvr.ShopRandomShopBuyReq;

        /**
         * Encodes the specified ShopRandomShopBuyReq message. Does not implicitly {@link gamesvr.ShopRandomShopBuyReq.verify|verify} messages.
         * @param message ShopRandomShopBuyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopRandomShopBuyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopRandomShopBuyReq message, length delimited. Does not implicitly {@link gamesvr.ShopRandomShopBuyReq.verify|verify} messages.
         * @param message ShopRandomShopBuyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopRandomShopBuyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopRandomShopBuyReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopRandomShopBuyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopRandomShopBuyReq;

        /**
         * Decodes a ShopRandomShopBuyReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopRandomShopBuyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopRandomShopBuyReq;

        /**
         * Verifies a ShopRandomShopBuyReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopRandomShopBuyReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopRandomShopBuyReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopRandomShopBuyReq;

        /**
         * Creates a plain object from a ShopRandomShopBuyReq message. Also converts values to other types if specified.
         * @param message ShopRandomShopBuyReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopRandomShopBuyReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopRandomShopBuyReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopRandomShopBuyRes. */
    interface IShopRandomShopBuyRes {

        /** ShopRandomShopBuyRes RandomShopCommodityID */
        RandomShopCommodityID?: (number|null);

        /** ShopRandomShopBuyRes Exp */
        Exp?: (number|null);

        /** ShopRandomShopBuyRes TotalExp */
        TotalExp?: (number|null);

        /** ShopRandomShopBuyRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a ShopRandomShopBuyRes. */
    class ShopRandomShopBuyRes implements IShopRandomShopBuyRes {

        /**
         * Constructs a new ShopRandomShopBuyRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopRandomShopBuyRes);

        /** ShopRandomShopBuyRes RandomShopCommodityID. */
        public RandomShopCommodityID: number;

        /** ShopRandomShopBuyRes Exp. */
        public Exp: number;

        /** ShopRandomShopBuyRes TotalExp. */
        public TotalExp: number;

        /** ShopRandomShopBuyRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new ShopRandomShopBuyRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopRandomShopBuyRes instance
         */
        public static create(properties?: gamesvr.IShopRandomShopBuyRes): gamesvr.ShopRandomShopBuyRes;

        /**
         * Encodes the specified ShopRandomShopBuyRes message. Does not implicitly {@link gamesvr.ShopRandomShopBuyRes.verify|verify} messages.
         * @param message ShopRandomShopBuyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopRandomShopBuyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopRandomShopBuyRes message, length delimited. Does not implicitly {@link gamesvr.ShopRandomShopBuyRes.verify|verify} messages.
         * @param message ShopRandomShopBuyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopRandomShopBuyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopRandomShopBuyRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopRandomShopBuyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopRandomShopBuyRes;

        /**
         * Decodes a ShopRandomShopBuyRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopRandomShopBuyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopRandomShopBuyRes;

        /**
         * Verifies a ShopRandomShopBuyRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopRandomShopBuyRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopRandomShopBuyRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopRandomShopBuyRes;

        /**
         * Creates a plain object from a ShopRandomShopBuyRes message. Also converts values to other types if specified.
         * @param message ShopRandomShopBuyRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopRandomShopBuyRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopRandomShopBuyRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopTimeFiniteGiftFoundGiftReq. */
    interface IShopTimeFiniteGiftFoundGiftReq {
    }

    /** Represents a ShopTimeFiniteGiftFoundGiftReq. */
    class ShopTimeFiniteGiftFoundGiftReq implements IShopTimeFiniteGiftFoundGiftReq {

        /**
         * Constructs a new ShopTimeFiniteGiftFoundGiftReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopTimeFiniteGiftFoundGiftReq);

        /**
         * Creates a new ShopTimeFiniteGiftFoundGiftReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopTimeFiniteGiftFoundGiftReq instance
         */
        public static create(properties?: gamesvr.IShopTimeFiniteGiftFoundGiftReq): gamesvr.ShopTimeFiniteGiftFoundGiftReq;

        /**
         * Encodes the specified ShopTimeFiniteGiftFoundGiftReq message. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftFoundGiftReq.verify|verify} messages.
         * @param message ShopTimeFiniteGiftFoundGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopTimeFiniteGiftFoundGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopTimeFiniteGiftFoundGiftReq message, length delimited. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftFoundGiftReq.verify|verify} messages.
         * @param message ShopTimeFiniteGiftFoundGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopTimeFiniteGiftFoundGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopTimeFiniteGiftFoundGiftReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopTimeFiniteGiftFoundGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopTimeFiniteGiftFoundGiftReq;

        /**
         * Decodes a ShopTimeFiniteGiftFoundGiftReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopTimeFiniteGiftFoundGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopTimeFiniteGiftFoundGiftReq;

        /**
         * Verifies a ShopTimeFiniteGiftFoundGiftReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopTimeFiniteGiftFoundGiftReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopTimeFiniteGiftFoundGiftReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopTimeFiniteGiftFoundGiftReq;

        /**
         * Creates a plain object from a ShopTimeFiniteGiftFoundGiftReq message. Also converts values to other types if specified.
         * @param message ShopTimeFiniteGiftFoundGiftReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopTimeFiniteGiftFoundGiftReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopTimeFiniteGiftFoundGiftReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopTimeFiniteGiftFoundGiftRes. */
    interface IShopTimeFiniteGiftFoundGiftRes {

        /** ShopTimeFiniteGiftFoundGiftRes ShopTimeFiniteGiftBaleUnit */
        ShopTimeFiniteGiftBaleUnit?: (data.IShopTimeFiniteGiftBale|null);

        /** ShopTimeFiniteGiftFoundGiftRes TouchCount */
        TouchCount?: (number|null);

        /** ShopTimeFiniteGiftFoundGiftRes NextFoundGiftTime */
        NextFoundGiftTime?: (number|Long|null);
    }

    /** Represents a ShopTimeFiniteGiftFoundGiftRes. */
    class ShopTimeFiniteGiftFoundGiftRes implements IShopTimeFiniteGiftFoundGiftRes {

        /**
         * Constructs a new ShopTimeFiniteGiftFoundGiftRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopTimeFiniteGiftFoundGiftRes);

        /** ShopTimeFiniteGiftFoundGiftRes ShopTimeFiniteGiftBaleUnit. */
        public ShopTimeFiniteGiftBaleUnit?: (data.IShopTimeFiniteGiftBale|null);

        /** ShopTimeFiniteGiftFoundGiftRes TouchCount. */
        public TouchCount: number;

        /** ShopTimeFiniteGiftFoundGiftRes NextFoundGiftTime. */
        public NextFoundGiftTime: (number|Long);

        /**
         * Creates a new ShopTimeFiniteGiftFoundGiftRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopTimeFiniteGiftFoundGiftRes instance
         */
        public static create(properties?: gamesvr.IShopTimeFiniteGiftFoundGiftRes): gamesvr.ShopTimeFiniteGiftFoundGiftRes;

        /**
         * Encodes the specified ShopTimeFiniteGiftFoundGiftRes message. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftFoundGiftRes.verify|verify} messages.
         * @param message ShopTimeFiniteGiftFoundGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopTimeFiniteGiftFoundGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopTimeFiniteGiftFoundGiftRes message, length delimited. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftFoundGiftRes.verify|verify} messages.
         * @param message ShopTimeFiniteGiftFoundGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopTimeFiniteGiftFoundGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopTimeFiniteGiftFoundGiftRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopTimeFiniteGiftFoundGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopTimeFiniteGiftFoundGiftRes;

        /**
         * Decodes a ShopTimeFiniteGiftFoundGiftRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopTimeFiniteGiftFoundGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopTimeFiniteGiftFoundGiftRes;

        /**
         * Verifies a ShopTimeFiniteGiftFoundGiftRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopTimeFiniteGiftFoundGiftRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopTimeFiniteGiftFoundGiftRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopTimeFiniteGiftFoundGiftRes;

        /**
         * Creates a plain object from a ShopTimeFiniteGiftFoundGiftRes message. Also converts values to other types if specified.
         * @param message ShopTimeFiniteGiftFoundGiftRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopTimeFiniteGiftFoundGiftRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopTimeFiniteGiftFoundGiftRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopTimeFiniteGiftBuyGiftReq. */
    interface IShopTimeFiniteGiftBuyGiftReq {

        /** ShopTimeFiniteGiftBuyGiftReq ID */
        ID?: (number|null);
    }

    /** Represents a ShopTimeFiniteGiftBuyGiftReq. */
    class ShopTimeFiniteGiftBuyGiftReq implements IShopTimeFiniteGiftBuyGiftReq {

        /**
         * Constructs a new ShopTimeFiniteGiftBuyGiftReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopTimeFiniteGiftBuyGiftReq);

        /** ShopTimeFiniteGiftBuyGiftReq ID. */
        public ID: number;

        /**
         * Creates a new ShopTimeFiniteGiftBuyGiftReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopTimeFiniteGiftBuyGiftReq instance
         */
        public static create(properties?: gamesvr.IShopTimeFiniteGiftBuyGiftReq): gamesvr.ShopTimeFiniteGiftBuyGiftReq;

        /**
         * Encodes the specified ShopTimeFiniteGiftBuyGiftReq message. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftBuyGiftReq.verify|verify} messages.
         * @param message ShopTimeFiniteGiftBuyGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopTimeFiniteGiftBuyGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopTimeFiniteGiftBuyGiftReq message, length delimited. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftBuyGiftReq.verify|verify} messages.
         * @param message ShopTimeFiniteGiftBuyGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopTimeFiniteGiftBuyGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopTimeFiniteGiftBuyGiftReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopTimeFiniteGiftBuyGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopTimeFiniteGiftBuyGiftReq;

        /**
         * Decodes a ShopTimeFiniteGiftBuyGiftReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopTimeFiniteGiftBuyGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopTimeFiniteGiftBuyGiftReq;

        /**
         * Verifies a ShopTimeFiniteGiftBuyGiftReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopTimeFiniteGiftBuyGiftReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopTimeFiniteGiftBuyGiftReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopTimeFiniteGiftBuyGiftReq;

        /**
         * Creates a plain object from a ShopTimeFiniteGiftBuyGiftReq message. Also converts values to other types if specified.
         * @param message ShopTimeFiniteGiftBuyGiftReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopTimeFiniteGiftBuyGiftReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopTimeFiniteGiftBuyGiftReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShopTimeFiniteGiftBuyGiftRes. */
    interface IShopTimeFiniteGiftBuyGiftRes {

        /** ShopTimeFiniteGiftBuyGiftRes Order */
        Order?: (string|null);

        /** ShopTimeFiniteGiftBuyGiftRes ID */
        ID?: (number|null);

        /** ShopTimeFiniteGiftBuyGiftRes Price */
        Price?: (number|null);

        /** ShopTimeFiniteGiftBuyGiftRes OrderTime */
        OrderTime?: (number|Long|null);

        /** ShopTimeFiniteGiftBuyGiftRes Sign */
        Sign?: (string|null);

        /** ShopTimeFiniteGiftBuyGiftRes PlatOrderID */
        PlatOrderID?: (string|null);

        /** ShopTimeFiniteGiftBuyGiftRes NoticeUrl */
        NoticeUrl?: (string|null);

        /** ShopTimeFiniteGiftBuyGiftRes GiftID */
        GiftID?: (number|null);

        /** ShopTimeFiniteGiftBuyGiftRes NextFoundGiftTime */
        NextFoundGiftTime?: (number|Long|null);
    }

    /** Represents a ShopTimeFiniteGiftBuyGiftRes. */
    class ShopTimeFiniteGiftBuyGiftRes implements IShopTimeFiniteGiftBuyGiftRes {

        /**
         * Constructs a new ShopTimeFiniteGiftBuyGiftRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IShopTimeFiniteGiftBuyGiftRes);

        /** ShopTimeFiniteGiftBuyGiftRes Order. */
        public Order: string;

        /** ShopTimeFiniteGiftBuyGiftRes ID. */
        public ID: number;

        /** ShopTimeFiniteGiftBuyGiftRes Price. */
        public Price: number;

        /** ShopTimeFiniteGiftBuyGiftRes OrderTime. */
        public OrderTime: (number|Long);

        /** ShopTimeFiniteGiftBuyGiftRes Sign. */
        public Sign: string;

        /** ShopTimeFiniteGiftBuyGiftRes PlatOrderID. */
        public PlatOrderID: string;

        /** ShopTimeFiniteGiftBuyGiftRes NoticeUrl. */
        public NoticeUrl: string;

        /** ShopTimeFiniteGiftBuyGiftRes GiftID. */
        public GiftID: number;

        /** ShopTimeFiniteGiftBuyGiftRes NextFoundGiftTime. */
        public NextFoundGiftTime: (number|Long);

        /**
         * Creates a new ShopTimeFiniteGiftBuyGiftRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopTimeFiniteGiftBuyGiftRes instance
         */
        public static create(properties?: gamesvr.IShopTimeFiniteGiftBuyGiftRes): gamesvr.ShopTimeFiniteGiftBuyGiftRes;

        /**
         * Encodes the specified ShopTimeFiniteGiftBuyGiftRes message. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftBuyGiftRes.verify|verify} messages.
         * @param message ShopTimeFiniteGiftBuyGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IShopTimeFiniteGiftBuyGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopTimeFiniteGiftBuyGiftRes message, length delimited. Does not implicitly {@link gamesvr.ShopTimeFiniteGiftBuyGiftRes.verify|verify} messages.
         * @param message ShopTimeFiniteGiftBuyGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IShopTimeFiniteGiftBuyGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopTimeFiniteGiftBuyGiftRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopTimeFiniteGiftBuyGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.ShopTimeFiniteGiftBuyGiftRes;

        /**
         * Decodes a ShopTimeFiniteGiftBuyGiftRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopTimeFiniteGiftBuyGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.ShopTimeFiniteGiftBuyGiftRes;

        /**
         * Verifies a ShopTimeFiniteGiftBuyGiftRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopTimeFiniteGiftBuyGiftRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopTimeFiniteGiftBuyGiftRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.ShopTimeFiniteGiftBuyGiftRes;

        /**
         * Creates a plain object from a ShopTimeFiniteGiftBuyGiftRes message. Also converts values to other types if specified.
         * @param message ShopTimeFiniteGiftBuyGiftRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.ShopTimeFiniteGiftBuyGiftRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopTimeFiniteGiftBuyGiftRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuyCurrencyGiftReq. */
    interface IBuyCurrencyGiftReq {

        /** BuyCurrencyGiftReq ProductID */
        ProductID?: (number|null);
    }

    /** Represents a BuyCurrencyGiftReq. */
    class BuyCurrencyGiftReq implements IBuyCurrencyGiftReq {

        /**
         * Constructs a new BuyCurrencyGiftReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuyCurrencyGiftReq);

        /** BuyCurrencyGiftReq ProductID. */
        public ProductID: number;

        /**
         * Creates a new BuyCurrencyGiftReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyCurrencyGiftReq instance
         */
        public static create(properties?: gamesvr.IBuyCurrencyGiftReq): gamesvr.BuyCurrencyGiftReq;

        /**
         * Encodes the specified BuyCurrencyGiftReq message. Does not implicitly {@link gamesvr.BuyCurrencyGiftReq.verify|verify} messages.
         * @param message BuyCurrencyGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuyCurrencyGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuyCurrencyGiftReq message, length delimited. Does not implicitly {@link gamesvr.BuyCurrencyGiftReq.verify|verify} messages.
         * @param message BuyCurrencyGiftReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuyCurrencyGiftReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuyCurrencyGiftReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyCurrencyGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuyCurrencyGiftReq;

        /**
         * Decodes a BuyCurrencyGiftReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyCurrencyGiftReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuyCurrencyGiftReq;

        /**
         * Verifies a BuyCurrencyGiftReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuyCurrencyGiftReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuyCurrencyGiftReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuyCurrencyGiftReq;

        /**
         * Creates a plain object from a BuyCurrencyGiftReq message. Also converts values to other types if specified.
         * @param message BuyCurrencyGiftReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuyCurrencyGiftReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuyCurrencyGiftReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuyCurrencyGiftRes. */
    interface IBuyCurrencyGiftRes {

        /** BuyCurrencyGiftRes Products */
        Products?: (data.IItemInfo[]|null);

        /** BuyCurrencyGiftRes Record */
        Record?: (data.IProductOrderRecord|null);

        /** BuyCurrencyGiftRes ProductID */
        ProductID?: (number|null);
    }

    /** Represents a BuyCurrencyGiftRes. */
    class BuyCurrencyGiftRes implements IBuyCurrencyGiftRes {

        /**
         * Constructs a new BuyCurrencyGiftRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IBuyCurrencyGiftRes);

        /** BuyCurrencyGiftRes Products. */
        public Products: data.IItemInfo[];

        /** BuyCurrencyGiftRes Record. */
        public Record?: (data.IProductOrderRecord|null);

        /** BuyCurrencyGiftRes ProductID. */
        public ProductID: number;

        /**
         * Creates a new BuyCurrencyGiftRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuyCurrencyGiftRes instance
         */
        public static create(properties?: gamesvr.IBuyCurrencyGiftRes): gamesvr.BuyCurrencyGiftRes;

        /**
         * Encodes the specified BuyCurrencyGiftRes message. Does not implicitly {@link gamesvr.BuyCurrencyGiftRes.verify|verify} messages.
         * @param message BuyCurrencyGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IBuyCurrencyGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BuyCurrencyGiftRes message, length delimited. Does not implicitly {@link gamesvr.BuyCurrencyGiftRes.verify|verify} messages.
         * @param message BuyCurrencyGiftRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IBuyCurrencyGiftRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BuyCurrencyGiftRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuyCurrencyGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.BuyCurrencyGiftRes;

        /**
         * Decodes a BuyCurrencyGiftRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuyCurrencyGiftRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.BuyCurrencyGiftRes;

        /**
         * Verifies a BuyCurrencyGiftRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuyCurrencyGiftRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuyCurrencyGiftRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.BuyCurrencyGiftRes;

        /**
         * Creates a plain object from a BuyCurrencyGiftRes message. Also converts values to other types if specified.
         * @param message BuyCurrencyGiftRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.BuyCurrencyGiftRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuyCurrencyGiftRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SmeltStove. */
    interface ISmeltStove {

        /** SmeltStove ID */
        ID?: (number|null);

        /** SmeltStove Seq */
        Seq?: (number|Long|null);

        /** SmeltStove Count */
        Count?: (number|Long|null);
    }

    /** Represents a SmeltStove. */
    class SmeltStove implements ISmeltStove {

        /**
         * Constructs a new SmeltStove.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISmeltStove);

        /** SmeltStove ID. */
        public ID: number;

        /** SmeltStove Seq. */
        public Seq: (number|Long);

        /** SmeltStove Count. */
        public Count: (number|Long);

        /**
         * Creates a new SmeltStove instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SmeltStove instance
         */
        public static create(properties?: gamesvr.ISmeltStove): gamesvr.SmeltStove;

        /**
         * Encodes the specified SmeltStove message. Does not implicitly {@link gamesvr.SmeltStove.verify|verify} messages.
         * @param message SmeltStove message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISmeltStove, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SmeltStove message, length delimited. Does not implicitly {@link gamesvr.SmeltStove.verify|verify} messages.
         * @param message SmeltStove message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISmeltStove, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SmeltStove message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SmeltStove
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SmeltStove;

        /**
         * Decodes a SmeltStove message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SmeltStove
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SmeltStove;

        /**
         * Verifies a SmeltStove message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SmeltStove message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SmeltStove
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SmeltStove;

        /**
         * Creates a plain object from a SmeltStove message. Also converts values to other types if specified.
         * @param message SmeltStove
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SmeltStove, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SmeltStove to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SmeltRefineReq. */
    interface ISmeltRefineReq {

        /** SmeltRefineReq SmeltStove1 */
        SmeltStove1?: (gamesvr.ISmeltStove|null);

        /** SmeltRefineReq SmeltStove2 */
        SmeltStove2?: (gamesvr.ISmeltStove|null);

        /** SmeltRefineReq SmeltStove3 */
        SmeltStove3?: (gamesvr.ISmeltStove|null);
    }

    /** Represents a SmeltRefineReq. */
    class SmeltRefineReq implements ISmeltRefineReq {

        /**
         * Constructs a new SmeltRefineReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISmeltRefineReq);

        /** SmeltRefineReq SmeltStove1. */
        public SmeltStove1?: (gamesvr.ISmeltStove|null);

        /** SmeltRefineReq SmeltStove2. */
        public SmeltStove2?: (gamesvr.ISmeltStove|null);

        /** SmeltRefineReq SmeltStove3. */
        public SmeltStove3?: (gamesvr.ISmeltStove|null);

        /**
         * Creates a new SmeltRefineReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SmeltRefineReq instance
         */
        public static create(properties?: gamesvr.ISmeltRefineReq): gamesvr.SmeltRefineReq;

        /**
         * Encodes the specified SmeltRefineReq message. Does not implicitly {@link gamesvr.SmeltRefineReq.verify|verify} messages.
         * @param message SmeltRefineReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISmeltRefineReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SmeltRefineReq message, length delimited. Does not implicitly {@link gamesvr.SmeltRefineReq.verify|verify} messages.
         * @param message SmeltRefineReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISmeltRefineReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SmeltRefineReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SmeltRefineReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SmeltRefineReq;

        /**
         * Decodes a SmeltRefineReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SmeltRefineReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SmeltRefineReq;

        /**
         * Verifies a SmeltRefineReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SmeltRefineReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SmeltRefineReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SmeltRefineReq;

        /**
         * Creates a plain object from a SmeltRefineReq message. Also converts values to other types if specified.
         * @param message SmeltRefineReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SmeltRefineReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SmeltRefineReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SmeltRefineRes. */
    interface ISmeltRefineRes {

        /** SmeltRefineRes Exp */
        Exp?: (number|null);

        /** SmeltRefineRes TotalExp */
        TotalExp?: (number|null);

        /** SmeltRefineRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a SmeltRefineRes. */
    class SmeltRefineRes implements ISmeltRefineRes {

        /**
         * Constructs a new SmeltRefineRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ISmeltRefineRes);

        /** SmeltRefineRes Exp. */
        public Exp: number;

        /** SmeltRefineRes TotalExp. */
        public TotalExp: number;

        /** SmeltRefineRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new SmeltRefineRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SmeltRefineRes instance
         */
        public static create(properties?: gamesvr.ISmeltRefineRes): gamesvr.SmeltRefineRes;

        /**
         * Encodes the specified SmeltRefineRes message. Does not implicitly {@link gamesvr.SmeltRefineRes.verify|verify} messages.
         * @param message SmeltRefineRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ISmeltRefineRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SmeltRefineRes message, length delimited. Does not implicitly {@link gamesvr.SmeltRefineRes.verify|verify} messages.
         * @param message SmeltRefineRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ISmeltRefineRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SmeltRefineRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SmeltRefineRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.SmeltRefineRes;

        /**
         * Decodes a SmeltRefineRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SmeltRefineRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.SmeltRefineRes;

        /**
         * Verifies a SmeltRefineRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SmeltRefineRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SmeltRefineRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.SmeltRefineRes;

        /**
         * Creates a plain object from a SmeltRefineRes message. Also converts values to other types if specified.
         * @param message SmeltRefineRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.SmeltRefineRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SmeltRefineRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskTargetReceiveRewardReq. */
    interface ITaskTargetReceiveRewardReq {

        /** TaskTargetReceiveRewardReq TargetIDList */
        TargetIDList?: (number[]|null);
    }

    /** Represents a TaskTargetReceiveRewardReq. */
    class TaskTargetReceiveRewardReq implements ITaskTargetReceiveRewardReq {

        /**
         * Constructs a new TaskTargetReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITaskTargetReceiveRewardReq);

        /** TaskTargetReceiveRewardReq TargetIDList. */
        public TargetIDList: number[];

        /**
         * Creates a new TaskTargetReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskTargetReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.ITaskTargetReceiveRewardReq): gamesvr.TaskTargetReceiveRewardReq;

        /**
         * Encodes the specified TaskTargetReceiveRewardReq message. Does not implicitly {@link gamesvr.TaskTargetReceiveRewardReq.verify|verify} messages.
         * @param message TaskTargetReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITaskTargetReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskTargetReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.TaskTargetReceiveRewardReq.verify|verify} messages.
         * @param message TaskTargetReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITaskTargetReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskTargetReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskTargetReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TaskTargetReceiveRewardReq;

        /**
         * Decodes a TaskTargetReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskTargetReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TaskTargetReceiveRewardReq;

        /**
         * Verifies a TaskTargetReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskTargetReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskTargetReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TaskTargetReceiveRewardReq;

        /**
         * Creates a plain object from a TaskTargetReceiveRewardReq message. Also converts values to other types if specified.
         * @param message TaskTargetReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TaskTargetReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskTargetReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskTargetReceiveRewardRes. */
    interface ITaskTargetReceiveRewardRes {

        /** TaskTargetReceiveRewardRes TargetIDList */
        TargetIDList?: (number[]|null);

        /** TaskTargetReceiveRewardRes Exp */
        Exp?: (number|null);

        /** TaskTargetReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** TaskTargetReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TaskTargetReceiveRewardRes. */
    class TaskTargetReceiveRewardRes implements ITaskTargetReceiveRewardRes {

        /**
         * Constructs a new TaskTargetReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITaskTargetReceiveRewardRes);

        /** TaskTargetReceiveRewardRes TargetIDList. */
        public TargetIDList: number[];

        /** TaskTargetReceiveRewardRes Exp. */
        public Exp: number;

        /** TaskTargetReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** TaskTargetReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TaskTargetReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskTargetReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.ITaskTargetReceiveRewardRes): gamesvr.TaskTargetReceiveRewardRes;

        /**
         * Encodes the specified TaskTargetReceiveRewardRes message. Does not implicitly {@link gamesvr.TaskTargetReceiveRewardRes.verify|verify} messages.
         * @param message TaskTargetReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITaskTargetReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskTargetReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.TaskTargetReceiveRewardRes.verify|verify} messages.
         * @param message TaskTargetReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITaskTargetReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskTargetReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskTargetReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TaskTargetReceiveRewardRes;

        /**
         * Decodes a TaskTargetReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskTargetReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TaskTargetReceiveRewardRes;

        /**
         * Verifies a TaskTargetReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskTargetReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskTargetReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TaskTargetReceiveRewardRes;

        /**
         * Creates a plain object from a TaskTargetReceiveRewardRes message. Also converts values to other types if specified.
         * @param message TaskTargetReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TaskTargetReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskTargetReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskTargetGroupCountChangeNotify. */
    interface ITaskTargetGroupCountChangeNotify {

        /** TaskTargetGroupCountChangeNotify TargetGroupCountMap */
        TargetGroupCountMap?: ({ [k: string]: number }|null);
    }

    /** Represents a TaskTargetGroupCountChangeNotify. */
    class TaskTargetGroupCountChangeNotify implements ITaskTargetGroupCountChangeNotify {

        /**
         * Constructs a new TaskTargetGroupCountChangeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITaskTargetGroupCountChangeNotify);

        /** TaskTargetGroupCountChangeNotify TargetGroupCountMap. */
        public TargetGroupCountMap: { [k: string]: number };

        /**
         * Creates a new TaskTargetGroupCountChangeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskTargetGroupCountChangeNotify instance
         */
        public static create(properties?: gamesvr.ITaskTargetGroupCountChangeNotify): gamesvr.TaskTargetGroupCountChangeNotify;

        /**
         * Encodes the specified TaskTargetGroupCountChangeNotify message. Does not implicitly {@link gamesvr.TaskTargetGroupCountChangeNotify.verify|verify} messages.
         * @param message TaskTargetGroupCountChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITaskTargetGroupCountChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskTargetGroupCountChangeNotify message, length delimited. Does not implicitly {@link gamesvr.TaskTargetGroupCountChangeNotify.verify|verify} messages.
         * @param message TaskTargetGroupCountChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITaskTargetGroupCountChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskTargetGroupCountChangeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskTargetGroupCountChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TaskTargetGroupCountChangeNotify;

        /**
         * Decodes a TaskTargetGroupCountChangeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskTargetGroupCountChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TaskTargetGroupCountChangeNotify;

        /**
         * Verifies a TaskTargetGroupCountChangeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskTargetGroupCountChangeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskTargetGroupCountChangeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TaskTargetGroupCountChangeNotify;

        /**
         * Creates a plain object from a TaskTargetGroupCountChangeNotify message. Also converts values to other types if specified.
         * @param message TaskTargetGroupCountChangeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TaskTargetGroupCountChangeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskTargetGroupCountChangeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskMainReceiveRewardReq. */
    interface ITaskMainReceiveRewardReq {

        /** TaskMainReceiveRewardReq TaskMainID */
        TaskMainID?: (number|null);
    }

    /** Represents a TaskMainReceiveRewardReq. */
    class TaskMainReceiveRewardReq implements ITaskMainReceiveRewardReq {

        /**
         * Constructs a new TaskMainReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITaskMainReceiveRewardReq);

        /** TaskMainReceiveRewardReq TaskMainID. */
        public TaskMainID: number;

        /**
         * Creates a new TaskMainReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskMainReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.ITaskMainReceiveRewardReq): gamesvr.TaskMainReceiveRewardReq;

        /**
         * Encodes the specified TaskMainReceiveRewardReq message. Does not implicitly {@link gamesvr.TaskMainReceiveRewardReq.verify|verify} messages.
         * @param message TaskMainReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITaskMainReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskMainReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.TaskMainReceiveRewardReq.verify|verify} messages.
         * @param message TaskMainReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITaskMainReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskMainReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskMainReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TaskMainReceiveRewardReq;

        /**
         * Decodes a TaskMainReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskMainReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TaskMainReceiveRewardReq;

        /**
         * Verifies a TaskMainReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskMainReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskMainReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TaskMainReceiveRewardReq;

        /**
         * Creates a plain object from a TaskMainReceiveRewardReq message. Also converts values to other types if specified.
         * @param message TaskMainReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TaskMainReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskMainReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TaskMainReceiveRewardRes. */
    interface ITaskMainReceiveRewardRes {

        /** TaskMainReceiveRewardRes TaskMainID */
        TaskMainID?: (number|null);

        /** TaskMainReceiveRewardRes Exp */
        Exp?: (number|null);

        /** TaskMainReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** TaskMainReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TaskMainReceiveRewardRes. */
    class TaskMainReceiveRewardRes implements ITaskMainReceiveRewardRes {

        /**
         * Constructs a new TaskMainReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITaskMainReceiveRewardRes);

        /** TaskMainReceiveRewardRes TaskMainID. */
        public TaskMainID: number;

        /** TaskMainReceiveRewardRes Exp. */
        public Exp: number;

        /** TaskMainReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** TaskMainReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TaskMainReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TaskMainReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.ITaskMainReceiveRewardRes): gamesvr.TaskMainReceiveRewardRes;

        /**
         * Encodes the specified TaskMainReceiveRewardRes message. Does not implicitly {@link gamesvr.TaskMainReceiveRewardRes.verify|verify} messages.
         * @param message TaskMainReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITaskMainReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TaskMainReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.TaskMainReceiveRewardRes.verify|verify} messages.
         * @param message TaskMainReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITaskMainReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TaskMainReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TaskMainReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TaskMainReceiveRewardRes;

        /**
         * Decodes a TaskMainReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TaskMainReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TaskMainReceiveRewardRes;

        /**
         * Verifies a TaskMainReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TaskMainReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TaskMainReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TaskMainReceiveRewardRes;

        /**
         * Creates a plain object from a TaskMainReceiveRewardRes message. Also converts values to other types if specified.
         * @param message TaskMainReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TaskMainReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TaskMainReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitTravelTouchNotify. */
    interface ITimeLimitTravelTouchNotify {

        /** TimeLimitTravelTouchNotify ShopIDList */
        ShopIDList?: (number[]|null);

        /** TimeLimitTravelTouchNotify TouchTime */
        TouchTime?: (number|Long|null);

        /** TimeLimitTravelTouchNotify ExpiredTime */
        ExpiredTime?: (number|Long|null);

        /** TimeLimitTravelTouchNotify RandomShopTextIndex */
        RandomShopTextIndex?: (number|null);
    }

    /** Represents a TimeLimitTravelTouchNotify. */
    class TimeLimitTravelTouchNotify implements ITimeLimitTravelTouchNotify {

        /**
         * Constructs a new TimeLimitTravelTouchNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitTravelTouchNotify);

        /** TimeLimitTravelTouchNotify ShopIDList. */
        public ShopIDList: number[];

        /** TimeLimitTravelTouchNotify TouchTime. */
        public TouchTime: (number|Long);

        /** TimeLimitTravelTouchNotify ExpiredTime. */
        public ExpiredTime: (number|Long);

        /** TimeLimitTravelTouchNotify RandomShopTextIndex. */
        public RandomShopTextIndex: number;

        /**
         * Creates a new TimeLimitTravelTouchNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitTravelTouchNotify instance
         */
        public static create(properties?: gamesvr.ITimeLimitTravelTouchNotify): gamesvr.TimeLimitTravelTouchNotify;

        /**
         * Encodes the specified TimeLimitTravelTouchNotify message. Does not implicitly {@link gamesvr.TimeLimitTravelTouchNotify.verify|verify} messages.
         * @param message TimeLimitTravelTouchNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitTravelTouchNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitTravelTouchNotify message, length delimited. Does not implicitly {@link gamesvr.TimeLimitTravelTouchNotify.verify|verify} messages.
         * @param message TimeLimitTravelTouchNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitTravelTouchNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitTravelTouchNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitTravelTouchNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitTravelTouchNotify;

        /**
         * Decodes a TimeLimitTravelTouchNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitTravelTouchNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitTravelTouchNotify;

        /**
         * Verifies a TimeLimitTravelTouchNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitTravelTouchNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitTravelTouchNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitTravelTouchNotify;

        /**
         * Creates a plain object from a TimeLimitTravelTouchNotify message. Also converts values to other types if specified.
         * @param message TimeLimitTravelTouchNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitTravelTouchNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitTravelTouchNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitTravelBuyShopReq. */
    interface ITimeLimitTravelBuyShopReq {

        /** TimeLimitTravelBuyShopReq ShopID */
        ShopID?: (number|null);
    }

    /** Represents a TimeLimitTravelBuyShopReq. */
    class TimeLimitTravelBuyShopReq implements ITimeLimitTravelBuyShopReq {

        /**
         * Constructs a new TimeLimitTravelBuyShopReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitTravelBuyShopReq);

        /** TimeLimitTravelBuyShopReq ShopID. */
        public ShopID: number;

        /**
         * Creates a new TimeLimitTravelBuyShopReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitTravelBuyShopReq instance
         */
        public static create(properties?: gamesvr.ITimeLimitTravelBuyShopReq): gamesvr.TimeLimitTravelBuyShopReq;

        /**
         * Encodes the specified TimeLimitTravelBuyShopReq message. Does not implicitly {@link gamesvr.TimeLimitTravelBuyShopReq.verify|verify} messages.
         * @param message TimeLimitTravelBuyShopReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitTravelBuyShopReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitTravelBuyShopReq message, length delimited. Does not implicitly {@link gamesvr.TimeLimitTravelBuyShopReq.verify|verify} messages.
         * @param message TimeLimitTravelBuyShopReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitTravelBuyShopReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitTravelBuyShopReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitTravelBuyShopReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitTravelBuyShopReq;

        /**
         * Decodes a TimeLimitTravelBuyShopReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitTravelBuyShopReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitTravelBuyShopReq;

        /**
         * Verifies a TimeLimitTravelBuyShopReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitTravelBuyShopReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitTravelBuyShopReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitTravelBuyShopReq;

        /**
         * Creates a plain object from a TimeLimitTravelBuyShopReq message. Also converts values to other types if specified.
         * @param message TimeLimitTravelBuyShopReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitTravelBuyShopReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitTravelBuyShopReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitTravelBuyShopRes. */
    interface ITimeLimitTravelBuyShopRes {

        /** TimeLimitTravelBuyShopRes ShopID */
        ShopID?: (number|null);

        /** TimeLimitTravelBuyShopRes isBuy */
        isBuy?: (boolean|null);
    }

    /** Represents a TimeLimitTravelBuyShopRes. */
    class TimeLimitTravelBuyShopRes implements ITimeLimitTravelBuyShopRes {

        /**
         * Constructs a new TimeLimitTravelBuyShopRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitTravelBuyShopRes);

        /** TimeLimitTravelBuyShopRes ShopID. */
        public ShopID: number;

        /** TimeLimitTravelBuyShopRes isBuy. */
        public isBuy: boolean;

        /**
         * Creates a new TimeLimitTravelBuyShopRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitTravelBuyShopRes instance
         */
        public static create(properties?: gamesvr.ITimeLimitTravelBuyShopRes): gamesvr.TimeLimitTravelBuyShopRes;

        /**
         * Encodes the specified TimeLimitTravelBuyShopRes message. Does not implicitly {@link gamesvr.TimeLimitTravelBuyShopRes.verify|verify} messages.
         * @param message TimeLimitTravelBuyShopRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitTravelBuyShopRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitTravelBuyShopRes message, length delimited. Does not implicitly {@link gamesvr.TimeLimitTravelBuyShopRes.verify|verify} messages.
         * @param message TimeLimitTravelBuyShopRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitTravelBuyShopRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitTravelBuyShopRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitTravelBuyShopRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitTravelBuyShopRes;

        /**
         * Decodes a TimeLimitTravelBuyShopRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitTravelBuyShopRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitTravelBuyShopRes;

        /**
         * Verifies a TimeLimitTravelBuyShopRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitTravelBuyShopRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitTravelBuyShopRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitTravelBuyShopRes;

        /**
         * Creates a plain object from a TimeLimitTravelBuyShopRes message. Also converts values to other types if specified.
         * @param message TimeLimitTravelBuyShopRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitTravelBuyShopRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitTravelBuyShopRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitFantasyTouchNotify. */
    interface ITimeLimitFantasyTouchNotify {

        /** TimeLimitFantasyTouchNotify ID */
        ID?: (number|Long|null);

        /** TimeLimitFantasyTouchNotify FightID */
        FightID?: (number|null);

        /** TimeLimitFantasyTouchNotify MonsterIDList */
        MonsterIDList?: (number[]|null);

        /** TimeLimitFantasyTouchNotify Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** TimeLimitFantasyTouchNotify TouchTime */
        TouchTime?: (number|Long|null);

        /** TimeLimitFantasyTouchNotify ExpiredTime */
        ExpiredTime?: (number|Long|null);
    }

    /** Represents a TimeLimitFantasyTouchNotify. */
    class TimeLimitFantasyTouchNotify implements ITimeLimitFantasyTouchNotify {

        /**
         * Constructs a new TimeLimitFantasyTouchNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitFantasyTouchNotify);

        /** TimeLimitFantasyTouchNotify ID. */
        public ID: (number|Long);

        /** TimeLimitFantasyTouchNotify FightID. */
        public FightID: number;

        /** TimeLimitFantasyTouchNotify MonsterIDList. */
        public MonsterIDList: number[];

        /** TimeLimitFantasyTouchNotify Prizes. */
        public Prizes: data.IItemInfo[];

        /** TimeLimitFantasyTouchNotify TouchTime. */
        public TouchTime: (number|Long);

        /** TimeLimitFantasyTouchNotify ExpiredTime. */
        public ExpiredTime: (number|Long);

        /**
         * Creates a new TimeLimitFantasyTouchNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitFantasyTouchNotify instance
         */
        public static create(properties?: gamesvr.ITimeLimitFantasyTouchNotify): gamesvr.TimeLimitFantasyTouchNotify;

        /**
         * Encodes the specified TimeLimitFantasyTouchNotify message. Does not implicitly {@link gamesvr.TimeLimitFantasyTouchNotify.verify|verify} messages.
         * @param message TimeLimitFantasyTouchNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitFantasyTouchNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitFantasyTouchNotify message, length delimited. Does not implicitly {@link gamesvr.TimeLimitFantasyTouchNotify.verify|verify} messages.
         * @param message TimeLimitFantasyTouchNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitFantasyTouchNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitFantasyTouchNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitFantasyTouchNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitFantasyTouchNotify;

        /**
         * Decodes a TimeLimitFantasyTouchNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitFantasyTouchNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitFantasyTouchNotify;

        /**
         * Verifies a TimeLimitFantasyTouchNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitFantasyTouchNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitFantasyTouchNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitFantasyTouchNotify;

        /**
         * Creates a plain object from a TimeLimitFantasyTouchNotify message. Also converts values to other types if specified.
         * @param message TimeLimitFantasyTouchNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitFantasyTouchNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitFantasyTouchNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitFantasyEnterPveReq. */
    interface ITimeLimitFantasyEnterPveReq {

        /** TimeLimitFantasyEnterPveReq ID */
        ID?: (number|Long|null);

        /** TimeLimitFantasyEnterPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TimeLimitFantasyEnterPveReq. */
    class TimeLimitFantasyEnterPveReq implements ITimeLimitFantasyEnterPveReq {

        /**
         * Constructs a new TimeLimitFantasyEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitFantasyEnterPveReq);

        /** TimeLimitFantasyEnterPveReq ID. */
        public ID: (number|Long);

        /** TimeLimitFantasyEnterPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TimeLimitFantasyEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitFantasyEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITimeLimitFantasyEnterPveReq): gamesvr.TimeLimitFantasyEnterPveReq;

        /**
         * Encodes the specified TimeLimitFantasyEnterPveReq message. Does not implicitly {@link gamesvr.TimeLimitFantasyEnterPveReq.verify|verify} messages.
         * @param message TimeLimitFantasyEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitFantasyEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitFantasyEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TimeLimitFantasyEnterPveReq.verify|verify} messages.
         * @param message TimeLimitFantasyEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitFantasyEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitFantasyEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitFantasyEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitFantasyEnterPveReq;

        /**
         * Decodes a TimeLimitFantasyEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitFantasyEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitFantasyEnterPveReq;

        /**
         * Verifies a TimeLimitFantasyEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitFantasyEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitFantasyEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitFantasyEnterPveReq;

        /**
         * Creates a plain object from a TimeLimitFantasyEnterPveReq message. Also converts values to other types if specified.
         * @param message TimeLimitFantasyEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitFantasyEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitFantasyEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitFantasyEnterPveRes. */
    interface ITimeLimitFantasyEnterPveRes {

        /** TimeLimitFantasyEnterPveRes ID */
        ID?: (number|Long|null);

        /** TimeLimitFantasyEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TimeLimitFantasyEnterPveRes. */
    class TimeLimitFantasyEnterPveRes implements ITimeLimitFantasyEnterPveRes {

        /**
         * Constructs a new TimeLimitFantasyEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitFantasyEnterPveRes);

        /** TimeLimitFantasyEnterPveRes ID. */
        public ID: (number|Long);

        /** TimeLimitFantasyEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TimeLimitFantasyEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitFantasyEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITimeLimitFantasyEnterPveRes): gamesvr.TimeLimitFantasyEnterPveRes;

        /**
         * Encodes the specified TimeLimitFantasyEnterPveRes message. Does not implicitly {@link gamesvr.TimeLimitFantasyEnterPveRes.verify|verify} messages.
         * @param message TimeLimitFantasyEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitFantasyEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitFantasyEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TimeLimitFantasyEnterPveRes.verify|verify} messages.
         * @param message TimeLimitFantasyEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitFantasyEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitFantasyEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitFantasyEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitFantasyEnterPveRes;

        /**
         * Decodes a TimeLimitFantasyEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitFantasyEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitFantasyEnterPveRes;

        /**
         * Verifies a TimeLimitFantasyEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitFantasyEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitFantasyEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitFantasyEnterPveRes;

        /**
         * Creates a plain object from a TimeLimitFantasyEnterPveRes message. Also converts values to other types if specified.
         * @param message TimeLimitFantasyEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitFantasyEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitFantasyEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitFantasyFinishPveReq. */
    interface ITimeLimitFantasyFinishPveReq {

        /** TimeLimitFantasyFinishPveReq ID */
        ID?: (number|Long|null);

        /** TimeLimitFantasyFinishPveReq Past */
        Past?: (boolean|null);
    }

    /** Represents a TimeLimitFantasyFinishPveReq. */
    class TimeLimitFantasyFinishPveReq implements ITimeLimitFantasyFinishPveReq {

        /**
         * Constructs a new TimeLimitFantasyFinishPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitFantasyFinishPveReq);

        /** TimeLimitFantasyFinishPveReq ID. */
        public ID: (number|Long);

        /** TimeLimitFantasyFinishPveReq Past. */
        public Past: boolean;

        /**
         * Creates a new TimeLimitFantasyFinishPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitFantasyFinishPveReq instance
         */
        public static create(properties?: gamesvr.ITimeLimitFantasyFinishPveReq): gamesvr.TimeLimitFantasyFinishPveReq;

        /**
         * Encodes the specified TimeLimitFantasyFinishPveReq message. Does not implicitly {@link gamesvr.TimeLimitFantasyFinishPveReq.verify|verify} messages.
         * @param message TimeLimitFantasyFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitFantasyFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitFantasyFinishPveReq message, length delimited. Does not implicitly {@link gamesvr.TimeLimitFantasyFinishPveReq.verify|verify} messages.
         * @param message TimeLimitFantasyFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitFantasyFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitFantasyFinishPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitFantasyFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitFantasyFinishPveReq;

        /**
         * Decodes a TimeLimitFantasyFinishPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitFantasyFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitFantasyFinishPveReq;

        /**
         * Verifies a TimeLimitFantasyFinishPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitFantasyFinishPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitFantasyFinishPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitFantasyFinishPveReq;

        /**
         * Creates a plain object from a TimeLimitFantasyFinishPveReq message. Also converts values to other types if specified.
         * @param message TimeLimitFantasyFinishPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitFantasyFinishPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitFantasyFinishPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeLimitFantasyFinishPveRes. */
    interface ITimeLimitFantasyFinishPveRes {

        /** TimeLimitFantasyFinishPveRes ID */
        ID?: (number|Long|null);

        /** TimeLimitFantasyFinishPveRes Past */
        Past?: (boolean|null);

        /** TimeLimitFantasyFinishPveRes Exp */
        Exp?: (number|null);

        /** TimeLimitFantasyFinishPveRes TotalExp */
        TotalExp?: (number|null);

        /** TimeLimitFantasyFinishPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TimeLimitFantasyFinishPveRes. */
    class TimeLimitFantasyFinishPveRes implements ITimeLimitFantasyFinishPveRes {

        /**
         * Constructs a new TimeLimitFantasyFinishPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITimeLimitFantasyFinishPveRes);

        /** TimeLimitFantasyFinishPveRes ID. */
        public ID: (number|Long);

        /** TimeLimitFantasyFinishPveRes Past. */
        public Past: boolean;

        /** TimeLimitFantasyFinishPveRes Exp. */
        public Exp: number;

        /** TimeLimitFantasyFinishPveRes TotalExp. */
        public TotalExp: number;

        /** TimeLimitFantasyFinishPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TimeLimitFantasyFinishPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeLimitFantasyFinishPveRes instance
         */
        public static create(properties?: gamesvr.ITimeLimitFantasyFinishPveRes): gamesvr.TimeLimitFantasyFinishPveRes;

        /**
         * Encodes the specified TimeLimitFantasyFinishPveRes message. Does not implicitly {@link gamesvr.TimeLimitFantasyFinishPveRes.verify|verify} messages.
         * @param message TimeLimitFantasyFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITimeLimitFantasyFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeLimitFantasyFinishPveRes message, length delimited. Does not implicitly {@link gamesvr.TimeLimitFantasyFinishPveRes.verify|verify} messages.
         * @param message TimeLimitFantasyFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITimeLimitFantasyFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeLimitFantasyFinishPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeLimitFantasyFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TimeLimitFantasyFinishPveRes;

        /**
         * Decodes a TimeLimitFantasyFinishPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeLimitFantasyFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TimeLimitFantasyFinishPveRes;

        /**
         * Verifies a TimeLimitFantasyFinishPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeLimitFantasyFinishPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeLimitFantasyFinishPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TimeLimitFantasyFinishPveRes;

        /**
         * Creates a plain object from a TimeLimitFantasyFinishPveRes message. Also converts values to other types if specified.
         * @param message TimeLimitFantasyFinishPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TimeLimitFantasyFinishPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeLimitFantasyFinishPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TreasureAchieveCountChangeNotify. */
    interface ITreasureAchieveCountChangeNotify {

        /** TreasureAchieveCountChangeNotify AchieveID */
        AchieveID?: (number|null);

        /** TreasureAchieveCountChangeNotify Count */
        Count?: (number|null);
    }

    /** Represents a TreasureAchieveCountChangeNotify. */
    class TreasureAchieveCountChangeNotify implements ITreasureAchieveCountChangeNotify {

        /**
         * Constructs a new TreasureAchieveCountChangeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITreasureAchieveCountChangeNotify);

        /** TreasureAchieveCountChangeNotify AchieveID. */
        public AchieveID: number;

        /** TreasureAchieveCountChangeNotify Count. */
        public Count: number;

        /**
         * Creates a new TreasureAchieveCountChangeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureAchieveCountChangeNotify instance
         */
        public static create(properties?: gamesvr.ITreasureAchieveCountChangeNotify): gamesvr.TreasureAchieveCountChangeNotify;

        /**
         * Encodes the specified TreasureAchieveCountChangeNotify message. Does not implicitly {@link gamesvr.TreasureAchieveCountChangeNotify.verify|verify} messages.
         * @param message TreasureAchieveCountChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITreasureAchieveCountChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreasureAchieveCountChangeNotify message, length delimited. Does not implicitly {@link gamesvr.TreasureAchieveCountChangeNotify.verify|verify} messages.
         * @param message TreasureAchieveCountChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITreasureAchieveCountChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreasureAchieveCountChangeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureAchieveCountChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TreasureAchieveCountChangeNotify;

        /**
         * Decodes a TreasureAchieveCountChangeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureAchieveCountChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TreasureAchieveCountChangeNotify;

        /**
         * Verifies a TreasureAchieveCountChangeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreasureAchieveCountChangeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreasureAchieveCountChangeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TreasureAchieveCountChangeNotify;

        /**
         * Creates a plain object from a TreasureAchieveCountChangeNotify message. Also converts values to other types if specified.
         * @param message TreasureAchieveCountChangeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TreasureAchieveCountChangeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreasureAchieveCountChangeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TreasureProfitValueChangeNotify. */
    interface ITreasureProfitValueChangeNotify {

        /** TreasureProfitValueChangeNotify SystemPowerType */
        SystemPowerType?: (number|null);

        /** TreasureProfitValueChangeNotify Value */
        Value?: (number|null);
    }

    /** Represents a TreasureProfitValueChangeNotify. */
    class TreasureProfitValueChangeNotify implements ITreasureProfitValueChangeNotify {

        /**
         * Constructs a new TreasureProfitValueChangeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITreasureProfitValueChangeNotify);

        /** TreasureProfitValueChangeNotify SystemPowerType. */
        public SystemPowerType: number;

        /** TreasureProfitValueChangeNotify Value. */
        public Value: number;

        /**
         * Creates a new TreasureProfitValueChangeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureProfitValueChangeNotify instance
         */
        public static create(properties?: gamesvr.ITreasureProfitValueChangeNotify): gamesvr.TreasureProfitValueChangeNotify;

        /**
         * Encodes the specified TreasureProfitValueChangeNotify message. Does not implicitly {@link gamesvr.TreasureProfitValueChangeNotify.verify|verify} messages.
         * @param message TreasureProfitValueChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITreasureProfitValueChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreasureProfitValueChangeNotify message, length delimited. Does not implicitly {@link gamesvr.TreasureProfitValueChangeNotify.verify|verify} messages.
         * @param message TreasureProfitValueChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITreasureProfitValueChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreasureProfitValueChangeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureProfitValueChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TreasureProfitValueChangeNotify;

        /**
         * Decodes a TreasureProfitValueChangeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureProfitValueChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TreasureProfitValueChangeNotify;

        /**
         * Verifies a TreasureProfitValueChangeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreasureProfitValueChangeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreasureProfitValueChangeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TreasureProfitValueChangeNotify;

        /**
         * Creates a plain object from a TreasureProfitValueChangeNotify message. Also converts values to other types if specified.
         * @param message TreasureProfitValueChangeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TreasureProfitValueChangeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreasureProfitValueChangeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TreasureProfitCardPoolRecordChangeNotify. */
    interface ITreasureProfitCardPoolRecordChangeNotify {

        /** TreasureProfitCardPoolRecordChangeNotify CardID */
        CardID?: (number|null);

        /** TreasureProfitCardPoolRecordChangeNotify Value */
        Value?: (number|null);
    }

    /** Represents a TreasureProfitCardPoolRecordChangeNotify. */
    class TreasureProfitCardPoolRecordChangeNotify implements ITreasureProfitCardPoolRecordChangeNotify {

        /**
         * Constructs a new TreasureProfitCardPoolRecordChangeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITreasureProfitCardPoolRecordChangeNotify);

        /** TreasureProfitCardPoolRecordChangeNotify CardID. */
        public CardID: number;

        /** TreasureProfitCardPoolRecordChangeNotify Value. */
        public Value: number;

        /**
         * Creates a new TreasureProfitCardPoolRecordChangeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TreasureProfitCardPoolRecordChangeNotify instance
         */
        public static create(properties?: gamesvr.ITreasureProfitCardPoolRecordChangeNotify): gamesvr.TreasureProfitCardPoolRecordChangeNotify;

        /**
         * Encodes the specified TreasureProfitCardPoolRecordChangeNotify message. Does not implicitly {@link gamesvr.TreasureProfitCardPoolRecordChangeNotify.verify|verify} messages.
         * @param message TreasureProfitCardPoolRecordChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITreasureProfitCardPoolRecordChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TreasureProfitCardPoolRecordChangeNotify message, length delimited. Does not implicitly {@link gamesvr.TreasureProfitCardPoolRecordChangeNotify.verify|verify} messages.
         * @param message TreasureProfitCardPoolRecordChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITreasureProfitCardPoolRecordChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TreasureProfitCardPoolRecordChangeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TreasureProfitCardPoolRecordChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TreasureProfitCardPoolRecordChangeNotify;

        /**
         * Decodes a TreasureProfitCardPoolRecordChangeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TreasureProfitCardPoolRecordChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TreasureProfitCardPoolRecordChangeNotify;

        /**
         * Verifies a TreasureProfitCardPoolRecordChangeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TreasureProfitCardPoolRecordChangeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TreasureProfitCardPoolRecordChangeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TreasureProfitCardPoolRecordChangeNotify;

        /**
         * Creates a plain object from a TreasureProfitCardPoolRecordChangeNotify message. Also converts values to other types if specified.
         * @param message TreasureProfitCardPoolRecordChangeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TreasureProfitCardPoolRecordChangeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TreasureProfitCardPoolRecordChangeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellGetPveReq. */
    interface ITrialHellGetPveReq {
    }

    /** Represents a TrialHellGetPveReq. */
    class TrialHellGetPveReq implements ITrialHellGetPveReq {

        /**
         * Constructs a new TrialHellGetPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialHellGetPveReq);

        /**
         * Creates a new TrialHellGetPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellGetPveReq instance
         */
        public static create(properties?: gamesvr.ITrialHellGetPveReq): gamesvr.TrialHellGetPveReq;

        /**
         * Encodes the specified TrialHellGetPveReq message. Does not implicitly {@link gamesvr.TrialHellGetPveReq.verify|verify} messages.
         * @param message TrialHellGetPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialHellGetPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellGetPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialHellGetPveReq.verify|verify} messages.
         * @param message TrialHellGetPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialHellGetPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellGetPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellGetPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialHellGetPveReq;

        /**
         * Decodes a TrialHellGetPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellGetPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialHellGetPveReq;

        /**
         * Verifies a TrialHellGetPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellGetPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellGetPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialHellGetPveReq;

        /**
         * Creates a plain object from a TrialHellGetPveReq message. Also converts values to other types if specified.
         * @param message TrialHellGetPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialHellGetPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellGetPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellGetPveRes. */
    interface ITrialHellGetPveRes {

        /** TrialHellGetPveRes TrialHellUnit */
        TrialHellUnit?: (data.ITrialHell|null);
    }

    /** Represents a TrialHellGetPveRes. */
    class TrialHellGetPveRes implements ITrialHellGetPveRes {

        /**
         * Constructs a new TrialHellGetPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialHellGetPveRes);

        /** TrialHellGetPveRes TrialHellUnit. */
        public TrialHellUnit?: (data.ITrialHell|null);

        /**
         * Creates a new TrialHellGetPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellGetPveRes instance
         */
        public static create(properties?: gamesvr.ITrialHellGetPveRes): gamesvr.TrialHellGetPveRes;

        /**
         * Encodes the specified TrialHellGetPveRes message. Does not implicitly {@link gamesvr.TrialHellGetPveRes.verify|verify} messages.
         * @param message TrialHellGetPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialHellGetPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellGetPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialHellGetPveRes.verify|verify} messages.
         * @param message TrialHellGetPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialHellGetPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellGetPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellGetPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialHellGetPveRes;

        /**
         * Decodes a TrialHellGetPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellGetPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialHellGetPveRes;

        /**
         * Verifies a TrialHellGetPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellGetPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellGetPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialHellGetPveRes;

        /**
         * Creates a plain object from a TrialHellGetPveRes message. Also converts values to other types if specified.
         * @param message TrialHellGetPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialHellGetPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellGetPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellEnterPveReq. */
    interface ITrialHellEnterPveReq {

        /** TrialHellEnterPveReq LessonID */
        LessonID?: (number|null);

        /** TrialHellEnterPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialHellEnterPveReq. */
    class TrialHellEnterPveReq implements ITrialHellEnterPveReq {

        /**
         * Constructs a new TrialHellEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialHellEnterPveReq);

        /** TrialHellEnterPveReq LessonID. */
        public LessonID: number;

        /** TrialHellEnterPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialHellEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialHellEnterPveReq): gamesvr.TrialHellEnterPveReq;

        /**
         * Encodes the specified TrialHellEnterPveReq message. Does not implicitly {@link gamesvr.TrialHellEnterPveReq.verify|verify} messages.
         * @param message TrialHellEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialHellEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialHellEnterPveReq.verify|verify} messages.
         * @param message TrialHellEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialHellEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialHellEnterPveReq;

        /**
         * Decodes a TrialHellEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialHellEnterPveReq;

        /**
         * Verifies a TrialHellEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialHellEnterPveReq;

        /**
         * Creates a plain object from a TrialHellEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialHellEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialHellEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellEnterPveRes. */
    interface ITrialHellEnterPveRes {

        /** TrialHellEnterPveRes LessonID */
        LessonID?: (number|null);

        /** TrialHellEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialHellEnterPveRes. */
    class TrialHellEnterPveRes implements ITrialHellEnterPveRes {

        /**
         * Constructs a new TrialHellEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialHellEnterPveRes);

        /** TrialHellEnterPveRes LessonID. */
        public LessonID: number;

        /** TrialHellEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialHellEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialHellEnterPveRes): gamesvr.TrialHellEnterPveRes;

        /**
         * Encodes the specified TrialHellEnterPveRes message. Does not implicitly {@link gamesvr.TrialHellEnterPveRes.verify|verify} messages.
         * @param message TrialHellEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialHellEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialHellEnterPveRes.verify|verify} messages.
         * @param message TrialHellEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialHellEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialHellEnterPveRes;

        /**
         * Decodes a TrialHellEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialHellEnterPveRes;

        /**
         * Verifies a TrialHellEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialHellEnterPveRes;

        /**
         * Creates a plain object from a TrialHellEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialHellEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialHellEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellFinishPveReq. */
    interface ITrialHellFinishPveReq {

        /** TrialHellFinishPveReq LessonID */
        LessonID?: (number|null);

        /** TrialHellFinishPveReq Past */
        Past?: (boolean|null);

        /** TrialHellFinishPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialHellFinishPveReq. */
    class TrialHellFinishPveReq implements ITrialHellFinishPveReq {

        /**
         * Constructs a new TrialHellFinishPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialHellFinishPveReq);

        /** TrialHellFinishPveReq LessonID. */
        public LessonID: number;

        /** TrialHellFinishPveReq Past. */
        public Past: boolean;

        /** TrialHellFinishPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialHellFinishPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellFinishPveReq instance
         */
        public static create(properties?: gamesvr.ITrialHellFinishPveReq): gamesvr.TrialHellFinishPveReq;

        /**
         * Encodes the specified TrialHellFinishPveReq message. Does not implicitly {@link gamesvr.TrialHellFinishPveReq.verify|verify} messages.
         * @param message TrialHellFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialHellFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellFinishPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialHellFinishPveReq.verify|verify} messages.
         * @param message TrialHellFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialHellFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellFinishPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialHellFinishPveReq;

        /**
         * Decodes a TrialHellFinishPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialHellFinishPveReq;

        /**
         * Verifies a TrialHellFinishPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellFinishPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellFinishPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialHellFinishPveReq;

        /**
         * Creates a plain object from a TrialHellFinishPveReq message. Also converts values to other types if specified.
         * @param message TrialHellFinishPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialHellFinishPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellFinishPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialHellFinishPveRes. */
    interface ITrialHellFinishPveRes {

        /** TrialHellFinishPveRes LessonID */
        LessonID?: (number|null);

        /** TrialHellFinishPveRes Past */
        Past?: (boolean|null);

        /** TrialHellFinishPveRes Heroes */
        Heroes?: (number[]|null);

        /** TrialHellFinishPveRes Exp */
        Exp?: (number|null);

        /** TrialHellFinishPveRes TotalExp */
        TotalExp?: (number|null);

        /** TrialHellFinishPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TrialHellFinishPveRes. */
    class TrialHellFinishPveRes implements ITrialHellFinishPveRes {

        /**
         * Constructs a new TrialHellFinishPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialHellFinishPveRes);

        /** TrialHellFinishPveRes LessonID. */
        public LessonID: number;

        /** TrialHellFinishPveRes Past. */
        public Past: boolean;

        /** TrialHellFinishPveRes Heroes. */
        public Heroes: number[];

        /** TrialHellFinishPveRes Exp. */
        public Exp: number;

        /** TrialHellFinishPveRes TotalExp. */
        public TotalExp: number;

        /** TrialHellFinishPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TrialHellFinishPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialHellFinishPveRes instance
         */
        public static create(properties?: gamesvr.ITrialHellFinishPveRes): gamesvr.TrialHellFinishPveRes;

        /**
         * Encodes the specified TrialHellFinishPveRes message. Does not implicitly {@link gamesvr.TrialHellFinishPveRes.verify|verify} messages.
         * @param message TrialHellFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialHellFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialHellFinishPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialHellFinishPveRes.verify|verify} messages.
         * @param message TrialHellFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialHellFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialHellFinishPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialHellFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialHellFinishPveRes;

        /**
         * Decodes a TrialHellFinishPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialHellFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialHellFinishPveRes;

        /**
         * Verifies a TrialHellFinishPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialHellFinishPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialHellFinishPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialHellFinishPveRes;

        /**
         * Creates a plain object from a TrialHellFinishPveRes message. Also converts values to other types if specified.
         * @param message TrialHellFinishPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialHellFinishPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialHellFinishPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamGetPveReq. */
    interface ITrialCloudDreamGetPveReq {
    }

    /** Represents a TrialCloudDreamGetPveReq. */
    class TrialCloudDreamGetPveReq implements ITrialCloudDreamGetPveReq {

        /**
         * Constructs a new TrialCloudDreamGetPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamGetPveReq);

        /**
         * Creates a new TrialCloudDreamGetPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamGetPveReq instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamGetPveReq): gamesvr.TrialCloudDreamGetPveReq;

        /**
         * Encodes the specified TrialCloudDreamGetPveReq message. Does not implicitly {@link gamesvr.TrialCloudDreamGetPveReq.verify|verify} messages.
         * @param message TrialCloudDreamGetPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamGetPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamGetPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamGetPveReq.verify|verify} messages.
         * @param message TrialCloudDreamGetPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamGetPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamGetPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamGetPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamGetPveReq;

        /**
         * Decodes a TrialCloudDreamGetPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamGetPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamGetPveReq;

        /**
         * Verifies a TrialCloudDreamGetPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamGetPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamGetPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamGetPveReq;

        /**
         * Creates a plain object from a TrialCloudDreamGetPveReq message. Also converts values to other types if specified.
         * @param message TrialCloudDreamGetPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamGetPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamGetPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamGetPveRes. */
    interface ITrialCloudDreamGetPveRes {

        /** TrialCloudDreamGetPveRes TrialCloudDreamUnit */
        TrialCloudDreamUnit?: (data.ITrialCloudDream|null);
    }

    /** Represents a TrialCloudDreamGetPveRes. */
    class TrialCloudDreamGetPveRes implements ITrialCloudDreamGetPveRes {

        /**
         * Constructs a new TrialCloudDreamGetPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamGetPveRes);

        /** TrialCloudDreamGetPveRes TrialCloudDreamUnit. */
        public TrialCloudDreamUnit?: (data.ITrialCloudDream|null);

        /**
         * Creates a new TrialCloudDreamGetPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamGetPveRes instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamGetPveRes): gamesvr.TrialCloudDreamGetPveRes;

        /**
         * Encodes the specified TrialCloudDreamGetPveRes message. Does not implicitly {@link gamesvr.TrialCloudDreamGetPveRes.verify|verify} messages.
         * @param message TrialCloudDreamGetPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamGetPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamGetPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamGetPveRes.verify|verify} messages.
         * @param message TrialCloudDreamGetPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamGetPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamGetPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamGetPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamGetPveRes;

        /**
         * Decodes a TrialCloudDreamGetPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamGetPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamGetPveRes;

        /**
         * Verifies a TrialCloudDreamGetPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamGetPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamGetPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamGetPveRes;

        /**
         * Creates a plain object from a TrialCloudDreamGetPveRes message. Also converts values to other types if specified.
         * @param message TrialCloudDreamGetPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamGetPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamGetPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamEnterPveReq. */
    interface ITrialCloudDreamEnterPveReq {

        /** TrialCloudDreamEnterPveReq LessonID */
        LessonID?: (number|null);

        /** TrialCloudDreamEnterPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialCloudDreamEnterPveReq. */
    class TrialCloudDreamEnterPveReq implements ITrialCloudDreamEnterPveReq {

        /**
         * Constructs a new TrialCloudDreamEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamEnterPveReq);

        /** TrialCloudDreamEnterPveReq LessonID. */
        public LessonID: number;

        /** TrialCloudDreamEnterPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialCloudDreamEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamEnterPveReq): gamesvr.TrialCloudDreamEnterPveReq;

        /**
         * Encodes the specified TrialCloudDreamEnterPveReq message. Does not implicitly {@link gamesvr.TrialCloudDreamEnterPveReq.verify|verify} messages.
         * @param message TrialCloudDreamEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamEnterPveReq.verify|verify} messages.
         * @param message TrialCloudDreamEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamEnterPveReq;

        /**
         * Decodes a TrialCloudDreamEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamEnterPveReq;

        /**
         * Verifies a TrialCloudDreamEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamEnterPveReq;

        /**
         * Creates a plain object from a TrialCloudDreamEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialCloudDreamEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamEnterPveRes. */
    interface ITrialCloudDreamEnterPveRes {

        /** TrialCloudDreamEnterPveRes LessonID */
        LessonID?: (number|null);

        /** TrialCloudDreamEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialCloudDreamEnterPveRes. */
    class TrialCloudDreamEnterPveRes implements ITrialCloudDreamEnterPveRes {

        /**
         * Constructs a new TrialCloudDreamEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamEnterPveRes);

        /** TrialCloudDreamEnterPveRes LessonID. */
        public LessonID: number;

        /** TrialCloudDreamEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialCloudDreamEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamEnterPveRes): gamesvr.TrialCloudDreamEnterPveRes;

        /**
         * Encodes the specified TrialCloudDreamEnterPveRes message. Does not implicitly {@link gamesvr.TrialCloudDreamEnterPveRes.verify|verify} messages.
         * @param message TrialCloudDreamEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamEnterPveRes.verify|verify} messages.
         * @param message TrialCloudDreamEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamEnterPveRes;

        /**
         * Decodes a TrialCloudDreamEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamEnterPveRes;

        /**
         * Verifies a TrialCloudDreamEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamEnterPveRes;

        /**
         * Creates a plain object from a TrialCloudDreamEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialCloudDreamEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamFinishPveReq. */
    interface ITrialCloudDreamFinishPveReq {

        /** TrialCloudDreamFinishPveReq LessonID */
        LessonID?: (number|null);

        /** TrialCloudDreamFinishPveReq Past */
        Past?: (boolean|null);

        /** TrialCloudDreamFinishPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialCloudDreamFinishPveReq. */
    class TrialCloudDreamFinishPveReq implements ITrialCloudDreamFinishPveReq {

        /**
         * Constructs a new TrialCloudDreamFinishPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamFinishPveReq);

        /** TrialCloudDreamFinishPveReq LessonID. */
        public LessonID: number;

        /** TrialCloudDreamFinishPveReq Past. */
        public Past: boolean;

        /** TrialCloudDreamFinishPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialCloudDreamFinishPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamFinishPveReq instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamFinishPveReq): gamesvr.TrialCloudDreamFinishPveReq;

        /**
         * Encodes the specified TrialCloudDreamFinishPveReq message. Does not implicitly {@link gamesvr.TrialCloudDreamFinishPveReq.verify|verify} messages.
         * @param message TrialCloudDreamFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamFinishPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamFinishPveReq.verify|verify} messages.
         * @param message TrialCloudDreamFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamFinishPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamFinishPveReq;

        /**
         * Decodes a TrialCloudDreamFinishPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamFinishPveReq;

        /**
         * Verifies a TrialCloudDreamFinishPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamFinishPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamFinishPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamFinishPveReq;

        /**
         * Creates a plain object from a TrialCloudDreamFinishPveReq message. Also converts values to other types if specified.
         * @param message TrialCloudDreamFinishPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamFinishPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamFinishPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamFinishPveRes. */
    interface ITrialCloudDreamFinishPveRes {

        /** TrialCloudDreamFinishPveRes LessonID */
        LessonID?: (number|null);

        /** TrialCloudDreamFinishPveRes Past */
        Past?: (boolean|null);

        /** TrialCloudDreamFinishPveRes Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialCloudDreamFinishPveRes. */
    class TrialCloudDreamFinishPveRes implements ITrialCloudDreamFinishPveRes {

        /**
         * Constructs a new TrialCloudDreamFinishPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamFinishPveRes);

        /** TrialCloudDreamFinishPveRes LessonID. */
        public LessonID: number;

        /** TrialCloudDreamFinishPveRes Past. */
        public Past: boolean;

        /** TrialCloudDreamFinishPveRes Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialCloudDreamFinishPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamFinishPveRes instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamFinishPveRes): gamesvr.TrialCloudDreamFinishPveRes;

        /**
         * Encodes the specified TrialCloudDreamFinishPveRes message. Does not implicitly {@link gamesvr.TrialCloudDreamFinishPveRes.verify|verify} messages.
         * @param message TrialCloudDreamFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamFinishPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamFinishPveRes.verify|verify} messages.
         * @param message TrialCloudDreamFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamFinishPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamFinishPveRes;

        /**
         * Decodes a TrialCloudDreamFinishPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamFinishPveRes;

        /**
         * Verifies a TrialCloudDreamFinishPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamFinishPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamFinishPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamFinishPveRes;

        /**
         * Creates a plain object from a TrialCloudDreamFinishPveRes message. Also converts values to other types if specified.
         * @param message TrialCloudDreamFinishPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamFinishPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamFinishPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamReceiveRewardReq. */
    interface ITrialCloudDreamReceiveRewardReq {

        /** TrialCloudDreamReceiveRewardReq ChapterID */
        ChapterID?: (number|null);
    }

    /** Represents a TrialCloudDreamReceiveRewardReq. */
    class TrialCloudDreamReceiveRewardReq implements ITrialCloudDreamReceiveRewardReq {

        /**
         * Constructs a new TrialCloudDreamReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamReceiveRewardReq);

        /** TrialCloudDreamReceiveRewardReq ChapterID. */
        public ChapterID: number;

        /**
         * Creates a new TrialCloudDreamReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamReceiveRewardReq): gamesvr.TrialCloudDreamReceiveRewardReq;

        /**
         * Encodes the specified TrialCloudDreamReceiveRewardReq message. Does not implicitly {@link gamesvr.TrialCloudDreamReceiveRewardReq.verify|verify} messages.
         * @param message TrialCloudDreamReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamReceiveRewardReq.verify|verify} messages.
         * @param message TrialCloudDreamReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamReceiveRewardReq;

        /**
         * Decodes a TrialCloudDreamReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamReceiveRewardReq;

        /**
         * Verifies a TrialCloudDreamReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamReceiveRewardReq;

        /**
         * Creates a plain object from a TrialCloudDreamReceiveRewardReq message. Also converts values to other types if specified.
         * @param message TrialCloudDreamReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialCloudDreamReceiveRewardRes. */
    interface ITrialCloudDreamReceiveRewardRes {

        /** TrialCloudDreamReceiveRewardRes ChapterID */
        ChapterID?: (number|null);

        /** TrialCloudDreamReceiveRewardRes Exp */
        Exp?: (number|null);

        /** TrialCloudDreamReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** TrialCloudDreamReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TrialCloudDreamReceiveRewardRes. */
    class TrialCloudDreamReceiveRewardRes implements ITrialCloudDreamReceiveRewardRes {

        /**
         * Constructs a new TrialCloudDreamReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialCloudDreamReceiveRewardRes);

        /** TrialCloudDreamReceiveRewardRes ChapterID. */
        public ChapterID: number;

        /** TrialCloudDreamReceiveRewardRes Exp. */
        public Exp: number;

        /** TrialCloudDreamReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** TrialCloudDreamReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TrialCloudDreamReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialCloudDreamReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.ITrialCloudDreamReceiveRewardRes): gamesvr.TrialCloudDreamReceiveRewardRes;

        /**
         * Encodes the specified TrialCloudDreamReceiveRewardRes message. Does not implicitly {@link gamesvr.TrialCloudDreamReceiveRewardRes.verify|verify} messages.
         * @param message TrialCloudDreamReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialCloudDreamReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialCloudDreamReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.TrialCloudDreamReceiveRewardRes.verify|verify} messages.
         * @param message TrialCloudDreamReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialCloudDreamReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialCloudDreamReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialCloudDreamReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialCloudDreamReceiveRewardRes;

        /**
         * Decodes a TrialCloudDreamReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialCloudDreamReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialCloudDreamReceiveRewardRes;

        /**
         * Verifies a TrialCloudDreamReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialCloudDreamReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialCloudDreamReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialCloudDreamReceiveRewardRes;

        /**
         * Creates a plain object from a TrialCloudDreamReceiveRewardRes message. Also converts values to other types if specified.
         * @param message TrialCloudDreamReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialCloudDreamReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialCloudDreamReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorGetPveReq. */
    interface ITrialMiracleDoorGetPveReq {
    }

    /** Represents a TrialMiracleDoorGetPveReq. */
    class TrialMiracleDoorGetPveReq implements ITrialMiracleDoorGetPveReq {

        /**
         * Constructs a new TrialMiracleDoorGetPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorGetPveReq);

        /**
         * Creates a new TrialMiracleDoorGetPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorGetPveReq instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorGetPveReq): gamesvr.TrialMiracleDoorGetPveReq;

        /**
         * Encodes the specified TrialMiracleDoorGetPveReq message. Does not implicitly {@link gamesvr.TrialMiracleDoorGetPveReq.verify|verify} messages.
         * @param message TrialMiracleDoorGetPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorGetPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorGetPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorGetPveReq.verify|verify} messages.
         * @param message TrialMiracleDoorGetPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorGetPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorGetPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorGetPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorGetPveReq;

        /**
         * Decodes a TrialMiracleDoorGetPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorGetPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorGetPveReq;

        /**
         * Verifies a TrialMiracleDoorGetPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorGetPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorGetPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorGetPveReq;

        /**
         * Creates a plain object from a TrialMiracleDoorGetPveReq message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorGetPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorGetPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorGetPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorGetPveRes. */
    interface ITrialMiracleDoorGetPveRes {

        /** TrialMiracleDoorGetPveRes TrialMiracleDoorUnit */
        TrialMiracleDoorUnit?: (data.ITrialMiracleDoor|null);
    }

    /** Represents a TrialMiracleDoorGetPveRes. */
    class TrialMiracleDoorGetPveRes implements ITrialMiracleDoorGetPveRes {

        /**
         * Constructs a new TrialMiracleDoorGetPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorGetPveRes);

        /** TrialMiracleDoorGetPveRes TrialMiracleDoorUnit. */
        public TrialMiracleDoorUnit?: (data.ITrialMiracleDoor|null);

        /**
         * Creates a new TrialMiracleDoorGetPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorGetPveRes instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorGetPveRes): gamesvr.TrialMiracleDoorGetPveRes;

        /**
         * Encodes the specified TrialMiracleDoorGetPveRes message. Does not implicitly {@link gamesvr.TrialMiracleDoorGetPveRes.verify|verify} messages.
         * @param message TrialMiracleDoorGetPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorGetPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorGetPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorGetPveRes.verify|verify} messages.
         * @param message TrialMiracleDoorGetPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorGetPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorGetPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorGetPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorGetPveRes;

        /**
         * Decodes a TrialMiracleDoorGetPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorGetPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorGetPveRes;

        /**
         * Verifies a TrialMiracleDoorGetPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorGetPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorGetPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorGetPveRes;

        /**
         * Creates a plain object from a TrialMiracleDoorGetPveRes message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorGetPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorGetPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorGetPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorEnterPveReq. */
    interface ITrialMiracleDoorEnterPveReq {

        /** TrialMiracleDoorEnterPveReq LessonID */
        LessonID?: (number|null);

        /** TrialMiracleDoorEnterPveReq ChooseIDList */
        ChooseIDList?: (number[]|null);
    }

    /** Represents a TrialMiracleDoorEnterPveReq. */
    class TrialMiracleDoorEnterPveReq implements ITrialMiracleDoorEnterPveReq {

        /**
         * Constructs a new TrialMiracleDoorEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorEnterPveReq);

        /** TrialMiracleDoorEnterPveReq LessonID. */
        public LessonID: number;

        /** TrialMiracleDoorEnterPveReq ChooseIDList. */
        public ChooseIDList: number[];

        /**
         * Creates a new TrialMiracleDoorEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorEnterPveReq): gamesvr.TrialMiracleDoorEnterPveReq;

        /**
         * Encodes the specified TrialMiracleDoorEnterPveReq message. Does not implicitly {@link gamesvr.TrialMiracleDoorEnterPveReq.verify|verify} messages.
         * @param message TrialMiracleDoorEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorEnterPveReq.verify|verify} messages.
         * @param message TrialMiracleDoorEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorEnterPveReq;

        /**
         * Decodes a TrialMiracleDoorEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorEnterPveReq;

        /**
         * Verifies a TrialMiracleDoorEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorEnterPveReq;

        /**
         * Creates a plain object from a TrialMiracleDoorEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorEnterPveRes. */
    interface ITrialMiracleDoorEnterPveRes {

        /** TrialMiracleDoorEnterPveRes LessonID */
        LessonID?: (number|null);

        /** TrialMiracleDoorEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialMiracleDoorEnterPveRes. */
    class TrialMiracleDoorEnterPveRes implements ITrialMiracleDoorEnterPveRes {

        /**
         * Constructs a new TrialMiracleDoorEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorEnterPveRes);

        /** TrialMiracleDoorEnterPveRes LessonID. */
        public LessonID: number;

        /** TrialMiracleDoorEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialMiracleDoorEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorEnterPveRes): gamesvr.TrialMiracleDoorEnterPveRes;

        /**
         * Encodes the specified TrialMiracleDoorEnterPveRes message. Does not implicitly {@link gamesvr.TrialMiracleDoorEnterPveRes.verify|verify} messages.
         * @param message TrialMiracleDoorEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorEnterPveRes.verify|verify} messages.
         * @param message TrialMiracleDoorEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorEnterPveRes;

        /**
         * Decodes a TrialMiracleDoorEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorEnterPveRes;

        /**
         * Verifies a TrialMiracleDoorEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorEnterPveRes;

        /**
         * Creates a plain object from a TrialMiracleDoorEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorFinishPveReq. */
    interface ITrialMiracleDoorFinishPveReq {

        /** TrialMiracleDoorFinishPveReq LessonID */
        LessonID?: (number|null);

        /** TrialMiracleDoorFinishPveReq Past */
        Past?: (boolean|null);
    }

    /** Represents a TrialMiracleDoorFinishPveReq. */
    class TrialMiracleDoorFinishPveReq implements ITrialMiracleDoorFinishPveReq {

        /**
         * Constructs a new TrialMiracleDoorFinishPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorFinishPveReq);

        /** TrialMiracleDoorFinishPveReq LessonID. */
        public LessonID: number;

        /** TrialMiracleDoorFinishPveReq Past. */
        public Past: boolean;

        /**
         * Creates a new TrialMiracleDoorFinishPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorFinishPveReq instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorFinishPveReq): gamesvr.TrialMiracleDoorFinishPveReq;

        /**
         * Encodes the specified TrialMiracleDoorFinishPveReq message. Does not implicitly {@link gamesvr.TrialMiracleDoorFinishPveReq.verify|verify} messages.
         * @param message TrialMiracleDoorFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorFinishPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorFinishPveReq.verify|verify} messages.
         * @param message TrialMiracleDoorFinishPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorFinishPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorFinishPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorFinishPveReq;

        /**
         * Decodes a TrialMiracleDoorFinishPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorFinishPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorFinishPveReq;

        /**
         * Verifies a TrialMiracleDoorFinishPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorFinishPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorFinishPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorFinishPveReq;

        /**
         * Creates a plain object from a TrialMiracleDoorFinishPveReq message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorFinishPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorFinishPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorFinishPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorFinishPveRes. */
    interface ITrialMiracleDoorFinishPveRes {

        /** TrialMiracleDoorFinishPveRes LessonID */
        LessonID?: (number|null);

        /** TrialMiracleDoorFinishPveRes Past */
        Past?: (boolean|null);

        /** TrialMiracleDoorFinishPveRes Exp */
        Exp?: (number|null);

        /** TrialMiracleDoorFinishPveRes TotalExp */
        TotalExp?: (number|null);

        /** TrialMiracleDoorFinishPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TrialMiracleDoorFinishPveRes. */
    class TrialMiracleDoorFinishPveRes implements ITrialMiracleDoorFinishPveRes {

        /**
         * Constructs a new TrialMiracleDoorFinishPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorFinishPveRes);

        /** TrialMiracleDoorFinishPveRes LessonID. */
        public LessonID: number;

        /** TrialMiracleDoorFinishPveRes Past. */
        public Past: boolean;

        /** TrialMiracleDoorFinishPveRes Exp. */
        public Exp: number;

        /** TrialMiracleDoorFinishPveRes TotalExp. */
        public TotalExp: number;

        /** TrialMiracleDoorFinishPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TrialMiracleDoorFinishPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorFinishPveRes instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorFinishPveRes): gamesvr.TrialMiracleDoorFinishPveRes;

        /**
         * Encodes the specified TrialMiracleDoorFinishPveRes message. Does not implicitly {@link gamesvr.TrialMiracleDoorFinishPveRes.verify|verify} messages.
         * @param message TrialMiracleDoorFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorFinishPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorFinishPveRes.verify|verify} messages.
         * @param message TrialMiracleDoorFinishPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorFinishPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorFinishPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorFinishPveRes;

        /**
         * Decodes a TrialMiracleDoorFinishPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorFinishPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorFinishPveRes;

        /**
         * Verifies a TrialMiracleDoorFinishPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorFinishPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorFinishPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorFinishPveRes;

        /**
         * Creates a plain object from a TrialMiracleDoorFinishPveRes message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorFinishPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorFinishPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorFinishPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorReceiveRewardReq. */
    interface ITrialMiracleDoorReceiveRewardReq {
    }

    /** Represents a TrialMiracleDoorReceiveRewardReq. */
    class TrialMiracleDoorReceiveRewardReq implements ITrialMiracleDoorReceiveRewardReq {

        /**
         * Constructs a new TrialMiracleDoorReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorReceiveRewardReq);

        /**
         * Creates a new TrialMiracleDoorReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorReceiveRewardReq): gamesvr.TrialMiracleDoorReceiveRewardReq;

        /**
         * Encodes the specified TrialMiracleDoorReceiveRewardReq message. Does not implicitly {@link gamesvr.TrialMiracleDoorReceiveRewardReq.verify|verify} messages.
         * @param message TrialMiracleDoorReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorReceiveRewardReq.verify|verify} messages.
         * @param message TrialMiracleDoorReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorReceiveRewardReq;

        /**
         * Decodes a TrialMiracleDoorReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorReceiveRewardReq;

        /**
         * Verifies a TrialMiracleDoorReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorReceiveRewardReq;

        /**
         * Creates a plain object from a TrialMiracleDoorReceiveRewardReq message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialMiracleDoorReceiveRewardRes. */
    interface ITrialMiracleDoorReceiveRewardRes {

        /** TrialMiracleDoorReceiveRewardRes Exp */
        Exp?: (number|null);

        /** TrialMiracleDoorReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** TrialMiracleDoorReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TrialMiracleDoorReceiveRewardRes. */
    class TrialMiracleDoorReceiveRewardRes implements ITrialMiracleDoorReceiveRewardRes {

        /**
         * Constructs a new TrialMiracleDoorReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialMiracleDoorReceiveRewardRes);

        /** TrialMiracleDoorReceiveRewardRes Exp. */
        public Exp: number;

        /** TrialMiracleDoorReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** TrialMiracleDoorReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TrialMiracleDoorReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialMiracleDoorReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.ITrialMiracleDoorReceiveRewardRes): gamesvr.TrialMiracleDoorReceiveRewardRes;

        /**
         * Encodes the specified TrialMiracleDoorReceiveRewardRes message. Does not implicitly {@link gamesvr.TrialMiracleDoorReceiveRewardRes.verify|verify} messages.
         * @param message TrialMiracleDoorReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialMiracleDoorReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialMiracleDoorReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.TrialMiracleDoorReceiveRewardRes.verify|verify} messages.
         * @param message TrialMiracleDoorReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialMiracleDoorReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialMiracleDoorReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialMiracleDoorReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialMiracleDoorReceiveRewardRes;

        /**
         * Decodes a TrialMiracleDoorReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialMiracleDoorReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialMiracleDoorReceiveRewardRes;

        /**
         * Verifies a TrialMiracleDoorReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialMiracleDoorReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialMiracleDoorReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialMiracleDoorReceiveRewardRes;

        /**
         * Creates a plain object from a TrialMiracleDoorReceiveRewardRes message. Also converts values to other types if specified.
         * @param message TrialMiracleDoorReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialMiracleDoorReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialMiracleDoorReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectStartReq. */
    interface ITrialRespectStartReq {

        /** TrialRespectStartReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialRespectStartReq. */
    class TrialRespectStartReq implements ITrialRespectStartReq {

        /**
         * Constructs a new TrialRespectStartReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectStartReq);

        /** TrialRespectStartReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialRespectStartReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectStartReq instance
         */
        public static create(properties?: gamesvr.ITrialRespectStartReq): gamesvr.TrialRespectStartReq;

        /**
         * Encodes the specified TrialRespectStartReq message. Does not implicitly {@link gamesvr.TrialRespectStartReq.verify|verify} messages.
         * @param message TrialRespectStartReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectStartReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectStartReq message, length delimited. Does not implicitly {@link gamesvr.TrialRespectStartReq.verify|verify} messages.
         * @param message TrialRespectStartReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectStartReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectStartReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectStartReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectStartReq;

        /**
         * Decodes a TrialRespectStartReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectStartReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectStartReq;

        /**
         * Verifies a TrialRespectStartReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectStartReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectStartReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectStartReq;

        /**
         * Creates a plain object from a TrialRespectStartReq message. Also converts values to other types if specified.
         * @param message TrialRespectStartReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectStartReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectStartReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectStartRes. */
    interface ITrialRespectStartRes {

        /** TrialRespectStartRes TrialRespectData */
        TrialRespectData?: (data.ITrialRespectData|null);
    }

    /** Represents a TrialRespectStartRes. */
    class TrialRespectStartRes implements ITrialRespectStartRes {

        /**
         * Constructs a new TrialRespectStartRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectStartRes);

        /** TrialRespectStartRes TrialRespectData. */
        public TrialRespectData?: (data.ITrialRespectData|null);

        /**
         * Creates a new TrialRespectStartRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectStartRes instance
         */
        public static create(properties?: gamesvr.ITrialRespectStartRes): gamesvr.TrialRespectStartRes;

        /**
         * Encodes the specified TrialRespectStartRes message. Does not implicitly {@link gamesvr.TrialRespectStartRes.verify|verify} messages.
         * @param message TrialRespectStartRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectStartRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectStartRes message, length delimited. Does not implicitly {@link gamesvr.TrialRespectStartRes.verify|verify} messages.
         * @param message TrialRespectStartRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectStartRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectStartRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectStartRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectStartRes;

        /**
         * Decodes a TrialRespectStartRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectStartRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectStartRes;

        /**
         * Verifies a TrialRespectStartRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectStartRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectStartRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectStartRes;

        /**
         * Creates a plain object from a TrialRespectStartRes message. Also converts values to other types if specified.
         * @param message TrialRespectStartRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectStartRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectStartRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectChangeEnemyReq. */
    interface ITrialRespectChangeEnemyReq {
    }

    /** Represents a TrialRespectChangeEnemyReq. */
    class TrialRespectChangeEnemyReq implements ITrialRespectChangeEnemyReq {

        /**
         * Constructs a new TrialRespectChangeEnemyReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectChangeEnemyReq);

        /**
         * Creates a new TrialRespectChangeEnemyReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectChangeEnemyReq instance
         */
        public static create(properties?: gamesvr.ITrialRespectChangeEnemyReq): gamesvr.TrialRespectChangeEnemyReq;

        /**
         * Encodes the specified TrialRespectChangeEnemyReq message. Does not implicitly {@link gamesvr.TrialRespectChangeEnemyReq.verify|verify} messages.
         * @param message TrialRespectChangeEnemyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectChangeEnemyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectChangeEnemyReq message, length delimited. Does not implicitly {@link gamesvr.TrialRespectChangeEnemyReq.verify|verify} messages.
         * @param message TrialRespectChangeEnemyReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectChangeEnemyReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectChangeEnemyReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectChangeEnemyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectChangeEnemyReq;

        /**
         * Decodes a TrialRespectChangeEnemyReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectChangeEnemyReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectChangeEnemyReq;

        /**
         * Verifies a TrialRespectChangeEnemyReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectChangeEnemyReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectChangeEnemyReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectChangeEnemyReq;

        /**
         * Creates a plain object from a TrialRespectChangeEnemyReq message. Also converts values to other types if specified.
         * @param message TrialRespectChangeEnemyReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectChangeEnemyReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectChangeEnemyReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectChangeEnemyRes. */
    interface ITrialRespectChangeEnemyRes {

        /** TrialRespectChangeEnemyRes Monsters */
        Monsters?: (data.ITrialRoleInfo[]|null);
    }

    /** Represents a TrialRespectChangeEnemyRes. */
    class TrialRespectChangeEnemyRes implements ITrialRespectChangeEnemyRes {

        /**
         * Constructs a new TrialRespectChangeEnemyRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectChangeEnemyRes);

        /** TrialRespectChangeEnemyRes Monsters. */
        public Monsters: data.ITrialRoleInfo[];

        /**
         * Creates a new TrialRespectChangeEnemyRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectChangeEnemyRes instance
         */
        public static create(properties?: gamesvr.ITrialRespectChangeEnemyRes): gamesvr.TrialRespectChangeEnemyRes;

        /**
         * Encodes the specified TrialRespectChangeEnemyRes message. Does not implicitly {@link gamesvr.TrialRespectChangeEnemyRes.verify|verify} messages.
         * @param message TrialRespectChangeEnemyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectChangeEnemyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectChangeEnemyRes message, length delimited. Does not implicitly {@link gamesvr.TrialRespectChangeEnemyRes.verify|verify} messages.
         * @param message TrialRespectChangeEnemyRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectChangeEnemyRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectChangeEnemyRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectChangeEnemyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectChangeEnemyRes;

        /**
         * Decodes a TrialRespectChangeEnemyRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectChangeEnemyRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectChangeEnemyRes;

        /**
         * Verifies a TrialRespectChangeEnemyRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectChangeEnemyRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectChangeEnemyRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectChangeEnemyRes;

        /**
         * Creates a plain object from a TrialRespectChangeEnemyRes message. Also converts values to other types if specified.
         * @param message TrialRespectChangeEnemyRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectChangeEnemyRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectChangeEnemyRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectRewardReq. */
    interface ITrialRespectRewardReq {

        /** TrialRespectRewardReq RewardID */
        RewardID?: (number|null);
    }

    /** Represents a TrialRespectRewardReq. */
    class TrialRespectRewardReq implements ITrialRespectRewardReq {

        /**
         * Constructs a new TrialRespectRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectRewardReq);

        /** TrialRespectRewardReq RewardID. */
        public RewardID: number;

        /**
         * Creates a new TrialRespectRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectRewardReq instance
         */
        public static create(properties?: gamesvr.ITrialRespectRewardReq): gamesvr.TrialRespectRewardReq;

        /**
         * Encodes the specified TrialRespectRewardReq message. Does not implicitly {@link gamesvr.TrialRespectRewardReq.verify|verify} messages.
         * @param message TrialRespectRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectRewardReq message, length delimited. Does not implicitly {@link gamesvr.TrialRespectRewardReq.verify|verify} messages.
         * @param message TrialRespectRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectRewardReq;

        /**
         * Decodes a TrialRespectRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectRewardReq;

        /**
         * Verifies a TrialRespectRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectRewardReq;

        /**
         * Creates a plain object from a TrialRespectRewardReq message. Also converts values to other types if specified.
         * @param message TrialRespectRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectRewardRes. */
    interface ITrialRespectRewardRes {

        /** TrialRespectRewardRes RewardRecords */
        RewardRecords?: (number[]|null);
    }

    /** Represents a TrialRespectRewardRes. */
    class TrialRespectRewardRes implements ITrialRespectRewardRes {

        /**
         * Constructs a new TrialRespectRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectRewardRes);

        /** TrialRespectRewardRes RewardRecords. */
        public RewardRecords: number[];

        /**
         * Creates a new TrialRespectRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectRewardRes instance
         */
        public static create(properties?: gamesvr.ITrialRespectRewardRes): gamesvr.TrialRespectRewardRes;

        /**
         * Encodes the specified TrialRespectRewardRes message. Does not implicitly {@link gamesvr.TrialRespectRewardRes.verify|verify} messages.
         * @param message TrialRespectRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectRewardRes message, length delimited. Does not implicitly {@link gamesvr.TrialRespectRewardRes.verify|verify} messages.
         * @param message TrialRespectRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectRewardRes;

        /**
         * Decodes a TrialRespectRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectRewardRes;

        /**
         * Verifies a TrialRespectRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectRewardRes;

        /**
         * Creates a plain object from a TrialRespectRewardRes message. Also converts values to other types if specified.
         * @param message TrialRespectRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectRewardAllReq. */
    interface ITrialRespectRewardAllReq {
    }

    /** Represents a TrialRespectRewardAllReq. */
    class TrialRespectRewardAllReq implements ITrialRespectRewardAllReq {

        /**
         * Constructs a new TrialRespectRewardAllReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectRewardAllReq);

        /**
         * Creates a new TrialRespectRewardAllReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectRewardAllReq instance
         */
        public static create(properties?: gamesvr.ITrialRespectRewardAllReq): gamesvr.TrialRespectRewardAllReq;

        /**
         * Encodes the specified TrialRespectRewardAllReq message. Does not implicitly {@link gamesvr.TrialRespectRewardAllReq.verify|verify} messages.
         * @param message TrialRespectRewardAllReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectRewardAllReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectRewardAllReq message, length delimited. Does not implicitly {@link gamesvr.TrialRespectRewardAllReq.verify|verify} messages.
         * @param message TrialRespectRewardAllReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectRewardAllReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectRewardAllReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectRewardAllReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectRewardAllReq;

        /**
         * Decodes a TrialRespectRewardAllReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectRewardAllReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectRewardAllReq;

        /**
         * Verifies a TrialRespectRewardAllReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectRewardAllReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectRewardAllReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectRewardAllReq;

        /**
         * Creates a plain object from a TrialRespectRewardAllReq message. Also converts values to other types if specified.
         * @param message TrialRespectRewardAllReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectRewardAllReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectRewardAllReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectRewardAllRes. */
    interface ITrialRespectRewardAllRes {

        /** TrialRespectRewardAllRes RewardRecords */
        RewardRecords?: (number[]|null);
    }

    /** Represents a TrialRespectRewardAllRes. */
    class TrialRespectRewardAllRes implements ITrialRespectRewardAllRes {

        /**
         * Constructs a new TrialRespectRewardAllRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectRewardAllRes);

        /** TrialRespectRewardAllRes RewardRecords. */
        public RewardRecords: number[];

        /**
         * Creates a new TrialRespectRewardAllRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectRewardAllRes instance
         */
        public static create(properties?: gamesvr.ITrialRespectRewardAllRes): gamesvr.TrialRespectRewardAllRes;

        /**
         * Encodes the specified TrialRespectRewardAllRes message. Does not implicitly {@link gamesvr.TrialRespectRewardAllRes.verify|verify} messages.
         * @param message TrialRespectRewardAllRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectRewardAllRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectRewardAllRes message, length delimited. Does not implicitly {@link gamesvr.TrialRespectRewardAllRes.verify|verify} messages.
         * @param message TrialRespectRewardAllRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectRewardAllRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectRewardAllRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectRewardAllRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectRewardAllRes;

        /**
         * Decodes a TrialRespectRewardAllRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectRewardAllRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectRewardAllRes;

        /**
         * Verifies a TrialRespectRewardAllRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectRewardAllRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectRewardAllRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectRewardAllRes;

        /**
         * Creates a plain object from a TrialRespectRewardAllRes message. Also converts values to other types if specified.
         * @param message TrialRespectRewardAllRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectRewardAllRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectRewardAllRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectEnterPveReq. */
    interface ITrialRespectEnterPveReq {

        /** TrialRespectEnterPveReq MonsterID */
        MonsterID?: (number|null);

        /** TrialRespectEnterPveReq HeroID */
        HeroID?: (number|null);
    }

    /** Represents a TrialRespectEnterPveReq. */
    class TrialRespectEnterPveReq implements ITrialRespectEnterPveReq {

        /**
         * Constructs a new TrialRespectEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectEnterPveReq);

        /** TrialRespectEnterPveReq MonsterID. */
        public MonsterID: number;

        /** TrialRespectEnterPveReq HeroID. */
        public HeroID: number;

        /**
         * Creates a new TrialRespectEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialRespectEnterPveReq): gamesvr.TrialRespectEnterPveReq;

        /**
         * Encodes the specified TrialRespectEnterPveReq message. Does not implicitly {@link gamesvr.TrialRespectEnterPveReq.verify|verify} messages.
         * @param message TrialRespectEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialRespectEnterPveReq.verify|verify} messages.
         * @param message TrialRespectEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectEnterPveReq;

        /**
         * Decodes a TrialRespectEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectEnterPveReq;

        /**
         * Verifies a TrialRespectEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectEnterPveReq;

        /**
         * Creates a plain object from a TrialRespectEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialRespectEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectEnterPveRes. */
    interface ITrialRespectEnterPveRes {

        /** TrialRespectEnterPveRes Progress */
        Progress?: (number|null);

        /** TrialRespectEnterPveRes Pass */
        Pass?: (boolean|null);

        /** TrialRespectEnterPveRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialRespectEnterPveRes Monsters */
        Monsters?: (data.ITrialRoleInfo[]|null);

        /** TrialRespectEnterPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** TrialRespectEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialRespectEnterPveRes. */
    class TrialRespectEnterPveRes implements ITrialRespectEnterPveRes {

        /**
         * Constructs a new TrialRespectEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectEnterPveRes);

        /** TrialRespectEnterPveRes Progress. */
        public Progress: number;

        /** TrialRespectEnterPveRes Pass. */
        public Pass: boolean;

        /** TrialRespectEnterPveRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialRespectEnterPveRes Monsters. */
        public Monsters: data.ITrialRoleInfo[];

        /** TrialRespectEnterPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** TrialRespectEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialRespectEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialRespectEnterPveRes): gamesvr.TrialRespectEnterPveRes;

        /**
         * Encodes the specified TrialRespectEnterPveRes message. Does not implicitly {@link gamesvr.TrialRespectEnterPveRes.verify|verify} messages.
         * @param message TrialRespectEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialRespectEnterPveRes.verify|verify} messages.
         * @param message TrialRespectEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectEnterPveRes;

        /**
         * Decodes a TrialRespectEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectEnterPveRes;

        /**
         * Verifies a TrialRespectEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectEnterPveRes;

        /**
         * Creates a plain object from a TrialRespectEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialRespectEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectPurchaseReq. */
    interface ITrialRespectPurchaseReq {

        /** TrialRespectPurchaseReq ShopID */
        ShopID?: (number|null);
    }

    /** Represents a TrialRespectPurchaseReq. */
    class TrialRespectPurchaseReq implements ITrialRespectPurchaseReq {

        /**
         * Constructs a new TrialRespectPurchaseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectPurchaseReq);

        /** TrialRespectPurchaseReq ShopID. */
        public ShopID: number;

        /**
         * Creates a new TrialRespectPurchaseReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectPurchaseReq instance
         */
        public static create(properties?: gamesvr.ITrialRespectPurchaseReq): gamesvr.TrialRespectPurchaseReq;

        /**
         * Encodes the specified TrialRespectPurchaseReq message. Does not implicitly {@link gamesvr.TrialRespectPurchaseReq.verify|verify} messages.
         * @param message TrialRespectPurchaseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectPurchaseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectPurchaseReq message, length delimited. Does not implicitly {@link gamesvr.TrialRespectPurchaseReq.verify|verify} messages.
         * @param message TrialRespectPurchaseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectPurchaseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectPurchaseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectPurchaseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectPurchaseReq;

        /**
         * Decodes a TrialRespectPurchaseReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectPurchaseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectPurchaseReq;

        /**
         * Verifies a TrialRespectPurchaseReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectPurchaseReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectPurchaseReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectPurchaseReq;

        /**
         * Creates a plain object from a TrialRespectPurchaseReq message. Also converts values to other types if specified.
         * @param message TrialRespectPurchaseReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectPurchaseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectPurchaseReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialRespectPurchaseRes. */
    interface ITrialRespectPurchaseRes {

        /** TrialRespectPurchaseRes Items */
        Items?: (data.IRespectShopInfo[]|null);
    }

    /** Represents a TrialRespectPurchaseRes. */
    class TrialRespectPurchaseRes implements ITrialRespectPurchaseRes {

        /**
         * Constructs a new TrialRespectPurchaseRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialRespectPurchaseRes);

        /** TrialRespectPurchaseRes Items. */
        public Items: data.IRespectShopInfo[];

        /**
         * Creates a new TrialRespectPurchaseRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialRespectPurchaseRes instance
         */
        public static create(properties?: gamesvr.ITrialRespectPurchaseRes): gamesvr.TrialRespectPurchaseRes;

        /**
         * Encodes the specified TrialRespectPurchaseRes message. Does not implicitly {@link gamesvr.TrialRespectPurchaseRes.verify|verify} messages.
         * @param message TrialRespectPurchaseRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialRespectPurchaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialRespectPurchaseRes message, length delimited. Does not implicitly {@link gamesvr.TrialRespectPurchaseRes.verify|verify} messages.
         * @param message TrialRespectPurchaseRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialRespectPurchaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialRespectPurchaseRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialRespectPurchaseRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialRespectPurchaseRes;

        /**
         * Decodes a TrialRespectPurchaseRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialRespectPurchaseRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialRespectPurchaseRes;

        /**
         * Verifies a TrialRespectPurchaseRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialRespectPurchaseRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialRespectPurchaseRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialRespectPurchaseRes;

        /**
         * Creates a plain object from a TrialRespectPurchaseRes message. Also converts values to other types if specified.
         * @param message TrialRespectPurchaseRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialRespectPurchaseRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialRespectPurchaseRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryReliveReq. */
    interface ITrialPurgatoryReliveReq {
    }

    /** Represents a TrialPurgatoryReliveReq. */
    class TrialPurgatoryReliveReq implements ITrialPurgatoryReliveReq {

        /**
         * Constructs a new TrialPurgatoryReliveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryReliveReq);

        /**
         * Creates a new TrialPurgatoryReliveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryReliveReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryReliveReq): gamesvr.TrialPurgatoryReliveReq;

        /**
         * Encodes the specified TrialPurgatoryReliveReq message. Does not implicitly {@link gamesvr.TrialPurgatoryReliveReq.verify|verify} messages.
         * @param message TrialPurgatoryReliveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryReliveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryReliveReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryReliveReq.verify|verify} messages.
         * @param message TrialPurgatoryReliveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryReliveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryReliveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryReliveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryReliveReq;

        /**
         * Decodes a TrialPurgatoryReliveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryReliveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryReliveReq;

        /**
         * Verifies a TrialPurgatoryReliveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryReliveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryReliveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryReliveReq;

        /**
         * Creates a plain object from a TrialPurgatoryReliveReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryReliveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryReliveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryReliveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryReliveRes. */
    interface ITrialPurgatoryReliveRes {

        /** TrialPurgatoryReliveRes FreeReliveTime */
        FreeReliveTime?: (number|Long|null);

        /** TrialPurgatoryReliveRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);
    }

    /** Represents a TrialPurgatoryReliveRes. */
    class TrialPurgatoryReliveRes implements ITrialPurgatoryReliveRes {

        /**
         * Constructs a new TrialPurgatoryReliveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryReliveRes);

        /** TrialPurgatoryReliveRes FreeReliveTime. */
        public FreeReliveTime: (number|Long);

        /** TrialPurgatoryReliveRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /**
         * Creates a new TrialPurgatoryReliveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryReliveRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryReliveRes): gamesvr.TrialPurgatoryReliveRes;

        /**
         * Encodes the specified TrialPurgatoryReliveRes message. Does not implicitly {@link gamesvr.TrialPurgatoryReliveRes.verify|verify} messages.
         * @param message TrialPurgatoryReliveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryReliveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryReliveRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryReliveRes.verify|verify} messages.
         * @param message TrialPurgatoryReliveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryReliveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryReliveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryReliveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryReliveRes;

        /**
         * Decodes a TrialPurgatoryReliveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryReliveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryReliveRes;

        /**
         * Verifies a TrialPurgatoryReliveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryReliveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryReliveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryReliveRes;

        /**
         * Creates a plain object from a TrialPurgatoryReliveRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryReliveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryReliveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryReliveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryEnterPveReq. */
    interface ITrialPurgatoryEnterPveReq {

        /** TrialPurgatoryEnterPveReq PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryEnterPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialPurgatoryEnterPveReq. */
    class TrialPurgatoryEnterPveReq implements ITrialPurgatoryEnterPveReq {

        /**
         * Constructs a new TrialPurgatoryEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryEnterPveReq);

        /** TrialPurgatoryEnterPveReq PointUID. */
        public PointUID: number;

        /** TrialPurgatoryEnterPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialPurgatoryEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryEnterPveReq): gamesvr.TrialPurgatoryEnterPveReq;

        /**
         * Encodes the specified TrialPurgatoryEnterPveReq message. Does not implicitly {@link gamesvr.TrialPurgatoryEnterPveReq.verify|verify} messages.
         * @param message TrialPurgatoryEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryEnterPveReq.verify|verify} messages.
         * @param message TrialPurgatoryEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryEnterPveReq;

        /**
         * Decodes a TrialPurgatoryEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryEnterPveReq;

        /**
         * Verifies a TrialPurgatoryEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryEnterPveReq;

        /**
         * Creates a plain object from a TrialPurgatoryEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryEnterPveRes. */
    interface ITrialPurgatoryEnterPveRes {

        /** TrialPurgatoryEnterPveRes PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryEnterPveRes Pass */
        Pass?: (boolean|null);

        /** TrialPurgatoryEnterPveRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialPurgatoryEnterPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** TrialPurgatoryEnterPveRes Point */
        Point?: (data.ITrialPointInfo|null);

        /** TrialPurgatoryEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialPurgatoryEnterPveRes. */
    class TrialPurgatoryEnterPveRes implements ITrialPurgatoryEnterPveRes {

        /**
         * Constructs a new TrialPurgatoryEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryEnterPveRes);

        /** TrialPurgatoryEnterPveRes PointUID. */
        public PointUID: number;

        /** TrialPurgatoryEnterPveRes Pass. */
        public Pass: boolean;

        /** TrialPurgatoryEnterPveRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialPurgatoryEnterPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** TrialPurgatoryEnterPveRes Point. */
        public Point?: (data.ITrialPointInfo|null);

        /** TrialPurgatoryEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialPurgatoryEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryEnterPveRes): gamesvr.TrialPurgatoryEnterPveRes;

        /**
         * Encodes the specified TrialPurgatoryEnterPveRes message. Does not implicitly {@link gamesvr.TrialPurgatoryEnterPveRes.verify|verify} messages.
         * @param message TrialPurgatoryEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryEnterPveRes.verify|verify} messages.
         * @param message TrialPurgatoryEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryEnterPveRes;

        /**
         * Decodes a TrialPurgatoryEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryEnterPveRes;

        /**
         * Verifies a TrialPurgatoryEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryEnterPveRes;

        /**
         * Creates a plain object from a TrialPurgatoryEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryPurchaseReq. */
    interface ITrialPurgatoryPurchaseReq {

        /** TrialPurgatoryPurchaseReq PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryPurchaseReq BuyOrGiveUp */
        BuyOrGiveUp?: (boolean|null);
    }

    /** Represents a TrialPurgatoryPurchaseReq. */
    class TrialPurgatoryPurchaseReq implements ITrialPurgatoryPurchaseReq {

        /**
         * Constructs a new TrialPurgatoryPurchaseReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryPurchaseReq);

        /** TrialPurgatoryPurchaseReq PointUID. */
        public PointUID: number;

        /** TrialPurgatoryPurchaseReq BuyOrGiveUp. */
        public BuyOrGiveUp: boolean;

        /**
         * Creates a new TrialPurgatoryPurchaseReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryPurchaseReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryPurchaseReq): gamesvr.TrialPurgatoryPurchaseReq;

        /**
         * Encodes the specified TrialPurgatoryPurchaseReq message. Does not implicitly {@link gamesvr.TrialPurgatoryPurchaseReq.verify|verify} messages.
         * @param message TrialPurgatoryPurchaseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryPurchaseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryPurchaseReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryPurchaseReq.verify|verify} messages.
         * @param message TrialPurgatoryPurchaseReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryPurchaseReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryPurchaseReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryPurchaseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryPurchaseReq;

        /**
         * Decodes a TrialPurgatoryPurchaseReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryPurchaseReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryPurchaseReq;

        /**
         * Verifies a TrialPurgatoryPurchaseReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryPurchaseReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryPurchaseReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryPurchaseReq;

        /**
         * Creates a plain object from a TrialPurgatoryPurchaseReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryPurchaseReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryPurchaseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryPurchaseReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryPurchaseRes. */
    interface ITrialPurgatoryPurchaseRes {

        /** TrialPurgatoryPurchaseRes PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialPurgatoryPurchaseRes. */
    class TrialPurgatoryPurchaseRes implements ITrialPurgatoryPurchaseRes {

        /**
         * Constructs a new TrialPurgatoryPurchaseRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryPurchaseRes);

        /** TrialPurgatoryPurchaseRes PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialPurgatoryPurchaseRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryPurchaseRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryPurchaseRes): gamesvr.TrialPurgatoryPurchaseRes;

        /**
         * Encodes the specified TrialPurgatoryPurchaseRes message. Does not implicitly {@link gamesvr.TrialPurgatoryPurchaseRes.verify|verify} messages.
         * @param message TrialPurgatoryPurchaseRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryPurchaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryPurchaseRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryPurchaseRes.verify|verify} messages.
         * @param message TrialPurgatoryPurchaseRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryPurchaseRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryPurchaseRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryPurchaseRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryPurchaseRes;

        /**
         * Decodes a TrialPurgatoryPurchaseRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryPurchaseRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryPurchaseRes;

        /**
         * Verifies a TrialPurgatoryPurchaseRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryPurchaseRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryPurchaseRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryPurchaseRes;

        /**
         * Creates a plain object from a TrialPurgatoryPurchaseRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryPurchaseRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryPurchaseRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryPurchaseRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryLiveAltarReq. */
    interface ITrialPurgatoryLiveAltarReq {

        /** TrialPurgatoryLiveAltarReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialPurgatoryLiveAltarReq. */
    class TrialPurgatoryLiveAltarReq implements ITrialPurgatoryLiveAltarReq {

        /**
         * Constructs a new TrialPurgatoryLiveAltarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryLiveAltarReq);

        /** TrialPurgatoryLiveAltarReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialPurgatoryLiveAltarReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryLiveAltarReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryLiveAltarReq): gamesvr.TrialPurgatoryLiveAltarReq;

        /**
         * Encodes the specified TrialPurgatoryLiveAltarReq message. Does not implicitly {@link gamesvr.TrialPurgatoryLiveAltarReq.verify|verify} messages.
         * @param message TrialPurgatoryLiveAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryLiveAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryLiveAltarReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryLiveAltarReq.verify|verify} messages.
         * @param message TrialPurgatoryLiveAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryLiveAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryLiveAltarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryLiveAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryLiveAltarReq;

        /**
         * Decodes a TrialPurgatoryLiveAltarReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryLiveAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryLiveAltarReq;

        /**
         * Verifies a TrialPurgatoryLiveAltarReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryLiveAltarReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryLiveAltarReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryLiveAltarReq;

        /**
         * Creates a plain object from a TrialPurgatoryLiveAltarReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryLiveAltarReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryLiveAltarReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryLiveAltarReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryLiveAltarRes. */
    interface ITrialPurgatoryLiveAltarRes {

        /** TrialPurgatoryLiveAltarRes PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryLiveAltarRes Hero */
        Hero?: (data.ITrialRoleInfo|null);
    }

    /** Represents a TrialPurgatoryLiveAltarRes. */
    class TrialPurgatoryLiveAltarRes implements ITrialPurgatoryLiveAltarRes {

        /**
         * Constructs a new TrialPurgatoryLiveAltarRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryLiveAltarRes);

        /** TrialPurgatoryLiveAltarRes PointUID. */
        public PointUID: number;

        /** TrialPurgatoryLiveAltarRes Hero. */
        public Hero?: (data.ITrialRoleInfo|null);

        /**
         * Creates a new TrialPurgatoryLiveAltarRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryLiveAltarRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryLiveAltarRes): gamesvr.TrialPurgatoryLiveAltarRes;

        /**
         * Encodes the specified TrialPurgatoryLiveAltarRes message. Does not implicitly {@link gamesvr.TrialPurgatoryLiveAltarRes.verify|verify} messages.
         * @param message TrialPurgatoryLiveAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryLiveAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryLiveAltarRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryLiveAltarRes.verify|verify} messages.
         * @param message TrialPurgatoryLiveAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryLiveAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryLiveAltarRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryLiveAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryLiveAltarRes;

        /**
         * Decodes a TrialPurgatoryLiveAltarRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryLiveAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryLiveAltarRes;

        /**
         * Verifies a TrialPurgatoryLiveAltarRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryLiveAltarRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryLiveAltarRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryLiveAltarRes;

        /**
         * Creates a plain object from a TrialPurgatoryLiveAltarRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryLiveAltarRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryLiveAltarRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryLiveAltarRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryHpAltarReq. */
    interface ITrialPurgatoryHpAltarReq {

        /** TrialPurgatoryHpAltarReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialPurgatoryHpAltarReq. */
    class TrialPurgatoryHpAltarReq implements ITrialPurgatoryHpAltarReq {

        /**
         * Constructs a new TrialPurgatoryHpAltarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryHpAltarReq);

        /** TrialPurgatoryHpAltarReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialPurgatoryHpAltarReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryHpAltarReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryHpAltarReq): gamesvr.TrialPurgatoryHpAltarReq;

        /**
         * Encodes the specified TrialPurgatoryHpAltarReq message. Does not implicitly {@link gamesvr.TrialPurgatoryHpAltarReq.verify|verify} messages.
         * @param message TrialPurgatoryHpAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryHpAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryHpAltarReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryHpAltarReq.verify|verify} messages.
         * @param message TrialPurgatoryHpAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryHpAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryHpAltarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryHpAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryHpAltarReq;

        /**
         * Decodes a TrialPurgatoryHpAltarReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryHpAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryHpAltarReq;

        /**
         * Verifies a TrialPurgatoryHpAltarReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryHpAltarReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryHpAltarReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryHpAltarReq;

        /**
         * Creates a plain object from a TrialPurgatoryHpAltarReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryHpAltarReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryHpAltarReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryHpAltarReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryHpAltarRes. */
    interface ITrialPurgatoryHpAltarRes {

        /** TrialPurgatoryHpAltarRes PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryHpAltarRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);
    }

    /** Represents a TrialPurgatoryHpAltarRes. */
    class TrialPurgatoryHpAltarRes implements ITrialPurgatoryHpAltarRes {

        /**
         * Constructs a new TrialPurgatoryHpAltarRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryHpAltarRes);

        /** TrialPurgatoryHpAltarRes PointUID. */
        public PointUID: number;

        /** TrialPurgatoryHpAltarRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /**
         * Creates a new TrialPurgatoryHpAltarRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryHpAltarRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryHpAltarRes): gamesvr.TrialPurgatoryHpAltarRes;

        /**
         * Encodes the specified TrialPurgatoryHpAltarRes message. Does not implicitly {@link gamesvr.TrialPurgatoryHpAltarRes.verify|verify} messages.
         * @param message TrialPurgatoryHpAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryHpAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryHpAltarRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryHpAltarRes.verify|verify} messages.
         * @param message TrialPurgatoryHpAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryHpAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryHpAltarRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryHpAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryHpAltarRes;

        /**
         * Decodes a TrialPurgatoryHpAltarRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryHpAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryHpAltarRes;

        /**
         * Verifies a TrialPurgatoryHpAltarRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryHpAltarRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryHpAltarRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryHpAltarRes;

        /**
         * Creates a plain object from a TrialPurgatoryHpAltarRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryHpAltarRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryHpAltarRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryHpAltarRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryTransgateReq. */
    interface ITrialPurgatoryTransgateReq {

        /** TrialPurgatoryTransgateReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialPurgatoryTransgateReq. */
    class TrialPurgatoryTransgateReq implements ITrialPurgatoryTransgateReq {

        /**
         * Constructs a new TrialPurgatoryTransgateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryTransgateReq);

        /** TrialPurgatoryTransgateReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialPurgatoryTransgateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryTransgateReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryTransgateReq): gamesvr.TrialPurgatoryTransgateReq;

        /**
         * Encodes the specified TrialPurgatoryTransgateReq message. Does not implicitly {@link gamesvr.TrialPurgatoryTransgateReq.verify|verify} messages.
         * @param message TrialPurgatoryTransgateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryTransgateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryTransgateReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryTransgateReq.verify|verify} messages.
         * @param message TrialPurgatoryTransgateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryTransgateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryTransgateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryTransgateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryTransgateReq;

        /**
         * Decodes a TrialPurgatoryTransgateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryTransgateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryTransgateReq;

        /**
         * Verifies a TrialPurgatoryTransgateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryTransgateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryTransgateReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryTransgateReq;

        /**
         * Creates a plain object from a TrialPurgatoryTransgateReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryTransgateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryTransgateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryTransgateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryTransgateRes. */
    interface ITrialPurgatoryTransgateRes {

        /** TrialPurgatoryTransgateRes PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryTransgateRes Progress */
        Progress?: (number|null);

        /** TrialPurgatoryTransgateRes RefresTime */
        RefresTime?: (number|Long|null);

        /** TrialPurgatoryTransgateRes Points */
        Points?: (data.ITrialPointInfo[]|null);

        /** TrialPurgatoryTransgateRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialPurgatoryTransgateRes BuffList */
        BuffList?: (number[]|null);
    }

    /** Represents a TrialPurgatoryTransgateRes. */
    class TrialPurgatoryTransgateRes implements ITrialPurgatoryTransgateRes {

        /**
         * Constructs a new TrialPurgatoryTransgateRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryTransgateRes);

        /** TrialPurgatoryTransgateRes PointUID. */
        public PointUID: number;

        /** TrialPurgatoryTransgateRes Progress. */
        public Progress: number;

        /** TrialPurgatoryTransgateRes RefresTime. */
        public RefresTime: (number|Long);

        /** TrialPurgatoryTransgateRes Points. */
        public Points: data.ITrialPointInfo[];

        /** TrialPurgatoryTransgateRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialPurgatoryTransgateRes BuffList. */
        public BuffList: number[];

        /**
         * Creates a new TrialPurgatoryTransgateRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryTransgateRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryTransgateRes): gamesvr.TrialPurgatoryTransgateRes;

        /**
         * Encodes the specified TrialPurgatoryTransgateRes message. Does not implicitly {@link gamesvr.TrialPurgatoryTransgateRes.verify|verify} messages.
         * @param message TrialPurgatoryTransgateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryTransgateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryTransgateRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryTransgateRes.verify|verify} messages.
         * @param message TrialPurgatoryTransgateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryTransgateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryTransgateRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryTransgateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryTransgateRes;

        /**
         * Decodes a TrialPurgatoryTransgateRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryTransgateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryTransgateRes;

        /**
         * Verifies a TrialPurgatoryTransgateRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryTransgateRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryTransgateRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryTransgateRes;

        /**
         * Creates a plain object from a TrialPurgatoryTransgateRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryTransgateRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryTransgateRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryTransgateRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryUnmaskReq. */
    interface ITrialPurgatoryUnmaskReq {

        /** TrialPurgatoryUnmaskReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialPurgatoryUnmaskReq. */
    class TrialPurgatoryUnmaskReq implements ITrialPurgatoryUnmaskReq {

        /**
         * Constructs a new TrialPurgatoryUnmaskReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryUnmaskReq);

        /** TrialPurgatoryUnmaskReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialPurgatoryUnmaskReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryUnmaskReq instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryUnmaskReq): gamesvr.TrialPurgatoryUnmaskReq;

        /**
         * Encodes the specified TrialPurgatoryUnmaskReq message. Does not implicitly {@link gamesvr.TrialPurgatoryUnmaskReq.verify|verify} messages.
         * @param message TrialPurgatoryUnmaskReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryUnmaskReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryUnmaskReq message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryUnmaskReq.verify|verify} messages.
         * @param message TrialPurgatoryUnmaskReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryUnmaskReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryUnmaskReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryUnmaskReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryUnmaskReq;

        /**
         * Decodes a TrialPurgatoryUnmaskReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryUnmaskReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryUnmaskReq;

        /**
         * Verifies a TrialPurgatoryUnmaskReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryUnmaskReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryUnmaskReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryUnmaskReq;

        /**
         * Creates a plain object from a TrialPurgatoryUnmaskReq message. Also converts values to other types if specified.
         * @param message TrialPurgatoryUnmaskReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryUnmaskReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryUnmaskReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialPurgatoryUnmaskRes. */
    interface ITrialPurgatoryUnmaskRes {

        /** TrialPurgatoryUnmaskRes PointUID */
        PointUID?: (number|null);

        /** TrialPurgatoryUnmaskRes TriggerEvent */
        TriggerEvent?: (boolean|null);

        /** TrialPurgatoryUnmaskRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** TrialPurgatoryUnmaskRes BuffID */
        BuffID?: (number|null);

        /** TrialPurgatoryUnmaskRes PreViewPoints */
        PreViewPoints?: (number[]|null);

        /** TrialPurgatoryUnmaskRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialPurgatoryUnmaskRes RemovePoints */
        RemovePoints?: (number[]|null);
    }

    /** Represents a TrialPurgatoryUnmaskRes. */
    class TrialPurgatoryUnmaskRes implements ITrialPurgatoryUnmaskRes {

        /**
         * Constructs a new TrialPurgatoryUnmaskRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialPurgatoryUnmaskRes);

        /** TrialPurgatoryUnmaskRes PointUID. */
        public PointUID: number;

        /** TrialPurgatoryUnmaskRes TriggerEvent. */
        public TriggerEvent: boolean;

        /** TrialPurgatoryUnmaskRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** TrialPurgatoryUnmaskRes BuffID. */
        public BuffID: number;

        /** TrialPurgatoryUnmaskRes PreViewPoints. */
        public PreViewPoints: number[];

        /** TrialPurgatoryUnmaskRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialPurgatoryUnmaskRes RemovePoints. */
        public RemovePoints: number[];

        /**
         * Creates a new TrialPurgatoryUnmaskRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialPurgatoryUnmaskRes instance
         */
        public static create(properties?: gamesvr.ITrialPurgatoryUnmaskRes): gamesvr.TrialPurgatoryUnmaskRes;

        /**
         * Encodes the specified TrialPurgatoryUnmaskRes message. Does not implicitly {@link gamesvr.TrialPurgatoryUnmaskRes.verify|verify} messages.
         * @param message TrialPurgatoryUnmaskRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialPurgatoryUnmaskRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialPurgatoryUnmaskRes message, length delimited. Does not implicitly {@link gamesvr.TrialPurgatoryUnmaskRes.verify|verify} messages.
         * @param message TrialPurgatoryUnmaskRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialPurgatoryUnmaskRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialPurgatoryUnmaskRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialPurgatoryUnmaskRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialPurgatoryUnmaskRes;

        /**
         * Decodes a TrialPurgatoryUnmaskRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialPurgatoryUnmaskRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialPurgatoryUnmaskRes;

        /**
         * Verifies a TrialPurgatoryUnmaskRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialPurgatoryUnmaskRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialPurgatoryUnmaskRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialPurgatoryUnmaskRes;

        /**
         * Creates a plain object from a TrialPurgatoryUnmaskRes message. Also converts values to other types if specified.
         * @param message TrialPurgatoryUnmaskRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialPurgatoryUnmaskRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialPurgatoryUnmaskRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheatFinishTrialPurgatoryReq. */
    interface ICheatFinishTrialPurgatoryReq {

        /** CheatFinishTrialPurgatoryReq Progress */
        Progress?: (number|null);
    }

    /** Represents a CheatFinishTrialPurgatoryReq. */
    class CheatFinishTrialPurgatoryReq implements ICheatFinishTrialPurgatoryReq {

        /**
         * Constructs a new CheatFinishTrialPurgatoryReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICheatFinishTrialPurgatoryReq);

        /** CheatFinishTrialPurgatoryReq Progress. */
        public Progress: number;

        /**
         * Creates a new CheatFinishTrialPurgatoryReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheatFinishTrialPurgatoryReq instance
         */
        public static create(properties?: gamesvr.ICheatFinishTrialPurgatoryReq): gamesvr.CheatFinishTrialPurgatoryReq;

        /**
         * Encodes the specified CheatFinishTrialPurgatoryReq message. Does not implicitly {@link gamesvr.CheatFinishTrialPurgatoryReq.verify|verify} messages.
         * @param message CheatFinishTrialPurgatoryReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICheatFinishTrialPurgatoryReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheatFinishTrialPurgatoryReq message, length delimited. Does not implicitly {@link gamesvr.CheatFinishTrialPurgatoryReq.verify|verify} messages.
         * @param message CheatFinishTrialPurgatoryReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICheatFinishTrialPurgatoryReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheatFinishTrialPurgatoryReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheatFinishTrialPurgatoryReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CheatFinishTrialPurgatoryReq;

        /**
         * Decodes a CheatFinishTrialPurgatoryReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheatFinishTrialPurgatoryReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CheatFinishTrialPurgatoryReq;

        /**
         * Verifies a CheatFinishTrialPurgatoryReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheatFinishTrialPurgatoryReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheatFinishTrialPurgatoryReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CheatFinishTrialPurgatoryReq;

        /**
         * Creates a plain object from a CheatFinishTrialPurgatoryReq message. Also converts values to other types if specified.
         * @param message CheatFinishTrialPurgatoryReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CheatFinishTrialPurgatoryReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheatFinishTrialPurgatoryReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CheatFinishTrialPurgatoryRes. */
    interface ICheatFinishTrialPurgatoryRes {

        /** CheatFinishTrialPurgatoryRes TrialPurgatoryData */
        TrialPurgatoryData?: (data.ITrialPurgatoryData|null);
    }

    /** Represents a CheatFinishTrialPurgatoryRes. */
    class CheatFinishTrialPurgatoryRes implements ICheatFinishTrialPurgatoryRes {

        /**
         * Constructs a new CheatFinishTrialPurgatoryRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ICheatFinishTrialPurgatoryRes);

        /** CheatFinishTrialPurgatoryRes TrialPurgatoryData. */
        public TrialPurgatoryData?: (data.ITrialPurgatoryData|null);

        /**
         * Creates a new CheatFinishTrialPurgatoryRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheatFinishTrialPurgatoryRes instance
         */
        public static create(properties?: gamesvr.ICheatFinishTrialPurgatoryRes): gamesvr.CheatFinishTrialPurgatoryRes;

        /**
         * Encodes the specified CheatFinishTrialPurgatoryRes message. Does not implicitly {@link gamesvr.CheatFinishTrialPurgatoryRes.verify|verify} messages.
         * @param message CheatFinishTrialPurgatoryRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ICheatFinishTrialPurgatoryRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheatFinishTrialPurgatoryRes message, length delimited. Does not implicitly {@link gamesvr.CheatFinishTrialPurgatoryRes.verify|verify} messages.
         * @param message CheatFinishTrialPurgatoryRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ICheatFinishTrialPurgatoryRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheatFinishTrialPurgatoryRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheatFinishTrialPurgatoryRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.CheatFinishTrialPurgatoryRes;

        /**
         * Decodes a CheatFinishTrialPurgatoryRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheatFinishTrialPurgatoryRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.CheatFinishTrialPurgatoryRes;

        /**
         * Verifies a CheatFinishTrialPurgatoryRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheatFinishTrialPurgatoryRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheatFinishTrialPurgatoryRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.CheatFinishTrialPurgatoryRes;

        /**
         * Creates a plain object from a CheatFinishTrialPurgatoryRes message. Also converts values to other types if specified.
         * @param message CheatFinishTrialPurgatoryRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.CheatFinishTrialPurgatoryRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheatFinishTrialPurgatoryRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandReliveReq. */
    interface ITrialIslandReliveReq {
    }

    /** Represents a TrialIslandReliveReq. */
    class TrialIslandReliveReq implements ITrialIslandReliveReq {

        /**
         * Constructs a new TrialIslandReliveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandReliveReq);

        /**
         * Creates a new TrialIslandReliveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandReliveReq instance
         */
        public static create(properties?: gamesvr.ITrialIslandReliveReq): gamesvr.TrialIslandReliveReq;

        /**
         * Encodes the specified TrialIslandReliveReq message. Does not implicitly {@link gamesvr.TrialIslandReliveReq.verify|verify} messages.
         * @param message TrialIslandReliveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandReliveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandReliveReq message, length delimited. Does not implicitly {@link gamesvr.TrialIslandReliveReq.verify|verify} messages.
         * @param message TrialIslandReliveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandReliveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandReliveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandReliveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandReliveReq;

        /**
         * Decodes a TrialIslandReliveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandReliveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandReliveReq;

        /**
         * Verifies a TrialIslandReliveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandReliveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandReliveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandReliveReq;

        /**
         * Creates a plain object from a TrialIslandReliveReq message. Also converts values to other types if specified.
         * @param message TrialIslandReliveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandReliveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandReliveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandReliveRes. */
    interface ITrialIslandReliveRes {

        /** TrialIslandReliveRes FreeReliveTime */
        FreeReliveTime?: (number|Long|null);

        /** TrialIslandReliveRes FreeReliveCount */
        FreeReliveCount?: (number|null);

        /** TrialIslandReliveRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);
    }

    /** Represents a TrialIslandReliveRes. */
    class TrialIslandReliveRes implements ITrialIslandReliveRes {

        /**
         * Constructs a new TrialIslandReliveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandReliveRes);

        /** TrialIslandReliveRes FreeReliveTime. */
        public FreeReliveTime: (number|Long);

        /** TrialIslandReliveRes FreeReliveCount. */
        public FreeReliveCount: number;

        /** TrialIslandReliveRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /**
         * Creates a new TrialIslandReliveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandReliveRes instance
         */
        public static create(properties?: gamesvr.ITrialIslandReliveRes): gamesvr.TrialIslandReliveRes;

        /**
         * Encodes the specified TrialIslandReliveRes message. Does not implicitly {@link gamesvr.TrialIslandReliveRes.verify|verify} messages.
         * @param message TrialIslandReliveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandReliveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandReliveRes message, length delimited. Does not implicitly {@link gamesvr.TrialIslandReliveRes.verify|verify} messages.
         * @param message TrialIslandReliveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandReliveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandReliveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandReliveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandReliveRes;

        /**
         * Decodes a TrialIslandReliveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandReliveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandReliveRes;

        /**
         * Verifies a TrialIslandReliveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandReliveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandReliveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandReliveRes;

        /**
         * Creates a plain object from a TrialIslandReliveRes message. Also converts values to other types if specified.
         * @param message TrialIslandReliveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandReliveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandReliveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandSelectBuffReq. */
    interface ITrialIslandSelectBuffReq {

        /** TrialIslandSelectBuffReq BuffID */
        BuffID?: (number|null);
    }

    /** Represents a TrialIslandSelectBuffReq. */
    class TrialIslandSelectBuffReq implements ITrialIslandSelectBuffReq {

        /**
         * Constructs a new TrialIslandSelectBuffReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandSelectBuffReq);

        /** TrialIslandSelectBuffReq BuffID. */
        public BuffID: number;

        /**
         * Creates a new TrialIslandSelectBuffReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandSelectBuffReq instance
         */
        public static create(properties?: gamesvr.ITrialIslandSelectBuffReq): gamesvr.TrialIslandSelectBuffReq;

        /**
         * Encodes the specified TrialIslandSelectBuffReq message. Does not implicitly {@link gamesvr.TrialIslandSelectBuffReq.verify|verify} messages.
         * @param message TrialIslandSelectBuffReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandSelectBuffReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandSelectBuffReq message, length delimited. Does not implicitly {@link gamesvr.TrialIslandSelectBuffReq.verify|verify} messages.
         * @param message TrialIslandSelectBuffReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandSelectBuffReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandSelectBuffReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandSelectBuffReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandSelectBuffReq;

        /**
         * Decodes a TrialIslandSelectBuffReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandSelectBuffReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandSelectBuffReq;

        /**
         * Verifies a TrialIslandSelectBuffReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandSelectBuffReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandSelectBuffReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandSelectBuffReq;

        /**
         * Creates a plain object from a TrialIslandSelectBuffReq message. Also converts values to other types if specified.
         * @param message TrialIslandSelectBuffReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandSelectBuffReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandSelectBuffReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandSelectBuffRes. */
    interface ITrialIslandSelectBuffRes {

        /** TrialIslandSelectBuffRes BuffID */
        BuffID?: (number|null);
    }

    /** Represents a TrialIslandSelectBuffRes. */
    class TrialIslandSelectBuffRes implements ITrialIslandSelectBuffRes {

        /**
         * Constructs a new TrialIslandSelectBuffRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandSelectBuffRes);

        /** TrialIslandSelectBuffRes BuffID. */
        public BuffID: number;

        /**
         * Creates a new TrialIslandSelectBuffRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandSelectBuffRes instance
         */
        public static create(properties?: gamesvr.ITrialIslandSelectBuffRes): gamesvr.TrialIslandSelectBuffRes;

        /**
         * Encodes the specified TrialIslandSelectBuffRes message. Does not implicitly {@link gamesvr.TrialIslandSelectBuffRes.verify|verify} messages.
         * @param message TrialIslandSelectBuffRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandSelectBuffRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandSelectBuffRes message, length delimited. Does not implicitly {@link gamesvr.TrialIslandSelectBuffRes.verify|verify} messages.
         * @param message TrialIslandSelectBuffRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandSelectBuffRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandSelectBuffRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandSelectBuffRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandSelectBuffRes;

        /**
         * Decodes a TrialIslandSelectBuffRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandSelectBuffRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandSelectBuffRes;

        /**
         * Verifies a TrialIslandSelectBuffRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandSelectBuffRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandSelectBuffRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandSelectBuffRes;

        /**
         * Creates a plain object from a TrialIslandSelectBuffRes message. Also converts values to other types if specified.
         * @param message TrialIslandSelectBuffRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandSelectBuffRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandSelectBuffRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandEnterPveReq. */
    interface ITrialIslandEnterPveReq {

        /** TrialIslandEnterPveReq PointUID */
        PointUID?: (number|null);

        /** TrialIslandEnterPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialIslandEnterPveReq. */
    class TrialIslandEnterPveReq implements ITrialIslandEnterPveReq {

        /**
         * Constructs a new TrialIslandEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandEnterPveReq);

        /** TrialIslandEnterPveReq PointUID. */
        public PointUID: number;

        /** TrialIslandEnterPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialIslandEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialIslandEnterPveReq): gamesvr.TrialIslandEnterPveReq;

        /**
         * Encodes the specified TrialIslandEnterPveReq message. Does not implicitly {@link gamesvr.TrialIslandEnterPveReq.verify|verify} messages.
         * @param message TrialIslandEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialIslandEnterPveReq.verify|verify} messages.
         * @param message TrialIslandEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandEnterPveReq;

        /**
         * Decodes a TrialIslandEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandEnterPveReq;

        /**
         * Verifies a TrialIslandEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandEnterPveReq;

        /**
         * Creates a plain object from a TrialIslandEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialIslandEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandEnterPveRes. */
    interface ITrialIslandEnterPveRes {

        /** TrialIslandEnterPveRes PointUID */
        PointUID?: (number|null);

        /** TrialIslandEnterPveRes Pass */
        Pass?: (boolean|null);

        /** TrialIslandEnterPveRes Point */
        Point?: (data.ITrialPointInfo|null);

        /** TrialIslandEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** TrialIslandEnterPveRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialIslandEnterPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** TrialIslandEnterPveRes BuffList */
        BuffList?: (number[]|null);
    }

    /** Represents a TrialIslandEnterPveRes. */
    class TrialIslandEnterPveRes implements ITrialIslandEnterPveRes {

        /**
         * Constructs a new TrialIslandEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandEnterPveRes);

        /** TrialIslandEnterPveRes PointUID. */
        public PointUID: number;

        /** TrialIslandEnterPveRes Pass. */
        public Pass: boolean;

        /** TrialIslandEnterPveRes Point. */
        public Point?: (data.ITrialPointInfo|null);

        /** TrialIslandEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /** TrialIslandEnterPveRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialIslandEnterPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** TrialIslandEnterPveRes BuffList. */
        public BuffList: number[];

        /**
         * Creates a new TrialIslandEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialIslandEnterPveRes): gamesvr.TrialIslandEnterPveRes;

        /**
         * Encodes the specified TrialIslandEnterPveRes message. Does not implicitly {@link gamesvr.TrialIslandEnterPveRes.verify|verify} messages.
         * @param message TrialIslandEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialIslandEnterPveRes.verify|verify} messages.
         * @param message TrialIslandEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandEnterPveRes;

        /**
         * Decodes a TrialIslandEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandEnterPveRes;

        /**
         * Verifies a TrialIslandEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandEnterPveRes;

        /**
         * Creates a plain object from a TrialIslandEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialIslandEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandLiveAltarReq. */
    interface ITrialIslandLiveAltarReq {

        /** TrialIslandLiveAltarReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialIslandLiveAltarReq. */
    class TrialIslandLiveAltarReq implements ITrialIslandLiveAltarReq {

        /**
         * Constructs a new TrialIslandLiveAltarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandLiveAltarReq);

        /** TrialIslandLiveAltarReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialIslandLiveAltarReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandLiveAltarReq instance
         */
        public static create(properties?: gamesvr.ITrialIslandLiveAltarReq): gamesvr.TrialIslandLiveAltarReq;

        /**
         * Encodes the specified TrialIslandLiveAltarReq message. Does not implicitly {@link gamesvr.TrialIslandLiveAltarReq.verify|verify} messages.
         * @param message TrialIslandLiveAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandLiveAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandLiveAltarReq message, length delimited. Does not implicitly {@link gamesvr.TrialIslandLiveAltarReq.verify|verify} messages.
         * @param message TrialIslandLiveAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandLiveAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandLiveAltarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandLiveAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandLiveAltarReq;

        /**
         * Decodes a TrialIslandLiveAltarReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandLiveAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandLiveAltarReq;

        /**
         * Verifies a TrialIslandLiveAltarReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandLiveAltarReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandLiveAltarReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandLiveAltarReq;

        /**
         * Creates a plain object from a TrialIslandLiveAltarReq message. Also converts values to other types if specified.
         * @param message TrialIslandLiveAltarReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandLiveAltarReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandLiveAltarReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandLiveAltarRes. */
    interface ITrialIslandLiveAltarRes {

        /** TrialIslandLiveAltarRes PointUID */
        PointUID?: (number|null);

        /** TrialIslandLiveAltarRes Hero */
        Hero?: (data.ITrialRoleInfo|null);
    }

    /** Represents a TrialIslandLiveAltarRes. */
    class TrialIslandLiveAltarRes implements ITrialIslandLiveAltarRes {

        /**
         * Constructs a new TrialIslandLiveAltarRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandLiveAltarRes);

        /** TrialIslandLiveAltarRes PointUID. */
        public PointUID: number;

        /** TrialIslandLiveAltarRes Hero. */
        public Hero?: (data.ITrialRoleInfo|null);

        /**
         * Creates a new TrialIslandLiveAltarRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandLiveAltarRes instance
         */
        public static create(properties?: gamesvr.ITrialIslandLiveAltarRes): gamesvr.TrialIslandLiveAltarRes;

        /**
         * Encodes the specified TrialIslandLiveAltarRes message. Does not implicitly {@link gamesvr.TrialIslandLiveAltarRes.verify|verify} messages.
         * @param message TrialIslandLiveAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandLiveAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandLiveAltarRes message, length delimited. Does not implicitly {@link gamesvr.TrialIslandLiveAltarRes.verify|verify} messages.
         * @param message TrialIslandLiveAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandLiveAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandLiveAltarRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandLiveAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandLiveAltarRes;

        /**
         * Decodes a TrialIslandLiveAltarRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandLiveAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandLiveAltarRes;

        /**
         * Verifies a TrialIslandLiveAltarRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandLiveAltarRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandLiveAltarRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandLiveAltarRes;

        /**
         * Creates a plain object from a TrialIslandLiveAltarRes message. Also converts values to other types if specified.
         * @param message TrialIslandLiveAltarRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandLiveAltarRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandLiveAltarRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandHpAltarReq. */
    interface ITrialIslandHpAltarReq {

        /** TrialIslandHpAltarReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialIslandHpAltarReq. */
    class TrialIslandHpAltarReq implements ITrialIslandHpAltarReq {

        /**
         * Constructs a new TrialIslandHpAltarReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandHpAltarReq);

        /** TrialIslandHpAltarReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialIslandHpAltarReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandHpAltarReq instance
         */
        public static create(properties?: gamesvr.ITrialIslandHpAltarReq): gamesvr.TrialIslandHpAltarReq;

        /**
         * Encodes the specified TrialIslandHpAltarReq message. Does not implicitly {@link gamesvr.TrialIslandHpAltarReq.verify|verify} messages.
         * @param message TrialIslandHpAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandHpAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandHpAltarReq message, length delimited. Does not implicitly {@link gamesvr.TrialIslandHpAltarReq.verify|verify} messages.
         * @param message TrialIslandHpAltarReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandHpAltarReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandHpAltarReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandHpAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandHpAltarReq;

        /**
         * Decodes a TrialIslandHpAltarReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandHpAltarReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandHpAltarReq;

        /**
         * Verifies a TrialIslandHpAltarReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandHpAltarReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandHpAltarReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandHpAltarReq;

        /**
         * Creates a plain object from a TrialIslandHpAltarReq message. Also converts values to other types if specified.
         * @param message TrialIslandHpAltarReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandHpAltarReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandHpAltarReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandHpAltarRes. */
    interface ITrialIslandHpAltarRes {

        /** TrialIslandHpAltarRes PointUID */
        PointUID?: (number|null);

        /** TrialIslandHpAltarRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);
    }

    /** Represents a TrialIslandHpAltarRes. */
    class TrialIslandHpAltarRes implements ITrialIslandHpAltarRes {

        /**
         * Constructs a new TrialIslandHpAltarRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandHpAltarRes);

        /** TrialIslandHpAltarRes PointUID. */
        public PointUID: number;

        /** TrialIslandHpAltarRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /**
         * Creates a new TrialIslandHpAltarRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandHpAltarRes instance
         */
        public static create(properties?: gamesvr.ITrialIslandHpAltarRes): gamesvr.TrialIslandHpAltarRes;

        /**
         * Encodes the specified TrialIslandHpAltarRes message. Does not implicitly {@link gamesvr.TrialIslandHpAltarRes.verify|verify} messages.
         * @param message TrialIslandHpAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandHpAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandHpAltarRes message, length delimited. Does not implicitly {@link gamesvr.TrialIslandHpAltarRes.verify|verify} messages.
         * @param message TrialIslandHpAltarRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandHpAltarRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandHpAltarRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandHpAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandHpAltarRes;

        /**
         * Decodes a TrialIslandHpAltarRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandHpAltarRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandHpAltarRes;

        /**
         * Verifies a TrialIslandHpAltarRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandHpAltarRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandHpAltarRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandHpAltarRes;

        /**
         * Creates a plain object from a TrialIslandHpAltarRes message. Also converts values to other types if specified.
         * @param message TrialIslandHpAltarRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandHpAltarRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandHpAltarRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandTransgateReq. */
    interface ITrialIslandTransgateReq {

        /** TrialIslandTransgateReq PointUID */
        PointUID?: (number|null);
    }

    /** Represents a TrialIslandTransgateReq. */
    class TrialIslandTransgateReq implements ITrialIslandTransgateReq {

        /**
         * Constructs a new TrialIslandTransgateReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandTransgateReq);

        /** TrialIslandTransgateReq PointUID. */
        public PointUID: number;

        /**
         * Creates a new TrialIslandTransgateReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandTransgateReq instance
         */
        public static create(properties?: gamesvr.ITrialIslandTransgateReq): gamesvr.TrialIslandTransgateReq;

        /**
         * Encodes the specified TrialIslandTransgateReq message. Does not implicitly {@link gamesvr.TrialIslandTransgateReq.verify|verify} messages.
         * @param message TrialIslandTransgateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandTransgateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandTransgateReq message, length delimited. Does not implicitly {@link gamesvr.TrialIslandTransgateReq.verify|verify} messages.
         * @param message TrialIslandTransgateReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandTransgateReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandTransgateReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandTransgateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandTransgateReq;

        /**
         * Decodes a TrialIslandTransgateReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandTransgateReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandTransgateReq;

        /**
         * Verifies a TrialIslandTransgateReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandTransgateReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandTransgateReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandTransgateReq;

        /**
         * Creates a plain object from a TrialIslandTransgateReq message. Also converts values to other types if specified.
         * @param message TrialIslandTransgateReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandTransgateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandTransgateReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialIslandTransgateRes. */
    interface ITrialIslandTransgateRes {

        /** TrialIslandTransgateRes PointUID */
        PointUID?: (number|null);

        /** TrialIslandTransgateRes Progress */
        Progress?: (number|null);

        /** TrialIslandTransgateRes Points */
        Points?: (data.ITrialPointInfo[]|null);
    }

    /** Represents a TrialIslandTransgateRes. */
    class TrialIslandTransgateRes implements ITrialIslandTransgateRes {

        /**
         * Constructs a new TrialIslandTransgateRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialIslandTransgateRes);

        /** TrialIslandTransgateRes PointUID. */
        public PointUID: number;

        /** TrialIslandTransgateRes Progress. */
        public Progress: number;

        /** TrialIslandTransgateRes Points. */
        public Points: data.ITrialPointInfo[];

        /**
         * Creates a new TrialIslandTransgateRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialIslandTransgateRes instance
         */
        public static create(properties?: gamesvr.ITrialIslandTransgateRes): gamesvr.TrialIslandTransgateRes;

        /**
         * Encodes the specified TrialIslandTransgateRes message. Does not implicitly {@link gamesvr.TrialIslandTransgateRes.verify|verify} messages.
         * @param message TrialIslandTransgateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialIslandTransgateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialIslandTransgateRes message, length delimited. Does not implicitly {@link gamesvr.TrialIslandTransgateRes.verify|verify} messages.
         * @param message TrialIslandTransgateRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialIslandTransgateRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialIslandTransgateRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialIslandTransgateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialIslandTransgateRes;

        /**
         * Decodes a TrialIslandTransgateRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialIslandTransgateRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialIslandTransgateRes;

        /**
         * Verifies a TrialIslandTransgateRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialIslandTransgateRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialIslandTransgateRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialIslandTransgateRes;

        /**
         * Creates a plain object from a TrialIslandTransgateRes message. Also converts values to other types if specified.
         * @param message TrialIslandTransgateRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialIslandTransgateRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialIslandTransgateRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialDevilEnterPveReq. */
    interface ITrialDevilEnterPveReq {

        /** TrialDevilEnterPveReq Heroes */
        Heroes?: (number[]|null);
    }

    /** Represents a TrialDevilEnterPveReq. */
    class TrialDevilEnterPveReq implements ITrialDevilEnterPveReq {

        /**
         * Constructs a new TrialDevilEnterPveReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialDevilEnterPveReq);

        /** TrialDevilEnterPveReq Heroes. */
        public Heroes: number[];

        /**
         * Creates a new TrialDevilEnterPveReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialDevilEnterPveReq instance
         */
        public static create(properties?: gamesvr.ITrialDevilEnterPveReq): gamesvr.TrialDevilEnterPveReq;

        /**
         * Encodes the specified TrialDevilEnterPveReq message. Does not implicitly {@link gamesvr.TrialDevilEnterPveReq.verify|verify} messages.
         * @param message TrialDevilEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialDevilEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialDevilEnterPveReq message, length delimited. Does not implicitly {@link gamesvr.TrialDevilEnterPveReq.verify|verify} messages.
         * @param message TrialDevilEnterPveReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialDevilEnterPveReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialDevilEnterPveReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialDevilEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialDevilEnterPveReq;

        /**
         * Decodes a TrialDevilEnterPveReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialDevilEnterPveReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialDevilEnterPveReq;

        /**
         * Verifies a TrialDevilEnterPveReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialDevilEnterPveReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialDevilEnterPveReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialDevilEnterPveReq;

        /**
         * Creates a plain object from a TrialDevilEnterPveReq message. Also converts values to other types if specified.
         * @param message TrialDevilEnterPveReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialDevilEnterPveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialDevilEnterPveReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialDevilEnterPveRes. */
    interface ITrialDevilEnterPveRes {

        /** TrialDevilEnterPveRes FightNum */
        FightNum?: (number|null);

        /** TrialDevilEnterPveRes Heroes */
        Heroes?: (data.ITrialRoleInfo[]|null);

        /** TrialDevilEnterPveRes Prizes */
        Prizes?: (data.IItemInfo[]|null);

        /** TrialDevilEnterPveRes TotalDamage */
        TotalDamage?: (number|null);

        /** TrialDevilEnterPveRes RankIndex */
        RankIndex?: (number|null);

        /** TrialDevilEnterPveRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialDevilEnterPveRes. */
    class TrialDevilEnterPveRes implements ITrialDevilEnterPveRes {

        /**
         * Constructs a new TrialDevilEnterPveRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialDevilEnterPveRes);

        /** TrialDevilEnterPveRes FightNum. */
        public FightNum: number;

        /** TrialDevilEnterPveRes Heroes. */
        public Heroes: data.ITrialRoleInfo[];

        /** TrialDevilEnterPveRes Prizes. */
        public Prizes: data.IItemInfo[];

        /** TrialDevilEnterPveRes TotalDamage. */
        public TotalDamage: number;

        /** TrialDevilEnterPveRes RankIndex. */
        public RankIndex: number;

        /** TrialDevilEnterPveRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialDevilEnterPveRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialDevilEnterPveRes instance
         */
        public static create(properties?: gamesvr.ITrialDevilEnterPveRes): gamesvr.TrialDevilEnterPveRes;

        /**
         * Encodes the specified TrialDevilEnterPveRes message. Does not implicitly {@link gamesvr.TrialDevilEnterPveRes.verify|verify} messages.
         * @param message TrialDevilEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialDevilEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialDevilEnterPveRes message, length delimited. Does not implicitly {@link gamesvr.TrialDevilEnterPveRes.verify|verify} messages.
         * @param message TrialDevilEnterPveRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialDevilEnterPveRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialDevilEnterPveRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialDevilEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialDevilEnterPveRes;

        /**
         * Decodes a TrialDevilEnterPveRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialDevilEnterPveRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialDevilEnterPveRes;

        /**
         * Verifies a TrialDevilEnterPveRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialDevilEnterPveRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialDevilEnterPveRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialDevilEnterPveRes;

        /**
         * Creates a plain object from a TrialDevilEnterPveRes message. Also converts values to other types if specified.
         * @param message TrialDevilEnterPveRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialDevilEnterPveRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialDevilEnterPveRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkActivateHexagramReq. */
    interface ITrialLightDarkActivateHexagramReq {

        /** TrialLightDarkActivateHexagramReq ActivateHeroIDList */
        ActivateHeroIDList?: (number[]|null);
    }

    /** Represents a TrialLightDarkActivateHexagramReq. */
    class TrialLightDarkActivateHexagramReq implements ITrialLightDarkActivateHexagramReq {

        /**
         * Constructs a new TrialLightDarkActivateHexagramReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialLightDarkActivateHexagramReq);

        /** TrialLightDarkActivateHexagramReq ActivateHeroIDList. */
        public ActivateHeroIDList: number[];

        /**
         * Creates a new TrialLightDarkActivateHexagramReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkActivateHexagramReq instance
         */
        public static create(properties?: gamesvr.ITrialLightDarkActivateHexagramReq): gamesvr.TrialLightDarkActivateHexagramReq;

        /**
         * Encodes the specified TrialLightDarkActivateHexagramReq message. Does not implicitly {@link gamesvr.TrialLightDarkActivateHexagramReq.verify|verify} messages.
         * @param message TrialLightDarkActivateHexagramReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialLightDarkActivateHexagramReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkActivateHexagramReq message, length delimited. Does not implicitly {@link gamesvr.TrialLightDarkActivateHexagramReq.verify|verify} messages.
         * @param message TrialLightDarkActivateHexagramReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialLightDarkActivateHexagramReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkActivateHexagramReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkActivateHexagramReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialLightDarkActivateHexagramReq;

        /**
         * Decodes a TrialLightDarkActivateHexagramReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkActivateHexagramReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialLightDarkActivateHexagramReq;

        /**
         * Verifies a TrialLightDarkActivateHexagramReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkActivateHexagramReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkActivateHexagramReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialLightDarkActivateHexagramReq;

        /**
         * Creates a plain object from a TrialLightDarkActivateHexagramReq message. Also converts values to other types if specified.
         * @param message TrialLightDarkActivateHexagramReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialLightDarkActivateHexagramReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkActivateHexagramReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkActivateHexagramRes. */
    interface ITrialLightDarkActivateHexagramRes {

        /** TrialLightDarkActivateHexagramRes ActivateHeroIDList */
        ActivateHeroIDList?: (number[]|null);
    }

    /** Represents a TrialLightDarkActivateHexagramRes. */
    class TrialLightDarkActivateHexagramRes implements ITrialLightDarkActivateHexagramRes {

        /**
         * Constructs a new TrialLightDarkActivateHexagramRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialLightDarkActivateHexagramRes);

        /** TrialLightDarkActivateHexagramRes ActivateHeroIDList. */
        public ActivateHeroIDList: number[];

        /**
         * Creates a new TrialLightDarkActivateHexagramRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkActivateHexagramRes instance
         */
        public static create(properties?: gamesvr.ITrialLightDarkActivateHexagramRes): gamesvr.TrialLightDarkActivateHexagramRes;

        /**
         * Encodes the specified TrialLightDarkActivateHexagramRes message. Does not implicitly {@link gamesvr.TrialLightDarkActivateHexagramRes.verify|verify} messages.
         * @param message TrialLightDarkActivateHexagramRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialLightDarkActivateHexagramRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkActivateHexagramRes message, length delimited. Does not implicitly {@link gamesvr.TrialLightDarkActivateHexagramRes.verify|verify} messages.
         * @param message TrialLightDarkActivateHexagramRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialLightDarkActivateHexagramRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkActivateHexagramRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkActivateHexagramRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialLightDarkActivateHexagramRes;

        /**
         * Decodes a TrialLightDarkActivateHexagramRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkActivateHexagramRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialLightDarkActivateHexagramRes;

        /**
         * Verifies a TrialLightDarkActivateHexagramRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkActivateHexagramRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkActivateHexagramRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialLightDarkActivateHexagramRes;

        /**
         * Creates a plain object from a TrialLightDarkActivateHexagramRes message. Also converts values to other types if specified.
         * @param message TrialLightDarkActivateHexagramRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialLightDarkActivateHexagramRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkActivateHexagramRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkEnterReq. */
    interface ITrialLightDarkEnterReq {

        /** TrialLightDarkEnterReq Heroes */
        Heroes?: (number[]|null);

        /** TrialLightDarkEnterReq MonsterGroupIndex */
        MonsterGroupIndex?: (number|null);

        /** TrialLightDarkEnterReq UseHeroMap */
        UseHeroMap?: ({ [k: string]: boolean }|null);
    }

    /** Represents a TrialLightDarkEnterReq. */
    class TrialLightDarkEnterReq implements ITrialLightDarkEnterReq {

        /**
         * Constructs a new TrialLightDarkEnterReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialLightDarkEnterReq);

        /** TrialLightDarkEnterReq Heroes. */
        public Heroes: number[];

        /** TrialLightDarkEnterReq MonsterGroupIndex. */
        public MonsterGroupIndex: number;

        /** TrialLightDarkEnterReq UseHeroMap. */
        public UseHeroMap: { [k: string]: boolean };

        /**
         * Creates a new TrialLightDarkEnterReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkEnterReq instance
         */
        public static create(properties?: gamesvr.ITrialLightDarkEnterReq): gamesvr.TrialLightDarkEnterReq;

        /**
         * Encodes the specified TrialLightDarkEnterReq message. Does not implicitly {@link gamesvr.TrialLightDarkEnterReq.verify|verify} messages.
         * @param message TrialLightDarkEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialLightDarkEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkEnterReq message, length delimited. Does not implicitly {@link gamesvr.TrialLightDarkEnterReq.verify|verify} messages.
         * @param message TrialLightDarkEnterReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialLightDarkEnterReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkEnterReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialLightDarkEnterReq;

        /**
         * Decodes a TrialLightDarkEnterReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkEnterReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialLightDarkEnterReq;

        /**
         * Verifies a TrialLightDarkEnterReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkEnterReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkEnterReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialLightDarkEnterReq;

        /**
         * Creates a plain object from a TrialLightDarkEnterReq message. Also converts values to other types if specified.
         * @param message TrialLightDarkEnterReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialLightDarkEnterReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkEnterReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkEnterRes. */
    interface ITrialLightDarkEnterRes {

        /** TrialLightDarkEnterRes EnterBattleResult */
        EnterBattleResult?: (gamesvr.IEnterBattleResult|null);
    }

    /** Represents a TrialLightDarkEnterRes. */
    class TrialLightDarkEnterRes implements ITrialLightDarkEnterRes {

        /**
         * Constructs a new TrialLightDarkEnterRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialLightDarkEnterRes);

        /** TrialLightDarkEnterRes EnterBattleResult. */
        public EnterBattleResult?: (gamesvr.IEnterBattleResult|null);

        /**
         * Creates a new TrialLightDarkEnterRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkEnterRes instance
         */
        public static create(properties?: gamesvr.ITrialLightDarkEnterRes): gamesvr.TrialLightDarkEnterRes;

        /**
         * Encodes the specified TrialLightDarkEnterRes message. Does not implicitly {@link gamesvr.TrialLightDarkEnterRes.verify|verify} messages.
         * @param message TrialLightDarkEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialLightDarkEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkEnterRes message, length delimited. Does not implicitly {@link gamesvr.TrialLightDarkEnterRes.verify|verify} messages.
         * @param message TrialLightDarkEnterRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialLightDarkEnterRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkEnterRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialLightDarkEnterRes;

        /**
         * Decodes a TrialLightDarkEnterRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkEnterRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialLightDarkEnterRes;

        /**
         * Verifies a TrialLightDarkEnterRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkEnterRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkEnterRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialLightDarkEnterRes;

        /**
         * Creates a plain object from a TrialLightDarkEnterRes message. Also converts values to other types if specified.
         * @param message TrialLightDarkEnterRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialLightDarkEnterRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkEnterRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkFinishReq. */
    interface ITrialLightDarkFinishReq {

        /** TrialLightDarkFinishReq Past */
        Past?: (boolean|null);
    }

    /** Represents a TrialLightDarkFinishReq. */
    class TrialLightDarkFinishReq implements ITrialLightDarkFinishReq {

        /**
         * Constructs a new TrialLightDarkFinishReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialLightDarkFinishReq);

        /** TrialLightDarkFinishReq Past. */
        public Past: boolean;

        /**
         * Creates a new TrialLightDarkFinishReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkFinishReq instance
         */
        public static create(properties?: gamesvr.ITrialLightDarkFinishReq): gamesvr.TrialLightDarkFinishReq;

        /**
         * Encodes the specified TrialLightDarkFinishReq message. Does not implicitly {@link gamesvr.TrialLightDarkFinishReq.verify|verify} messages.
         * @param message TrialLightDarkFinishReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialLightDarkFinishReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkFinishReq message, length delimited. Does not implicitly {@link gamesvr.TrialLightDarkFinishReq.verify|verify} messages.
         * @param message TrialLightDarkFinishReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialLightDarkFinishReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkFinishReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkFinishReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialLightDarkFinishReq;

        /**
         * Decodes a TrialLightDarkFinishReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkFinishReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialLightDarkFinishReq;

        /**
         * Verifies a TrialLightDarkFinishReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkFinishReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkFinishReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialLightDarkFinishReq;

        /**
         * Creates a plain object from a TrialLightDarkFinishReq message. Also converts values to other types if specified.
         * @param message TrialLightDarkFinishReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialLightDarkFinishReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkFinishReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrialLightDarkFinishRes. */
    interface ITrialLightDarkFinishRes {

        /** TrialLightDarkFinishRes Past */
        Past?: (boolean|null);

        /** TrialLightDarkFinishRes Exp */
        Exp?: (number|null);

        /** TrialLightDarkFinishRes TotalExp */
        TotalExp?: (number|null);

        /** TrialLightDarkFinishRes LightDarkID */
        LightDarkID?: (number|null);

        /** TrialLightDarkFinishRes HexagramIDList */
        HexagramIDList?: (number[]|null);

        /** TrialLightDarkFinishRes MonsterLineupIDList */
        MonsterLineupIDList?: (number[]|null);

        /** TrialLightDarkFinishRes SceneIndex */
        SceneIndex?: (number|null);

        /** TrialLightDarkFinishRes ActivateHeroIDList */
        ActivateHeroIDList?: (number[]|null);

        /** TrialLightDarkFinishRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents a TrialLightDarkFinishRes. */
    class TrialLightDarkFinishRes implements ITrialLightDarkFinishRes {

        /**
         * Constructs a new TrialLightDarkFinishRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.ITrialLightDarkFinishRes);

        /** TrialLightDarkFinishRes Past. */
        public Past: boolean;

        /** TrialLightDarkFinishRes Exp. */
        public Exp: number;

        /** TrialLightDarkFinishRes TotalExp. */
        public TotalExp: number;

        /** TrialLightDarkFinishRes LightDarkID. */
        public LightDarkID: number;

        /** TrialLightDarkFinishRes HexagramIDList. */
        public HexagramIDList: number[];

        /** TrialLightDarkFinishRes MonsterLineupIDList. */
        public MonsterLineupIDList: number[];

        /** TrialLightDarkFinishRes SceneIndex. */
        public SceneIndex: number;

        /** TrialLightDarkFinishRes ActivateHeroIDList. */
        public ActivateHeroIDList: number[];

        /** TrialLightDarkFinishRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new TrialLightDarkFinishRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrialLightDarkFinishRes instance
         */
        public static create(properties?: gamesvr.ITrialLightDarkFinishRes): gamesvr.TrialLightDarkFinishRes;

        /**
         * Encodes the specified TrialLightDarkFinishRes message. Does not implicitly {@link gamesvr.TrialLightDarkFinishRes.verify|verify} messages.
         * @param message TrialLightDarkFinishRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.ITrialLightDarkFinishRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrialLightDarkFinishRes message, length delimited. Does not implicitly {@link gamesvr.TrialLightDarkFinishRes.verify|verify} messages.
         * @param message TrialLightDarkFinishRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.ITrialLightDarkFinishRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrialLightDarkFinishRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrialLightDarkFinishRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.TrialLightDarkFinishRes;

        /**
         * Decodes a TrialLightDarkFinishRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrialLightDarkFinishRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.TrialLightDarkFinishRes;

        /**
         * Verifies a TrialLightDarkFinishRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrialLightDarkFinishRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrialLightDarkFinishRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.TrialLightDarkFinishRes;

        /**
         * Creates a plain object from a TrialLightDarkFinishRes message. Also converts values to other types if specified.
         * @param message TrialLightDarkFinishRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.TrialLightDarkFinishRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrialLightDarkFinishRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalSageChosenRoadReq. */
    interface IUniversalSageChosenRoadReq {

        /** UniversalSageChosenRoadReq ChosenMap */
        ChosenMap?: ({ [k: string]: number }|null);

        /** UniversalSageChosenRoadReq Name */
        Name?: (string|null);
    }

    /** Represents an UniversalSageChosenRoadReq. */
    class UniversalSageChosenRoadReq implements IUniversalSageChosenRoadReq {

        /**
         * Constructs a new UniversalSageChosenRoadReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalSageChosenRoadReq);

        /** UniversalSageChosenRoadReq ChosenMap. */
        public ChosenMap: { [k: string]: number };

        /** UniversalSageChosenRoadReq Name. */
        public Name: string;

        /**
         * Creates a new UniversalSageChosenRoadReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalSageChosenRoadReq instance
         */
        public static create(properties?: gamesvr.IUniversalSageChosenRoadReq): gamesvr.UniversalSageChosenRoadReq;

        /**
         * Encodes the specified UniversalSageChosenRoadReq message. Does not implicitly {@link gamesvr.UniversalSageChosenRoadReq.verify|verify} messages.
         * @param message UniversalSageChosenRoadReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalSageChosenRoadReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalSageChosenRoadReq message, length delimited. Does not implicitly {@link gamesvr.UniversalSageChosenRoadReq.verify|verify} messages.
         * @param message UniversalSageChosenRoadReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalSageChosenRoadReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalSageChosenRoadReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalSageChosenRoadReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalSageChosenRoadReq;

        /**
         * Decodes an UniversalSageChosenRoadReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalSageChosenRoadReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalSageChosenRoadReq;

        /**
         * Verifies an UniversalSageChosenRoadReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalSageChosenRoadReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalSageChosenRoadReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalSageChosenRoadReq;

        /**
         * Creates a plain object from an UniversalSageChosenRoadReq message. Also converts values to other types if specified.
         * @param message UniversalSageChosenRoadReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalSageChosenRoadReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalSageChosenRoadReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalSageChosenRoadRes. */
    interface IUniversalSageChosenRoadRes {

        /** UniversalSageChosenRoadRes Name */
        Name?: (string|null);

        /** UniversalSageChosenRoadRes Exp */
        Exp?: (number|null);

        /** UniversalSageChosenRoadRes TotalExp */
        TotalExp?: (number|null);

        /** UniversalSageChosenRoadRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalSageChosenRoadRes. */
    class UniversalSageChosenRoadRes implements IUniversalSageChosenRoadRes {

        /**
         * Constructs a new UniversalSageChosenRoadRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalSageChosenRoadRes);

        /** UniversalSageChosenRoadRes Name. */
        public Name: string;

        /** UniversalSageChosenRoadRes Exp. */
        public Exp: number;

        /** UniversalSageChosenRoadRes TotalExp. */
        public TotalExp: number;

        /** UniversalSageChosenRoadRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalSageChosenRoadRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalSageChosenRoadRes instance
         */
        public static create(properties?: gamesvr.IUniversalSageChosenRoadRes): gamesvr.UniversalSageChosenRoadRes;

        /**
         * Encodes the specified UniversalSageChosenRoadRes message. Does not implicitly {@link gamesvr.UniversalSageChosenRoadRes.verify|verify} messages.
         * @param message UniversalSageChosenRoadRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalSageChosenRoadRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalSageChosenRoadRes message, length delimited. Does not implicitly {@link gamesvr.UniversalSageChosenRoadRes.verify|verify} messages.
         * @param message UniversalSageChosenRoadRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalSageChosenRoadRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalSageChosenRoadRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalSageChosenRoadRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalSageChosenRoadRes;

        /**
         * Decodes an UniversalSageChosenRoadRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalSageChosenRoadRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalSageChosenRoadRes;

        /**
         * Verifies an UniversalSageChosenRoadRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalSageChosenRoadRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalSageChosenRoadRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalSageChosenRoadRes;

        /**
         * Creates a plain object from an UniversalSageChosenRoadRes message. Also converts values to other types if specified.
         * @param message UniversalSageChosenRoadRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalSageChosenRoadRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalSageChosenRoadRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainPreviewRewardReq. */
    interface IUniversalHangUpGainPreviewRewardReq {
    }

    /** Represents an UniversalHangUpGainPreviewRewardReq. */
    class UniversalHangUpGainPreviewRewardReq implements IUniversalHangUpGainPreviewRewardReq {

        /**
         * Constructs a new UniversalHangUpGainPreviewRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainPreviewRewardReq);

        /**
         * Creates a new UniversalHangUpGainPreviewRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainPreviewRewardReq instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainPreviewRewardReq): gamesvr.UniversalHangUpGainPreviewRewardReq;

        /**
         * Encodes the specified UniversalHangUpGainPreviewRewardReq message. Does not implicitly {@link gamesvr.UniversalHangUpGainPreviewRewardReq.verify|verify} messages.
         * @param message UniversalHangUpGainPreviewRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainPreviewRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainPreviewRewardReq message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainPreviewRewardReq.verify|verify} messages.
         * @param message UniversalHangUpGainPreviewRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainPreviewRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainPreviewRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainPreviewRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainPreviewRewardReq;

        /**
         * Decodes an UniversalHangUpGainPreviewRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainPreviewRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainPreviewRewardReq;

        /**
         * Verifies an UniversalHangUpGainPreviewRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainPreviewRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainPreviewRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainPreviewRewardReq;

        /**
         * Creates a plain object from an UniversalHangUpGainPreviewRewardReq message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainPreviewRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainPreviewRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainPreviewRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainPreviewRewardRes. */
    interface IUniversalHangUpGainPreviewRewardRes {

        /** UniversalHangUpGainPreviewRewardRes LastCalTime */
        LastCalTime?: (number|Long|null);

        /** UniversalHangUpGainPreviewRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalHangUpGainPreviewRewardRes. */
    class UniversalHangUpGainPreviewRewardRes implements IUniversalHangUpGainPreviewRewardRes {

        /**
         * Constructs a new UniversalHangUpGainPreviewRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainPreviewRewardRes);

        /** UniversalHangUpGainPreviewRewardRes LastCalTime. */
        public LastCalTime: (number|Long);

        /** UniversalHangUpGainPreviewRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalHangUpGainPreviewRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainPreviewRewardRes instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainPreviewRewardRes): gamesvr.UniversalHangUpGainPreviewRewardRes;

        /**
         * Encodes the specified UniversalHangUpGainPreviewRewardRes message. Does not implicitly {@link gamesvr.UniversalHangUpGainPreviewRewardRes.verify|verify} messages.
         * @param message UniversalHangUpGainPreviewRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainPreviewRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainPreviewRewardRes message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainPreviewRewardRes.verify|verify} messages.
         * @param message UniversalHangUpGainPreviewRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainPreviewRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainPreviewRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainPreviewRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainPreviewRewardRes;

        /**
         * Decodes an UniversalHangUpGainPreviewRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainPreviewRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainPreviewRewardRes;

        /**
         * Verifies an UniversalHangUpGainPreviewRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainPreviewRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainPreviewRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainPreviewRewardRes;

        /**
         * Creates a plain object from an UniversalHangUpGainPreviewRewardRes message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainPreviewRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainPreviewRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainPreviewRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainReceiveRewardReq. */
    interface IUniversalHangUpGainReceiveRewardReq {
    }

    /** Represents an UniversalHangUpGainReceiveRewardReq. */
    class UniversalHangUpGainReceiveRewardReq implements IUniversalHangUpGainReceiveRewardReq {

        /**
         * Constructs a new UniversalHangUpGainReceiveRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainReceiveRewardReq);

        /**
         * Creates a new UniversalHangUpGainReceiveRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainReceiveRewardReq instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainReceiveRewardReq): gamesvr.UniversalHangUpGainReceiveRewardReq;

        /**
         * Encodes the specified UniversalHangUpGainReceiveRewardReq message. Does not implicitly {@link gamesvr.UniversalHangUpGainReceiveRewardReq.verify|verify} messages.
         * @param message UniversalHangUpGainReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainReceiveRewardReq message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainReceiveRewardReq.verify|verify} messages.
         * @param message UniversalHangUpGainReceiveRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainReceiveRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainReceiveRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainReceiveRewardReq;

        /**
         * Decodes an UniversalHangUpGainReceiveRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainReceiveRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainReceiveRewardReq;

        /**
         * Verifies an UniversalHangUpGainReceiveRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainReceiveRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainReceiveRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainReceiveRewardReq;

        /**
         * Creates a plain object from an UniversalHangUpGainReceiveRewardReq message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainReceiveRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainReceiveRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainReceiveRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainReceiveRewardRes. */
    interface IUniversalHangUpGainReceiveRewardRes {

        /** UniversalHangUpGainReceiveRewardRes StartTime */
        StartTime?: (number|Long|null);

        /** UniversalHangUpGainReceiveRewardRes LastCalTime */
        LastCalTime?: (number|Long|null);

        /** UniversalHangUpGainReceiveRewardRes Exp */
        Exp?: (number|null);

        /** UniversalHangUpGainReceiveRewardRes TotalExp */
        TotalExp?: (number|null);

        /** UniversalHangUpGainReceiveRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalHangUpGainReceiveRewardRes. */
    class UniversalHangUpGainReceiveRewardRes implements IUniversalHangUpGainReceiveRewardRes {

        /**
         * Constructs a new UniversalHangUpGainReceiveRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainReceiveRewardRes);

        /** UniversalHangUpGainReceiveRewardRes StartTime. */
        public StartTime: (number|Long);

        /** UniversalHangUpGainReceiveRewardRes LastCalTime. */
        public LastCalTime: (number|Long);

        /** UniversalHangUpGainReceiveRewardRes Exp. */
        public Exp: number;

        /** UniversalHangUpGainReceiveRewardRes TotalExp. */
        public TotalExp: number;

        /** UniversalHangUpGainReceiveRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalHangUpGainReceiveRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainReceiveRewardRes instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainReceiveRewardRes): gamesvr.UniversalHangUpGainReceiveRewardRes;

        /**
         * Encodes the specified UniversalHangUpGainReceiveRewardRes message. Does not implicitly {@link gamesvr.UniversalHangUpGainReceiveRewardRes.verify|verify} messages.
         * @param message UniversalHangUpGainReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainReceiveRewardRes message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainReceiveRewardRes.verify|verify} messages.
         * @param message UniversalHangUpGainReceiveRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainReceiveRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainReceiveRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainReceiveRewardRes;

        /**
         * Decodes an UniversalHangUpGainReceiveRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainReceiveRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainReceiveRewardRes;

        /**
         * Verifies an UniversalHangUpGainReceiveRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainReceiveRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainReceiveRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainReceiveRewardRes;

        /**
         * Creates a plain object from an UniversalHangUpGainReceiveRewardRes message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainReceiveRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainReceiveRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainReceiveRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainFastHangUpReq. */
    interface IUniversalHangUpGainFastHangUpReq {
    }

    /** Represents an UniversalHangUpGainFastHangUpReq. */
    class UniversalHangUpGainFastHangUpReq implements IUniversalHangUpGainFastHangUpReq {

        /**
         * Constructs a new UniversalHangUpGainFastHangUpReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainFastHangUpReq);

        /**
         * Creates a new UniversalHangUpGainFastHangUpReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainFastHangUpReq instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainFastHangUpReq): gamesvr.UniversalHangUpGainFastHangUpReq;

        /**
         * Encodes the specified UniversalHangUpGainFastHangUpReq message. Does not implicitly {@link gamesvr.UniversalHangUpGainFastHangUpReq.verify|verify} messages.
         * @param message UniversalHangUpGainFastHangUpReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainFastHangUpReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainFastHangUpReq message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainFastHangUpReq.verify|verify} messages.
         * @param message UniversalHangUpGainFastHangUpReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainFastHangUpReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainFastHangUpReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainFastHangUpReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainFastHangUpReq;

        /**
         * Decodes an UniversalHangUpGainFastHangUpReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainFastHangUpReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainFastHangUpReq;

        /**
         * Verifies an UniversalHangUpGainFastHangUpReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainFastHangUpReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainFastHangUpReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainFastHangUpReq;

        /**
         * Creates a plain object from an UniversalHangUpGainFastHangUpReq message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainFastHangUpReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainFastHangUpReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainFastHangUpReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainFastHangUpRes. */
    interface IUniversalHangUpGainFastHangUpRes {

        /** UniversalHangUpGainFastHangUpRes FastHangUpCount */
        FastHangUpCount?: (number|null);

        /** UniversalHangUpGainFastHangUpRes Exp */
        Exp?: (number|null);

        /** UniversalHangUpGainFastHangUpRes TotalExp */
        TotalExp?: (number|null);

        /** UniversalHangUpGainFastHangUpRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalHangUpGainFastHangUpRes. */
    class UniversalHangUpGainFastHangUpRes implements IUniversalHangUpGainFastHangUpRes {

        /**
         * Constructs a new UniversalHangUpGainFastHangUpRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainFastHangUpRes);

        /** UniversalHangUpGainFastHangUpRes FastHangUpCount. */
        public FastHangUpCount: number;

        /** UniversalHangUpGainFastHangUpRes Exp. */
        public Exp: number;

        /** UniversalHangUpGainFastHangUpRes TotalExp. */
        public TotalExp: number;

        /** UniversalHangUpGainFastHangUpRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalHangUpGainFastHangUpRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainFastHangUpRes instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainFastHangUpRes): gamesvr.UniversalHangUpGainFastHangUpRes;

        /**
         * Encodes the specified UniversalHangUpGainFastHangUpRes message. Does not implicitly {@link gamesvr.UniversalHangUpGainFastHangUpRes.verify|verify} messages.
         * @param message UniversalHangUpGainFastHangUpRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainFastHangUpRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainFastHangUpRes message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainFastHangUpRes.verify|verify} messages.
         * @param message UniversalHangUpGainFastHangUpRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainFastHangUpRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainFastHangUpRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainFastHangUpRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainFastHangUpRes;

        /**
         * Decodes an UniversalHangUpGainFastHangUpRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainFastHangUpRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainFastHangUpRes;

        /**
         * Verifies an UniversalHangUpGainFastHangUpRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainFastHangUpRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainFastHangUpRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainFastHangUpRes;

        /**
         * Creates a plain object from an UniversalHangUpGainFastHangUpRes message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainFastHangUpRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainFastHangUpRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainFastHangUpRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalHangUpGainChapterChangeNotify. */
    interface IUniversalHangUpGainChapterChangeNotify {

        /** UniversalHangUpGainChapterChangeNotify ChapterID */
        ChapterID?: (number|null);
    }

    /** Represents an UniversalHangUpGainChapterChangeNotify. */
    class UniversalHangUpGainChapterChangeNotify implements IUniversalHangUpGainChapterChangeNotify {

        /**
         * Constructs a new UniversalHangUpGainChapterChangeNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalHangUpGainChapterChangeNotify);

        /** UniversalHangUpGainChapterChangeNotify ChapterID. */
        public ChapterID: number;

        /**
         * Creates a new UniversalHangUpGainChapterChangeNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalHangUpGainChapterChangeNotify instance
         */
        public static create(properties?: gamesvr.IUniversalHangUpGainChapterChangeNotify): gamesvr.UniversalHangUpGainChapterChangeNotify;

        /**
         * Encodes the specified UniversalHangUpGainChapterChangeNotify message. Does not implicitly {@link gamesvr.UniversalHangUpGainChapterChangeNotify.verify|verify} messages.
         * @param message UniversalHangUpGainChapterChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalHangUpGainChapterChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalHangUpGainChapterChangeNotify message, length delimited. Does not implicitly {@link gamesvr.UniversalHangUpGainChapterChangeNotify.verify|verify} messages.
         * @param message UniversalHangUpGainChapterChangeNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalHangUpGainChapterChangeNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalHangUpGainChapterChangeNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalHangUpGainChapterChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalHangUpGainChapterChangeNotify;

        /**
         * Decodes an UniversalHangUpGainChapterChangeNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalHangUpGainChapterChangeNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalHangUpGainChapterChangeNotify;

        /**
         * Verifies an UniversalHangUpGainChapterChangeNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalHangUpGainChapterChangeNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalHangUpGainChapterChangeNotify
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalHangUpGainChapterChangeNotify;

        /**
         * Creates a plain object from an UniversalHangUpGainChapterChangeNotify message. Also converts values to other types if specified.
         * @param message UniversalHangUpGainChapterChangeNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalHangUpGainChapterChangeNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalHangUpGainChapterChangeNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalViewUserInformReq. */
    interface IUniversalViewUserInformReq {

        /** UniversalViewUserInformReq UserID */
        UserID?: (string|null);
    }

    /** Represents an UniversalViewUserInformReq. */
    class UniversalViewUserInformReq implements IUniversalViewUserInformReq {

        /**
         * Constructs a new UniversalViewUserInformReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalViewUserInformReq);

        /** UniversalViewUserInformReq UserID. */
        public UserID: string;

        /**
         * Creates a new UniversalViewUserInformReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalViewUserInformReq instance
         */
        public static create(properties?: gamesvr.IUniversalViewUserInformReq): gamesvr.UniversalViewUserInformReq;

        /**
         * Encodes the specified UniversalViewUserInformReq message. Does not implicitly {@link gamesvr.UniversalViewUserInformReq.verify|verify} messages.
         * @param message UniversalViewUserInformReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalViewUserInformReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalViewUserInformReq message, length delimited. Does not implicitly {@link gamesvr.UniversalViewUserInformReq.verify|verify} messages.
         * @param message UniversalViewUserInformReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalViewUserInformReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalViewUserInformReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalViewUserInformReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalViewUserInformReq;

        /**
         * Decodes an UniversalViewUserInformReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalViewUserInformReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalViewUserInformReq;

        /**
         * Verifies an UniversalViewUserInformReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalViewUserInformReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalViewUserInformReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalViewUserInformReq;

        /**
         * Creates a plain object from an UniversalViewUserInformReq message. Also converts values to other types if specified.
         * @param message UniversalViewUserInformReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalViewUserInformReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalViewUserInformReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalViewUserInformRes. */
    interface IUniversalViewUserInformRes {

        /** UniversalViewUserInformRes UniversalViewOtherUnit */
        UniversalViewOtherUnit?: (data.IUniversalViewOtherData|null);
    }

    /** Represents an UniversalViewUserInformRes. */
    class UniversalViewUserInformRes implements IUniversalViewUserInformRes {

        /**
         * Constructs a new UniversalViewUserInformRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalViewUserInformRes);

        /** UniversalViewUserInformRes UniversalViewOtherUnit. */
        public UniversalViewOtherUnit?: (data.IUniversalViewOtherData|null);

        /**
         * Creates a new UniversalViewUserInformRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalViewUserInformRes instance
         */
        public static create(properties?: gamesvr.IUniversalViewUserInformRes): gamesvr.UniversalViewUserInformRes;

        /**
         * Encodes the specified UniversalViewUserInformRes message. Does not implicitly {@link gamesvr.UniversalViewUserInformRes.verify|verify} messages.
         * @param message UniversalViewUserInformRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalViewUserInformRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalViewUserInformRes message, length delimited. Does not implicitly {@link gamesvr.UniversalViewUserInformRes.verify|verify} messages.
         * @param message UniversalViewUserInformRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalViewUserInformRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalViewUserInformRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalViewUserInformRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalViewUserInformRes;

        /**
         * Decodes an UniversalViewUserInformRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalViewUserInformRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalViewUserInformRes;

        /**
         * Verifies an UniversalViewUserInformRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalViewUserInformRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalViewUserInformRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalViewUserInformRes;

        /**
         * Creates a plain object from an UniversalViewUserInformRes message. Also converts values to other types if specified.
         * @param message UniversalViewUserInformRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalViewUserInformRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalViewUserInformRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecratePutOnTributeReq. */
    interface IUniversalConsecratePutOnTributeReq {

        /** UniversalConsecratePutOnTributeReq StatueType */
        StatueType?: (number|null);

        /** UniversalConsecratePutOnTributeReq TributeItemID */
        TributeItemID?: (number|null);
    }

    /** Represents an UniversalConsecratePutOnTributeReq. */
    class UniversalConsecratePutOnTributeReq implements IUniversalConsecratePutOnTributeReq {

        /**
         * Constructs a new UniversalConsecratePutOnTributeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecratePutOnTributeReq);

        /** UniversalConsecratePutOnTributeReq StatueType. */
        public StatueType: number;

        /** UniversalConsecratePutOnTributeReq TributeItemID. */
        public TributeItemID: number;

        /**
         * Creates a new UniversalConsecratePutOnTributeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecratePutOnTributeReq instance
         */
        public static create(properties?: gamesvr.IUniversalConsecratePutOnTributeReq): gamesvr.UniversalConsecratePutOnTributeReq;

        /**
         * Encodes the specified UniversalConsecratePutOnTributeReq message. Does not implicitly {@link gamesvr.UniversalConsecratePutOnTributeReq.verify|verify} messages.
         * @param message UniversalConsecratePutOnTributeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecratePutOnTributeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecratePutOnTributeReq message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecratePutOnTributeReq.verify|verify} messages.
         * @param message UniversalConsecratePutOnTributeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecratePutOnTributeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecratePutOnTributeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecratePutOnTributeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecratePutOnTributeReq;

        /**
         * Decodes an UniversalConsecratePutOnTributeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecratePutOnTributeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecratePutOnTributeReq;

        /**
         * Verifies an UniversalConsecratePutOnTributeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecratePutOnTributeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecratePutOnTributeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecratePutOnTributeReq;

        /**
         * Creates a plain object from an UniversalConsecratePutOnTributeReq message. Also converts values to other types if specified.
         * @param message UniversalConsecratePutOnTributeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecratePutOnTributeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecratePutOnTributeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecratePutOnTributeRes. */
    interface IUniversalConsecratePutOnTributeRes {

        /** UniversalConsecratePutOnTributeRes StatueType */
        StatueType?: (number|null);

        /** UniversalConsecratePutOnTributeRes UniversalConsecrateTributeUnit */
        UniversalConsecrateTributeUnit?: (data.IUniversalConsecrateTribute|null);
    }

    /** Represents an UniversalConsecratePutOnTributeRes. */
    class UniversalConsecratePutOnTributeRes implements IUniversalConsecratePutOnTributeRes {

        /**
         * Constructs a new UniversalConsecratePutOnTributeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecratePutOnTributeRes);

        /** UniversalConsecratePutOnTributeRes StatueType. */
        public StatueType: number;

        /** UniversalConsecratePutOnTributeRes UniversalConsecrateTributeUnit. */
        public UniversalConsecrateTributeUnit?: (data.IUniversalConsecrateTribute|null);

        /**
         * Creates a new UniversalConsecratePutOnTributeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecratePutOnTributeRes instance
         */
        public static create(properties?: gamesvr.IUniversalConsecratePutOnTributeRes): gamesvr.UniversalConsecratePutOnTributeRes;

        /**
         * Encodes the specified UniversalConsecratePutOnTributeRes message. Does not implicitly {@link gamesvr.UniversalConsecratePutOnTributeRes.verify|verify} messages.
         * @param message UniversalConsecratePutOnTributeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecratePutOnTributeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecratePutOnTributeRes message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecratePutOnTributeRes.verify|verify} messages.
         * @param message UniversalConsecratePutOnTributeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecratePutOnTributeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecratePutOnTributeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecratePutOnTributeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecratePutOnTributeRes;

        /**
         * Decodes an UniversalConsecratePutOnTributeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecratePutOnTributeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecratePutOnTributeRes;

        /**
         * Verifies an UniversalConsecratePutOnTributeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecratePutOnTributeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecratePutOnTributeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecratePutOnTributeRes;

        /**
         * Creates a plain object from an UniversalConsecratePutOnTributeRes message. Also converts values to other types if specified.
         * @param message UniversalConsecratePutOnTributeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecratePutOnTributeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecratePutOnTributeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecratePutOffTributeReq. */
    interface IUniversalConsecratePutOffTributeReq {

        /** UniversalConsecratePutOffTributeReq StatueType */
        StatueType?: (number|null);

        /** UniversalConsecratePutOffTributeReq TributePos */
        TributePos?: (number|null);
    }

    /** Represents an UniversalConsecratePutOffTributeReq. */
    class UniversalConsecratePutOffTributeReq implements IUniversalConsecratePutOffTributeReq {

        /**
         * Constructs a new UniversalConsecratePutOffTributeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecratePutOffTributeReq);

        /** UniversalConsecratePutOffTributeReq StatueType. */
        public StatueType: number;

        /** UniversalConsecratePutOffTributeReq TributePos. */
        public TributePos: number;

        /**
         * Creates a new UniversalConsecratePutOffTributeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecratePutOffTributeReq instance
         */
        public static create(properties?: gamesvr.IUniversalConsecratePutOffTributeReq): gamesvr.UniversalConsecratePutOffTributeReq;

        /**
         * Encodes the specified UniversalConsecratePutOffTributeReq message. Does not implicitly {@link gamesvr.UniversalConsecratePutOffTributeReq.verify|verify} messages.
         * @param message UniversalConsecratePutOffTributeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecratePutOffTributeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecratePutOffTributeReq message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecratePutOffTributeReq.verify|verify} messages.
         * @param message UniversalConsecratePutOffTributeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecratePutOffTributeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecratePutOffTributeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecratePutOffTributeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecratePutOffTributeReq;

        /**
         * Decodes an UniversalConsecratePutOffTributeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecratePutOffTributeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecratePutOffTributeReq;

        /**
         * Verifies an UniversalConsecratePutOffTributeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecratePutOffTributeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecratePutOffTributeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecratePutOffTributeReq;

        /**
         * Creates a plain object from an UniversalConsecratePutOffTributeReq message. Also converts values to other types if specified.
         * @param message UniversalConsecratePutOffTributeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecratePutOffTributeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecratePutOffTributeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecratePutOffTributeRes. */
    interface IUniversalConsecratePutOffTributeRes {

        /** UniversalConsecratePutOffTributeRes StatueType */
        StatueType?: (number|null);

        /** UniversalConsecratePutOffTributeRes TributePos */
        TributePos?: (number|null);

        /** UniversalConsecratePutOffTributeRes UniversalConsecrateTributeList */
        UniversalConsecrateTributeList?: (data.IUniversalConsecrateTribute[]|null);
    }

    /** Represents an UniversalConsecratePutOffTributeRes. */
    class UniversalConsecratePutOffTributeRes implements IUniversalConsecratePutOffTributeRes {

        /**
         * Constructs a new UniversalConsecratePutOffTributeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecratePutOffTributeRes);

        /** UniversalConsecratePutOffTributeRes StatueType. */
        public StatueType: number;

        /** UniversalConsecratePutOffTributeRes TributePos. */
        public TributePos: number;

        /** UniversalConsecratePutOffTributeRes UniversalConsecrateTributeList. */
        public UniversalConsecrateTributeList: data.IUniversalConsecrateTribute[];

        /**
         * Creates a new UniversalConsecratePutOffTributeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecratePutOffTributeRes instance
         */
        public static create(properties?: gamesvr.IUniversalConsecratePutOffTributeRes): gamesvr.UniversalConsecratePutOffTributeRes;

        /**
         * Encodes the specified UniversalConsecratePutOffTributeRes message. Does not implicitly {@link gamesvr.UniversalConsecratePutOffTributeRes.verify|verify} messages.
         * @param message UniversalConsecratePutOffTributeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecratePutOffTributeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecratePutOffTributeRes message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecratePutOffTributeRes.verify|verify} messages.
         * @param message UniversalConsecratePutOffTributeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecratePutOffTributeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecratePutOffTributeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecratePutOffTributeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecratePutOffTributeRes;

        /**
         * Decodes an UniversalConsecratePutOffTributeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecratePutOffTributeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecratePutOffTributeRes;

        /**
         * Verifies an UniversalConsecratePutOffTributeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecratePutOffTributeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecratePutOffTributeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecratePutOffTributeRes;

        /**
         * Creates a plain object from an UniversalConsecratePutOffTributeRes message. Also converts values to other types if specified.
         * @param message UniversalConsecratePutOffTributeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecratePutOffTributeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecratePutOffTributeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateSpeedUpTributeReq. */
    interface IUniversalConsecrateSpeedUpTributeReq {

        /** UniversalConsecrateSpeedUpTributeReq StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateSpeedUpTributeReq SpeedUpFlag */
        SpeedUpFlag?: (boolean|null);
    }

    /** Represents an UniversalConsecrateSpeedUpTributeReq. */
    class UniversalConsecrateSpeedUpTributeReq implements IUniversalConsecrateSpeedUpTributeReq {

        /**
         * Constructs a new UniversalConsecrateSpeedUpTributeReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateSpeedUpTributeReq);

        /** UniversalConsecrateSpeedUpTributeReq StatueType. */
        public StatueType: number;

        /** UniversalConsecrateSpeedUpTributeReq SpeedUpFlag. */
        public SpeedUpFlag: boolean;

        /**
         * Creates a new UniversalConsecrateSpeedUpTributeReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateSpeedUpTributeReq instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateSpeedUpTributeReq): gamesvr.UniversalConsecrateSpeedUpTributeReq;

        /**
         * Encodes the specified UniversalConsecrateSpeedUpTributeReq message. Does not implicitly {@link gamesvr.UniversalConsecrateSpeedUpTributeReq.verify|verify} messages.
         * @param message UniversalConsecrateSpeedUpTributeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateSpeedUpTributeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateSpeedUpTributeReq message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateSpeedUpTributeReq.verify|verify} messages.
         * @param message UniversalConsecrateSpeedUpTributeReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateSpeedUpTributeReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateSpeedUpTributeReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateSpeedUpTributeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateSpeedUpTributeReq;

        /**
         * Decodes an UniversalConsecrateSpeedUpTributeReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateSpeedUpTributeReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateSpeedUpTributeReq;

        /**
         * Verifies an UniversalConsecrateSpeedUpTributeReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateSpeedUpTributeReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateSpeedUpTributeReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateSpeedUpTributeReq;

        /**
         * Creates a plain object from an UniversalConsecrateSpeedUpTributeReq message. Also converts values to other types if specified.
         * @param message UniversalConsecrateSpeedUpTributeReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateSpeedUpTributeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateSpeedUpTributeReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateSpeedUpTributeRes. */
    interface IUniversalConsecrateSpeedUpTributeRes {

        /** UniversalConsecrateSpeedUpTributeRes StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateSpeedUpTributeRes UniversalConsecrateTributeList */
        UniversalConsecrateTributeList?: (data.IUniversalConsecrateTribute[]|null);
    }

    /** Represents an UniversalConsecrateSpeedUpTributeRes. */
    class UniversalConsecrateSpeedUpTributeRes implements IUniversalConsecrateSpeedUpTributeRes {

        /**
         * Constructs a new UniversalConsecrateSpeedUpTributeRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateSpeedUpTributeRes);

        /** UniversalConsecrateSpeedUpTributeRes StatueType. */
        public StatueType: number;

        /** UniversalConsecrateSpeedUpTributeRes UniversalConsecrateTributeList. */
        public UniversalConsecrateTributeList: data.IUniversalConsecrateTribute[];

        /**
         * Creates a new UniversalConsecrateSpeedUpTributeRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateSpeedUpTributeRes instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateSpeedUpTributeRes): gamesvr.UniversalConsecrateSpeedUpTributeRes;

        /**
         * Encodes the specified UniversalConsecrateSpeedUpTributeRes message. Does not implicitly {@link gamesvr.UniversalConsecrateSpeedUpTributeRes.verify|verify} messages.
         * @param message UniversalConsecrateSpeedUpTributeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateSpeedUpTributeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateSpeedUpTributeRes message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateSpeedUpTributeRes.verify|verify} messages.
         * @param message UniversalConsecrateSpeedUpTributeRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateSpeedUpTributeRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateSpeedUpTributeRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateSpeedUpTributeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateSpeedUpTributeRes;

        /**
         * Decodes an UniversalConsecrateSpeedUpTributeRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateSpeedUpTributeRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateSpeedUpTributeRes;

        /**
         * Verifies an UniversalConsecrateSpeedUpTributeRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateSpeedUpTributeRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateSpeedUpTributeRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateSpeedUpTributeRes;

        /**
         * Creates a plain object from an UniversalConsecrateSpeedUpTributeRes message. Also converts values to other types if specified.
         * @param message UniversalConsecrateSpeedUpTributeRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateSpeedUpTributeRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateSpeedUpTributeRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateReceiveTributeRewardReq. */
    interface IUniversalConsecrateReceiveTributeRewardReq {

        /** UniversalConsecrateReceiveTributeRewardReq StatueType */
        StatueType?: (number|null);
    }

    /** Represents an UniversalConsecrateReceiveTributeRewardReq. */
    class UniversalConsecrateReceiveTributeRewardReq implements IUniversalConsecrateReceiveTributeRewardReq {

        /**
         * Constructs a new UniversalConsecrateReceiveTributeRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateReceiveTributeRewardReq);

        /** UniversalConsecrateReceiveTributeRewardReq StatueType. */
        public StatueType: number;

        /**
         * Creates a new UniversalConsecrateReceiveTributeRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateReceiveTributeRewardReq instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateReceiveTributeRewardReq): gamesvr.UniversalConsecrateReceiveTributeRewardReq;

        /**
         * Encodes the specified UniversalConsecrateReceiveTributeRewardReq message. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveTributeRewardReq.verify|verify} messages.
         * @param message UniversalConsecrateReceiveTributeRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateReceiveTributeRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateReceiveTributeRewardReq message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveTributeRewardReq.verify|verify} messages.
         * @param message UniversalConsecrateReceiveTributeRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateReceiveTributeRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateReceiveTributeRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateReceiveTributeRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateReceiveTributeRewardReq;

        /**
         * Decodes an UniversalConsecrateReceiveTributeRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateReceiveTributeRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateReceiveTributeRewardReq;

        /**
         * Verifies an UniversalConsecrateReceiveTributeRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateReceiveTributeRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateReceiveTributeRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateReceiveTributeRewardReq;

        /**
         * Creates a plain object from an UniversalConsecrateReceiveTributeRewardReq message. Also converts values to other types if specified.
         * @param message UniversalConsecrateReceiveTributeRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateReceiveTributeRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateReceiveTributeRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateReceiveTributeRewardRes. */
    interface IUniversalConsecrateReceiveTributeRewardRes {

        /** UniversalConsecrateReceiveTributeRewardRes StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateReceiveTributeRewardRes StatueExp */
        StatueExp?: (number|null);

        /** UniversalConsecrateReceiveTributeRewardRes StatueBefall */
        StatueBefall?: (number|null);

        /** UniversalConsecrateReceiveTributeRewardRes UniversalConsecrateTributeList */
        UniversalConsecrateTributeList?: (data.IUniversalConsecrateTribute[]|null);

        /** UniversalConsecrateReceiveTributeRewardRes Exp */
        Exp?: (number|null);

        /** UniversalConsecrateReceiveTributeRewardRes TotalExp */
        TotalExp?: (number|null);

        /** UniversalConsecrateReceiveTributeRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalConsecrateReceiveTributeRewardRes. */
    class UniversalConsecrateReceiveTributeRewardRes implements IUniversalConsecrateReceiveTributeRewardRes {

        /**
         * Constructs a new UniversalConsecrateReceiveTributeRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateReceiveTributeRewardRes);

        /** UniversalConsecrateReceiveTributeRewardRes StatueType. */
        public StatueType: number;

        /** UniversalConsecrateReceiveTributeRewardRes StatueExp. */
        public StatueExp: number;

        /** UniversalConsecrateReceiveTributeRewardRes StatueBefall. */
        public StatueBefall: number;

        /** UniversalConsecrateReceiveTributeRewardRes UniversalConsecrateTributeList. */
        public UniversalConsecrateTributeList: data.IUniversalConsecrateTribute[];

        /** UniversalConsecrateReceiveTributeRewardRes Exp. */
        public Exp: number;

        /** UniversalConsecrateReceiveTributeRewardRes TotalExp. */
        public TotalExp: number;

        /** UniversalConsecrateReceiveTributeRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalConsecrateReceiveTributeRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateReceiveTributeRewardRes instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateReceiveTributeRewardRes): gamesvr.UniversalConsecrateReceiveTributeRewardRes;

        /**
         * Encodes the specified UniversalConsecrateReceiveTributeRewardRes message. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveTributeRewardRes.verify|verify} messages.
         * @param message UniversalConsecrateReceiveTributeRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateReceiveTributeRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateReceiveTributeRewardRes message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveTributeRewardRes.verify|verify} messages.
         * @param message UniversalConsecrateReceiveTributeRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateReceiveTributeRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateReceiveTributeRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateReceiveTributeRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateReceiveTributeRewardRes;

        /**
         * Decodes an UniversalConsecrateReceiveTributeRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateReceiveTributeRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateReceiveTributeRewardRes;

        /**
         * Verifies an UniversalConsecrateReceiveTributeRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateReceiveTributeRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateReceiveTributeRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateReceiveTributeRewardRes;

        /**
         * Creates a plain object from an UniversalConsecrateReceiveTributeRewardRes message. Also converts values to other types if specified.
         * @param message UniversalConsecrateReceiveTributeRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateReceiveTributeRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateReceiveTributeRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateReceiveStatueLevelRewardReq. */
    interface IUniversalConsecrateReceiveStatueLevelRewardReq {

        /** UniversalConsecrateReceiveStatueLevelRewardReq StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateReceiveStatueLevelRewardReq ReceiveLevel */
        ReceiveLevel?: (number|null);
    }

    /** Represents an UniversalConsecrateReceiveStatueLevelRewardReq. */
    class UniversalConsecrateReceiveStatueLevelRewardReq implements IUniversalConsecrateReceiveStatueLevelRewardReq {

        /**
         * Constructs a new UniversalConsecrateReceiveStatueLevelRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardReq);

        /** UniversalConsecrateReceiveStatueLevelRewardReq StatueType. */
        public StatueType: number;

        /** UniversalConsecrateReceiveStatueLevelRewardReq ReceiveLevel. */
        public ReceiveLevel: number;

        /**
         * Creates a new UniversalConsecrateReceiveStatueLevelRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateReceiveStatueLevelRewardReq instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardReq): gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueLevelRewardReq message. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueLevelRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueLevelRewardReq message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueLevelRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateReceiveStatueLevelRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateReceiveStatueLevelRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq;

        /**
         * Decodes an UniversalConsecrateReceiveStatueLevelRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateReceiveStatueLevelRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq;

        /**
         * Verifies an UniversalConsecrateReceiveStatueLevelRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateReceiveStatueLevelRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateReceiveStatueLevelRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq;

        /**
         * Creates a plain object from an UniversalConsecrateReceiveStatueLevelRewardReq message. Also converts values to other types if specified.
         * @param message UniversalConsecrateReceiveStatueLevelRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateReceiveStatueLevelRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateReceiveStatueLevelRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateReceiveStatueLevelRewardRes. */
    interface IUniversalConsecrateReceiveStatueLevelRewardRes {

        /** UniversalConsecrateReceiveStatueLevelRewardRes StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateReceiveStatueLevelRewardRes ReceiveLevel */
        ReceiveLevel?: (number|null);

        /** UniversalConsecrateReceiveStatueLevelRewardRes Exp */
        Exp?: (number|null);

        /** UniversalConsecrateReceiveStatueLevelRewardRes TotalExp */
        TotalExp?: (number|null);

        /** UniversalConsecrateReceiveStatueLevelRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalConsecrateReceiveStatueLevelRewardRes. */
    class UniversalConsecrateReceiveStatueLevelRewardRes implements IUniversalConsecrateReceiveStatueLevelRewardRes {

        /**
         * Constructs a new UniversalConsecrateReceiveStatueLevelRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardRes);

        /** UniversalConsecrateReceiveStatueLevelRewardRes StatueType. */
        public StatueType: number;

        /** UniversalConsecrateReceiveStatueLevelRewardRes ReceiveLevel. */
        public ReceiveLevel: number;

        /** UniversalConsecrateReceiveStatueLevelRewardRes Exp. */
        public Exp: number;

        /** UniversalConsecrateReceiveStatueLevelRewardRes TotalExp. */
        public TotalExp: number;

        /** UniversalConsecrateReceiveStatueLevelRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalConsecrateReceiveStatueLevelRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateReceiveStatueLevelRewardRes instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardRes): gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueLevelRewardRes message. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueLevelRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueLevelRewardRes message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueLevelRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateReceiveStatueLevelRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateReceiveStatueLevelRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateReceiveStatueLevelRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes;

        /**
         * Decodes an UniversalConsecrateReceiveStatueLevelRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateReceiveStatueLevelRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes;

        /**
         * Verifies an UniversalConsecrateReceiveStatueLevelRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateReceiveStatueLevelRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateReceiveStatueLevelRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes;

        /**
         * Creates a plain object from an UniversalConsecrateReceiveStatueLevelRewardRes message. Also converts values to other types if specified.
         * @param message UniversalConsecrateReceiveStatueLevelRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateReceiveStatueLevelRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateReceiveStatueLevelRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateReceiveStatueBefallRewardReq. */
    interface IUniversalConsecrateReceiveStatueBefallRewardReq {

        /** UniversalConsecrateReceiveStatueBefallRewardReq StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateReceiveStatueBefallRewardReq ReceiveBefallRewardIndex */
        ReceiveBefallRewardIndex?: (number|null);
    }

    /** Represents an UniversalConsecrateReceiveStatueBefallRewardReq. */
    class UniversalConsecrateReceiveStatueBefallRewardReq implements IUniversalConsecrateReceiveStatueBefallRewardReq {

        /**
         * Constructs a new UniversalConsecrateReceiveStatueBefallRewardReq.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardReq);

        /** UniversalConsecrateReceiveStatueBefallRewardReq StatueType. */
        public StatueType: number;

        /** UniversalConsecrateReceiveStatueBefallRewardReq ReceiveBefallRewardIndex. */
        public ReceiveBefallRewardIndex: number;

        /**
         * Creates a new UniversalConsecrateReceiveStatueBefallRewardReq instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateReceiveStatueBefallRewardReq instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardReq): gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueBefallRewardReq message. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueBefallRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueBefallRewardReq message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueBefallRewardReq message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardReq, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateReceiveStatueBefallRewardReq message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateReceiveStatueBefallRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq;

        /**
         * Decodes an UniversalConsecrateReceiveStatueBefallRewardReq message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateReceiveStatueBefallRewardReq
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq;

        /**
         * Verifies an UniversalConsecrateReceiveStatueBefallRewardReq message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateReceiveStatueBefallRewardReq message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateReceiveStatueBefallRewardReq
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq;

        /**
         * Creates a plain object from an UniversalConsecrateReceiveStatueBefallRewardReq message. Also converts values to other types if specified.
         * @param message UniversalConsecrateReceiveStatueBefallRewardReq
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateReceiveStatueBefallRewardReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateReceiveStatueBefallRewardReq to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UniversalConsecrateReceiveStatueBefallRewardRes. */
    interface IUniversalConsecrateReceiveStatueBefallRewardRes {

        /** UniversalConsecrateReceiveStatueBefallRewardRes StatueType */
        StatueType?: (number|null);

        /** UniversalConsecrateReceiveStatueBefallRewardRes ReceiveBefallRewardCount */
        ReceiveBefallRewardCount?: (number|null);

        /** UniversalConsecrateReceiveStatueBefallRewardRes RandomBefallRewardIndexList */
        RandomBefallRewardIndexList?: (number[]|null);

        /** UniversalConsecrateReceiveStatueBefallRewardRes Exp */
        Exp?: (number|null);

        /** UniversalConsecrateReceiveStatueBefallRewardRes TotalExp */
        TotalExp?: (number|null);

        /** UniversalConsecrateReceiveStatueBefallRewardRes Prizes */
        Prizes?: (data.IItemInfo[]|null);
    }

    /** Represents an UniversalConsecrateReceiveStatueBefallRewardRes. */
    class UniversalConsecrateReceiveStatueBefallRewardRes implements IUniversalConsecrateReceiveStatueBefallRewardRes {

        /**
         * Constructs a new UniversalConsecrateReceiveStatueBefallRewardRes.
         * @param [properties] Properties to set
         */
        constructor(properties?: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardRes);

        /** UniversalConsecrateReceiveStatueBefallRewardRes StatueType. */
        public StatueType: number;

        /** UniversalConsecrateReceiveStatueBefallRewardRes ReceiveBefallRewardCount. */
        public ReceiveBefallRewardCount: number;

        /** UniversalConsecrateReceiveStatueBefallRewardRes RandomBefallRewardIndexList. */
        public RandomBefallRewardIndexList: number[];

        /** UniversalConsecrateReceiveStatueBefallRewardRes Exp. */
        public Exp: number;

        /** UniversalConsecrateReceiveStatueBefallRewardRes TotalExp. */
        public TotalExp: number;

        /** UniversalConsecrateReceiveStatueBefallRewardRes Prizes. */
        public Prizes: data.IItemInfo[];

        /**
         * Creates a new UniversalConsecrateReceiveStatueBefallRewardRes instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UniversalConsecrateReceiveStatueBefallRewardRes instance
         */
        public static create(properties?: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardRes): gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueBefallRewardRes message. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueBefallRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UniversalConsecrateReceiveStatueBefallRewardRes message, length delimited. Does not implicitly {@link gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes.verify|verify} messages.
         * @param message UniversalConsecrateReceiveStatueBefallRewardRes message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: gamesvr.IUniversalConsecrateReceiveStatueBefallRewardRes, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UniversalConsecrateReceiveStatueBefallRewardRes message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UniversalConsecrateReceiveStatueBefallRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes;

        /**
         * Decodes an UniversalConsecrateReceiveStatueBefallRewardRes message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UniversalConsecrateReceiveStatueBefallRewardRes
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes;

        /**
         * Verifies an UniversalConsecrateReceiveStatueBefallRewardRes message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UniversalConsecrateReceiveStatueBefallRewardRes message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UniversalConsecrateReceiveStatueBefallRewardRes
         */
        public static fromObject(object: { [k: string]: any }): gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes;

        /**
         * Creates a plain object from an UniversalConsecrateReceiveStatueBefallRewardRes message. Also converts values to other types if specified.
         * @param message UniversalConsecrateReceiveStatueBefallRewardRes
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: gamesvr.UniversalConsecrateReceiveStatueBefallRewardRes, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UniversalConsecrateReceiveStatueBefallRewardRes to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** CMD enum. */
    enum CMD {
        INVALID = 0,
        LOGIN_REQ = 101,
        LOGIN_RES = 102,
        HEART_BEAT_REQ = 103,
        HEART_BEAT_RES = 104,
        CHANGE_NAME_REQ = 105,
        CHANGE_NAME_RES = 106,
        CHANGE_HEAD_REQ = 107,
        CHANGE_HEAD_RES = 108,
        RANDOM_NAME_REQ = 109,
        RANDOM_NAME_RES = 110,
        DIFF_LOGIN_NOTIFY = 112,
        GET_ITEM_REQ = 201,
        GET_ITEM_RES = 202,
        ITEM_CHANGE_NOTIFY = 204,
        USE_ITEM_REQ = 205,
        USE_ITEM_RES = 206,
        ITEM_REPLACE_NOTIFY = 207,
        USERDATA_REFRESH_NOTIFY = 208,
        COMPOSE_HERO_REQ = 301,
        COMPOSE_HERO_RES = 302,
        ADD_HERO_STAR_REQ = 303,
        ADD_HERO_STAR_RES = 304,
        HERO_EQUIP_REQ = 305,
        HERO_EQUIP_RES = 306,
        HERO_UNEQUIP_REQ = 307,
        HERO_UNEQUIP_RES = 308,
        ONCE_EQUIP_REQ = 309,
        ONCE_EQUIP_RES = 310,
        ONCE_UNEQUIP_REQ = 311,
        ONCE_UNEQUIP_RES = 312,
        GAIN_GIFT_REQ = 313,
        GAIN_GIFT_RES = 314,
        SELECT_GIFT_SKILL_REQ = 315,
        SELECT_GIFT_SKILL_RES = 316,
        ENTER_PVE_REQ = 401,
        ENTER_PVE_RES = 402,
        FINISH_PVE_REQ = 403,
        FINISH_PVE_RES = 404,
        PRE_SET_TEAM_REQ = 405,
        PRE_SET_TEAM_RES = 406,
        CHAPTER_REWARD_REQ = 407,
        CHAPTER_REWARD_RES = 408,
        PVE_MAIN_RECEIVE_SECTION_REWARD_REQ = 409,
        PVE_MAIN_RECEIVE_SECTION_REWARD_RES = 410,
        PVE_MAIN_RECEIVE_CHAPTER_REWARD_REQ = 411,
        PVE_MAIN_RECEIVE_CHAPTER_REWARD_RES = 412,
        SWEEP_PVE_REQ = 413,
        SWEEP_PVE_RES = 414,
        ENHANCE_EQUIPMENT_REQ = 501,
        ENHANCE_EQUIPMENT_RES = 502,
        BREAK_EQUIPMENT_REQ = 503,
        BREAK_EQUIPMENT_RES = 504,
        ASSIGN_EQUIPMENT_REQ = 505,
        ASSIGN_EQUIPMENT_RES = 506,
        CAST_SOUL_FOUND_EQUIPMENT_REQ = 507,
        CAST_SOUL_FOUND_EQUIPMENT_RES = 508,
        CAST_SOUL_CHOOSE_EQUIPMENT_REQ = 509,
        CAST_SOUL_CHOOSE_EQUIPMENT_RES = 510,
        RESOLVE_EQUIPMENT_REQ = 511,
        RESOLVE_EQUIPMENT_RES = 512,
        DECLINE_EQUIPMENT_REQ = 513,
        DECLINE_EQUIPMENT_RES = 514,
        ENHANCE_TOTAL_EQUIPMENT_REQ = 515,
        ENHANCE_TOTAL_EQUIPMENT_RES = 516,
        ADD_MAIL_REQ = 601,
        ADD_MAIL_RES = 602,
        READ_MAIL_REQ = 603,
        READ_MAIL_RES = 604,
        TAKE_MAIL_REQ = 605,
        TAKE_MAIL_RES = 606,
        TAKE_ALL_MAIL_REQ = 607,
        TAKE_ALL_MAIL_RES = 608,
        AUTO_CLEAR_MAIL_REQ = 609,
        AUTO_CLEAR_MAIL_RES = 610,
        RECEIVE_MAIL_NOTIFY = 611,
        SEND_CHAT_REQ = 701,
        SEND_CHAT_RES = 702,
        CHAT_MESSAGE_NOTIFY = 704,
        BLOCK_USER_REQ = 705,
        BLOCK_USER_RES = 706,
        REMOVE_BLOCKED_REQ = 707,
        REMOVE_BLOCKED_RES = 708,
        GACHA_CARD_REQ = 801,
        GACHA_CARD_RES = 802,
        GACHA_SIMULATE_REQ = 803,
        GACHA_SIMULATE_RES = 804,
        SAVE_SIMULATE_REQ = 805,
        SAVE_SIMULATE_RES = 806,
        SELECT_SIMULATE_REQ = 807,
        SELECT_SIMULATE_RES = 808,
        CARD_POOL_STATUS_NOTIFY = 810,
        SUMMON_CARD_COUNT_NOTIFY = 811,
        BUY_BATTLE_PASS_REQ = 901,
        BUY_BATTLE_PASS_RES = 902,
        TRIAL_RESPECT_START_REQ = 911,
        TRIAL_RESPECT_START_RES = 912,
        TRIAL_RESPECT_REWARD_REQ = 913,
        TRIAL_RESPECT_REWARD_RES = 914,
        TRIAL_RESPECT_REWARD_ALL_REQ = 915,
        TRIAL_RESPECT_REWARD_ALL_RES = 916,
        TRIAL_RESPECT_ENTER_PVE_REQ = 917,
        TRIAL_RESPECT_ENTER_PVE_RES = 918,
        TRIAL_RESPECT_CHANGE_ENEMY_REQ = 919,
        TRIAL_RESPECT_CHANGE_ENEMY_RES = 920,
        TRIAL_RESPECT_PURCHASE_REQ = 921,
        TRIAL_RESPECT_PURCHASE_RES = 922,
        TRIAL_PURGATORY_RELIVE_REQ = 931,
        TRIAL_PURGATORY_RELIVE_RES = 932,
        TRIAL_PURGATORY_ENTER_PVE_REQ = 933,
        TRIAL_PURGATORY_ENTER_PVE_RES = 934,
        TRIAL_PURGATORY_PURCHASE_REQ = 935,
        TRIAL_PURGATORY_PURCHASE_RES = 936,
        TRIAL_PURGATORY_LIVE_ALTAR_REQ = 937,
        TRIAL_PURGATORY_LIVE_ALTAR_RES = 938,
        TRIAL_PURGATORY_HP_ALTAR_REQ = 939,
        TRIAL_PURGATORY_HP_ALTAR_RES = 940,
        TRIAL_PURGATORY_TRANSGATE_REQ = 941,
        TRIAL_PURGATORY_TRANSGATE_RES = 942,
        TRIAL_PURGATORY_UNMASK_REQ = 943,
        TRIAL_PURGATORY_UNMASK_RES = 944,
        TRIAL_ISLAND_RELIVE_REQ = 951,
        TRIAL_ISLAND_RELIVE_RES = 952,
        TRIAL_ISLAND_SELECT_BUFF_REQ = 953,
        TRIAL_ISLAND_SELECT_BUFF_RES = 954,
        TRIAL_ISLAND_ENTER_PVE_REQ = 955,
        TRIAL_ISLAND_ENTER_PVE_RES = 956,
        TRIAL_ISLAND_LIVE_ALTAR_REQ = 957,
        TRIAL_ISLAND_LIVE_ALTAR_RES = 958,
        TRIAL_ISLAND_HP_ALTAR_REQ = 959,
        TRIAL_ISLAND_HP_ALTAR_RES = 960,
        TRIAL_ISLAND_TRANSGATE_REQ = 961,
        TRIAL_ISLAND_TRANSGATE_RES = 962,
        TRIAL_DEVIL_ENTER_PVE_REQ = 981,
        TRIAL_DEVIL_ENTER_PVE_RES = 982,
        GET_PRODUCT_LIST_REQ = 1001,
        GET_PRODUCT_LIST_RES = 1002,
        BUY_PRODUCT_REQ = 1003,
        BUY_PRODUCT_RES = 1004,
        GET_PAY_ORDER_REQ = 1005,
        GET_PAY_ORDER_RES = 1006,
        GET_GIFT_ORDER_REQ = 1007,
        GET_GIFT_ORDER_RES = 1008,
        PAY_RESULT_NOTIFY = 1010,
        SHOP_RANDOM_SHOP_REFRESH_REQ = 1011,
        SHOP_RANDOM_SHOP_REFRESH_RES = 1012,
        SHOP_RANDOM_SHOP_REFRESH_NOTIFY = 1013,
        SHOP_RANDOM_SHOP_BUY_REQ = 1015,
        SHOP_RANDOM_SHOP_BUY_RES = 1016,
        SHOP_TIME_FINITE_GIFT_FOUND_GIFT_REQ = 1017,
        SHOP_TIME_FINITE_GIFT_FOUND_GIFT_RES = 1018,
        SHOP_TIME_FINITE_GIFT_BUY_GIFT_REQ = 1019,
        SHOP_TIME_FINITE_GIFT_BUY_GIFT_RES = 1020,
        BUY_CURRENCY_GIFT_REQ = 1021,
        BUY_CURRENCY_GIFT_RES = 1022,
        TIME_LIMIT_TRAVEL_TOUCH_NOTIFY = 1031,
        TIME_LIMIT_TRAVEL_BUY_SHOP_REQ = 1032,
        TIME_LIMIT_TRAVEL_BUY_SHOP_RES = 1033,
        TIME_LIMIT_FANTASY_TOUCH_NOTIFY = 1034,
        TIME_LIMIT_FANTASY_ENTER_PVE_REQ = 1035,
        TIME_LIMIT_FANTASY_ENTER_PVE_RES = 1036,
        TIME_LIMIT_FANTASY_FINISH_PVE_REQ = 1037,
        TIME_LIMIT_FANTASY_FINISH_PVE_RES = 1038,
        TRIAL_LIGHT_DARK_ACTIVATE_HEXAGRAM_REQ = 1041,
        TRIAL_LIGHT_DARK_ACTIVATE_HEXAGRAM_RES = 1042,
        TRIAL_LIGHT_DARK_ENTER_REQ = 1043,
        TRIAL_LIGHT_DARK_ENTER_RES = 1044,
        TRIAL_LIGHT_DARK_FINISH_REQ = 1045,
        TRIAL_LIGHT_DARK_FINISH_RES = 1046,
        TRIAL_HELL_GET_PVE_REQ = 1051,
        TRIAL_HELL_GET_PVE_RES = 1052,
        TRIAL_HELL_ENTER_PVE_REQ = 1053,
        TRIAL_HELL_ENTER_PVE_RES = 1054,
        TRIAL_HELL_FINISH_PVE_REQ = 1055,
        TRIAL_HELL_FINISH_PVE_RES = 1056,
        TRIAL_CLOUD_DREAM_GET_PVE_REQ = 1061,
        TRIAL_CLOUD_DREAM_GET_PVE_RES = 1062,
        TRIAL_CLOUD_DREAM_ENTER_PVE_REQ = 1063,
        TRIAL_CLOUD_DREAM_ENTER_PVE_RES = 1064,
        TRIAL_CLOUD_DREAM_FINISH_PVE_REQ = 1065,
        TRIAL_CLOUD_DREAM_FINISH_PVE_RES = 1066,
        TRIAL_CLOUD_DREAM_RECEIVE_REWARD_REQ = 1067,
        TRIAL_CLOUD_DREAM_RECEIVE_REWARD_RES = 1068,
        TRIAL_MIRACLE_DOOR_GET_PVE_REQ = 1081,
        TRIAL_MIRACLE_DOOR_GET_PVE_RES = 1082,
        TRIAL_MIRACLE_DOOR_ENTER_PVE_REQ = 1083,
        TRIAL_MIRACLE_DOOR_ENTER_PVE_RES = 1084,
        TRIAL_MIRACLE_DOOR_FINISH_PVE_REQ = 1085,
        TRIAL_MIRACLE_DOOR_FINISH_PVE_RES = 1086,
        TRIAL_MIRACLE_DOOR_RECEIVE_REWARD_REQ = 1087,
        TRIAL_MIRACLE_DOOR_RECEIVE_REWARD_RES = 1088,
        HERO_POWER_NOTIFY = 1101,
        TEAM_POWER_NOTIFY = 1102,
        TOTAL_POWER_NOTIFY = 1103,
        PVP_PEAK_DUEL_TRADE_ENEMY_REQ = 1111,
        PVP_PEAK_DUEL_TRADE_ENEMY_RES = 1112,
        PVP_PEAK_DUEL_CHANGE_RANK_NOTIFY = 1113,
        PVP_PEAK_DUEL_CHANGE_RECORD_FIGHT_NOTIFY = 1114,
        PVP_PEAK_DUEL_TRADE_DEFENSIVE_LINEUP_REQ = 1115,
        PVP_PEAK_DUEL_TRADE_DEFENSIVE_LINEUP_RES = 1116,
        PVP_PEAK_DUEL_ENTER_REQ = 1117,
        PVP_PEAK_DUEL_ENTER_RES = 1118,
        PVP_SPIRIT_ENTER_REQ = 1123,
        PVP_SPIRIT_ENTER_RES = 1124,
        PVP_SPIRIT_CHANGE_ENEMY_NOTIFY = 1127,
        PVP_SPIRIT_TRADE_ENEMY_REQ = 1129,
        PVP_SPIRIT_TRADE_ENEMY_RES = 1130,
        PVP_SPIRIT_TRADE_DEFENSIVE_LINEUP_REQ = 1131,
        PVP_SPIRIT_TRADE_DEFENSIVE_LINEUP_RES = 1132,
        PVP_SPIRIT_CHANGE_RANK_NOTIFY = 1133,
        PVP_SPIRIT_CHANGE_RECORD_FIGHT_NOTIFY = 1135,
        PVP_SPIRIT_OBTAIN_ENEMY_INFO_REQ = 1136,
        PVP_SPIRIT_OBTAIN_ENEMY_INFO_RES = 1137,
        PVP_FAIRY_BUY_CHALLENGE_TIMES_REQ = 1151,
        PVP_FAIRY_BUY_CHALLENGE_TIMES_RES = 1152,
        PVP_FAIRY_ENTER_REQ = 1153,
        PVP_FAIRY_ENTER_RES = 1154,
        RANK_POWER_FIVE_HERO_GET_LIST_REQ = 1201,
        RANK_POWER_FIVE_HERO_GET_LIST_RES = 1202,
        RANK_POWER_ONE_HERO_GET_LIST_REQ = 1203,
        RANK_POWER_ONE_HERO_GET_LIST_RES = 1204,
        RANK_POWER_TOTAL_HERO_GET_LIST_REQ = 1205,
        RANK_POWER_TOTAL_HERO_GET_LIST_RES = 1206,
        RANK_PVP_FAIRY_INTEGRAL_GET_LIST_REQ = 1207,
        RANK_PVP_FAIRY_INTEGRAL_GET_LIST_RES = 1208,
        RANK_PVE_ADVENTURE_SCALE_GET_LIST_REQ = 1209,
        RANK_PVE_ADVENTURE_SCALE_GET_LIST_RES = 1210,
        RANK_PVE_DREAM_SCALE_GET_LIST_REQ = 1211,
        RANK_PVE_DREAM_SCALE_GET_LIST_RES = 1212,
        RANK_TRIAL_DEVIL_DAMAGE_GET_LIST_REQ = 1213,
        RANK_TRIAL_DEVIL_DAMAGE_GET_LIST_RES = 1214,
        RANK_PVP_PEAK_DUEL_GET_LIST_REQ = 1215,
        RANK_PVP_PEAK_DUEL_GET_LIST_RES = 1216,
        RANK_TRIAL_PURGATORY_SCALE_GET_LIST_REQ = 1217,
        RANK_TRIAL_PURGATORY_SCALE_GET_LIST_RES = 1218,
        RANK_HOME_PAGE_GET_FIRST_REQ = 1219,
        RANK_HOME_PAGE_GET_FIRST_RES = 1220,
        TASK_TARGET_GROUP_COUNT_CHANGE_NOTIFY = 1241,
        TASK_TARGET_RECEIVE_REWARD_REQ = 1243,
        TASK_TARGET_RECEIVE_REWARD_RES = 1244,
        TASK_MAIN_RECEIVE_REWARD_REQ = 1251,
        TASK_MAIN_RECEIVE_REWARD_RES = 1252,
        LEAD_SKILL_UPGRADE_REQ = 1301,
        LEAD_SKILL_UPGRADE_RES = 1302,
        LEAD_SKILL_RESET_REQ = 1303,
        LEAD_SKILL_RESET_RES = 1304,
        LEAD_GRASP_FEED_REQ = 1311,
        LEAD_GRASP_FEED_RES = 1312,
        SYSTEM_MESSAGE_NOTIFY = 1400,
        CLIENT_HOTUPDATE_NOTIFY = 1401,
        ACTIVITY_SPIRIT_RECEIVE_SPIRIT_REQ = 1501,
        ACTIVITY_SPIRIT_RECEIVE_SPIRIT_RES = 1502,
        ACTIVITY_SPIRIT_LAST_REFRESH_SP_TIME_NOTIFY = 1503,
        ACTIVITY_LEVEL_RECEIVE_REWARD_REQ = 1511,
        ACTIVITY_LEVEL_RECEIVE_REWARD_RES = 1512,
        ACTIVITY_LEVEL_CHANGE_RECHARGE_AMOUNT_NOTIFY = 1513,
        ACTIVITY_SIGN_IN_FLOP_CARD_REQ = 1521,
        ACTIVITY_SIGN_IN_FLOP_CARD_RES = 1522,
        ACTIVITY_SIGN_IN_REFRESH_HERO_REQ = 1523,
        ACTIVITY_SIGN_IN_REFRESH_HERO_RES = 1524,
        ACTIVITY_SIGN_IN_RECEIVE_HERO_REQ = 1525,
        ACTIVITY_SIGN_IN_RECEIVE_HERO_RES = 1526,
        ACTIVITY_SIGN_IN_CHANGE_HERO_NOTIFY = 1527,
        ACTIVITY_SEVEN_DAY_RECEIVE_ANIMATE_REWARD_REQ = 1541,
        ACTIVITY_SEVEN_DAY_RECEIVE_ANIMATE_REWARD_RES = 1542,
        ACTIVITY_SEVEN_DAY_RECEIVE_TASK_REWARD_REQ = 1543,
        ACTIVITY_SEVEN_DAY_RECEIVE_TASK_REWARD_RES = 1544,
        ACTIVITY_OPEN_SERVICE_LOGIN_RECEIVE_REWARD_REQ = 1545,
        ACTIVITY_OPEN_SERVICE_LOGIN_RECEIVE_REWARD_RES = 1546,
        ACTIVITY_BATTLE_PASS_RECEIVE_REWARD_REQ = 1547,
        ACTIVITY_BATTLE_PASS_RECEIVE_REWARD_RES = 1548,
        ACTIVITY_BATTLE_PASS_BUY_BATTLE_PASS_NOTIFY = 1549,
        ACTIVITY_BATTLE_PASS_BUY_LEVEL_REQ = 1551,
        ACTIVITY_BATTLE_PASS_BUY_LEVEL_RES = 1552,
        ACTIVITY_ONLINE_REWARD_RECEIVE_REWARD_REQ = 1561,
        ACTIVITY_ONLINE_REWARD_RECEIVE_REWARD_RES = 1562,
        ACTIVITY_DAILY_LOTTERY_LOTTERY_COUNT_NOTIFY = 1571,
        ACTIVITY_DAILY_LOTTERY_DEPART_REQ = 1573,
        ACTIVITY_DAILY_LOTTERY_DEPART_RES = 1574,
        ACTIVITY_DAILY_RECHARGE_DAY_RECHARGE_COUNT_NOTIFY = 1581,
        ACTIVITY_DAILY_RECHARGE_RECEIVE_REWARD_REQ = 1583,
        ACTIVITY_DAILY_RECHARGE_RECEIVE_REWARD_RES = 1584,
        ACTIVITY_AMOUNT_RECHARGE_RECHARGE_COUNT_NOTIFY = 1591,
        ACTIVITY_AMOUNT_RECHARGE_RECEIVE_REWARD_REQ = 1593,
        ACTIVITY_AMOUNT_RECHARGE_RECEIVE_REWARD_RES = 1594,
        ACTIVITY_RECHARGE_REBATE_OBTAIN_REQ = 1597,
        ACTIVITY_RECHARGE_REBATE_OBTAIN_RES = 1598,
        FINISH_GUIDE_REQ = 1601,
        FINISH_GUIDE_RES = 1602,
        ACTIVITY_DOUBLE_WEEK_RECEIVE_REWARD_REQ = 1603,
        ACTIVITY_DOUBLE_WEEK_RECEIVE_REWARD_RES = 1604,
        ACTIVITY_DOUBLE_WEEK_BUY_GIFT_COUNT_NOTIFY = 1605,
        ACTIVITY_DOUBLE_WEEK_RECEIVE_DAY_REWARD_REQ = 1606,
        ACTIVITY_DOUBLE_WEEK_RECEIVE_DAY_REWARD_RES = 1607,
        ACTIVITY_DOUBLE_WEEK_BUY_DAY_ADVANCE_NOTIFY = 1609,
        ACTIVITY_MONTH_CARD_BUY_MONTH_CARD_NOTIFY = 1611,
        ACTIVITY_MONTH_CARD_RECEIVE_DAY_REWARD_REQ = 1612,
        ACTIVITY_MONTH_CARD_RECEIVE_DAY_REWARD_RES = 1613,
        ACTIVITY_FIRST_CHARGE_RECEIVE_REWARD_REQ = 1621,
        ACTIVITY_FIRST_CHARGE_RECEIVE_REWARD_RES = 1622,
        ACTIVITY_HERO_GROWUP_RECEIVE_REWARD_REQ = 1623,
        ACTIVITY_HERO_GROWUP_RECEIVE_REWARD_RES = 1624,
        EXCHANGE_CODE_USE_REQ = 1701,
        EXCHANGE_CODE_USE_RES = 1702,
        FACTION_GET_FACTION_INFO_REQ = 1801,
        FACTION_GET_FACTION_INFO_RES = 1802,
        FACTION_CREATE_FACTION_REQ = 1803,
        FACTION_CREATE_FACTION_RES = 1804,
        FACTION_GET_FACTION_LIST_REQ = 1805,
        FACTION_GET_FACTION_LIST_RES = 1806,
        FACTION_APPLY_JOIN_FACTION_REQ = 1807,
        FACTION_APPLY_JOIN_FACTION_RES = 1808,
        FACTION_ADD_APPLICANT_NOTIFY = 1809,
        FACTION_PUSH_APPLICANT_NOTIFY = 1810,
        FACTION_FAST_JOIN_FACTION_REQ = 1811,
        FACTION_FAST_JOIN_FACTION_RES = 1812,
        FACTION_DISPOSE_APPLICANT_REQ = 1813,
        FACTION_DISPOSE_APPLICANT_RES = 1814,
        FACTION_DISPOSE_ALL_APPLICANT_REQ = 1815,
        FACTION_DISPOSE_ALL_APPLICANT_RES = 1816,
        FACTION_ADD_MEMBER_NOTIFY = 1817,
        FACTION_JOIN_FACTION_NOTIFY = 1818,
        FACTION_SET_APPLY_REQ = 1819,
        FACTION_SET_APPLY_RES = 1820,
        FACTION_CHANGE_SET_APPLY_NOTIFY = 1821,
        FACTION_SET_AUTO_ACCEPT_REQ = 1823,
        FACTION_SET_AUTO_ACCEPT_RES = 1824,
        FACTION_CHANGE_SET_AUTO_ACCEPT_NOTIFY = 1825,
        FACTION_CHANGE_NAME_REQ = 1827,
        FACTION_CHANGE_NAME_RES = 1828,
        FACTION_CHANGE_BULLETIN_REQ = 1829,
        FACTION_CHANGE_BULLETIN_RES = 1830,
        FACTION_ONLINE_MEMBER_NOTIFY = 1831,
        FACTION_OFFLINE_MEMBER_NOTIFY = 1832,
        FACTION_NOMINATE_MEMBER_REQ = 1833,
        FACTION_NOMINATE_MEMBER_RES = 1834,
        FACTION_NOMINATE_MEMBER_NOTIFY = 1835,
        FACTION_KICK_OUT_MEMBER_REQ = 1837,
        FACTION_KICK_OUT_MEMBER_RES = 1838,
        FACTION_KICK_OUT_MEMBER_NOTIFY = 1839,
        FACTION_EXIT_FACTION_REQ = 1841,
        FACTION_EXIT_FACTION_RES = 1842,
        FACTION_EXIT_FACTION_NOTIFY = 1843,
        FACTION_DISSOLVE_FACTION_NOTIFY = 1844,
        FACTION_ADD_NEWS_FEED_NOTIFY = 1845,
        FACTION_SIGN_IN_REQ = 1847,
        FACTION_SIGN_IN_RES = 1848,
        FACTION_DONATE_REQ = 1849,
        FACTION_DONATE_RES = 1850,
        FACTION_EXPEDITION_JOIN_REQ = 1901,
        FACTION_EXPEDITION_JOIN_RES = 1902,
        FACTION_EXPEDITION_URGE_REQ = 1903,
        FACTION_EXPEDITION_URGE_RES = 1904,
        FACTION_EXPEDITION_ORDER_RESULT_NOTIFY = 1905,
        FACTION_EXPEDITION_RECEIVE_JOIN_REWARD_REQ = 1907,
        FACTION_EXPEDITION_RECEIVE_JOIN_REWARD_RES = 1908,
        FACTION_EXPEDITION_RECEIVE_WIN_REWARD_REQ = 1909,
        FACTION_EXPEDITION_RECEIVE_WIN_REWARD_RES = 1910,
        FACTION_EXPEDITION_LEVEL_REFRESH_NOTIFY = 1911,
        SMELT_REFINE_REQ = 2001,
        SMELT_REFINE_RES = 2002,
        CHEAT_FINISH_PVE_REQ = 3001,
        CHEAT_FINISH_PVE_RES = 3002,
        CHEAT_FINISH_TRIAL_PURGATORY_REQ = 3003,
        CHEAT_FINISH_TRIAL_PURGATORY_RES = 3004,
        DIVINE_EXPEDITION_REFRESH_TASK_NOTIFY = 4001,
        DIVINE_EXPEDITION_JOIN_REQ = 4003,
        DIVINE_EXPEDITION_JOIN_RES = 4004,
        DIVINE_EXPEDITION_RECEIVE_REWARD_REQ = 4005,
        DIVINE_EXPEDITION_RECEIVE_REWARD_RES = 4006,
        DIVINE_EXPEDITION_RESET_TASK_REQ = 4007,
        DIVINE_EXPEDITION_RESET_TASK_RES = 4008,
        DIVINE_EXPEDITION_RECALL_REQ = 4009,
        DIVINE_EXPEDITION_RECALL_RES = 4010,
        BATTLE_MEASURE_REQ = 5001,
        BATTLE_MEASURE_RES = 5002,
        UNIVERSAL_SAGE_CHOSEN_ROAD_REQ = 6001,
        UNIVERSAL_SAGE_CHOSEN_ROAD_RES = 6002,
        UNIVERSAL_HANG_UP_GAIN_PREVIEW_REWARD_REQ = 6003,
        UNIVERSAL_HANG_UP_GAIN_PREVIEW_REWARD_RES = 6004,
        UNIVERSAL_HANG_UP_GAIN_RECEIVE_REWARD_REQ = 6005,
        UNIVERSAL_HANG_UP_GAIN_RECEIVE_REWARD_RES = 6006,
        UNIVERSAL_HANG_UP_GAIN_CHAPTER_CHANGE_NOTIFY = 6007,
        UNIVERSAL_HANG_UP_GAIN_FAST_HANG_UP_REQ = 6009,
        UNIVERSAL_HANG_UP_GAIN_FAST_HANG_UP_RES = 6010,
        UNIVERSAL_VIEW_USER_INFORM_REQ = 6021,
        UNIVERSAL_VIEW_USER_INFORM_RES = 6022,
        UNIVERSAL_CONSECRATE_PUT_ON_TRIBUTE_REQ = 6031,
        UNIVERSAL_CONSECRATE_PUT_ON_TRIBUTE_RES = 6032,
        UNIVERSAL_CONSECRATE_PUT_OFF_TRIBUTE_REQ = 6033,
        UNIVERSAL_CONSECRATE_PUT_OFF_TRIBUTE_RES = 6034,
        UNIVERSAL_CONSECRATE_SPEED_UP_TRIBUTE_REQ = 6035,
        UNIVERSAL_CONSECRATE_SPEED_UP_TRIBUTE_RES = 6036,
        UNIVERSAL_CONSECRATE_RECEIVE_TRIBUTE_REWARD_REQ = 6037,
        UNIVERSAL_CONSECRATE_RECEIVE_TRIBUTE_REWARD_RES = 6038,
        UNIVERSAL_CONSECRATE_RECEIVE_STATUE_LEVEL_REWARD_REQ = 6039,
        UNIVERSAL_CONSECRATE_RECEIVE_STATUE_LEVEL_REWARD_RES = 6040,
        UNIVERSAL_CONSECRATE_RECEIVE_STATUE_BEFALL_REWARD_REQ = 6041,
        UNIVERSAL_CONSECRATE_RECEIVE_STATUE_BEFALL_REWARD_RES = 6042,
        EPOCH_REWARD_VIEW_REWARD_REQ = 7001,
        EPOCH_REWARD_VIEW_REWARD_RES = 7002,
        EPOCH_REWARD_RECEIVE_REWARD_REQ = 7003,
        EPOCH_REWARD_RECEIVE_REWARD_RES = 7004,
        EPOCH_STRATEGY_VIEW_STRONG_DEGREE_REQ = 7011,
        EPOCH_STRATEGY_VIEW_STRONG_DEGREE_RES = 7012,
        EPOCH_STRATEGY_VIEW_HERO_DEGREE_REQ = 7013,
        EPOCH_STRATEGY_VIEW_HERO_DEGREE_RES = 7014,
        ACTIVITY_ETERNAL_RECHARGE_RECHARGE_COUNT_NOTIFY = 7111,
        ACTIVITY_ETERNAL_RECHARGE_RECEIVE_REWARD_REQ = 7113,
        ACTIVITY_ETERNAL_RECHARGE_RECEIVE_REWARD_RES = 7114,
        ACTIVITY_FEAST_GIF_BUY_GIFT_COUNT_NOTIFY = 7121,
        ACTIVITY_FEAST_GIFT_RECEIVE_SURPRISE_REWARD_REQ = 7123,
        ACTIVITY_FEAST_GIFT_RECEIVE_SURPRISE_REWARD_RES = 7124,
        ACTIVITY_LUXURY_GIFT_BUY_GIFT_NOTIFY = 7131,
        ACTIVITY_LUXURY_GIFT_RECEIVE_REWARD_REQ = 7133,
        ACTIVITY_LUXURY_GIFT_RECEIVE_REWARD_RES = 7134,
        TREASURE_ACHIEVE_COUNT_CHANGE_NOTIFY = 8001,
        TREASURE_PROFIT_VALUE_CHANGE_NOTIFY = 8003,
        TREASURE_PROFIT_CARD_POOL_RECORD_CHANGE_NOTIFY = 8005
    }
}

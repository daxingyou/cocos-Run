export namespace cfg {
 interface Accumulate {"AccumulateId"?: number, "AccumulatePrice"?: number, "AccumulateDropGroup"?: number, "AccumulateShowItem"?: number}
 interface ActivityCumulativeRecharge {"ID"?: number, "Stage"?: number, "Num"?: number, "NeedMoney"?: number, "RewardType"?: number, "RewardShow"?: string, "DropGroup"?: number, "ShowNeed"?: number}
 interface ActivityDayDraw {"ID"?: number, "Team"?: number, "Num"?: number, "Weight"?: number, "RewardType"?: number, "RewardShow"?: string, "DropGroup"?: number}
 interface ActivityDayRecharge {"ID"?: number, "Stage"?: number, "Day"?: number, "Num"?: number, "NeedMoney"?: number, "RewardType"?: number, "RewardShow"?: string, "DropGroup"?: number}
 interface ActivityFeastGift {"ActivityFeastGiftId"?: number, "ActivityFeastGiftOrder"?: number, "ActivityFeastGiftGiftId"?: number, "ActivityFeastGiftBuyNum"?: number, "ActivityFeastGiftDiscountNum"?: number}
 interface ActivityGetPower {"GetPowerID"?: number, "GetPowerTime"?: string, "GetPowerItem"?: number, "GetPowerImage"?: string}
 interface ActivityHeroGrowUp {"ActivityHeroGrowUpId"?: number, "ActivityHeroGrowUpRound"?: number, "ActivityHeroGrowUpOrder"?: number, "ActivityHeroGrowUpTaskId"?: number, "ActivityHeroGrowUpGiftId"?: number, "ActivityHeroGrowUpGiftBuyNum"?: number, "ActivityHeroGrowUpRewardCondition"?: number}
 interface ActivityLevelReward {"LevelRewardID"?: number, "LevelRewardGetLevel"?: number, "LevelRewardNormalShow"?: string, "LevelRewardNormalDropGroup"?: number, "LevelRewardKingShow"?: string, "LevelRewardKingDropGroup"?: number}
 interface ActivityList {"ActiveListID"?: number, "ActiveListFunctionID"?: number, "ActiveListName"?: string, "ActiveListStage"?: number, "ActiveListBeginTime"?: string, "ActiveListHoldTime"?: number, "ActiveListBtnImage"?: string, "ActiveListOrder"?: number}
 interface ActivityMonthCard {"ID"?: number, "HoldTime"?: number, "GetRewardShow"?: string, "GetRewardDropGroup"?: number, "DayRewardShow"?: string, "DayRewardDropGroup"?: number, "EmailID"?: number, "ShowImage"?: string}
 interface ActivityMonthCardGift {"ActivityMonthCardGiftDay"?: number, "ActivityMonthCardGiftRewardShow"?: string, "ActivityMonthCardGiftDropGroup"?: number}
 interface ActivityNextShow {"ActivityNextShowId"?: number, "ActivityNextShowName"?: string, "ActivityNextShowOrder"?: number, "ActivityNextShowIntroduce"?: string, "ActivityNextShowImage"?: string, "ActivityNextShowReward"?: string, "ActivityNextShowOpenTime"?: string, "ActivityNextShowBegin"?: string, "ActivityNextShowOver"?: string}
 interface ActivityOpenServiceLogin {"ActivityOpenServiceLoginID"?: number, "ActivityOpenServiceLoginRewardShow"?: string, "ActivityOpenServiceLoginRewardType"?: string}
 interface ActivityRechargeRebate {"RebateID"?: number, "RebateLevel"?: number, "RebateLevelName"?: string, "RebateLevelIntroduce"?: string, "RebateMoneyMagnification"?: number, "RebateRewardDropGroup"?: string}
 interface ActivitySevenDayTask {"ActivitySevenDayTaskID"?: number, "ActivitySevenDayTaskOpenTime"?: string, "ActivitySevenDayTaskHoldTime"?: number, "ActivitySevenDayTaskMoney"?: number, "ActivitySevenDayTaskMoneyRewardShow"?: string, "ActivitySevenDayEntryIcon"?: string, "ActivitySevenDayTaskList"?: string, "ActivitySevenDayShowImage"?: string}
 interface ActivitySignIn {"SignInID"?: number, "SignInType"?: number, "SignInNum"?: number, "SignInWeight"?: number, "SignInRewardShow"?: string, "SignInDropGroup"?: number}
 interface ActivityWeekSummonBattlePass {"OnlyID"?: number, "FunctionID"?: number, "NeedDay"?: number, "FreeRewardShow"?: string, "FreeRewardDropGroup"?: number, "BattlePassRewardShow"?: string, "BattlePassRewardDropGroup"?: number}
 interface ActivityWeekSummonList {"ID"?: number, "FunctionID"?: number, "OpenTime"?: string, "ActivityType"?: number, "HoldTime"?: number, "EntryIcon"?: string, "GiftID"?: string}
 interface ActivityWeekSummonReward {"FunctionID"?: number, "GetOrder"?: number, "NeedMoney"?: string, "RewardShow"?: string, "RewardGetCondition"?: number, "RewardDropGroup"?: number}
 interface ActivityWeekSummonTask {"FunctionID"?: number, "RoundID"?: number, "TaskList"?: string}
 interface AdventureChapter {"ChapterId"?: number, "ChapterBehind"?: number, "ChapterFront"?: number, "ChapterName"?: string, "ChapterLesson"?: string, "ChapterRewardShow"?: string, "ChapterRewardDropGroup"?: number, "ChapterAccumulateRewardShow"?: string, "ChapterAccumulateAllRewardShow"?: string}
 interface AdventureLesson {"LessonId"?: number, "LessonChapter"?: number, "LessonOrder"?: number, "LessonBranch"?: number, "LessonLast"?: number, "LessonType"?: number, "LessonFile"?: string, "LessonRunBg"?: number, "LessonRunSkin"?: number, "LessonRewardShow"?: string, "LessonRewardDrop"?: number, "LessonMonsterGroupId"?: string, "LessonRunShow"?: string, "LessonCost"?: string, "LessonEnterCondition"?: string, "LessonName"?: string, "LessonFightScene"?: string, "LessonProgressRewardShow"?: string, "LessonProgressRewardDropGroup"?: number, "LessonGift"?: number, "LessonPointHead"?: string, "LessonShow"?: number, "LessonModelName"?: string, "LessonModelSize"?: string, "LessonModelOrientation"?: string, "LessonNodeCoordinate"?: string}
 interface AdvertShow {"AdvertShowId"?: number, "AdvertShowImage"?: string, "AdvertShowJump"?: string, "AdvertShowOpenTime"?: string, "AdvertShowHoldTime"?: number, "AdvertShowOrder"?: number, "FunctionID"?: number}
 interface ALLType {"HeroTypeId"?: number, "HeroTypeForm"?: number, "HeroTypeFormNum"?: number, "HeroTypeIcon"?: string, "HeroTypeIcon2"?: string, "HeroTypeText"?: string}
 interface Attribute {"AttributeId"?: number, "AttributeValueType"?: number, "AttributeExhibition"?: number, "Name"?: string, "PowerAttrRate"?: number, "Illustrate"?: string}
 interface BattlePass {"ID"?: number, "Level"?: number, "NormalRewardShow"?: string, "SpecialRewardShow"?: string, "LevelupNeedMoney"?: number}
 interface Beast {"BeastID"?: number, "BeastType"?: number, "BeastName"?: string, "BeastQuality"?: number, "BeastPositionType"?: number, "BeastPropertyValue1"?: string, "BeastValueLevelAdd1"?: string, "BeastPropertyValue2"?: string, "BeastValueLevelAdd2"?: string, "BeastPropertyValue3"?: string, "BeastValueLevelAdd3"?: string, "BeastPropertyValue4"?: string, "BeastValueLevelAdd4"?: string, "BeastSpecialPropertyValue"?: string, "BeastSpecialValueStarAdd"?: string, "BeastSkill"?: number, "BeastSkillChange"?: string, "BeastHeadImage"?: string, "BeastShowImage"?: string, "BeastPower"?: string, "BeastDecomposeItem"?: string}
 interface ChangeBg {"ChangeBgID"?: number, "ChangeBgType"?: number, "ChangeBgNum"?: number, "ChangeBgOpenCondition"?: string, "ChangeBgImage"?: string, "ChangeBgLockType"?: number}
 interface ChatBubble {"ChatBubbleId"?: number, "ChatBubbleName"?: string, "ChatBubbleOpenTask"?: number, "ChatBubbleLeft"?: string, "ChatBubbleRight"?: string, "ChatBubbleLimit"?: string}
 interface ChatChannel {"ChatChannelId"?: number, "ChatChannelName"?: string, "ChatChannelMessageNum"?: number, "ChatChannelSendCD"?: number, "ChatChannelTextLimit"?: number, "ChatChannelSoundLimit"?: number}
 interface ChatEmoticon {"ChatEmoticonId"?: number, "ChatEmoticonType"?: number, "ChatEmoticonNum"?: number, "ChatEmoticonImage"?: string}
 interface ConfigBasic {"UserMaxLevel"?: number, "HeroLevel"?: number, "PlayerInitialLevel"?: number, "PlayerInitialGold"?: number, "PlayerInitialDiamonds"?: number, "PlayerInitialPhysical"?: number, "PlayerInitialHero"?: number, "PhysicalRecoveryLimit"?: number, "PhysicalRecoveryInterval"?: number, "PhysicalRecoveryGetNum"?: number, "ActivityResetCron"?: string, "InitialHeadPortrait"?: number, "PlayerInitialEnergy"?: number, "DayGiveItem"?: string, "MainDefaultBg"?: number, "MainDefaultHero"?: number, "BasicEmail"?: string, "LevelUpGet"?: number, "LevelUpMax"?: number, "InitialHeadFrame"?: number, "LeadSkill"?: number}
 interface ConfigModule {"HeroOpenNeedPiece"?: string, "HeroGetPiece"?: string, "HeroBeginStar"?: string, "EquipCastSoulNum"?: string, "ItemCastSoulNum"?: string, "EquipBreachUseReplaceItem"?: string, "EquipIntensifyCostMoney"?: number, "SummonCardStorageNum"?: number, "PVEDreamlandFightNum"?: number, "PVEHellCopy"?: number, "PVPDeifySettleTime"?: string, "PVPDeifyFightDropGroup"?: number, "PVPDeifyChangeCD"?: number, "PVPDeifyFightRecord"?: number, "PVPImmortalsWinPoint"?: string, "PVPImmortalsFightNum"?: number, "PVPImmortalsBuff"?: string, "PVPImmortalsRecode"?: number, "RandomFightBulletClip"?: number, "RandomFightCD"?: number, "RandomFightRepeat"?: number, "RandomFightText"?: string, "RandomFightDayMax"?: number, "RandomShopBulletClip"?: number, "RandomShopCD"?: number, "RandomShopHoldTime"?: number, "RandomShopText"?: string, "RandomShopDayMax"?: number, "PreinstallMax"?: number, "EquipStarLevelMax"?: string, "StrengthZPlayerEXP"?: number, "RankSizeMax"?: number, "BuyItemMax"?: number, "GetStrengthShopID"?: number, "GetStrengthItemID"?: string, "ReNameCost"?: number, "SignInChangeHeroCost"?: number, "SignInChangeHeroBulletClip"?: number, "LevelRewardKingCondition"?: number, "NormalNoticeHoldTime"?: number, "SystemNoticeHoldTime"?: number, "SignInCost"?: number, "ProduceOrderHero"?: number, "ProduceOrderEquip"?: number, "GuildBuildItem"?: number, "GuildRenameItem"?: number, "GuildAddCD"?: number, "GuildNoticeLockCD"?: number, "GuildDelPeopleText"?: string, "GuildRandomNotice"?: string, "GuildMonsterFightTime"?: string, "SmeltRandomPublicity"?: string, "GuildMonsterCostAddFight"?: number, "GuildMonsterAddFightCostMoney"?: number, "GuildMonsterAddFightMax"?: number, "GuildApplyMax"?: number, "PVPDeifyFightScene"?: string, "PVPImmortalsScene"?: string, "RandomFightScene"?: string, "EquipReductionNeed"?: number, "BattlePassMoney"?: number, "CloudDreamResetTime"?: number, "BattlePassLevelUpCost"?: number, "BattlePassForeverNeed"?: number, "BattlePassWarningTime"?: number, "DispatchRefreshCost"?: number, "DispatchRemindQuality"?: number, "OpenNoticeLevel"?: number, "OpenNoticeNum"?: number, "ShopRandomFreeCount"?: number, "BattleRoundLimit"?: number, "BombSpeed"?: number, "ActivityDayDrawNeedMoney"?: number, "AdventureLessonMoveSpeed"?: string, "LeadSkillResetCD"?: number, "ShopGiftSceneConfig"?: string, "HeroCompensateProduceGroupId"?: number, "ActivitySignInFirstLeftWheel"?: number, "AccumulateRewardBasicDropGroup"?: string, "AccumulateRewardBasicRewardShow"?: string, "AccumulateRewardGetTime"?: number, "AccumulateRewardMainShowTime"?: number, "AccumulateRewardMaxTime"?: number, "JumpFightShowTime"?: number, "AccumulateRewardShowPicture"?: string, "AutoFightMaxTime"?: number, "BeastLevelMax"?: string, "AccumulateRewardFastFreeCount"?: number, "AccumulateRewardFast"?: string, "EquipLevelMax"?: number, "BeastIntensifyCostMoney"?: number, "PVEChallengeChangeMonster"?: string, "PVEChallengeHeroQualityNeed"?: number, "PVEInfernalResurrectionItem"?: number, "PVEInfernalResurrectionFreeCD"?: number, "PVEInfernalOpenMax"?: number, "PVEFairyIslandResurrectionItem"?: number, "PVEFairyIslandResurrectionFreeTime"?: number, "PVEFairyIslandResetTime"?: number, "PVPTopBattleUseItemId"?: number, "PVPTopBattleFightDropGroup"?: number, "PVPTopBattleBasicPoint"?: number, "PVPTopBattleWinGetBasicPoint"?: number, "PVPTopBattleDifferenceNum"?: number, "PVPTopBattleDifferenceMax"?: number, "PVPTopBattleChangeCD"?: number, "BeastBreachUseReplaceItem"?: string, "ActivityLimitFeastDayRewardDropGroup"?: number, "ActivityMonthCardGiftHoldTime"?: number, "GuildBattleOpenTime"?: string, "GuildBattleFightTime"?: number, "GuildBattleRewardWinShow"?: string, "GuildBattleRewardWinDropGroup"?: number, "GuildBattleRewardLoseShow"?: string, "GuildBattleRewardLoseDropGroup"?: number, "GuildBattleRewardFightShow"?: string, "GuildBattleRewardFightDropGroup"?: number, "GuildExpeditionFigthNum"?: number, "GuildExpeditionOpenGiftNum"?: number}
 interface Consecrate {"ConsecrateID"?: number, "ConsecrateLevel"?: number, "ConsecrateType"?: number, "ConsecrateLevelExp"?: number, "ConsecrateRewardExhibition"?: string, "ConsecrateRewardProduceGroup"?: number, "ConsecrateOpenField"?: number, "ConsecrateAccelerate"?: number}
 interface ConsecrateCome {"ConsecrateComeID"?: number, "ConsecrateComeReward"?: string, "ConsecrateComeFaith"?: number}
 interface ConsecrateGoods {"ConsecrateGoodsID"?: number, "ConsecrateGoodsName"?: string, "ConsecrateGoodsOrder"?: number, "ConsecrateGoodsType"?: number, "ConsecrateGoodsDuration"?: number, "ConsecrateGoodsProduceGroup"?: number, "ConsecrateGoodsEXP"?: number, "ConsecrateGoodsFaith"?: number}
 interface Dialog {"DialogId"?: number, "DialogType"?: number, "DialogTitle"?: string, "DialogText"?: string, "DialogButton"?: string, "DialogClose"?: number, "DialogShow"?: number}
 interface DispatchLevel {"ID"?: number, "Level"?: number, "LevelUpNeed"?: string, "Star"?: string, "Quality"?: string, "TaskNumMax"?: number}
 interface DispatchTask {"ID"?: number, "DispatchQuality"?: number, "DispatchStar"?: number, "RewardItemID"?: number, "RewardNum"?: number, "RewardWeight"?: number, "CostTime"?: number, "NeedHeroQualityType"?: string, "NeedHeroQualityNum"?: number, "NeedHeroStarType"?: string, "NeedHeroStarNum"?: number, "NeedHeroArmorType"?: string, "NeedHeroArmorNum"?: number, "NeedHeroDiagramsType"?: string, "NeedHeroDiagramsNum"?: number, "NeedHeroLocationType"?: string, "NeedHeroLocationNum"?: number}
 interface Email {"EmailId"?: number, "EmailName"?: string, "EmailEnclosure"?: string, "EmailHoldTime"?: number, "EmailText"?: string}
 interface Equip {"EquipId"?: number, "EquipName"?: string, "SuitId"?: number, "Quality"?: number, "TextureType"?: number, "PositionType"?: number, "WhitAttack"?: number, "WhiteDefend"?: number, "WhiteHp"?: number, "WhitAttackAdd"?: string, "WhiteDefendAdd"?: string, "WhiteHpAdd"?: string, "GreenId"?: string, "YellowId"?: string, "GeneralAddSkill"?: number, "ExclusiveAddSkill"?: number, "ExclusiveChangeSkill"?: string, "Icon"?: string, "Illustrate"?: string, "DecomposeItem"?: string, "EquipPower"?: string}
 interface EquipCastSoul {"EquipCastSoulId"?: number, "EquipCastSoulEquipType"?: number, "EquipCastSoulEquipPart"?: number, "EquipCastSoulItemId"?: number, "EquipCastSoulPropertyId"?: number, "EquipCastSoulValueRange"?: string, "EquipCastSoulMaxRange"?: string, "EquipCastSoulWeight"?: number}
 interface EquipGreen {"ID"?: number, "Level"?: number, "Attack"?: number, "Defend"?: number, "Hp"?: number, "Critical"?: number, "CriticalHarm"?: number, "AttackPercent"?: number, "DefendPercent"?: number, "HpPercent"?: number}
 interface EquipSuit {"SuitId"?: number, "NeedEquip"?: string, "SuitSkill"?: string, "TwoUpPoint"?: string, "FourUpPoint"?: string, "TwoSuitChangeSkill"?: string, "FourSuitChangeSkill"?: string, "SuitName"?: string, "SuitIcon"?: string}
 interface EquipYellow {"ID"?: number, "Speed"?: number, "HarmImmunity"?: number, "Parry"?: number, "Miss"?: number, "Blood"?: number, "Harm"?: number, "Through"?: number, "CounterAttack"?: number, "Sputtering"?: number, "Continuity"?: number}
 interface ExchangeCode {"ExchangeCodeID"?: number, "ExchangeCodeTeam"?: number, "ExchangeCodeType"?: number, "ExchangeCodeNum"?: number, "ExchangeCodeContent"?: string, "ExchangeCodeDropGroup"?: number, "ExchangeCodeBeginTime"?: string, "ExchangeCodeOverTime"?: string}
 interface FailGuide {"FailGuideId"?: number, "FailGuideOpenLeveL"?: number, "FailGuideIcon"?: string, "FailGuideLink"?: string, "FailGuideName"?: string}
 interface FirstPay {"FirstPayId"?: number, "FirstPayDay"?: number, "FirstPayRewardShow"?: string, "FirstPayRewardDropGroup"?: number}
 interface FunctionConfig {"FunctionId"?: number, "FunctionName"?: string, "FunctionExplain"?: string, "FunctionIcon"?: string, "FunctionPosition"?: number, "FunctionOrder"?: number, "FunctionOpenCondition"?: string, "FunctionLockType"?: number, "FuncitonTips"?: number, "FunctionMoneyShow"?: string, "FunctionOpenShow"?: number, "FunctionShowIcon"?: string}
 interface FunctionGuide {"FunctionGuideID"?: number, "FunctionGuideTeam"?: number, "FunctionGuideCondition"?: string, "FunctionGuideOrder"?: number, "FunctionGuideType"?: number, "FunctionGuideHeroModel"?: number, "FunctionGuidePosition"?: number, "FunctionGuideHeroName"?: string, "FunctionGuideText"?: string, "FunctionGuideViewName"?: string, "FunctionGuideButtonName"?: string, "FunctionGuideListButtonName"?: string, "FunctionGuideBlack"?: number, "FunctionGuideLight"?: number, "FunctionGuideReturnMain"?: number, "FunctionGuideRepeat"?: number, "FunctionGuideJump"?: number}
 interface Game {"EnvType"?: number, "ServerID"?: number, "ServerName"?: string}
 interface GetAccess {"GetAccessId"?: number, "GetAccessIntroduce"?: string, "GetAccessLink"?: string, "GetAccessRecommend"?: number}
 interface GuildBattleBuild {"GuildBattleBuildId"?: number, "GuildBattleBuildName"?: string, "GuildBattleBuildImage"?: string, "GuildBattleBuildCamp"?: number, "GuildBattleBuildMorale"?: number, "GuildBattleBuildLife"?: number, "GuildBattleBuildLifeCutDown"?: number, "GuildBattleBuildPosition"?: number, "GuildBattleBuildPrepose"?: string}
 interface GuildBattlePoint {"GuildBattlePointId"?: number, "GuildBattlePointNum"?: number, "GuildBattlePointMoraleReduce"?: number}
 interface GuildBattleRank {"GuildBattleRankId"?: number, "GuildBattleRankNum"?: number, "GuildBattleRankReward"?: string, "GuildBattleRankDropGroup"?: number}
 interface GuildDonate {"ID"?: number, "MoneyCost"?: string, "RewardShow"?: string, "UseImage"?: string}
 interface GuildExpeditionBasic {"GuildExpeditionBasicId"?: number, "GuildExpeditionBasicLevel"?: number, "GuildExpeditionBasicEventNum"?: string, "GuildExpeditionBasicGiftNum"?: number, "GuildExpeditionBasicNextNeed"?: number, "GuildExpeditionBasicBgImage"?: string, "GuildExpeditionBasicLandImage"?: string}
 interface GuildExpeditionEvent {"GuildExpeditionEventId"?: number, "GuildExpeditionEventTeamLevel"?: number, "GuildExpeditionEventType"?: number, "GuildExpeditionEventMonsterGroup"?: string, "GuildExpeditionEventRewardShow"?: string, "GuildExpeditionEventDropGroup"?: string, "GuildExpeditionEventPoint"?: number}
 interface GuildExpeditionRankReward {"GuildExpeditionRankRewardId"?: number, "GuildExpeditionRankRewardRankSection"?: number, "GuildExpeditionRankRewardRewardItem"?: string}
 interface GuildLevel {"GuildLevelID"?: number, "GuildLevelPeopleNum"?: number, "GuildLevelLeaderNum"?: number, "GuildLevelExp"?: number, "GuildLevelShopItemIntroduce"?: string, "GuildLevelSigninReward"?: number, "GuildLevelDonateNum"?: number}
 interface GuildMonster {"GuildMonsterID"?: number, "GuildMonsterLevel"?: number, "GuildMonsterOrder"?: number, "GuildMonsterImage"?: string, "GuildMonsterHead"?: string, "GuildMonsterNeedNum"?: number, "GuildMonsterNeedType"?: string, "GuildMonsterTypeAdd"?: number, "GuildMonsterWinRewardShow"?: string, "GuildMonsterWinRewardDropGroup"?: number, "GuildMonsterJoinRewardShow"?: string, "GuildMonsterJoinRewardDropGroup"?: number}
 interface GuildRole {"GuildRoleID"?: number, "GuildRoleName"?: string, "GuildRoleImage"?: string, "GuildRoleRename"?: number, "GuildRoleNotice"?: number, "GuildRoleAddPeople"?: number, "GuildRoleDelPeople"?: number, "GuildRoleBattleAttack"?: number, "GuildRoleBattleAppoint"?: number}
 interface HandBook {"HandBookID"?: number, "HandBookHeroID"?: number, "HandBookHeroOrder"?: number, "HandBookHeroTask"?: string, "HandBookHeroGetAccess"?: string, "HandBookOpen"?: number}
 interface HeadFrame {"HeadFrameId"?: number, "HeadFrameType"?: number, "HeadFrameNum"?: number, "HeadFrameName"?: string, "HeadFrameOpenTask"?: string, "HeadFrameImage"?: string, "HeadFrameLimit"?: string, "HeadFrameModel"?: string, "HeadFrameOpenCondition"?: string, "HeadFrameLockType"?: number}
 interface HeroBasic {"HeroBasicId"?: number, "HeroBasicName"?: string, "HeroBasicQuality"?: number, "HeroBasicIfOper"?: number, "Type"?: number, "HeroBasicTrigrams"?: number, "HeroBasicEquipType"?: number, "HeroBasicAbility"?: number, "HeroBasicModel"?: number, "HeroBasicCapabilityMap"?: string, "HeroBasicPropertyLevel"?: string, "HeroBasicSkill"?: number, "HeroBasicPassive1"?: number, "HeroBasicPassive2"?: number, "HeroBasicChangeSkill"?: string, "HeroBasicExclusive"?: number, "HeroFriendID"?: number, "FriendSkill1"?: number, "HeroBasicGift"?: number, "HeroBasicIntroduce"?: number, "HeroBasicItem"?: number, "MeleeOrLong"?: number, "NormalAttackSkill"?: string, "DoubleAttackSkill"?: string, "HeroIntroduceNameImage"?: string}
 interface HeroFriend {"HeroFriendId"?: number, "HeroFriendNeedHero"?: string, "HeroFriendOpen"?: number, "HeroFriendName"?: string, "HeroFriendIntroduce"?: string, "HeroFriendIcon"?: string, "HeroFriendSkillBuff"?: number, "HeroFriendHeroEffect"?: string, "HeroFriendSceneEffect"?: string}
 interface HeroGift {"HeroGiftId"?: number, "HeroGiftHeroId"?: number, "HeroGiftNeedLevel"?: number, "HeroGiftType"?: number, "HeroGiftOrder"?: number, "HeroGiftIcon"?: string, "HeroGiftAttribute"?: string, "HeroGiftSkill"?: string, "HeroGiftPower"?: number, "HeroGiftCost"?: string, "HeroGiftIconSize"?: number}
 interface HeroIntroduce {"HeroIntroduceID"?: number, "HeroIntroduceHeroID"?: number, "HeroIntroduceLocation"?: string, "HeroIntroduceTrait"?: string, "HeroIntroduceText"?: string, "HeroIntroduceFrom"?: string}
 interface HeroProperty {"HeroId"?: number, "Hp"?: string, "HpAdd"?: string, "Attack"?: string, "AttackAdd"?: string, "Defend"?: string, "DefendAdd"?: string, "Critical"?: string, "CriticalAdd"?: string, "CriticalHarm"?: string, "CriticalHarmAdd"?: string, "Speed"?: string, "SpeedAdd"?: string}
 interface HeroSpecialAttribute {"HeroId"?: number, "HarmImmunity"?: string, "Parry"?: string, "ParryValue"?: string, "Hit"?: string, "Miss"?: string, "Blood"?: string, "BloodValue"?: string, "NoCritical"?: string, "CounterAttack"?: string, "CounterAttackValue"?: string, "Sputtering"?: string, "SputteringValue"?: string, "DebuffImmunity"?: string, "PAEnergy"?: string, "EnergyLimit"?: string, "DoubleHit"?: string, "DoubleHitValue"?: string, "RegenerateValue"?: string}
 interface Item {"ItemId"?: number, "ItemName"?: string, "ItemType"?: number, "ItemQuality"?: number, "ItemIcon"?: string, "ProduceOrder"?: number, "ItemSort"?: number, "ItemUseNum"?: number, "ItemComposeNum"?: number, "ItemUseEffect"?: number, "ItemUseEffectNum"?: string, "ItemUseAuto"?: number, "ItemGetAccess"?: string, "ItemIntroduce"?: string, "ItemSuperposition"?: number}
 interface ItemExp {"ItemExpId"?: number, "ItemExpType"?: number, "ItemExpUseId"?: number, "ItemExpGoal"?: number, "ItemExpBasicNum"?: number, "ItemExpAccumulateExp"?: number}
 interface LeadEnlightenment {"LeadEnlightenmentID"?: number, "LeadEnlightenmentTeamID"?: number, "LeadEnlightenmentHeroTypeForm"?: number, "LeadEnlightenmentHeroTypeFormNum"?: number, "LeadEnlightenmentIcon"?: string, "LeadEnlightenmentIntroduce"?: string, "LeadEnlightenmentLevel"?: number, "LeadEnlightenmentLevelNeed"?: string, "LeadEnlightenmentLevelProperty"?: string, "LeadEnlightenmentSkillId1"?: number, "LeadEnlightenmentSkillChangeId1"?: number, "LeadEnlightenmentSkillId2"?: number, "LeadEnlightenmentSkillChangeId2"?: number, "LeadEnlightenmentSkillId3"?: number, "LeadEnlightenmentSkillChangeId3"?: number, "LeadSkillLevelPower"?: number}
 interface LeadSkillLevel {"LeadSkillLevelId"?: number, "LeadSkillLevelGroup"?: number, "LeadSkillLevelAttributeType"?: number, "LeadSkillLevelAttributeValue"?: string, "LeadSkillLevelSkillId"?: number, "LeadSkillLevelSkillChangeId"?: number, "LeadSkillLevelSkillLevel"?: number, "LeadSkillLevelItem"?: number, "LeadSkillLevelCost"?: number, "LeadSkillLevelNeed"?: string, "LeadSkillStary"?: number, "LeadSkillLevelIntroduce"?: string, "LeadSkillLevelPower"?: number}
 interface LeadSkillList {"LeadSkillListId"?: number, "LeadSkillListOpenLevel"?: number, "LeadSkillListGroupId"?: number, "LeadSkillListPosition"?: number, "LeadSkillListIcon"?: string}
 interface LeadTreasure {"ItemID"?: number, "GroupLevel"?: number, "GroupName"?: string, "GroupQuality"?: number, "LevelUpNeed"?: string, "FixedAttributeType"?: number, "FixedAttributeID1"?: number, "FixedAttributeValue1"?: string, "FixedAttributeID2"?: number, "FixedAttributeValue2"?: string, "ConditionIntroduce"?: string, "ConditionJump"?: string, "ConditionID"?: number, "ConditionGoalParam"?: number, "AttributeConditionMax"?: number, "AttributeConditionType"?: number, "AttributeConditionID"?: number, "AttributeConditionValue"?: string, "SystemPowerType"?: number, "SystemPowerIntroduce"?: string, "SystemPowerFactor"?: string, "MaxConversion"?: string, "Introduce"?: string, "GroupIcon"?: string}
 interface LessonRunBg {"LessonRunBgId"?: number, "LessonRunBgChapterId"?: number, "LessonRunBgImageLevel"?: number, "LessonRunBgBeginX"?: number, "LessonRunBgBeginY"?: number, "LessonRunBgGapX"?: string, "LessonRunBgGapY"?: string, "LessonRunBgSpeed"?: number, "LessonRunBgImage"?: string}
 interface LevelExp {"LevelExpId"?: number, "LevelExpType"?: number, "LevelExpQuality"?: number, "LevelExpLevel"?: number, "LevelExpNeedNum"?: number}
 interface LevelStar {"LevelStarId"?: number, "LevelStarType"?: number, "LevelStarQuality"?: number, "LevelStarBeastType"?: number, "LevelStarNum"?: number, "LevelStarNeedSelf"?: number, "LevelStarNeedItem"?: string, "LevelStarNeedMoney"?: number}
 interface Model {"ModelId"?: number, "ModelName"?: string, "ModelPhoto"?: string, "ModelPhotoSize"?: string, "ModelLive2d"?: string, "ModelLive2dSize"?: string, "ModelPhotoEffect"?: string, "ModelAttack"?: string, "ModelAttackSize"?: number, "ModelRunSize"?: number, "ModelRunBossRange"?: string, "ModelHeadIconSquare"?: string, "ModelHeadIconCircular"?: string, "ModelHeadIconBig"?: string, "ModelSex"?: number, "ModelMoveAttack"?: number, "ModelHoldAttack"?: number, "ModelLongRange"?: number, "ModelReleaseHead"?: string}
 interface MoneyShow {"MoneyShowId"?: number, "MoneyShowItemId"?: number, "MoneyShowUse"?: number, "MoneyShowUseResult"?: string}
 interface Monster {"MonsterId"?: number, "ModelId"?: number, "Skill"?: number, "Passive1"?: number, "Passive2"?: number, "NoumenonID"?: number, "NoumenonHeroStar"?: number, "Name"?: string, "Hp"?: number, "Attack"?: number, "Defend"?: number, "Speed"?: number, "Critical"?: number, "CriticalHarm"?: number, "HarmImmunity"?: number, "Parry"?: number, "ParryValue"?: number, "Hit"?: number, "Miss"?: number, "Blood"?: number, "BloodValue"?: number, "NoCritical"?: number, "CounterAttack"?: number, "CounterattackValue"?: number, "Sputtering"?: number, "SputteringValue"?: number, "DebuffImmunity"?: number, "PlayerInitialEnergy"?: number, "PAEnergy"?: number, "EnergyLimit"?: number, "MonsterType"?: number}
 interface MonsterGroup {"MonsterGroupId"?: number, "BossCorona"?: string, "MonsterId1"?: number, "MonsterId2"?: number, "MonsterId3"?: number, "MonsterId4"?: number, "MonsterId5"?: number}
 interface OnlineReward {"OnlineRewardID"?: number, "OnlineRewardTimeDemand"?: number, "OnlineRewardExhibition"?: string, "OnlineRewardProduceGroup"?: number}
 interface Power {"PowerHeroStarSsr"?: string, "PowerHeroStarSr"?: string, "PowerHeroStarR"?: string}
 interface Produce {"ProduceId"?: number, "TypeValue11"?: string, "TypeValue32"?: string, "SmeltRandomDescribe"?: string}
 interface ProduceGroup {"ProduceGroupId"?: number, "ProduceGroupConstitute1"?: string, "ProduceGroupConstitute2"?: string, "ProduceGroupConstitute3"?: string}
 interface PVEChallengeBasic {"PVEChallengeBasicId"?: number, "PVEChallengeBasicPlayerLevel"?: number, "PVEChallengeBasicMonster"?: number, "PVEChallengeBasicReward"?: number, "PVEChallengeBasicShop"?: number}
 interface PVEChallengeMonster {"PVEChallengeMonsterId"?: number, "PVEChallengeMonsterLevel"?: number, "PVEChallengeMonsterRound"?: number, "PVEChallengeMonsterRandom"?: string, "PVEChallengeMonsterFightScene"?: string, "PVEChallengeMonsterRewardShow"?: string, "PVEChallengeMonsterDropGroup"?: number}
 interface PVEChallengeReward {"PVEChallengeRewardId"?: number, "PVEChallengeRewardLevel"?: number, "PVEChallengeRewardNeed"?: number, "PVEChallengeRewardShow"?: string, "PVEChallengeRewardDropGroup"?: number}
 interface PVEChallengeShop {"PVEChallengeShopId"?: number, "PVEChallengeShopLevel"?: number, "PVEChallengeShopTeam"?: number, "PVEChallengeShopNum"?: number, "PVEChallengeShopWeight"?: number, "PVEChallengeShopItem"?: string, "PVEChallengeShopCost"?: string, "PVEChallengeShopDiscount"?: number}
 interface PVECloudDreamChapter {"PVECloudDreamChapterId"?: number, "PVECloudDreamChapterNum"?: number, "PVECloudDreamChapterName"?: string, "PVECloudDreamChapterLevel"?: number, "PVECloudDreamChapterRewardShow"?: string, "PVECloudDreamChapterDropGroup"?: number}
 interface PVECloudDreamLesson {"PVECloudDreamLessonId"?: number, "PVECloudDreamLessonChapter"?: number, "PVECloudDreamLessonNum"?: number, "PVECloudDreamLessonArray"?: string, "PVECloudDreamLessonLevel"?: number, "PVECloudDreamLessonScene"?: string, "PVECloudDreamLessonBg"?: string, "PVECloudDreamLessonUsePosition"?: string}
 interface PVECommonEvent {"PVEInfernalEventId"?: number, "PVEInfernalEventImage"?: string, "PVEInfernalEventTrigger"?: number}
 interface PVECopy {"PVECopyId"?: number, "PVECopyType"?: number, "PVECopyNum"?: number, "PVECopyArray"?: string, "PVECopyLevel"?: number, "PVECopyName"?: string, "PVECopyRewardShow"?: string, "PVECopyDropGroup"?: number, "PVECopyCost"?: number, "PVECopyOpenCondition"?: string, "PVECopyScene"?: string}
 interface PVECopyRandomArray {"PVECopyRandomArrayGroupId"?: number, "PVECopyRandomArrayGroupContent"?: string}
 interface PVEDailyLesson {"PVEDailyLessonId"?: number, "PVEDailyLessonBelong"?: number, "PVEDailyLessonType"?: number, "PVEDailyLessonNum"?: number, "PVEDailyLessonOpenCondition"?: string, "PVEDailyLessonName"?: string, "PVEDailyLessonRewardShow"?: string, "PVEDailyLessonDropGroup"?: number, "PVEDailyLessonDoubleDropGroup"?: number, "PVEDailyLessonDoubleDropCost"?: string, "PVEDailyLessonCost"?: string, "PVEDailyLessonMonsterGroupId"?: number, "PVEDailyLessonFightBg"?: string, "PVEDailyLessonFile"?: string, "PVEDailyLessonDoubleFile"?: string, "PVEDailyLessonRunBg"?: number, "PVEDailyLessonRunSkin"?: number}
 interface PVEDaoistMagic {"PVEDaoistMagicID"?: number, "PVEDaoistMagicPlayerHero"?: string, "PVEDaoistMagicReward"?: string, "PVEDaoistMagicRewardGroupID"?: number, "PVEDaoistMagicActivityTime"?: number}
 interface PVEDaoistMagicHero {"RetrievalID"?: number, "HeroID"?: number, "HeroLevel"?: number, "HeroStar"?: number, "Equip1"?: string, "Equip2"?: string, "Equip3"?: string, "Equip4"?: string, "Equip5"?: string, "Equip6"?: string, "Equip7"?: string, "HeroGiftAttribute"?: string, "HeroGiftSkill"?: string}
 interface PVEDaoistMagicHeroGroup {"PVEDaoistMagicHeroGroupId"?: number, "PVEDaoistMagicHeroGroupRule"?: string}
 interface PVEDaoistMagicLesson {"PVECopyId"?: number, "PVECopyType"?: number, "PVECopyNum"?: number, "PVECopyArray"?: number, "PVECopyName"?: string, "PVECopyRewardShow"?: string, "PVECopyDropGroup"?: number, "PVECopyCost"?: number, "PVECopyScene"?: string}
 interface PVEDreamlandChapter {"PVEDreamlandChapterId"?: number, "PVEDreamlandChapterBehind"?: number, "PVEDreamlandChapterFront"?: number, "PVEDreamlandChapterImage"?: string, "PVEDreamlandChapterName"?: string, "PVEDreamlandChapterRewardShow"?: string, "PVEDreamlandChapterRewardDropGroup"?: number}
 interface PVEDreamlandLesson {"PVEDreamlandLessonId"?: number, "PVEDreamlandLessonMonsterGroupId"?: number, "PVEDreamlandLessonChapter"?: number, "PVEDreamlandLessonName"?: string, "PVEDreamlandLessonOrder"?: number, "PVEDreamlandLessonType"?: number, "PVEDreamlandLessonEnterCondition"?: string, "PVEDreamlandLessonRewardShow"?: string, "PVEDreamlandLessonRewardDrop"?: number, "PVEDreamlandLessonCost"?: string, "PVEDreamlandLessonFile"?: string, "PVEDreamlandLessonHeroImage"?: string, "PVEDreamlandLessonScene"?: string, "PVEDreamlandLessonChapterShopGift"?: number}
 interface PVEFairyIslandBasic {"PVEFairyIslandBasicId"?: number, "PVEFairyIslandBasicLevel"?: number, "PVEFairyIslandBasicLayer"?: number, "PVEFairyIslandBasicChallengeNum"?: number, "PVEFairyIslandBasicIslandNum"?: number, "PVEFairyIslandBasicAltarNum"?: string}
 interface PVEFairyIslandBuff {"PVEFairyIslandBuffId"?: number, "PVEFairyIslandBuffQuality"?: number, "PVEFairyIslandBuffIntroduce"?: string, "PVEFairyIslandBuffHeroTypeForm"?: number, "PVEFairyIslandBuffHeroTypeFormNum"?: number, "PVEFairyIslandBuffProperty"?: number, "PVEFairyIslandBuffNum"?: number, "PVEFairyIslandBuffWeight"?: number, "PVEFairyIslandBuffRepeat"?: number}
 interface PVEFairyIslandMonster {"PVEFairyIslandMonsterId"?: number, "PVEFairyIslandMonsterLevel"?: number, "PVEFairyIslandMonsterLayer"?: number, "PVEFairyIslandMonsterType"?: number, "PVEFairyIslandMonsterGroupList"?: string, "PVEFairyIslandMonsterDropShow"?: string, "PVEFairyIslandMonsterDropGroup"?: number, "PVEFairyIslandMonsterBuffQuality"?: number}
 interface PVEInfernalBasic {"PVEInfernalBasicId"?: number, "PVEInfernalBasicMassifNum"?: string, "PVEInfernalBasicMassifAll"?: string, "PVEInfernalBasicLevelName"?: string, "PVEInfernalBasicLevelOrder"?: number, "PVEInfernalBasicNextReward"?: number, "PVEInfernalBasicLeaderMonster"?: number, "PVEInfernalBasicRewardShow"?: string, "PVEInfernalBasicRewardDropGroup"?: number, "PVEInfernalBasicRecoverLife"?: number, "PVEInfernalBasicRecoverDie"?: number, "PVEInfernalBasicBattleScene"?: string, "PVEInfernalBasicMassifImage"?: string, "PVEInfernalBasicCoverImage"?: string, "PVEInfernalBasicOpenLevel"?: number}
 interface PVEInfernalBox {"PVEInfernalBoxId"?: number, "PVEInfernalBoxLevel"?: number, "PVEInfernalBoxDropGroup"?: number, "PVEInfernalBoxWeight"?: number}
 interface PVEInfernalBuff {"PVEInfernalBuffId"?: number, "PVEInfernalBuffType"?: number, "PVEInfernalBuffLevel"?: number, "PVEInfernalBuffIntroduce"?: string, "PVEInfernalBuffHeroTypeForm"?: number, "PVEInfernalBuffHeroTypeFormNum"?: number, "PVEInfernalBuffProperty"?: number, "PVEInfernalBuffNum"?: number, "PVEInfernalBuffWeight"?: number}
 interface PVEInfernalMonster {"PVEInfernalMonsterId"?: number, "PVEInfernalMonsterLevel"?: number, "PVEInfernalMonsterMonsterGroup"?: string, "PVEInfernalMonsterRewardShow"?: string, "PVEInfernalMonsterDropGroup"?: number}
 interface PVEInfernalShop {"PVEInfernalShopId"?: number, "PVEInfernalShopLevel"?: number, "PVEInfernalShopItem"?: string, "PVEInfernalShopCost"?: string, "PVEInfernalShopDiscount"?: number, "PVEInfernalShopWeight"?: number}
 interface PVEInfernalTrap {"PVEInfernalTrapId"?: number, "PVEInfernalTrapLevel"?: number, "PVEInfernalTrapIntroduce"?: string, "PVEInfernalTrapNum"?: number, "PVEInfernalTrapWeight"?: number}
 interface PVEList {"PVEListFunctionId"?: number, "PVEListType"?: number, "PVEListNum"?: number, "PVEListName"?: string, "PVEListLockType"?: number, "PVEListImage"?: string, "PVEListNumShow"?: string, "PVEListLessonBgImage"?: string}
 interface PVEMindDemonMonster {"PVEMindDemonMonsterId"?: number, "PVEMindDemonMonsterLeaderGroup"?: number, "PVEMindDemonMonsterOpenDay"?: number, "PVEMindDemonMonsterRewardShow"?: string, "PVEMindDemonMonsterImageShow"?: string, "PVEMindDemonMonsterOverRound"?: number, "PVEMindDemonMonsterFightNum"?: number}
 interface PVEMindDemonReward {"PVEMindDemonRewardId"?: number, "PVEMindDemonRewardType"?: number, "PVEMindDemonRewardNum"?: number, "PVEMindDemonRewardShow"?: string, "PVEMindDemonRewardDropGroup"?: number, "PVEMindDemonRankShow"?: string}
 interface PVEOpenDoor {"PVEOpenDoorId"?: number, "PVEOpenDoorLevel"?: number, "PVEOpenDoorNeedTrigrams"?: string, "PVEOpenDoorPlayCost"?: string, "PVEOpenDoorRewardShow"?: string, "PVEOpenDoorRewardAdd"?: string, "PVEOpenDoorRewardDropGroup"?: number, "PVEOpenDoorMonsterList"?: string, "PVEOpenDoorFightScene"?: string}
 interface PVERiseRoad {"PVERiseRoadId"?: number, "PVERiseRoadHeroId"?: number, "PVERiseRoadHeroLessonId"?: number, "PVERiseRoadOpenCondition"?: string, "PVERiseRoadRewardShow"?: string, "PVERiseRoadDropGroup"?: number, "PVERiseRoadDropGroup2"?: number, "PVERiseRoadCost"?: string, "PVERiseRoadMonsterGroupId"?: number, "PVERiseRoadFightBg"?: string, "PVERiseRoadLessonName"?: string}
 interface PVPDeify {"PVPDeifyId"?: number, "PVPDeifyRankSection"?: string, "RobotID"?: number, "PVPDeifyOpponent1"?: string, "PVPDeifyOpponent2"?: string, "PVPDeifyOpponent3"?: string, "PVPDeifyDayReward"?: string, "PVPDeifyRankReward"?: string}
 interface PVPImmortals {"PVPImmortalsId"?: number, "PVPImmortalsRankType"?: number, "PVPImmortalsRankSection"?: string, "RobotID"?: number, "PVPImmortalsRankReward"?: string, "PVPImmortalsRankName"?: string, "PVPImmortalsRankValue"?: string, "PVPImmortalsLevelValue"?: string, "PVPImmortalsRankIcon"?: string, "PVPImmortalsRankImage"?: string, "PVPImmortalsRobotLevel"?: number, "PVPImmortalsRobotRandom"?: string}
 interface PVPList {"PVPListFunctionId"?: number, "PVPListName"?: string, "PVPListNum"?: number, "PVPListLockType"?: number, "PVPListImage"?: string, "PVPListNumShow"?: number}
 interface PVPRobot {"RobotID"?: number, "RobotLevel"?: string, "RobtHeroFriend"?: string, "RobotHero"?: string, "RobotHeroStar"?: string, "RobotEquip1"?: string, "RobotEquip2"?: string, "RobotEquip3"?: string, "RobotEquip4"?: string, "RobotEquip5"?: string, "RobotEquip6"?: string, "RobotEquipLevelRange"?: string, "RobotEquip7"?: string, "RobotEquip7StarRange"?: string}
 interface PVPTopBattleMatch {"PVPTopBattleMatchId"?: number, "PVPTopBattleMatchPoint"?: number, "PVPTopBattleMatchMin"?: number, "PVPTopBattleMatchMax"?: number, "PVPTopBattleMatchRobot"?: number}
 interface PVPTopBattleRank {"PVPTopBattleRankId"?: number, "PVPTopBattleRankNum"?: number, "PVPTopBattleRankReward"?: string, "PVPTopBattleRankDropGroup"?: number}
 interface Quality {"QualityId"?: number, "QualityName"?: string, "QualityNameColor"?: string, "QualityItemFrame"?: string, "QualityItemFrameEffect"?: string, "QualityCardFrame"?: string, "QualityCardFrameEffect"?: string, "QualityRoundFrame"?: string, "QualityRoundFrameEffect"?: string, "QualityTag"?: string, "QualityTagEffect"?: string, "QualityGetEffect"?: string, "QualityDropEffect"?: string, "QualityHeroListBg"?: string, "QualityHeroListStarBg"?: string, "QualityHeroListNameBg"?: string, "QualityHeroListEffect"?: string}
 interface RandomFight {"RandomFightId"?: number, "RandomFightPlayerLevel"?: string, "RandomFightMonsterLevel"?: number, "RandomFightWeight"?: number, "RandomFightMonsterRandom"?: string, "RandomFightHoldTime"?: number, "RandomFightDropGroup"?: number}
 interface RandomName {"RandomNameID"?: number, "RandomNameType"?: number, "RandomNameNum"?: number, "RandomNameText"?: string}
 interface RandomNameRobot {"RandomNameID"?: number, "LeftName"?: string, "MidName"?: string, "RightName"?: string}
 interface RandomShop {"RandomShopId"?: number, "RandomShopTeam"?: number, "RandomShopNum"?: number, "RandomShopWeight"?: number, "RandomShopCompensateWeight"?: number, "RandomShopItem"?: string, "RandomShopCost"?: string, "RandomShopItemOpenLevel"?: number, "RandomShopItemTip"?: string}
 interface RankName {"RankNameId"?: number, "RankNameTitle"?: string, "RankNameRewardList"?: number}
 interface RankReward {"RankRewardId"?: number, "RankType"?: number, "RankRewardNum"?: number, "RankRewardOrder"?: number, "GoalParam"?: number, "GoalIntroduce"?: string, "ShowCondition"?: string, "RewardShow"?: string, "RewardDropGroup"?: number}
 interface ReportReason {"ReportReasonId"?: number, "ReportReasonText"?: string}
 interface RunXBullet {"BulletID"?: number, "BulletName"?: string, "Damage"?: number, "Through"?: number, "ArtID"?: string, "BoomID"?: string}
 interface RunXHeroAttribute {"RunXHeroQuality"?: number, "StarLevel"?: number, "HeroDamage"?: number, "HeroDamageAdd"?: number, "HeroBlood"?: number, "HeroBloodAdd"?: number}
 interface RunXHeros {"RunXHeroID"?: number, "RunXHeroName"?: string, "HeroBulletID"?: number, "Space"?: number, "HeroSuperBulletID"?: number, "SuperBulletSpace"?: number, "HerosArtID"?: number}
 interface RunXItem {"RunXItemId"?: number, "ArtID"?: string, "RunXItemUseEffect"?: number, "RunXItemUseNum"?: number, "StonesImage"?: string, "StonesId"?: number}
 interface RunXMonster {"MonsterID"?: number, "MonsterName"?: string, "MonsterType"?: number, "Damage"?: number, "Blood"?: number, "Item"?: string, "ArtID"?: number, "RunXMonsterAction"?: number, "RunXMonsterBossDrop"?: string, "RunXMonsterBossMiddleDrop"?: string, "RunXMonsterBossHpBarNum"?: number}
 interface RunXMonsterAction {"RumMonsterActionID"?: number, "StageSerialNumber"?: number, "TriggerConditions"?: number, "TriggerConditionsType"?: number, "LoopTimes"?: number, "CollisionType"?: number, "StandingTime"?: string, "MoveType"?: number, "IsClean"?: number, "IsHoming"?: string, "OperationTimeAxis"?: string, "HorizontalMoveTimeAxis"?: string, "FlyTimeAxis"?: string, "AttackTimeAxis"?: string, "DialogueTimeAxis"?: string, "DestructionTimeAxis"?: number}
 interface RunXResurrection {"Resurrection"?: number, "Resurrectiondiamond"?: number}
 interface RunXTraps {"TrapID"?: number, "TrapName"?: string, "Damage"?: number, "Function"?: number, "ArtID"?: string, "DropProps"?: string, "StonesImage"?: string, "StonesId"?: number}
 interface SageQA {"ID"?: number, "SageQuestion"?: string, "SageAnswer"?: string, "SageAnswerIntroduce"?: string}
 interface ShopCommodity {"ShopCommodityId"?: number, "ShopCommodityType"?: number, "ShopCommodityNum"?: number, "ShopCommodityItem"?: string, "ShopCommodityCost"?: string, "ShopCommodityLimit"?: string, "ShopCommodityPowerLimit"?: string, "ShopCommodityOpenCondition"?: number, "ShopCommodityLockType"?: number}
 interface ShopGift {"ShopGiftId"?: number, "ShopGiftType"?: number, "ShopGiftNum"?: number, "ShopGiftName"?: string, "ShopGiftItem"?: string, "ShopGiftDorpGroup"?: number, "ShopGiftImage"?: string, "ShopGiftItemShow"?: string, "ShopGiftRandomGetNum"?: number, "ShopGiftBuyType"?: string, "ShopGiftCost"?: number, "ShopGiftLimit"?: string, "ShopGiftOpenCondition"?: number, "ShopGiftLockType"?: number, "ShopGiftSellTime"?: string, "ShopGiftHoldTime"?: number, "ShopGiftTips"?: number}
 interface ShopGiftScene {"GiftID"?: number, "GiftPrice"?: number, "GiftImage"?: string, "GiftItemShow"?: string, "GiftIcon"?: string}
 interface ShopRandom {"ShopCommodityId"?: number, "ShopCommodityType"?: number, "ShopCommodityNum"?: number, "ShopCommodityWeight"?: number, "ShopCommodityItem"?: string, "ShopCommodityCost"?: string}
 interface ShopRechargeAndroid {"ShopRechargeAndroidId"?: number, "ShopRechargeAndroidType"?: number, "ShopRechargeAndroidGoodsID"?: number, "ShopRechargeAndroidImage"?: string, "ShopRechargeAndroidCost"?: number, "ShopRechargeAndroidPropertyID"?: number, "ShopRechargeAndroidPropertyCount"?: number, "ShopRechargeAndroidGiveCount"?: number, "ShopRechargeAndroidGiveTag"?: string, "ShopRechargeAndroidBundledCount"?: number, "ShopRechargeAndroidBundledTag"?: string, "ShopRechargeAndroidBundledNum"?: number}
 interface ShopRechargeIOS {"ShopRechargeIOSId"?: number, "ShopRechargeIOSType"?: number, "ShopRechargeIOSGoodsID"?: number, "ShopRechargeIOSImage"?: string, "ShopRechargeIOSCost"?: number, "ShopRechargeIOSPropertyID"?: number, "ShopRechargeIOSPropertyCount"?: number, "ShopRechargeIOSGiveCount"?: number, "ShopRechargeIOSGiveTag"?: string, "ShopRechargeIOSBundledCount"?: number, "ShopRechargeIOSBundledTag"?: string, "ShopRechargeIOSBundledNum"?: number}
 interface ShopType {"ShopTypeID"?: number, "ShopTypeImage"?: string, "ShopTypeName"?: string, "ShopTypeMoneyShow"?: string}
 interface Skill {"SkillId"?: number, "Name"?: string, "Level"?: number, "Star"?: number, "Illustrate"?: string, "Type"?: number, "PowerCost"?: number, "TargetType"?: number, "TargetNum"?: number, "Icon"?: string, "MeleeOrLong"?: number, "TemplateID"?: string, "FrontTemplateID"?: number, "BehindTemplateID"?: number, "BlackBackground"?: number}
 interface SkillBuff {"BuffId"?: number, "Name"?: string, "Illustrate"?: string, "IfSkill"?: number, "SkillAscription"?: number, "IfExhibition"?: number, "Type"?: number, "TargetType"?: number, "TargetNum"?: number, "DestructionTiming"?: number, "UseDestructionLayers"?: number, "DestructionType"?: number, "DesTake"?: number, "DType"?: number, "Layers"?: number, "Times"?: number, "TimesLimitRound"?: number, "MeleeOrLong"?: number, "Icon"?: string, "BuffModelId"?: number, "TemplateID"?: number, "EffectTemplateID"?: number, "LoopTemplateID"?: number, "HitEffectID"?: number}
 interface SkillChange {"ChangeID"?: number, "Title"?: string, "NoumenonSkill"?: string, "Desc"?: string, "ChangeSkillID"?: number, "ChangeBuffID"?: number, "ChangeHaloID"?: number}
 interface SkillHalo {"SkillHaloId"?: number, "Name"?: string, "Illustrate"?: string, "Type"?: number, "Range"?: number, "Icon"?: string, "LoopTemplateId"?: number, "TemplateID"?: number, "HitEffectID"?: number}
 interface SmeltChangeless {"SmeltChangelessItemID"?: number, "SmeltChangelessItemID2"?: string, "SmeltChangelessItemID3"?: string, "SmeltChangelessNeedMoney"?: number, "SmeltChangelessProduceGroup"?: number, "SmeltChangelessRewardShow"?: number}
 interface SmeltRandom {"SmeltRandomID"?: number, "SmeltRandomQuality"?: number, "SmeltRandomProduce1"?: number, "SmeltRandomProducePower1"?: number, "SmeltRandomProduce2"?: number, "SmeltRandomProducePower2"?: number, "SmeltRandomProduce3"?: number, "SmeltRandomProducePower3"?: number, "SmeltRandomNeedMoney"?: number}
 interface SmeltRandomBatching {"SmeltRandomBatchingID"?: number, "SmeltRandomBatchingPosition"?: number, "SmeltRandomBatchingAddQuantitySR"?: number, "SmeltRandomBatchingAddLimitSR"?: number, "SmeltRandomBatchingItemEffectSR"?: string, "SmeltRandomBatchingAddQuantitySSR"?: number, "SmeltRandomBatchingAddLimitSSR"?: number, "SmeltRandomBatchingItemEffectSSR"?: string, "SmeltRandomBatchingProduceEffectID"?: number, "SmeltRandomBatchingProduceEffectPower"?: number}
 interface StrategyEquip {"StrategyEquipId"?: number, "StrategyEquipOrder"?: number, "StrategyEquipTitle"?: string, "StrategyEquipIntroduce"?: string, "StrategyEquipJump"?: string}
 interface StrategyFAQ {"StartegyFAQId"?: number, "StartegyFAQOrder"?: number, "StartegyFAQAsk"?: string, "StartegyFAQAnswer"?: string}
 interface StrategyHero {"StrategyHeroId"?: number, "StrategyHeroOrder"?: number, "StrategyHeroTitle"?: string, "StrategyHeroBarName"?: string, "StrategyHeroIntroduce"?: string, "StrategyHeroJump"?: string}
 interface StrategyHome {"StrategyHomeId"?: number, "StrategyHomeOrder"?: number, "StrategyHomeTitle"?: string, "StrategyHomeJumpPageName"?: string}
 interface StrategyMoney {"StrategyMoneyId"?: number, "StrategyMoneyOrder"?: number, "StrategyMoneyIcon"?: string, "StrategyMoneyName"?: string, "StrategyMoneyIntroduce"?: string, "StrategyMoneyGetAway"?: string}
 interface StrategyStrong {"StrategyStrongId"?: number, "StrategyStrongOrder"?: number, "StrategyStrongTitle"?: string, "StrategyStrongBarName"?: string, "StrategyStrongIntroduce"?: string, "StrategyStrongJump"?: string}
 interface StrategyTeam {"StrategyTeamId"?: number, "StrategyTeamOrder"?: number, "StrategyTeamTitle"?: string, "StrategyTeamHero"?: string, "StrategyTeamIntroduce"?: string}
 interface SummonCard {"SummonCardId"?: number, "SummonCardName"?: string, "SummonCardOrder"?: number, "SummonCardType"?: number, "SummonCardOpenTime"?: string, "SummonCardHoldTime"?: number, "SummonCardLimit"?: number, "SummonCardFree"?: number, "SummonCardCost"?: number, "SummonCardSupplement"?: string, "SummonCardCompensate"?: number, "SummonCardDropGroup"?: number, "SummonCardDropCompensateGroup"?: number, "SummonCardTrigger"?: number, "InitialTrigger"?: number, "SummonCardDropGroup20"?: number, "SummonCardDropCompensateGroup20"?: number, "SummonCardImage"?: string, "SummonCardTab"?: string, "SummonCardShow"?: number, "SummonCardOpenCondition"?: number, "SummonCardLockShow"?: number}
 interface SummonCardShow {"SummonCardShowId"?: number, "SummonCardShowGroupId"?: number, "SummonCardShowPage"?: number, "SummonCardShowName"?: string, "SummonCardShowProbability"?: number, "SummonCardShowType"?: number, "SummonCardShowUPProbability"?: number, "SummonCardShowUPContent"?: string, "SummonCardShowNormalContent"?: string}
 interface TalkText {"TalkTextId"?: number, "TalkTextGroupId"?: number, "TalkTextOrder"?: number, "TalkTextPerson"?: number, "TalkTextPersonImage"?: string, "TalkTextPersonName"?: string, "TalkTextPersonAction"?: number, "TalkTextPersonPosition"?: number, "TalkTextPersonLight"?: number, "TalkTextAuto"?: number, "TalkTextFrame"?: number, "TalkTextCondition"?: string}
 interface TaskMainReward {"TaskMainRewardID"?: number, "TaskMainRewardTarget"?: string, "TaskMainRewardExhibition"?: string, "TaskMainRewardProduceGroup"?: number}
 interface TaskPond {"TaskPondId"?: number, "TaskId"?: number, "TaskPondType"?: number, "AppearConditionLevel"?: number, "AppearConditionSystem"?: number, "Weight"?: number}
 interface TaskTarget {"TargetID"?: number, "TargetModule"?: number, "TargetGroupID"?: number, "TargetSerialID"?: number, "TargetType"?: number, "TargetGoalParam"?: string, "TargetBeginCondition"?: string, "TargetOverCondition"?: string, "TaskShowCondition"?: string, "TaskIntroduce"?: string, "TaskRewardShow"?: string, "TaskRewardDropGroup"?: number, "TaskJump"?: string, "TaskGetShow"?: number, "TaskOverShow"?: number}

}